<?php
class main_model extends CI_Model{

	public function __construct()
    {
        parent::__construct();
        // $this->load->library('encrypt'); // Load encryption library
				$this->load->library('secure');
    }
	function insert($data)
	{
		$this->db->insert('sample_data', $data);
	}
	function can_register($username){
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function get_max_year(){
		$query = $this->db->query("select max(year_name) as year from academicyear");
        $row = $query->row_array();
        $max_year=$row['year'];
        return $max_year;
	}
	function get_session_branch(){
		$queryAccessBranch=$this->db->query("select accessbranch from usegroup where uname='$userType' ");
        $rowaccessbranch = $queryAccessBranch->row_array();
        $accessbranch=$rowaccessbranch['accessbranch'];
        return $accessbranch;
	}
	function can_update_username($id,$username){
		$this->db->where('id!=',$id);
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function register_user($data){
		$query=$this->db->insert('users_registration_request',$data);
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function register_new_student($data,$username,$stuid){
		$this->db->where('username =',$username);
		$this->db->or_where('unique_id =',$stuid);
		$query=$this->db->get('users');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('users',$data);
			return true;
		}
	}
	function register_new_vaccination($data,$vaccinationName){
		$this->db->where('vaccinationName =',$vaccinationName);
		$query=$this->db->get('vaccination_name');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('vaccination_name',$data);
			return true;
		}
	}
	function register_new_incident($data,$incidentName,$incident_category){
		$this->db->where('incident_name =',$incidentName);
		$this->db->where('incident_category =',$incident_category);
		$query=$this->db->get('incident_type');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('incident_type',$data);
			return true;
		}
	}
	function register_new_incident_category($data,$incidentCategory){
		$this->db->where('category_name =',$incidentCategory);
		$query=$this->db->get('incident_category');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('incident_category',$data);
			return true;
		}
	}
	function fetch_incident_form(){
		$output='';

		$queryFetch=$this->db->query("select * from incident_category group by category_name order by id ASC");
		if($queryFetch->num_rows()>0){
			$output.='<div class="fetch_gs_incident_category">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<h6 class="remove_incident_category'.$rowUser->id.'"><i class="fas fa-check-circle"></i> '.$rowUser->category_name.'<button class="btn btn-default text-danger" id="remove_incident_category" value="'.$rowUser->id.'">Remove</button></h6>';
        	}
	        $output.='</div>';
	    }else{
	    	$output .='<div class="alert alert-light alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-triangle"> </i>Ooops, no record found.
            </div></div>';
	    }
	    return $output;
	}
	function fetch_incident_type(){
		$output='';
		$queryFetch=$this->db->query("select * from incident_category");
		$output.='<form method="POST" id="saveNewFormIncidentType" class="saveNewFormIncidentType" name="saveNewFormIncidentType">
            <div class="form-group">
              <div class="search-element">
                <div class="row">
                  <div class="form-group col-lg-6 col-12">
                    <label>Incident form/category</label>';
                    $output.=' <select class="form-control" required="required" name="incidentTypeCategory" id="incidentTypeCategory">
                    <option></option>';
					foreach($queryFetch->result() as $row){
						$output.='<option>'.$row->category_name.'</option>';
					}
					$output.='</select>
                  </div>
                  <div class="form-group col-lg-6 col-12">
                    <label>Incident Type</label>
                    <input id="incidentName" type="text" class="form-control" required="required" name="incidentName" placeholder="Incident name here...">
                  </div>
                  <div class="form-group col-lg-12 col-12">
                    <button class="btn btn-primary pull-right" name="save_incident_type" id="save_incident_type"> Save Incident Type
                    </button>
                  </div>
                </div>
                <div class="msg_incident_type" id="msg_incident_type"></div>
              </div>
            </div>
          </form><hr>';
		$queryFetch=$this->db->query("select * from incident_type");
		if($queryFetch->num_rows()>0){
			$output.='<div class="fetch_gs_fetch_incident_type">
			<div class="row">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<div class="col-md-6 col-lg-6 col-12 StudentViewTextInfo remove_incident_type'.$rowUser->id.'"> <span class="text-muted">'.$rowUser->incident_category.'</span> <i class="fas fa-chevron-right"></i> '.$rowUser->incident_name.'
        		<button class="btn btn-default text-danger" id="remove_incident_type" value="'.$rowUser->id.'">Remove</button></div>';
        	}
	        $output.='</div></div>';
	    }else{
	    	$output .='<div class="alert alert-light alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-triangle"> </i>Ooops, no record found.
            </div></div>';
	    }
	    return $output;
	}
	function fetch_consequence_type(){
		$output='';
		$queryFetch=$this->db->query("select * from incident_consequence");
		$output.='<form method="POST" id="saveNewincident_consequence" class="incident_consequence" name="incident_consequence">
            <div class="form-group">
              <div class="search-element">
                <div class="row">
                  <div class="form-group col-lg-12 col-12">
                    <label>Consequence Name</label>
                    <input id="consequenceName" type="text" class="form-control" required="required" name="consequenceName" placeholder="Consequence name here...">
                  </div>
                  <div class="form-group col-lg-12 col-12">
                    <button class="btn btn-primary pull-right" name="save_consequence_type" id="save_consequence_type"> Save Consequence
                    </button>
                  </div>
                </div>
                <div class="msg_consequence_type" id="msg_consequence_type"></div>
              </div>
            </div>
          </form><hr>';
		$queryFetch=$this->db->query("select * from incident_consequence");
		if($queryFetch->num_rows()>0){
			$output.='<div class="fetch_gs_fetch_consequence_type">
			<div class="row">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<div class="col-md-6 col-lg-6 col-12 StudentViewTextInfo remove_consequence_name'.$rowUser->id.'"> <i class="fas fa-chevron-right"></i> '.$rowUser->consequence_name.'
        		<button class="btn btn-default text-danger" id="remove_consequence_name" value="'.$rowUser->id.'">Remove</button></div>';
        	}
	        $output.='</div></div>';
	    }else{
	    	$output .='<div class="alert alert-light alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-triangle"> </i>Ooops, no record found.
            </div></div>';
	    }
	    return $output;
	}
	function register_new_incident_consequence_name($data,$consequenceName){
		$this->db->where('consequence_name =',$consequenceName);
		$query=$this->db->get('incident_consequence');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('incident_consequence',$data);
			return true;
		}
	}
	function user_division($max_year){
		$this->db->order_by('dname','ASC');
		$this->db->group_by('dname');
		$this->db->where('academicyear',$max_year);
		$queryDivision=$this->db->get('schooldivision');
		return $queryDivision->result();
	}
	function save_new_season_name($data,$incidentName,$max_year,$grades){
		$this->db->where('sub_name =',$incidentName);
		$this->db->where('header_grade =',$grades);
		$this->db->where('academicyear =',$max_year);
		$query=$this->db->get('kg_subject_header');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('kg_subject_header',$data);
			return true;
		}
	}
	function register_new_school_week($data,$week_Name,$max_year){
		$this->db->where('week_name =',$week_Name);
		$this->db->where('academicyear =',$max_year);
		$query=$this->db->get('school_week');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('school_week',$data);
			return true;
		}
	}
	function register_new_school_non_working_dates($data,$week_Name,$max_year){
		$this->db->where('non_working_date =',$week_Name);
		$this->db->where('academicyear =',$max_year);
		$query=$this->db->get('school_non_working_days');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('school_non_working_days',$data);
			return true;
		}
	}
	/*function can_login($username,$password){
		$this->db->where('username',$username);
		$this->db->where('password',$password);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$query=$this->db->get('users');
		if($query->num_rows() > 0){
			return $query->row();
		}
		else{
			return false;
		}
	}*/
	function can_login($username, $password) {
	    // Retrieve the latest user with matching username, isapproved, and active status
	    $this->db->select_max('id');
	    $this->db->where('username', $username);
	    $this->db->where('isapproved', '1');
	    $this->db->where('status', 'Active');
	    $query = $this->db->get('users');

	    // If there is a user, get the user with the max id
	    if ($query->num_rows() === 1) {
	        $user_id = $query->row()->id; // Get the max id
	        
	        // Now, fetch the user record with that id
	        $this->db->where('id', $user_id);
	        $query = $this->db->get('users');

	        // Check if the user exists
	        if ($query->num_rows() === 1) {
	            $user = $query->row();

	            // If password is bcrypt-hashed
	            if (password_verify($password, $user->password)) {
	                return $user; // User authenticated with bcrypt
	            }

	            // If password is SHA256-hashed
	            if (strlen($user->password) === 64 && hash('sha256', $password) === $user->password) {
	                // Migrate to bcrypt
	                $new_hashed_password = password_hash($password, PASSWORD_BCRYPT);

	                // Update the user record with the new bcrypt password
	                //$this->db->where('id', $user_id);
	                $this->db->where('username', $username);
	                $update_data = [
	                    'password' => $new_hashed_password,
	                    'password2' => $new_hashed_password
	                ];

	                // Only include password2 if it's needed
	                // $update_data['password2'] = $new_hashed_password;  // Uncomment if you need password2 field

	                // Perform the update
	                $this->db->update('users', $update_data);

	                return $user; // Authenticated & migrated
	            }
	        }
	    }

	    return false; // Login failed
	}



	function can_login_byonly_email($username){
		$this->db->where('username',$username);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$query=$this->db->get('users');
		if($query->num_rows() > 0){
			return $query->row();
		}
		else{
			return false;
		}
	}
	function Loged_users($logged_id,$date_now,$datetime,$data1,$data2,$data3,$data4){
		$data=array(
			'logged_user'=>$logged_id,
			'datet'=>$date_now,
			'browser'=>$data1,
			'bversion'=>$data2,
			'ipaddress'=>$data3,
			'platform'=>$data4
		);
		$this->db->insert('loggeduser',$data);
	}
	function fetch_logged_user($date_now){
		$this->db->order_by('loggeduser.id','DESC');
		$this->db->where('username!=','Joss');
		$this->db->where('datet',$date_now);
		$this->db->select('*');
		$this->db->from('loggeduser');
		$this->db->join('users',
		'users.id=loggeduser.logged_user');
		$query = $this->db->get();
        return $query;
	}
	function my_sessions($logged_id){
		$this->db->where('logged_user',$logged_id);
		$this->db->select('*');
		$this->db->from('loggeduser');
		$this->db->join('users',
		'users.id=loggeduser.logged_user');
		$query = $this->db->get();
        return $query->result();
	}
	function reset_student_password($id,$data,$temp_pass){
		$this->db->where('unique_id',$id);
		$query=$this->db->update('users',$data);
		$output='';
		if($query){
			$output .='<div class="alert alert-info alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-check-circle"> </i> Your new password is '.$temp_pass.'
            </div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-check-circle"> </i>ooops Please try again.
            </div></div>';
		}
		return $output;
	}
	function reset_staff_password($id,$data,$temp_pass){
		$this->db->where('id',$id);
		$query=$this->db->update('users',$data);
		$output='';
		if($query){
			$output .='<div class="alert alert-info alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-check-circle"> </i> Your new password is '.$temp_pass.'
            </div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-check-circle"> </i>ooops Please try again.
            </div></div>';
		}
		return $output;
	}
	function fetch_single_details()
	{
		$this->db->not_like('usertype','Student');
		$data = $this->db->get('users');
		$output = '<p><div class="col-lg-6">';
		foreach($data->result() as $row)
		{
			$output .= '
			<img src="'.base_url().'/profile/'.$row->profile.'" />
			'.$row->fname.' '.$row->mname.'';
		}
		$output .= '</div></p>';
		return $output;
	}
	function fetch_session_user($user){
		$this->db->where('username',$user);
		$this->db->group_by('username');
		$query=$this->db->get('users');
		return $query->result();
	}
	function post_branch($data){
		$query=$this->db->insert('branch',$data);
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function fetch_branch($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->group_by('name');
		$this->db->order_by('name','ASC');
		$query=$this->db->get('branch');
		return $query->result();
	}
	function fetch_my_branch($max_year,$branch){
		$this->db->where('academicyear',$max_year);
		$this->db->where('name',$branch);
		$this->db->group_by('name');
		$this->db->order_by('name','ASC');
		$query=$this->db->get('branch');
		return $query->result();
	}
	function fetch_branch_mark_analysis($max_year){
		/*$this->db->where('academicyear',$max_year);*/
		$this->db->group_by('name');
		$this->db->order_by('name','ASC');
		$query=$this->db->get('branch');
		return $query->result();
	}
	function fetch_week($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->group_by('week_name');
		$this->db->order_by('week_name','ASC');
		$query=$this->db->get('school_week');
		return $query->result();
	}
	function fetch_permitted_week($max_year,$user_divison){
		$this->db->where('academicyear',$max_year);
		$this->db->where('user_divison',$user_divison);
		$this->db->group_by('permission_week');
		$this->db->order_by('permission_week','ASC');
		$query=$this->db->get('teacher_performance_view_permission');
		return $query->result();
	}
	function fetch_brachto_defaultChange($oldBranch,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('name!=',$oldBranch);
		$this->db->group_by('name');
		$this->db->order_by('name','ASC');
		$query=$this->db->get('branch');
		$output='';
		if($query->num_rows()>0){
			$output.=' <select class="form-control" required="required" name="newGsBranchName" id="newGsBranchName">';
			foreach($query->result() as $row){
				$output.='<option>'.$row->name.'</option>';
			}
			$output.='</select>';
		}
		return $output;
	}
	function fetch_grade_list_Names($header_list,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('sub_name=',$header_list);
		$this->db->group_by('header_grade');
		$this->db->order_by('header_grade','ASC');
		$query=$this->db->get('kg_subject_header');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="form-group">
            <label for="Mobile"></label>
            <div class="row">'; 
            foreach($query->result() as $row){
                $output.='<div class="col-lg-4 col-6">
                  <div class="pretty p-icon p-bigger">
                   <input id="category_grade" type="checkbox" name="category_grade" value="'.$row->header_grade.'">
                   <div class="state p-info">
                      <i class="icon material-icons"></i>
                      <label></label>'.$row->header_grade.'
                   </div>
                 </div>
               </div>';
            }
            $output.='</div>
          </div>';
		}
		return $output;
	}
	function fetch_grade_list_Names_grands($header_list,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('category_name=',$header_list);
		$this->db->group_by('cate_grade');
		$this->db->order_by('cate_grade','ASC');
		$query=$this->db->get('kg_subject_list_category');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="form-group">
            <label for="Mobile"></label>
            <div class="row">'; 
            foreach($query->result() as $row){
                $output.='<div class="col-lg-4 col-6">
                  <div class="pretty p-icon p-bigger">
                   <input id="grade_subject_list" type="checkbox" name="grade_subject_list" value="'.$row->cate_grade.'">
                   <div class="state p-info">
                      <i class="icon material-icons"></i>
                      <label></label>'.$row->cate_grade.'
                   </div>
                 </div>
               </div>';
            }
            $output.='</div>
          </div>';
		}
		return $output;
	}
	function fetch_category_list_Names_grands($header_list,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('cate_term=',$header_list);
		$this->db->group_by('category_name');
		$this->db->order_by('cate_term','ASC');
		$query=$this->db->get('kg_subject_list_category');
		$output='';
		if($query->num_rows()>0){
			$output.='<option>'; 
            foreach($query->result() as $row){
                $output.='<option value="'.$row->category_name.'">'.$row->category_name.'</option>
                ';
            }
            $output.='</option>';
		}
		return $output;
	}
	function delete_branch($id){
		$this->db->where('bid',$id);
		$this->db->delete('branch');
	}
	function fetch_social_pages(){
		$query=$this->db->get('links');
		return $query->result();
	}
	/*function change_password($user,$pass1){
	    $this->db->where('username',$user);
	    $this->db->where('password',$password);
	    $query=$this->db->get('users');
		if($query->num_rows() > 0){
			return true;
		}
		else{
			return false;
		}
	}*/
	/*function change_password($username, $password) {
	    // Retrieve user with matching username, isapproved, and status
	    $this->db->select_max('id');
	    $this->db->where('username', $username);
	    $this->db->where('isapproved', '1');
	    $this->db->where('status', 'Active');
	    $query = $this->db->get('users');

	    if ($query->num_rows() === 1) {
	        $user = $query->row();

	        // Check if the stored password is bcrypt or SHA256
	        if (password_verify($password, $user->password)) {
	            // Password matches bcrypt hash
	            return true; // User authenticated with bcrypt
	        } elseif (hash('sha256', $password) === $user->password) {
	            return true; // User authenticated with SHA256, now migrated to bcrypt
	        }
	    }

	    return false; // Login failed
	}*/
	function change_password($username, $password) {
	    // Retrieve user with matching username, isapproved, and status
	    $this->db->select('id, password');
	    $this->db->where('username', $username);
	    $this->db->where('isapproved', '1');
	    $this->db->where('status', 'Active');
	    $this->db->order_by('id', 'DESC');
	    $this->db->limit(1);
	    $query = $this->db->get('users');

	    if ($query->num_rows() === 1) {
	        $user = $query->row();

	        // Check if the stored password is bcrypt or SHA256
	        if (password_verify($password, $user->password)) {
	            return true; // User authenticated with bcrypt
	        } elseif (hash('sha256', $password) === $user->password) {
	            // Optionally migrate to bcrypt here:
	            
	            return true; // User authenticated with SHA256, now migrated to bcrypt
	        }
	    }

	    return false; // Login failed
	}


	function update_password($user,$password2){
	  	$this->db->where('username',$user);
    	$this->db->set('password', $password2);
    	$this->db->set('password2', $password2);
    	$query=$this->db->update('users');
		if($query){
			return true;
		}
		else{
			return false;
		}
	}
	function change_profile($user){
	    $this->db->where('username',$user);
	    $query=$this->db->get('users');
		if($query->num_rows() > 0){
			return true;
		}
		else{
			return false;
		}
	}
	function academic_year_filter(){
		$this->db->select_max('year_name');
		$query=$this->db->get('academicyear');
		return $query->result();
	}
	function academic_year_filter_summer(){
		$this->db->select_max('year_name');
		$query=$this->db->get('summer_academicyear');
		return $query->result();
	}
	function academic_year(){
		$this->db->order_by('year_name','DESC');
		$this->db->select('*');
		$query=$this->db->get('academicyear');
		return $query->result();
	}
	function academicYear4Registration(){
		$this->db->order_by('year_name','DESC');
		$this->db->select('year_name');
		$this->db->limit('2');
		$query=$this->db->get('academicyear');
		return $query->result();
	}
	function fetch_sent($limit,$start,$user){
		$this->db->order_by('message.id','DESC');
		$this->db->limit($limit, $start);
		$this->db->select('users.profile,users.fname,users.mname ,users.username,message.status, message.subject,message.message,message.date_sent');
        $this->db->from('message');
        $this->db->join('users', 
            'users.username = message.receiver');
        $this->db->where('sender',$user);
        $query = $this->db->get();
        return $query->result();
	}
	function fetch_count_sent($user){
		$this->db->order_by('message.id','DESC');
		$this->db->select('users.profile,users.fname,users.mname ,users.username,message.status, message.subject,message.message,message.date_sent');
        $this->db->from('message');
        $this->db->join('users', 
            'users.username = message.receiver');
        $this->db->where('sender',$user);
        $query = $this->db->get();
        return $query->num_rows();
	}
	function fetch_inbox($limit,$start,$user,$usertype){
		$this->db->order_by('message.id','DESC');
		$this->db->limit($limit, $start);
		$this->db->select('*');
        $this->db->from('message');
        $this->db->join('users', 
            'users.username = message.sender');
        $this->db->where('receiver',$user);
        $query = $this->db->get();
        return $query->result();
	}
	function fetch_count_inbox($user,$usertype){
		$this->db->order_by('message.id','DESC');
		$this->db->select('*');
        $this->db->from('message');
        $this->db->join('users', 
            'users.username = message.sender');
        $this->db->where('receiver',$user);
        $query = $this->db->get();
        return $query->num_rows();
	}
	function fetch_allmessages($user){
		$this->db->order_by('message.id','DESC');
		$this->db->select('*');
        $this->db->from('message');
        $this->db->join('users', 
            'users.username = message.sender');
        $this->db->where('receiver',$user);
        $query = $this->db->get();
        $output='';
        foreach ($query->result() as $row) {
        	# code...
        	$output .='<a href="'.base_url().'myinbox/" class="dropdown-item"> 
                  <span class="dropdown-item-avatar text-white">
                   <img alt="image" src="'.base_url().'/profile/'.$row->profile.'" class="rounded-circle">
                  </span> 
                  <span class="dropdown-item-desc"> 
                    <span class="message-user">
                      '.$row->sender.'    
                    </span>
                    <span class="time messege-text">
                    '.$row->subject.'   
                   </span>
                    <span class="time">
                      '.$row->date_sent.' 
                    </span>
                  </span>
                </a> ';
        }
        return $output;
	}
	function fetch_allnotification(){
		$this->db->order_by('id','DESC');
		$this->db->select('*');
        $this->db->from('users');
        $this->db->where('isapproved','0');
        $query = $this->db->get();
        $output='';
        foreach ($query->result() as $row) {
        	# code...
        	$output .='<a href="'.base_url().'newstaffs/" class="dropdown-item"> 
                  <span class="dropdown-item-avatar text-white">';
                  if($row->profile!=''){
                    $output.='<img alt="image" src="'.base_url().'/profile/'.$row->profile.'" class="rounded-circle">';
                  }else{
                    $output.='<img alt="image" src="'.base_url().'/profile/defaultProfile.png" class="rounded-circle">';  
                  }
                  $output.='</span> 
                  <span class="dropdown-item-desc"> 
                    <span class="message-user">
                      '.$row->fname.'&nbsp'.$row->mname.'   
                    </span>
                    <span class="time messege-text">
                    '.$row->usertype.' ('.$row->branch.')  
                   </span>
                    <span class="time">
                      '.$row->dateregister.' 
                    </span>
                  </span>
                </a> ';
        }
        return $output;
	}
	function fetch_allmymarkstatusApproved($id,$branch1,$gradesec,$max_quarter,$max_year){
		$this->db->where('stuid',$id);
		/*$this->db->where('status','0');*/
		$this->db->where('approved','1');
		$this->db->order_by('mid','DESC');
		$query = $this->db->get('mark'.$branch1.$gradesec.$max_quarter.$max_year);
	    $output='';
	    if($query->num_rows()>0){
		    foreach ($query->result() as $row) {
		    	$output .='<a href="'.base_url().'myresult/" class="dropdown-item"> 
		        <span class="dropdown-item-desc"> 
		        <span class="message-user">
		        '.$row->subname.': '.$row->value.'/' . $row->outof .' '.$row->markname .'
		        </span>
		        <span class="time messege-text">Your result on '.$row->quarter .' </span>
		        </span>
		        </a> ';
		    }
	    }else{
	    	$output .='<a href="#" class="dropdown-item"> 
	        <span class="dropdown-item-desc">
	        <span class="time messege-text">No new mark result report. </span>
	        </span>
	        </a> ';
	    }
	    return $output;
	}
	function fetch_allmymarkstatus($id,$branch1,$gradesec,$max_quarter,$max_year){
		$this->db->where('stuid',$id);
		/*$this->db->where('status','0');*/
		$this->db->order_by('mid','DESC');
		$query = $this->db->get('mark'.$branch1.$gradesec.$max_quarter.$max_year);
	    $output='';
	    if($query->num_rows()>0){
		    foreach ($query->result() as $row) {
		    	$output .='<a href="'.base_url().'myresult/" class="dropdown-item"> 
		        <span class="dropdown-item-desc"> 
		        <span class="message-user">
		        '.$row->subname.': '.$row->value.'/' . $row->outof .' '.$row->markname .'
		        </span>
		        <span class="time messege-text">Your result on '.$row->quarter .' </span>
		        </span>
		        </a> ';
		    }
	    }else{
	    	$output .='<a href="#" class="dropdown-item"> 
	        <span class="dropdown-item-desc">
	        <span class="time messege-text">No New mark result report. </span>
	        </span>
	        </a> ';
	    }
	    return $output;
	}
	function fetch_allmypaymentstatus($id){
		$this->db->where('stuid',$id);
		$this->db->order_by('date_created','DESC');
		$query = $this->db->get('payment');
    $output='';
    if($query->num_rows()>0){
    foreach ($query->result() as $row) {
    	$output .='<a href="#" class="dropdown-item">
    	  <span class="dropdown-item-avatar text-white">
          Payment
        </span> 
        <span class="dropdown-item-desc"> 
        <span class="message-user">Payment:
        '.$row->paymentype.' '.$row->paid.'Br.
        </span>
        <span class="time messege-text">You were paid the above listed detail</span>
        <span class="time">By:
        '.$row->byuser .'
        </span>
        </span>
        </a> ';
      }
    }else{
    	$output .='<a href="#" class="dropdown-item"> 
        <span class="dropdown-item-desc">
        <span class="time messege-text">No New payment report. </span>
        </span>
        </a> ';
    }
    return $output;
	}
	function fetch_allmyattendance($id){
		$this->db->where('stuid',$id);
		$this->db->where('approved','1');
		/*$this->db->where('status','0');*/
		$this->db->order_by('absentdate','DESC');
		$query = $this->db->get('attendance');
	    $output='';
	    if($query->num_rows()>0){
	    	foreach ($query->result() as $row) {
		    	$output .='<a href="'.base_url().'myattendance/" class="dropdown-item">
		        	<span class="dropdown-item-desc"> 
		        	<span class="time messege-text">You were absent on date </span>
			        	<span class="message-user">Date: '.$row->absentdate.' '.$row->absentype.' </span>
			        	
			        	<span class="time">By: '.$row->attend_by .' </span>
		        	</span>
		        </a> ';
		    }
	    }else{
	    	$output .='<a href="#" class="dropdown-item"> 
	        <span class="dropdown-item-desc">
	        <span class="time messege-text">No New absence report. </span>
	        </span>
	        </a> ';
	    }
	    return $output;
	}
	function fetch_allunseetseen_myattendance($id){
		$this->db->where('stuid',$id);
		$this->db->where('status','0');
		$this->db->where('approved','1');
		$this->db->from('attendance');
		return $this->db->count_all_results();
	}
	function update_myunseen_attendance($id){
		$this->db->where('stuid',$id);
		$this->db->where('status','0');
		$this->db->set('status','1');
		$query=$this->db->update('attendance');
		return $query->results();
	}
	function fetch_allunseetseen_mypayment($id){
		$this->db->where('stuid',$id);
		$this->db->where('status','0');
		$this->db->from('payment');
		return $this->db->count_all_results();
	}
	function update_myunseen_payment($id){
		$this->db->where('stuid',$id);
		$this->db->where('status','0');
		$this->db->set('status','1');
		$query=$this->db->update('payment');
		return $query->results();
	}
	function fetch_allunseetseen_mymarkApproved($id,$branch1,$gradesec,$max_quarter,$max_year){
		$this->db->where('stuid',$id);
		$this->db->where('status','0');
		$this->db->where('approved','1');
		$this->db->from('mark'.$branch1.$gradesec.$max_quarter.$max_year);
		return $this->db->count_all_results();
	}
	function fetch_allunseetseen_mymark($id,$branch1,$gradesec,$max_quarter,$max_year){
		$this->db->where('stuid',$id);
		$this->db->where('status','0');
		$this->db->from('mark'.$branch1.$gradesec.$max_quarter.$max_year);
		return $this->db->count_all_results();
	}
	function update_myunseen_mark($id,$branch1,$gradesec,$max_quarter,$max_year){
		$this->db->where('stuid',$id);
		$this->db->where('status','0');
		$this->db->set('status','1');
		$query=$this->db->update('mark'.$branch1.$gradesec.$max_quarter.$max_year);
		return $query->results();
	}
	function fetch_school(){
		$query=$this->db->get('school');
		return $query->result();
	}
	function post_data($data){
		$queryInsert=$this->db->insert('post',$data);
		if($queryInsert){
			$this->db->order_by('post.pid','DESC');
	    	$query = $this->db->get('post');
	    	$output='';
	    	if($query->num_rows()>0){
	    		foreach($query->result() as $rowPost){
    			$userName=$rowPost->postby;
    			$id=$rowPost->pid; 
    			$this->db->select('fname,mname ,profile ');
		      	$this->db->where(array('username'=>$userName));
		      	$queryUser=$this->db->get('users');

    			if($queryUser->num_rows()>0){
    				$rowDetail=$queryUser->row();
    				$fName=$rowDetail->fname;
    				$fMame=$rowDetail->mname;
	    			$output.='<div class="card fetchUpdatedData'.$id.'">
	    			<div class="card-body StudentViewTextInfo delete_postFeed'.$id.'">
		    			<div class="support-ticket media">';
	    				if($rowDetail->profile == ''){
							$output.='<img alt="Pic" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Pic" src="'.base_url().'/profile/'.$rowDetail->profile.'" class="user-img mr-2">';
						}
		                $output.=' <span class="font-weight-bold text-info">'.$fName.' '.$fMame.'</span>
			                <div class="media-body">
			                    <div class="badge badge-pill badge-light mb-1 float-right">Action';
			                    if($rowPost->postby ==$_SESSION['username'] || $_SESSION['usertype']===trim('superAdmin')){
			                    	$output.='<div class="btn-group dropleft">
			                        <a href="#" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
			                          <i class="fas fa-ellipsis-h fa-sm fa-fw text-gray-400"></i>
			                        </a>
			                        <div class="dropdown-menu">
			                        <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon deletepost text-danger" id="'.$rowPost->pid.'"> <i class="fas fa-trash"></i> Remove
			                          </a></button>
			                          <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon edit_this_post text-info" id="'.$rowPost->pid.'" data-toggle="modal" data-target=".editPictureOrImageAdmin"> <i class="fas fa-pen-alt"></i> Edit
			                          </a>
			                          </button>
			                        </div>
			                      </div>';
			                  	}
			                    $output.='</div>
			                </div>
		                </div>
	                    <div class="media-bodeSy">
	                      <b class="font-weight-bold font-13 text-dark">'.$rowPost->title.'</b> 
	                      <small class="text-muted"><i class="fas fa-clock"></i>'.$rowPost->date_post.' ';
	                      if($rowPost->updated_status=='1'){
	                      	$output.='Edited';
	                      }
	                      $output.=' <i class="fas fa-users"></i> '.$rowPost->user.'</small>';
	                      	$like_query1 ="SELECT * FROM post_like WHERE pid=? ";
	                      	$like_query=$this->db->query($like_query1,array($id));
		                    $tot_likes=$like_query->num_rows();
		                    $session=$_SESSION['id'];

		                  	$user_like_query1="SELECT * FROM post_like WHERE pid=? and bid=? ";
		                  	$user_like_query=$this->db->query($user_like_query1,array($id,$session));
		                  	$user_likes=$user_like_query->num_rows(); 
		                  	if($rowPost->post!='' && $rowPost->photo!=''){
		                  	$output.='<article class="article">
			                  <div id="aniimated-thumbnials" class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
			                  <div class="article-detaoils"> '.$rowPost->post.' 
			                  </div>
			                </article>';
	                      	}else if($rowPost->post=='' && $rowPost->photo!=''){
	                      		$output.='<article class="article">
				                  <div id="aniimated-thumbnials" class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
				                </article>';
	                    	}else{
	                    		$output.='<article class="aricle">
				                  <div class="article-detailsk">
				                    '.$rowPost->post.' 
				                  </div>
				                </article>';
	                    		/*$output.='<p class="my-1 font-weight-bold moreDataGSMOre">'.$rowPost->post.'</p>';*/
	                    	}
	                      	$output.='<div class="row"><div class="col-md-12 col-12">
	                      	<div class="thumbs-up-button badge badge-pill badge-light">';
	                      	if($user_likes > 0) { 
	                          $output.='<a  class="like"  id="like_'.$id.'" style="color:red">
	                            <i class="fas fa-thumbs-up"></i>
	                          </a> ';
	                      	}else{
	                      		$output.='<a  class="like"  id="like_'.$id.'">
	                             <i class="fas fa-thumbs-up"></i>
	                          	</a> ';
	                      	}
	                        $output.='<span class=" count-likes_'.$id.'"> '.$tot_likes.' </span>
	                           likes
	                        </div>';
	                        $this->db->where('usergroup',$_SESSION['usertype']);
	                        $this->db->where('allowed','postInfoTPhoto');
	                        $this->db->where('tableName','HomepagePost');
	                        $this->db->order_by('id','ASC');
	                        $usergroupPermission=$this->db->get('usergrouppermission');
	                        if($usergroupPermission->num_rows()>0){ 
	                      		$output.='
	                        	<a class="text-center media-description badge badge-pill badge-light" data-toggle="collapse" href="#sendMyReplay'.$id.'" role="button" aria-expanded="false" aria-controls="collapseExample"> 
	                        	<i class="fas fa-comment"></i> Reply</a>
	                      		';
	                      	}
	                  		$output.='</div></div><div class="collapse" id="sendMyReplay'.$id.'">
	                        <div class="card">
	                          <div class="chat-box">
	                            <div class="card-footer chat-form">
	                              <input type="text" name="replayCommentText" class="form-control replayCommentText" id="replayCommentText'.$id.'" placeholder="Write a replay... " >
	                              <button type="submit" class="btn btn-info sendMyReplyComment" id="sendMyReplyComment" value="'.$id.'"> <i class="far fa-paper-plane"></i> </button>
	                            </div>
	                          </div>
	                        </div>
	                      </div>';
	                     $output.='<div class="list_comments'.$id.'"></div> ';

                      	$this->db->select('p.id,us.profile,us.fname,us.mname,p.pcomment,p.comdate');
						$this->db->from('post_comment p');
						$this->db->join('users us',
						'us.username=p.uid');
						$this->db->order_by('p.id','DESC');
						$this->db->group_by('p.id');
						$this->db->where('p.pid',$id);
						$this->db->limit('5');
						$comQuery=$this->db->get();

                      	if($comQuery->num_rows()>0){ 
                        	foreach($comQuery->result() as $rowCom){ 
                          	$ids=$rowCom->id;
                          	$output.='<div class="chat-box deleteCom'.$ids.'" id="load_data_table'.$id.'">
                          	<div class="chat outgoing">
					           <div class="details">
					             <p class="p">'.$rowCom->pcomment.'<small class="time text-muted"> 
					             <i class="fas fa-clock"></i> '.$rowCom->comdate.' </small>';
					             if($_SESSION['usertype']===trim('superAdmin')){ 

					             	$output.='<small class="text-muted"> 
					             	<a class="deleteComment" id="'.$rowCom->id.'"><button class="btn btn-default text-danger"> Remove</button>
                                        </a></small><br>';
                                 }else{
                                 	$output.='<br>';
                                 }
					            $output.='
					             	<small class="time text-muted pull-right"> '.$rowCom->fname.' '.$rowCom->mname.'</small>
					             </p>
					           </div>';
					           if($rowCom->profile!=''){ 
	                              	$output.='<a href="#"><img alt="P" src="'.base_url().'/profile/'.$rowCom->profile.'" class="border-circle"> </a>';
	                            }else{ 
	                               $output.='<a href="#"><img alt="P" src="'.base_url().'/profile/defaultProfile.png" class="border-circle"></a>'; 
	                            } 
					        $output.='</div> </div>';
					        $last_id = $ids;  
                        }
                        $output.='<div class="newcommentload_here'.$id.'"></div>';
                        $output.='<span class="loding'.$last_id.'" style="display: none;"><span class="loding_txt">Loading...</span></span>
                        <button type="button" name="'.$id.'" value="'.$last_id.'" id="btn_more" class="btn btn-default form-control btn_more'.$id.'"><small>View more replies</small></button> ';
                      }
	                $output.='</div>
	               </div></div>';
            	}
    		}
	    	}else{
	    		$output .='<div class="alert alert-light alert-dismissible show fade">
	                <div class="alert-body">
	                   
	                <i class="fas fa-exclamation-triangle"> </i> No posts found.
	            </div></div>';
	    	}
	    }
    	return $output;
	}
	function fetch_myrequested_form($user,$max_year){
		$output='';
		$query=$this->db->query("select st.id,st.requestdate,st.requestype,st.from_date, st.to_date, st.return_date ,st. emergency_mobile,st.requestresponse, st.requeststatus,us.profile, us.fname,us.mname,us.lname from users as us cross join studentrequest as st where stuid='$user' and st.stuid=us.username group by st.id order by st.id DESC ");
		if($query->num_rows()>0){
			foreach($query->result() as $arow){
				$requestResponse=$arow->requestresponse;
				$output.='
			        <div class="message-codntainer-gs">
			        <div class="message-gs-full have-incident-report">';
				$output.='<div class="support-ticket media">';
				if($arow->profile!=''){ 
                  	$output.='<img alt="P" src="'.base_url().'/profile/'.$arow->profile.'" class="user-img mr-2">';
                }else{ 
                   $output.='<img alt="P" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">'; 
                } 
                $output.='<div class="media-body">';
                if($arow->requeststatus==1){
                	$output.='<div class="badge badge-pill badge-success pull-right"> <i class="fa fa-check-double"></i> '.$requestResponse.'</small></div>';
                }else{
                	$output.='<div class="badge badge-pill badge-info pull-right"> 
                	<i class="fa fa-check"></i> '.$requestResponse.'</small></div>';
                }
                $output.='
                      <span class="font-weight-bold">'.$arow->fname.' '.$arow->mname.'</span>
                      <p class="my-1">'.$arow->requestype.'&nbsp;&nbsp; (<u>'.$arow->from_date.'</u> - <u>'.$arow->to_date.'</u>)<br>Returned Date <u>'.$arow->return_date.'</u> <small class="text-muted"> &nbsp;&nbsp; Requested at <span class="font-weight-bold font-13"> '.$arow->requestdate.'</span> </small>';
                      	if($arow->requeststatus==0 && $requestResponse=='Waiting'){
	                      $output.='<button class="btn btn-outline-danger cancelRequest'.$arow->id.'" id="cancelRequest" type="Submit" value="'.$arow->id.'">Cancel Request</button>';
	                  	}
                      	$output.='</p> 
                    	</div>
                  </div></div>
                </div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function post_like($id,$uid,$data){
		$this->db->where('bid',$uid);
		$this->db->where('pid',$id);
		$query=$this->db->get('post_like');
		if($query->num_rows()>0){
			$this->db->where('bid',$uid);
		  	$this->db->where('pid',$id);
		  	$this->db->delete('post_like');
		  	return 0;
		}else{
			$this->db->insert('post_like',$data);
		  	$id=$this->db->insert_id();
		  	return 1;
		}
	}
	function fetch_post(){
		$this->db->order_by('post.pid','DESC');
		$this->db->select('*');
    	$this->db->from('post');
    	$this->db->join('users', 
            'users.username = post.postby');
    	$query = $this->db->get();
    	return $query->result();
	}
	function fetch_poll_posts($user,$limit, $start,$usertype){
		$date_Today=date('Y-m-d');
		if($usertype ==='superAdmin'){
			$this->db->where('date_expired >=',$date_Today);
			$this->db->order_by('poll_table.group_name','DESC');
			$this->db->group_by('poll_table.group_name');
			$this->db->limit($limit, $start);
	    	$query = $this->db->get('poll_table');
		}else{
			$this->db->where('date_expired >=',$date_Today);
			$this->db->where('who_vote',$usertype);
			$this->db->or_where('date_expired >=',$date_Today);
			$this->db->where('who_vote','Public');
			$this->db->order_by('poll_table.group_name','DESC');
			$this->db->group_by('poll_table.group_name');
			$this->db->limit($limit, $start);
	    	$query = $this->db->get('poll_table');
		}
    	$output='';
    	if($query->num_rows()>0){
    		foreach($query->result() as $rowPost){
    			$dateExpired=$rowPost->date_expired;
    			$date1 = strtotime($date_Today);
				$date2 = strtotime($dateExpired);
				$diff = $date2 - $date1;
				$leftDays = floor($diff / (60 * 60 * 24)) + 1;

    			$groupName=$rowPost->group_name;
    			$output.=' <div class="card" id="groupName'.$groupName.'">
                  <div class="card-header">'.$rowPost->poll_question.' <i class="fas fa-user"></i><small class="text-muted"> '.$rowPost->who_vote.' <span class="badge badge-pill"><i class="fas fa-clock"></i>'.$leftDays.' Days</span></small> ';
	                    if($rowPost->createdby ==$_SESSION['username'] || $_SESSION['usertype']===trim('superAdmin')){
	                    	$output.='<div class="badge badge-pill badge-light float-right">Action<div class="btn-group dropleft">
	                        <a href="#" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
	                          <i class="fas fa-ellipsis-h fa-sm fa-fw text-gray-400"></i>
	                        </a>
	                        <div class="dropdown-menu">
			                    <a href="#" name="'.$groupName.'" value="'.$groupName.'" class="dropdown-item has-icon delete_poll_post text-danger" id="'.$groupName.'"><i class="fas fa-trash-alt"></i> Delete</a>
	                        </div>
	                      </div>';
	                  	}
	                $output.='</div>
                </div>
                <div class="card card-body">';
                $this->db->where('group_name',$groupName);
                $this->db->group_by('option_name');
                $this->db->order_by('id','ASC');
                $queryPoll=$this->db->get('poll_table');
    			if($queryPoll->num_rows()>0){
    				foreach($queryPoll->result() as $rowPoll){
    					$pid=$rowPoll->id;
	    				$output.='<div class="mb-4">';
	    				$this->db->where('p_group',$groupName);
		                $queryCalculate=$this->db->get('poll_table_result');
                        if($queryCalculate->num_rows()>0){
                        	$this->db->select('count(p_group) as total_voters');
                        	$this->db->where('p_group',$groupName);
		                	$queryCalculated=$this->db->get('poll_table_result');
                        	$row_voteers=$queryCalculated->row();
                        	$total_voted_group=$row_voteers->total_voters;

                        	$this->db->select('count(pid) as total_vote');
                        	$this->db->where('p_group',$groupName);
                        	$this->db->where('pid',$pid);
		                	$queryCount=$this->db->get('poll_table_result');
                        	$row_vote=$queryCount->row();
                        	$total_voted=$row_vote->total_vote;
                        	$voted_value=round((100*$total_voted)/$total_voted_group);

                        	$this->db->where('p_group',$groupName);
                        	$this->db->where('user_id',$user);
		                	$queryCheck=$this->db->get('poll_table_result');
	                        if($queryCheck->num_rows()<1){
	                        	$output.='<ul class="list-unstyled list-unstyled-border list-unstyled-noborder float-right">
			                      <li class="media">
			                        <div class="media-cta">
			                          <a href="#" class="btn btn-outline-primary" name="'.$groupName.'" id="voteThisPoll" value="'.$rowPoll->id.'">Vote</a>
			                        </div>
			                      </li>
			                    </ul>';
	                        }
	                    	$output.='<div class="text-small float-right font-weight-bold text-muted">'.$total_voted.' <i class="fas fa-users"></i></div>
                      		<div class="font-weight-bold">'.$rowPoll->option_name.'</div>';
                      		$output.='<div class="progress" data-height="5"> ';
                          	if($voted_value>=90){
                          		$output.='<div class="progress-bar btn-success" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #4ba84b;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=80){
                          		$output.='<div class="progress-bar btn-primary" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #0000FF;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=75){
                          		$output.='<div class="progress-bar btn-info" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #FE2EF7;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=50){
                          		$output.='<div class="progress-bar btn-warning" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #ff9966;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else{
                          		$output.='<div class="progress-bar btn-danger" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #cc3300;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}
                  			$output.='</div>';
                        }else{
                        	$this->db->where('p_group',$groupName);
                        	$this->db->where('user_id',$user);
		                	$queryCheck=$this->db->get('poll_table_result');
	                        if($queryCheck->num_rows()<1){
	                        	$output.='<ul class="list-unstyled list-unstyled-border list-unstyled-noborder float-right">
			                      <li class="media">
			                        <div class="media-cta">
			                          <a href="#" class="btn btn-outline-primary" name="'.$groupName.'" id="voteThisPoll" value="'.$rowPoll->id.'">Vote</a>
			                        </div>
			                      </li>
			                      </ul>
	                        	  ';
	                        }
                        	$output.='<div class="media-progressbar">
	                          <div class="text-small float-right font-weight-bold text-muted">0
	                          <i class="fas fa-users"></i></div>
                      		<div class="font-weight-bold">'.$rowPoll->option_name.'</div>
	                          <div class="progress" data-height="6">
	                            <div class="progress-bar bg-primary" data-width="0%"></div>
	                          </div>
	                        </div>';
                        }
                        $output.='</div>';
	                }
	                if($rowPost->createdby ==$_SESSION['username'] || $_SESSION['usertype']===trim('superAdmin')){
	               		$output.='<span class="text-muted pull-right"><a href="'.base_url().'pollresult/?poll-result-summary/">See result</a></span>';
	               	}
    			}
    			$output.=' </div> </div>';    		
    		}
    	}
    	return $output;
	}
	function fetch_poll_posts_summary($user,$limit, $start,$usertype){
		$date_Today=date('Y-m-d');
		if($usertype ==='superAdmin'){
			$this->db->order_by('poll_table.group_name','DESC');
			$this->db->group_by('poll_table.group_name');
			$this->db->limit($limit, $start);
	    	$query = $this->db->get('poll_table');
		}else{
			$this->db->where('who_vote',$usertype);
			$this->db->or_where('who_vote','Public');
			$this->db->order_by('poll_table.group_name','DESC');
			$this->db->group_by('poll_table.group_name');
			$this->db->limit($limit, $start);
	    	$query = $this->db->get('poll_table');
		}
    	$output='';
    	if($query->num_rows()>0){
    		foreach($query->result() as $rowPost){
    			$dateExpired=$rowPost->date_expired;
    			$date1 = strtotime($date_Today);
				$date2 = strtotime($dateExpired);
				$diff = $date2 - $date1;
				$leftDays = floor($diff / (60 * 60 * 24)) + 1;

    			$groupName=$rowPost->group_name;
    			$output.=' <div class="card" id="groupName'.$groupName.'">
                  <div class="card-header font-weight-bold font-26">'.$rowPost->poll_question.' <i class="fas fa-user"></i><small class="text-muted"> '.$rowPost->who_vote.' <span class="badge badge-pill"><i class="fas fa-clock"></i>'.$leftDays.' Days</span></small>
                </div>
                <div class="card-body StudentViewTextInfo">';
    			$queryPoll=$this->db->query("select * from poll_table where group_name='$groupName' group by option_name order by id ASC ");
    			if($queryPoll->num_rows()>0){
    				foreach($queryPoll->result() as $rowPoll){
    					$total_voted_group=0;
    					$pid=$rowPoll->id;
	    				$output.='<div class="mb-4">';
	    				$queryCalculate=$this->db->query("select * from poll_table_result where p_group='$groupName' ");
                        if($queryCalculate->num_rows()>0){
                        	$queryCalculated=$this->db->query("select count(p_group) as total_voters from poll_table_result where p_group='$groupName' ");
                        	$row_voteers=$queryCalculated->row();
                        	$total_voted_group=$row_voteers->total_voters;

                        	$queryCount=$this->db->query("select count(pid) as total_vote from poll_table_result where p_group='$groupName' and pid='$pid' ");
                        	$row_vote=$queryCount->row();
                        	$total_voted=$row_vote->total_vote;
                        	$voted_value=round((100*$total_voted)/$total_voted_group);
	                    	$output.='<div class="text-small float-right font-weight-bold font-18">'.$total_voted.' <i class="fas fa-users"></i></div>
                      		<div class="font-weight-bold">'.$rowPoll->option_name.'</div>';
                      		$output.='<div class="progress" data-height="5"> ';
                          	if($voted_value>=90){
                          		$output.='<div class="progress-bar btn-success" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #4ba84b;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=80){
                          		$output.='<div class="progress-bar btn-primary" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #0000FF;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=75){
                          		$output.='<div class="progress-bar btn-info" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #FE2EF7;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=50){
                          		$output.='<div class="progress-bar btn-warning" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #ff9966;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else{
                          		$output.='<div class="progress-bar btn-danger" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #cc3300;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}
                  			$output.='</div>';
                        }else{
                        	$output.='<div class="media-progressbar">
	                          <div class="text-small float-right font-weight-bold text-muted">0
	                          <i class="fas fa-users"></i></div>
                      		<div class="font-weight-bold">'.$rowPoll->option_name.'</div>
	                          <div class="progress" data-height="6">
	                            <div class="progress-bar bg-primary" data-width="0%"></div>
	                          </div>
	                        </div>';
                        }
                        $output.='</div>';
	                }
	                $output.='<span class="text-time pull-right font-24">Total voters <span class="badge badge-primary">'.$total_voted_group.' </span></span>';
    			}
    			$output.=' </div> </div>';    		
    		}
    	}else{
    		$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                   
                <i class="fas fa-exclamation-triangle"> </i> No record found.
            </div></div>';
    	}
    	return $output;
	}
	function fetch_thispoll_posts($user,$groupName){
		$date_Today=date('M-d-Y');
		$this->db->where('group_name',$groupName);
		$this->db->order_by('poll_table.group_name','DESC');
		$this->db->group_by('poll_table.group_name');
    	$query = $this->db->get('poll_table');
    	$output='';
    	if($query->num_rows()>0){
    		foreach($query->result() as $rowPost){
    			$groupName=$rowPost->group_name;
    			$output.=' <div class="card" id="groupName'.$groupName.'">
                  <div class="card-header">'.$rowPost->poll_question.' <i class="fas fa-user"></i><small class="text-muted">'.$rowPost->who_vote.'</small> ';
	                    if($rowPost->createdby ==$_SESSION['username'] || $_SESSION['usertype']===trim('superAdmin')){
	                    	$output.='<div class="badge badge-pill badge-light float-right">Action<div class="btn-group dropleft">
	                        <a href="#" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
	                          <i class="fas fa-ellipsis-h fa-sm fa-fw text-gray-400"></i>
	                        </a>
	                        <div class="dropdown-menu">
			                    <a href="#" name="'.$groupName.'" value="'.$groupName.'" class="dropdown-item has-icon delete_poll_post text-danger" id="'.$groupName.'"><i class="fas fa-trash-alt"></i> Delete</a>
	                        </div>
	                      </div>';
	                  	}
	                $output.='</div>
                </div>
                <div class="card-body">';
                $this->db->where('group_name',$groupName);
            	$this->db->group_by('option_name');
            	$this->db->order_by('id','ASC');
            	$queryPoll=$this->db->get('poll_table');
    			if($queryPoll->num_rows()>0){
    				foreach($queryPoll->result() as $rowPoll){
    					$pid=$rowPoll->id;
	    				$output.='<div class="mb-4">';
	    				$this->db->where('p_group',$groupName);
		            	$queryCalculate=$this->db->get('poll_table_result');
                        if($queryCalculate->num_rows()>0){
                        	$this->db->select('count(p_group) as total_voters');
                        	$this->db->where('p_group',$groupName);
		            		$queryCalculated=$this->db->get('poll_table_result');
                        	$row_voteers=$queryCalculated->row();
                        	$total_voted_group=$row_voteers->total_voters;

                        	$this->db->select('count(pid) as total_vote');
                        	$this->db->where('p_group',$groupName);
                        	$this->db->where('pid',$pid);
		            		$queryCount=$this->db->get('poll_table_result');
                        	$row_vote=$queryCount->row();
                        	$total_voted=$row_vote->total_vote;
                        	$voted_value=round((100*$total_voted)/$total_voted_group);
 
                        	$this->db->where('p_group',$groupName);
                        	$this->db->where('user_id',$user);
		            		$queryCheck=$this->db->get('poll_table_result');
	                        if($queryCheck->num_rows()<1){
	                        	$output.='<ul class="list-unstyled list-unstyled-border list-unstyled-noborder float-right">
			                      <li class="media">
			                        <div class="media-cta">
			                          <a href="#" class="btn btn-outline-primary" name="'.$groupName.'" id="voteThisPoll" value="'.$rowPoll->id.'">Vote</a>
			                        </div>
			                      </li>
			                    </ul>';
	                        }
	                    	$output.='<div class="text-small float-right font-weight-bold text-muted">'.$total_voted.' <i class="fas fa-users"></i></div>
                      		<div class="font-weight-bold">'.$rowPoll->option_name.'</div>';
                      		$output.='<div class="progress" data-height="5"> ';
                          	if($voted_value>=90){
                          		$output.='<div class="progress-bar btn-success" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #4ba84b;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=80){
                          		$output.='<div class="progress-bar btn-primary" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #0000FF;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=75){
                          		$output.='<div class="progress-bar btn-info" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #FE2EF7;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else if($voted_value>=50){
                          		$output.='<div class="progress-bar btn-warning" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #ff9966;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}else{
                          		$output.='<div class="progress-bar btn-danger" data-width="'.$voted_value.'%" aria-valuenow="'.$voted_value.'%" aria-valuemin="0" aria-valuemax="100" style="background-color: #cc3300;width: '.$voted_value.'%";><div class="progress-text">'.$voted_value.'%</div></div> ';
                          	}
                  			$output.='</div>';
                        }else{
                        	$this->db->where('p_group',$groupName);
                        	$this->db->where('user_id',$user);
		            		$queryCheck=$this->db->get('poll_table_result');
	                        if($queryCheck->num_rows()<1){
	                        	$output.='<ul class="list-unstyled list-unstyled-border list-unstyled-noborder float-right">
			                      <li class="media">
			                        <div class="media-cta">
			                          <a href="#" class="btn btn-outline-primary" name="'.$groupName.'" id="voteThisPoll" value="'.$rowPoll->id.'">Vote</a>
			                        </div>
			                      </li>
			                      </ul>
	                        	  ';
	                        }
                        	$output.='<div class="media-progressbar">
	                          <div class="text-small float-right font-weight-bold text-muted">0
	                          <i class="fas fa-users"></i></div>
                      		<div class="font-weight-bold">'.$rowPoll->option_name.'</div>
	                          <div class="progress" data-height="6">
	                            <div class="progress-bar bg-primary" data-width="0%"></div>
	                          </div>
	                        </div>';
                        }
                        $output.='</div>';
	                }
    			}
    			$output.=' </div> </div>';    		
    		}
    	}
    	return $output;
	}
	function fetch_this_post_comments($id,$category_id){
		$output='';
		$comQuery =$this->db->query("SELECT p.id,us.profile,us.fname,us.mname,p.pcomment,p.comdate FROM post_comment as p cross join users as us ON us.username=p.uid WHERE p.id < '$id' and pid = '$category_id' group by p.id order by p.id DESC limit 5 ");
      	if($comQuery->num_rows()>0){ 
        	foreach($comQuery->result() as $rowCom){ 
          	$ids=$rowCom->id;
          	$output.='<div class="chat-box deleteCom'.$ids.'" >
          	<div class="chat outgoing">
	           <div class="details">
	             <p class="p">'.$rowCom->pcomment.'<small class="time text-muted"> 
	             <i class="fas fa-clock"></i> '.$rowCom->comdate.' </small>';
	             if($_SESSION['usertype']===trim('superAdmin')){
	             	$output.='<small class="text-muted"> <a class="deleteComment" id="'.$rowCom->id.'"><button class="btn btn-default text-danger"> Remove</button>
                        </a></small><br>';
                    }else{
                    	$output.='<br>';
                    }
	             	$output.='<small class="time text-muted pull-right"> '.$rowCom->fname.' '.$rowCom->mname.'</small>
	             </p>
	           </div>';
	           if($rowCom->profile!=''){ 
                  	$output.='<a href="#"><img alt="P" src="'.base_url().'/profile/'.$rowCom->profile.'" class="border-circle"> </a>';
                }else{ 
                   $output.='<a href="#"><img alt="P" src="'.base_url().'/profile/defaultProfile.png" class="border-circle"></a>'; 
                } 
	         $output.='</div>
	         </div>';
	        $last_id = $ids;  
        }
        $output.='<span class="loding'.$last_id.'" style="display: none;"><span class="loding_txt">Loading...</span></span>
        <button type="button" name="'.$category_id.'" value="'.$last_id.'" id="btn_more" class="btn btn-default form-control btn_more'.$category_id.'"><small>View more replies</small></button> ';
      }
      return $output;
	}
	function fetch_posts($limit, $start){
		$this->db->order_by('post.pid','DESC');
		$this->db->limit($limit, $start);
    	$query = $this->db->get('post');
    	$output='';
    	if($query->num_rows()>0){
    		foreach($query->result() as $rowPost){
    			$userName=$rowPost->postby;
    			$id=$rowPost->pid; 
    			$this->db->select('fname,mname ,profile ');
			    $this->db->where(array('username'=>$userName));
			    $queryUser=$this->db->get('users');
    			if($queryUser->num_rows()>0){
    				$rowDetail=$queryUser->row();
    				$fName=$rowDetail->fname;
    				$fMame=$rowDetail->mname;
	    			$output.='<div class="card fetchUpdatedData'.$id.'">
	    			<div class="card-body delete_postFeed'.$id.'">
		    			<div class="support-ticket media">';
	    				if($rowDetail->profile == ''){
							$output.='<img alt="Pic" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Pic" src="'.base_url().'/profile/'.$rowDetail->profile.'" class="user-img mr-2">';
						}
		                $output.=' <span class="font-weight-bold text-info">'.$fName.' '.$fMame.'</span>
			                <div class="media-body">';
			                    if($rowPost->postby ==$_SESSION['username'] || $_SESSION['usertype']===trim('superAdmin')){
			                    	$output.='<div class="badge badge-pill badge-light mb-1 float-right">Action
			                    	<div class="btn-group dropleft">
			                        <a href="#" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
			                          <i class="fas fa-ellipsis-h fa-sm fa-fw text-gray-400"></i>
			                        </a>
			                        <div class="dropdown-menu">
			                        <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon deletepost text-danger" id="'.$rowPost->pid.'"> <i class="fas fa-trash"></i> Remove
			                          </a></button>
			                          <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon edit_this_post text-info" id="'.$rowPost->pid.'" data-toggle="modal" data-target=".editPictureOrImageAdmin"> <i class="fas fa-pen-alt"></i> Edit
			                          </a>
			                          </button>
			                        </div>
			                      </div>
			                    </div>';
			                }
			                $output.='</div>
		                </div>
	                    <div class="media-bodeSy">
	                      <b class="font-weight-bold font-13 text-dark">'.$rowPost->title.'</b> 
	                      <small class="text-muted"><i class="fas fa-clock"></i>'.$rowPost->date_post.' ';
	                      if($rowPost->updated_status=='1'){
	                      	$output.='Edited';
	                      }
	                      $output.=' <i class="fas fa-users"></i> '.$rowPost->user.'</small>';
	                      	$like_query1 ="SELECT * FROM post_like WHERE pid=? ";
	                      	$like_query=$this->db->query($like_query1,array($id));
		                    $tot_likes=$like_query->num_rows();
		                    $session=$_SESSION['id'];
		                  	$user_like_query1="SELECT * FROM post_like WHERE pid=? and bid=? ";
		                  	$user_like_query=$this->db->query($user_like_query1,array($id,$session));
		                  	$user_likes=$user_like_query->num_rows(); 
		                  	if($rowPost->post!='' && $rowPost->photo!=''){
		                  	$output.='<article class="article">
			                  <div id="aniimated-thumbnials" class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
			                  <div class="article-detaoils"> '.$rowPost->post.' 
			                  </div>
			                </article>';
	                      	}else if($rowPost->post=='' && $rowPost->photo!=''){
	                      		$output.='<article class="article">
				                  <div id="aniimated-thumbnials" class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
				                </article>';
	                    	}else{
	                    		$output.='<article class="aricle">
				                  <div class="article-detailsk">
				                    '.$rowPost->post.' 
				                  </div>
				                </article>';
	                    		/*$output.='<p class="my-1 font-weight-bold moreDataGSMOre">'.$rowPost->post.'</p>';*/
	                    	}
	                      	$output.='<div class="row"><div class="col-md-12 col-12">
	                      	<div class="thumbs-up-button badge badge-pill badge-light">';
	                      	if($user_likes > 0) { 
	                          $output.='<a  class="like"  id="like_'.$id.'" style="color:red">
	                            <i class="fas fa-thumbs-up"></i>
	                          </a> ';
	                      	}else{
	                      		$output.='<a  class="like"  id="like_'.$id.'">
	                             <i class="fas fa-thumbs-up"></i>
	                          	</a> ';
	                      	}
	                        $output.='<span class=" count-likes_'.$id.'"> '.$tot_likes.' </span>
	                           likes
	                        </div>';
	                        $this->db->where('usergroup',$_SESSION['usertype']);
	                        $this->db->where('allowed','postInfoTPhoto');
	                        $this->db->where('tableName','HomepagePost');
	                        $this->db->order_by('id','ASC');
	                        $usergroupPermission=$this->db->get('usergrouppermission');
	                        if($usergroupPermission->num_rows()>0){ 
	                      		$output.='
	                        	<a class="text-center media-description badge badge-pill badge-light" data-toggle="collapse" href="#sendMyReplay'.$id.'" role="button" aria-expanded="false" aria-controls="collapseExample"> 
	                        	<i class="fas fa-comment"></i> Reply</a>
	                      		';
	                      	}
	                  		$output.='</div></div><div class="collapse" id="sendMyReplay'.$id.'">
	                        <div class="card">
	                          <div class="chat-box">
	                            <div class="card-footer chat-form">
	                              <input type="text" name="replayCommentText" class="form-control replayCommentText" id="replayCommentText'.$id.'" placeholder="Write a replay... " >
	                              <button type="submit" class="btn btn-info sendMyReplyComment" id="sendMyReplyComment" value="'.$id.'"> <i class="far fa-paper-plane"></i> </button>
	                            </div>
	                          </div>
	                        </div>
	                      </div>';
	                     $output.='<div class="list_comments'.$id.'"></div> ';
                      
                      	$this->db->select('p.id,us.profile,us.fname,us.mname,p.pcomment,p.comdate');
						$this->db->from('post_comment p');
						$this->db->join('users us',
						'us.username=p.uid');
						$this->db->order_by('p.id','DESC');
						$this->db->group_by('p.id');
						$this->db->where('p.pid',$id);
						$this->db->limit('5');
						$comQuery=$this->db->get();

                      	if($comQuery->num_rows()>0){ 
                        	foreach($comQuery->result() as $rowCom){ 
                          	$ids=$rowCom->id;
                          	$output.='<div class="chat-box deleteCom'.$ids.'" id="load_data_table'.$id.'">
                          	<div class="chat outgoing">
					           <div class="details">
					             <p class="p">'.$rowCom->pcomment.'<small class="time text-muted"> 
					             <i class="fas fa-clock"></i> '.$rowCom->comdate.' </small>
					             	<small class="text-muted"> <a class="deleteComment" id="'.$rowCom->id.'"><button class="btn btn-default text-danger"> Remove</button>
                                        </a></small><br>
					             	<small class="time text-muted pull-right"> '.$rowCom->fname.' '.$rowCom->mname.'</small>
					             </p>
					           </div>';
					           if($rowCom->profile!=''){ 
	                              	$output.='<a href="#"><img alt="P" src="'.base_url().'/profile/'.$rowCom->profile.'" class="border-circle"> </a>';
	                            }else{ 
	                               $output.='<a href="#"><img alt="P" src="'.base_url().'/profile/defaultProfile.png" class="border-circle"></a>'; 
	                            } 
					        $output.='</div> </div>';
					        $last_id = $ids;  
                        }
                        $output.='<div class="newcommentload_here'.$id.'"></div>';
                        $output.='<span class="loding'.$last_id.'" style="display: none;"><span class="loding_txt">Loading...</span></span>
                        <button type="button" name="'.$id.'" value="'.$last_id.'" id="btn_more" class="btn btn-default form-control btn_more'.$id.'"><small>View more replies</small></button> ';
                      }
	                $output.='</div>
	               </div></div>';
            	}
    		}
    	}/*else{
    		$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                   
                <i class="fas fa-exclamation-triangle"> </i> No posts found.
            </div></div>';
    	}*/
    	return $output;
	}
	function fetch_edited_posts($pid){
		$this->db->order_by('post.pid','DESC');
		$this->db->where('pid', $pid);
    	$query = $this->db->get('post');
    	$output='';
    	if($query->num_rows()>0){
    		foreach($query->result() as $rowPost){
    			$userName=$rowPost->postby;
    			$id=$rowPost->pid; 

    			$this->db->select('fname,mname ,profile ');
			    $this->db->where(array('username'=>$userName));
			    $queryUser=$this->db->get('users');
    			if($queryUser->num_rows()>0){
    				$rowDetail=$queryUser->row();
    				$fName=$rowDetail->fname;
    				$fMame=$rowDetail->mname;
	    			$output.='<div class="card fetchUpdatedData'.$id.'">
	    			<div class="card-body StudentViewTextInfo delete_postFeed'.$id.'">
		    			<div class="support-ticket media">';
	    				if($rowDetail->profile == ''){
							$output.='<img alt="Pic" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Pic" src="'.base_url().'/profile/'.$rowDetail->profile.'" class="user-img mr-2">';
						}
		                $output.=' <span class="font-weight-bold text-info">'.$fName.' '.$fMame.'</span>
			                <div class="media-body">
			                    <div class="badge badge-pill badge-light mb-1 float-right">Action';
			                    if($rowPost->postby ==$_SESSION['username'] || $_SESSION['usertype']===trim('superAdmin')){
			                    	$output.='<div class="btn-group dropleft">
			                        <a href="#" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
			                          <i class="fas fa-ellipsis-h fa-sm fa-fw text-gray-400"></i>
			                        </a>
			                        <div class="dropdown-menu">
			                        <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon deletepost text-danger" id="'.$rowPost->pid.'"> <i class="fas fa-trash"></i> Remove
			                          </a></button>
			                          <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon edit_this_post text-info" id="'.$rowPost->pid.'" data-toggle="modal" data-target=".editPictureOrImage"> <i class="fas fa-pencil-alt"></i> Edit
			                          </a>
			                          </button>
			                        </div>
			                      </div>';
			                  	}
			                    $output.='</div>
			                </div>
		                </div>
	                    <div class="media-body">
	                      <b class="font-weight-bold font-13 text-dark">'.$rowPost->title.'</b> 
	                      <small class="text-muted"><i class="fas fa-clock"></i>'.$rowPost->date_post.' ';
	                      if($rowPost->updated_status=='1'){
	                      	$output.='Edited';
	                      }
	                      $output.=' <i class="fas fa-users"></i> '.$rowPost->user.'</small>';
		                  	$like_query1 ="SELECT * FROM post_like WHERE pid=? ";
	                      	$like_query=$this->db->query($like_query1,array($id));
		                    $tot_likes=$like_query->num_rows();
		                    $session=$_SESSION['id'];
		                  	$user_like_query1="SELECT * FROM post_like WHERE pid=? and bid=? ";
		                  	$user_like_query=$this->db->query($user_like_query1,array($id,$session));
		                  	$user_likes=$user_like_query->num_rows(); 

		                  	if($rowPost->post!='' && $rowPost->photo!=''){
		                  	$output.='<article class="article">
			                  <div class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
			                  <div class="article-detaoils"> '.$rowPost->post.' 
			                  </div>
			                </article>';
	                      	}else if($rowPost->post=='' && $rowPost->photo!=''){
	                      		$output.='<article class="article">
				                  <div id="aniimated-thumbnials" class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
				                </article>';
	                    	}else{
	                    		$output.='<article class="artdicle">
				                  <div class="article-detailsk">
				                    '.$rowPost->post.' 
				                  </div>
				                </article>';
	                    		/*$output.='<p class="my-1 font-weight-bold moreDataGSMOre">'.$rowPost->post.'</p>';*/
	                    	}
	                      	$output.='<div class="row"><div class="col-md-12 col-12">
	                      	<div class="thumbs-up-button badge badge-pill badge-light">';
	                      	if($user_likes > 0) { 
	                          $output.='<a  class="like"  id="like_'.$id.'" style="color:red">
	                            <i class="fas fa-thumbs-up"></i>
	                          </a> ';
	                      	}else{
	                      		$output.='<a  class="like"  id="like_'.$id.'">
	                             <i class="fas fa-thumbs-up"></i>
	                          	</a> ';
	                      	}
	                        $output.='<span class=" count-likes_'.$id.'"> '.$tot_likes.' </span>
	                           likes
	                        </div>';
	                        $this->db->where('usergroup',$_SESSION['usertype']);
	                        $this->db->where('allowed','postInfoTPhoto');
	                        $this->db->where('tableName','HomepagePost');
	                        $this->db->order_by('id','ASC');
	                        $usergroupPermission=$this->db->get('usergrouppermission');
	                        if($usergroupPermission->num_rows()>0){ 
	                      		$output.='
	                        	<a class="text-center media-description badge badge-pill badge-light" data-toggle="collapse" href="#sendMyReplay'.$id.'" role="button" aria-expanded="false" aria-controls="collapseExample"> 
	                        	<i class="fas fa-comment"></i> Reply</a>
	                      		';
	                      	}
	                  		$output.='</div></div><div class="collapse" id="sendMyReplay'.$id.'">
	                        <div class="card">
	                          <div class="chat-box">
	                            <div class="card-footer chat-form">
	                              <input type="text" name="replayCommentText" class="form-control replayCommentText" id="replayCommentText'.$id.'" placeholder="Write a replay... " >
	                              <button class="btn btn-info sendMyReplyComment" value="'.$id.'"> <i class="far fa-paper-plane"></i> </button>
	                            </div>
	                          </div>
	                        </div>
	                      </div>';
	                     $output.='<div class="list_comments'.$id.'"></div> ';
                      	$this->db->select('p.id,us.profile,us.fname,us.mname,p.pcomment,p.comdate');
						$this->db->from('post_comment p');
						$this->db->join('users us',
						'us.username=p.uid');
						$this->db->order_by('p.id','DESC');
						$this->db->group_by('p.id');
						$this->db->where('p.pid',$id);
						$this->db->limit('5');
						$comQuery=$this->db->get();
                      	if($comQuery->num_rows()>0){ 
                        	foreach($comQuery->result() as $rowCom){ 
                          	$ids=$rowCom->id;
                          	$output.='<div class="chat-box deleteCom'.$ids.'">
                          	<div class="chat outgoing">
					           <div class="details">
					             <p class="p">'.$rowCom->pcomment.'<small class="time text-muted"> 
					             <i class="fas fa-clock"></i> '.$rowCom->comdate.' </small>';
					             if($_SESSION['usertype']===trim('superAdmin')){ 

					             	$output.='<small class="text-muted"> 
					             	<a class="deleteComment" id="'.$rowCom->id.'"><button class="btn btn-default text-danger"> Remove</button>
                                        </a></small><br>';
                                 }else{
                                 	$output.='<br>';
                                 }
					             	$output.='<small class="time text-muted pull-right"> '.$rowCom->fname.' '.$rowCom->mname.'</small>
					             </p>
					           </div>';
					           if($rowCom->profile!=''){ 
	                              	$output.='<a href="#"><img alt="P" src="'.base_url().'/profile/'.$rowCom->profile.'" class="border-circle"> </a>';
	                            }else{ 
	                               $output.='<a href="#"><img alt="P" src="'.base_url().'/profile/defaultProfile.png" class="border-circle"></a>'; 
	                            } 
					         $output.='</div>
					         </div>';
					        $last_id = $ids; 
                        } 
                        $output.='<div class="newcommentload_here'.$id.'"></div>';
				 		$output.='<span class="loding'.$last_id.'" style="display: none;"><span class="loding_txt">Loading...</span></span>
				       	<button type="button" name="'.$id.'" value="'.$last_id.'" id="btn_more" class="btn btn-default form-control btn_more'.$id.'"><small>View more replies</small></button> ';
                      }
	                $output.='</div>
	               </div></div>';
            	}
    		}
    	}/*else{
    		$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                   
                <i class="fas fa-exclamation-triangle"> </i> No posts found.
            </div></div>';
    	}*/
    	return $output;
	}
	function fetch_postdata_to_edit($post_id){
		$output='';
		$this->db->where('pid',$post_id);
		$query=$this->db->get('post');
		foreach($query->result() as $row){
			$output.='<form id="updatepostForm" method="POST" class="StudentViewTextInfo">
			<input type="hidden" name="updated_pid" id="updated_pid" value="'.$row->pid.'">
            <div class="chat-box card">
              <div class="row">
                <div class="col-12 col-md-6 col-lg-6 form-group">
                  <input type="text" class="form-control" id="updatepostTitle" name="updatepostTitle" value="'.$row->title.'">
                </div>
                <div class="col-12 col-md-6 col-lg-6">
                  <select class="custom-select" required="required" name="updatepostAudience" id="updatepostAudience">
                    <option>Public</option>';
                    $this->db->group_by('uname');
                    $this->db->order_by('uname','ASC');
			    	$this->db->where('uname!=','superAdmin');
			    	$usergroup=$this->db->get('usegroup');

                    foreach($usergroup->result() as $usergroups){ 
                    	if($usergroups->uname==$row->user){
                    		$output.='<option selected="selected">'.$usergroups->uname.'</option>';
                    	}else{
                    		$output.='<option>'.$usergroups->uname.'</option>';
                    	}
                    } 
                  $output.='</select>
                </div>
                <div class="col-12 col-md-12 col-lg-12">           
                    <textarea class="" rows="4" cols="100" wrap="physical"  name="updatepost_text" id="updatepost_text" style="width:100%; height:100px;">'.$row->post.'</textarea> 
                    <div class="dropdown-divider"></div>                  
                    <button class="btn btn-primary updatesendPostFeed pull-right"> Update Post </button>
                </div>
              </div>
            </div>
          </form>';
		}
		return $output;
	}
	function fetch_post_users($usertype,$user,$limit, $start){    	
    	$this->db->where('post.user',$usertype);
		$this->db->or_where('post.user','Public');
		$this->db->or_where('post.postby',$user);
		$this->db->limit($limit, $start);
		$this->db->order_by('post.pid','DESC');
    	$query = $this->db->get('post');
    	$output='';
    	if($query->num_rows()>0){
    		foreach($query->result() as $rowPost){
    			$userName=$rowPost->postby;
    			$id=$rowPost->pid; 

    			$this->db->select('fname,mname ,profile ');
			    $this->db->where(array('username'=>$userName));
			    $queryUser=$this->db->get('users');
    			if($queryUser->num_rows()>0){
    				$rowDetail=$queryUser->row();
    				$fName=$rowDetail->fname;
    				$fMame=$rowDetail->mname;
	    			$output.='<div class="card fetchUpdatedData'.$id.'">
	    			<div class="card-body StudentViewTextInfo delete_postFeed'.$id.'">
		    			<div class="support-ticket media">';
	    				if($rowDetail->profile == ''){
							$output.='<img alt="Pic" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Pic" src="'.base_url().'/profile/'.$rowDetail->profile.'" class="user-img mr-2">';
						}
		                $output.=' <span class="font-weight-bold text-info">'.$fName.' '.$fMame.'</span>
			                <div class="media-body">';
			                if($rowPost->postby ==$_SESSION['username'] || $_SESSION['usertype']===trim('superAdmin')){			                    
			                    	$output.='<div class="badge badge-pill badge-light mb-1 float-right">Action<div class="btn-group dropleft">
			                        <a href="#" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
			                          <i class="fas fa-ellipsis-h fa-sm fa-fw text-gray-400"></i>
			                        </a>
			                        <div class="dropdown-menu">
			                         <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon deletepost text-danger" id="'.$rowPost->pid.'"> <i class="fas fa-trash"></i> Remove
			                          </a></button>
			                          <button class="btn btn-default btn-block">
			                          <a class="dropdown-item has-icon edit_this_post text-info" id="'.$rowPost->pid.'" data-toggle="modal" data-target=".editPictureOrImageTeacher"> <i class="fas fa-pencil-alt"></i> Edit
			                          </a>
			                          </button>
			                        </div>
			                      </div></div>';
			                  	}
			                    $output.='
			                </div>
		                </div>
	                    <div class="media-body">
	                      <b class="font-weight-bold font-13 text-dark">'.$rowPost->title.'</b> 
	                      <small class="text-muted"><i class="fas fa-clock"></i>'.$rowPost->date_post.' ';
	                      if($rowPost->updated_status=='1'){
	                      	$output.='Edited';
	                      }
	                      $output.=' <i class="fas fa-users"></i> '.$rowPost->user.'</small>';
	                      	$like_query1 ="SELECT * FROM post_like WHERE pid=? ";
	                      	$like_query=$this->db->query($like_query1,array($id));
		                    $tot_likes=$like_query->num_rows();
		                    $session=$_SESSION['id'];
		                  	$user_like_query1="SELECT * FROM post_like WHERE pid=? and bid=? ";
		                  	$user_like_query=$this->db->query($user_like_query1,array($id,$session));
		                  	$user_likes=$user_like_query->num_rows(); 
		                  	if($rowPost->post!='' && $rowPost->photo!=''){
		                  	$output.='<article class="article">
			                  <div id="aniimated-thumbnials" class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
			                  <div class="article-detaoils"> '.$rowPost->post.' 
			                  </div>
			                </article>';
	                      	}else if($rowPost->post=='' && $rowPost->photo!=''){
	                      		$output.='<article class="article">
				                  <div id="aniimated-thumbnials" class="gallery-item">
			                        <img src="'.base_url().'/public_post/'.$rowPost->photo.'" alt="" class="img-fluid">
			                    </div>
				                </article>';
	                    	}else{
	                    		$output.='<article class="articdle">
				                  <div class="article-detailsk">
				                    '.$rowPost->post.' 
				                  </div>
				                </article>';
	                    		/*$output.='<p class="my-1 font-weight-bold moreDataGSMOre">'.$rowPost->post.'</p>';*/
	                    	}
	                      	$output.='<div class="row"><div class="col-md-12 col-12">
	                      	<div class="thumbs-up-button badge badge-pill badge-light">';
	                      	if($user_likes > 0) { 
	                          $output.='<a  class="like"  id="like_'.$id.'" style="color:red">
	                            <i class="fas fa-thumbs-up"></i>
	                          </a> ';
	                      	}else{
	                      		$output.='<a  class="like"  id="like_'.$id.'">
	                             <i class="fas fa-thumbs-up"></i>
	                          	</a> ';
	                      	}
	                        $output.='<span class=" count-likes_'.$id.'"> '.$tot_likes.' </span>
	                           likes
	                        </div>';
	                        $this->db->where('usergroup',$_SESSION['usertype']);
	                        $this->db->where('allowed','postInfoTPhoto');
	                        $this->db->where('tableName','HomepagePost');
	                        $this->db->order_by('id','ASC');
	                        $usergroupPermission=$this->db->get('usergrouppermission'); 
	                        if($usergroupPermission->num_rows()>0){ 
	                      		$output.='
	                        	<a class="text-center media-description badge badge-pill badge-light" data-toggle="collapse" href="#sendMyReplay'.$id.'" role="button" aria-expanded="false" aria-controls="collapseExample"> 
	                        	<i class="fas fa-comment"></i> Reply</a>
	                      		';
	                      	}
	                  		$output.='</div></div><div class="collapse" id="sendMyReplay'.$id.'">
	                        <div class="card">
	                          <div class="chat-box">
	                            <div class="card-footer chat-form">
	                              <input type="text" name="replayCommentText" class="form-control replayCommentText" id="replayCommentText'.$id.'" placeholder="Write a replay... " >
	                              <button class="btn btn-info sendMyReplyComment" value="'.$id.'"> <i class="far fa-paper-plane"></i> </button>
	                            </div>
	                          </div>
	                        </div>
	                      </div>';
	                     $output.='<div class="list_comments'.$id.'"></div> ';
                      	$this->db->select('p.id,us.profile,us.fname,us.mname,p.pcomment,p.comdate');
						$this->db->from('post_comment p');
						$this->db->join('users us',
						'us.username=p.uid');
						$this->db->order_by('p.id','DESC');
						$this->db->group_by('p.id');
						$this->db->where('p.pid',$id);
						$this->db->limit('5');
						$comQuery=$this->db->get();

                      	if($comQuery->num_rows()>0){ 
                        	foreach($comQuery->result() as $rowCom){ 
                          	$ids=$rowCom->id;
                          	$output.='<div class="chat-box deleteCom'.$ids.'">
                          	<div class="chat outgoing">
					           <div class="details">
					             <p class="p">'.$rowCom->pcomment.'<small class="time text-muted"> 
					             <i class="fas fa-clock"></i> '.$rowCom->comdate.' </small>';
					             if($_SESSION['usertype']===trim('superAdmin')){ 

					             	$output.='<small class="text-muted"> 
					             	<a class="deleteComment" id="'.$rowCom->id.'"><button class="btn btn-default text-danger"> Remove</button>
                                        </a></small><br>';
                                 }else{
                                 	$output.='<br>';
                                 }
					             	$output.='<small class="time text-muted pull-right"> '.$rowCom->fname.' '.$rowCom->mname.'</small>
					             </p>
					           </div>';
					           if($rowCom->profile!=''){ 
	                              	$output.='<a href="#"><img alt="P" src="'.base_url().'/profile/'.$rowCom->profile.'" class="border-circle"> </a>';
	                            }else{ 
	                               $output.='<a href="#"><img alt="P" src="'.base_url().'/profile/defaultProfile.png" class="border-circle"></a>'; 
	                            } 
					         $output.='</div> </div>';
					        $last_id = $ids;
                        } 
                        $output.='<div class="newcommentload_here'.$id.'"></div>';
						$output.='<span class="loding'.$last_id.'" style="display: none;"><span class="loding_txt">Loading...</span></span>
				       	<button type="button" name="'.$id.'" value="'.$last_id.'" id="btn_more" class="btn btn-default form-control btn_more'.$id.'"><small>View more replies</small></button> ';
                      }
	                $output.='</div>
	               </div></div>';
            	}
    		}
    	}/*else{
    		$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                   
                <i class="fas fa-exclamation-triangle"> </i> No posts found.
            </div></div>';
    	}*/
    	return $output;
	}
	function fetch_blocked_users(){
		$output='';
		$this->db->group_by('tried_username');
		$this->db->order_by('id','DESC');
    	$query = $this->db->get('login_attempt');
    	if($query->num_rows()>0) { 
            $output.='<div class="table-responsive">
          	<table class="table table-striped">
            <tr>
              <th>Tried Username</th>
              <th>Ip Address</th>
              <th>Action</th>
            </tr>';
            foreach($query->result() as $rwo){ 
                $output.='<tr class="">
                <td>'.$rwo->tried_username.'</td>
                <td class="align-middle">
                  '.$rwo->ip_address.'
                  <div class="progress" data-height="4" data-toggle="tooltip" title="100%">
                    <div class="progress-bar bg-success" data-width="100"></div>
                  </div>
                </td>
                <td>
                  <button class="btn btn-danger btn-action btnRemoveRestriction" value="'.$rwo->tried_username.'" type="submit">
                    <i class="fas fa-trash-alt"></i> Remove Restriction
                  </button>
                </td>
                </tr>';
            } 
            $output.='</table>
            </div>';
        } else{ 
            $output.='<div class="alert alert-warning alert-dismissible show fade">
              <div class="alert-body">
                  <button class="close"  data-dismiss="alert">
                      <span>&times;</span>
                  </button> 
                  <i class="fas fa-exclamation-triangle"> </i> No system blocked users found.
              </div>
            </div>';
        }
    	return $output;
	}
	function fetch_showmore_post($id){
		$this->db->where('pid',$id);
		$this->db->order_by('post.pid','DESC');
    	$query = $this->db->get('post');
    	$output='';
    	foreach ($query->result() as $post_result) {
    		$output.='<p class="lead mt-4">'.$post_result->post.'
                    </p>';
    	}
    	return $output;
	}
	function fetch_elibrary(){
		$this->db->order_by('library.lid','DESC');
		$this->db->select('*');
    $this->db->from('library');
    $this->db->join('users', 
            'users.username = library.pby');
    $query = $this->db->get();
    return $query->result();
	}
	function fetch_myelibrary($grade){
		$this->db->where('library.grade',$grade);
		$this->db->order_by('library.lid','DESC');
		$this->db->select('*');
    $this->db->from('library');
    $this->db->join('users', 
            'users.username = library.pby');
    $query = $this->db->get();
    return $query->result();
	}
	function delete_post($id){
		$this->db->where('pid',$id);
		$this->db->delete('post');
	}
	function delete_post_comment($id){
		$this->db->where('id',$id);
		$this->db->delete('post_comment');
	}
	function read_more($id){
		$this->db->where(array('post.pid'=>$id));
		$this->db->select('*');
        $this->db->from('post');
        $this->db->join('users', 
            'users.username = post.postby');
        $query = $this->db->get();
        return $query->result();
	}
	function search($key){
		$this->db->order_by('post.pid','DESC');
		$this->db->like('title',$key);
		$this->db->or_like('post',$key);
		$this->db->select('*');
        $this->db->from('post');
        $this->db->join('users', 
            'users.username = post.postby');
        $query = $this->db->get();
        return $query->result();
	}
	function fetchDirectorForPlacement(){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('usertype!=','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetchMyDirectorForPlacement($branch){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('branch'=>$branch));
		$this->db->where('usertype!=','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetchStaffsForPlacement(){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('usertype!=','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_my_staffs($user,$branch,$user_division){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('username!=',$user);
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status2'=>$user_division));
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_my_staffs_performance($user,$branch,$user_division,$max_year){
		$query=$this->db->query("select u.fname,u.mname,u.lname,u.id,u.profile from users as u cross join staff_group as sg where sg.staff_list=u.username and sg.academicyear='$max_year' and staff_head='$user' and u.branch='$branch' and u.status2='$user_division' and u.status='Active' and u.isapproved='1' and u.usertype!='Student' and u.username!='$user' group by staff_list order by u.fname,u.mname,u.lname ASC");
		return $query->result();
	}
	function fetchStaffs_For_performance($branch){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('branch'=>$branch));
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		$output='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->id.'">
			'.$row->fname.' '.$row->mname.' '.$row->lname.'</option>';
		}
		return $output;
	}
	function fetch_group_ondivision_change($groupName,$academicyear){
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('per_division'=>$groupName));
		$this->db->order_by('pername','ASC');
		$this->db->group_by('pername');
		$query=$this->db->get('teacherperfogroup');
		$output='';
		$output.='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->tid.'"> '.$row->pername.' </option>';
		}
		return $output;
	}
	function fetchStaffs_For_performance_directors($branch,$user,$max_year){
		$query=$this->db->query("select * from staff_group where staff_head='$user' and academicyear='$max_year' group by staff_list ");
		$output='';
		if($query->num_rows()>0){
			foreach($query->result() as $row_user){
				$userName=$row_user->staff_list;
				$queryUsers=$this->db->query("select id,profile,fname,mname,lname from users where branch='$branch' and status='Active' and isapproved='1' and usertype!='Student' and username='$userName' order by fname,mname,lname ASC ");
				/*$this->db->where(array('status'=>'Active'));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('branch'=>$branch));
				$this->db->not_like('usertype','Student');
				$this->db->order_by('fname,mname,lname','ASC');
				$query=$this->db->get('users');
				$output='';*/
				foreach ($queryUsers->result() as $row) { 
					$output.='<option value="'.$row->id.'">
					'.$row->fname.' '.$row->mname.' '.$row->lname.'</option>';
				}
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetchMyStaffsForPlacement($branch){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('usertype!=','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetchDirectorTeacher($hoomroombranch){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$hoomroombranch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->like('usertype','Teacher');
		$this->db->or_like('usertype','Director');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetchThisBranchTeacher($hoomroombranch){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$hoomroombranch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->like('usertype','Teacher');
		$this->db->or_like('usertype','Admin');
		$this->db->or_like('usertype','Director');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		$output ='<option> </option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->username.'">
			'.$row->username.'-'.$row->fname.' '.$row->mname.'</option>';
		}
		return $output;
	}
	function searchStaffs($searchItem){
		$this->db->order_by('fname','ASC');
		$this->db->where('usertype!=','Student');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->like('username',$searchItem);
		$this->db->or_where('usertype!=','Student');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->like('fname', $searchItem);
		$this->db->or_where('usertype!=','Student');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->like('email', $searchItem);

		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>UserType</th>
                <th>Mobile</th>
                <th>Branch</th>
                <th><div class="dropdown">
                		All <input type="checkbox" id="selectallstaffs" onClick="selectAllStaffs()"> Action
                        <a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a> 
                        <div class="dropdown-menu">
                        	<a href="#" class="dropdown-item has-icon text-danger deleteCustomStaffs" name="" value="" id="deleteCustomStaffs"><i class="fas fa-trash-alt"></i> Delete</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-warning InactiveCustomStaffs" name="" value="" id="InactiveCustomStaffs"><i class="fas fa-times-circle"></i> Inactive</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-info resetPasswordCustomStaffs" name="" value="" id="resetPasswordCustomStaffs"><i class="fas fa-key"></i> Reset Password</a>
                      	</div>
                    </div>
                </th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    <td><a href="#" id="edit_staff" class="text-success" value="'.$id.'" ><i class="fas fa-edit"></i></a> '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'('.$staff->username.') <span class="resetStaffPasswordGrand'.$staff->id.' text-warning" ></span>
                    </td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td> 
                    <td class="text-center"> <input type="checkbox" class="activeInactiveStaffsList" id="activeInactiveStaffsList" name="activeInactiveStaffsList[ ]" value="'.$staff->id.'"> ';
                    if($staff->status==trim('Active')){ 
                      $output.='<div class="media-body">
                          <div class="text-success text-small"><i class="fas fa-user-check"></i> Active</div>
                        </div>';
                    }else {
                    	$output.='<div class="media-body">
                          <div class="text-warning text-small"><i class="fas fa-user-times"></i> Inactive</div>
                        </div>';
                    }
                    $output.='</td>                        
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function searchStaffsAdmin($searchItem,$branch){
		$this->db->order_by('fname','ASC');
		$this->db->where('usertype!=','Student');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		$this->db->like('username',$searchItem);
		$this->db->or_where('usertype!=','Student');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		$this->db->like('fname', $searchItem);
		$this->db->or_where('usertype!=','Student');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		$this->db->like('email', $searchItem);

		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>UserType</th>
                <th>Mobile</th>
                <th>Branch</th>
                <th><div class="dropdown">
                		All <input type="checkbox" id="selectallstaffs" onClick="selectAllStaffs()"> Action
                        <a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a> 
                        <div class="dropdown-menu">
                        	<a href="#" class="dropdown-item has-icon text-danger deleteCustomStaffs" name="" value="" id="deleteCustomStaffs"><i class="fas fa-trash-alt"></i> Delete</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-warning InactiveCustomStaffs" name="" value="" id="InactiveCustomStaffs"><i class="fas fa-times-circle"></i> Inactive</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-info resetPasswordCustomStaffs" name="" value="" id="resetPasswordCustomStaffs"><i class="fas fa-key"></i> Reset Password</a>
                      	</div>
                    </div>
                </th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    <td><a href="#" id="edit_staff" class="text-success" value="'.$id.'" ><i class="fas fa-edit"></i></a> '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'('.$staff->username.') <span class="resetStaffPasswordGrand'.$staff->id.' text-warning" ></span>
                    </td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td> 
                    <td class="text-center"> <input type="checkbox" class="activeInactiveStaffsList" id="activeInactiveStaffsList" name="activeInactiveStaffsList[ ]" value="'.$staff->id.'"> ';
                    if($staff->status==trim('Active')){ 
                      $output.='<span class="badge badge-light">Active</span>';
                    }else {
                    	$output.='<span class="badge badge-warning">Not Active </span>';
                    }
                    $output.='</td>                        
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function getEmployees_incident_report($usertype,$postData=null){

     $response = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (fname like '%".$searchValue."%' or mname like '%".$searchValue."%' or lname like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
     $records = $this->db->get('users')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
    $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
     $records = $this->db->get('users')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where('usertype!=','Student');
     $records = $this->db->get('users')->result();
     $data = array();
     foreach($records as $record ){
     	$id=$record->username;
     	$usergroupP="SELECT * from usergrouppermission where usergroup=? and tableName=? and allowed=? order by id ASC ";
     	$usergroupPermission=$this->db->query($usergroupP,array($usertype,'Staff','staffDE'));
     	if($usergroupPermission->num_rows()>0){
	        $data[] = array( 
	           "fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname .'
	           <a href="#" id="report_staff_incident" class="btn btn-default" value="'.$id.'" data-toggle="modal" data-target="#report_thisstaff_incident"> <i class="fas fa-edit"></i>Report Incident</a>',
	           "usertype"=>$record->usertype,
	           "mobile"=>$record->mobile,
	        ); 
	    }else{
	    	$data[] = array( 
	           "fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname,
	           "usertype"=>$record->usertype,
	           "mobile"=>$record->mobile,
	        ); 
	    }
     }

     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );

     return $response; 
   	}
   	function getEmployees_incident_report_branch($usertype,$branch,$postData=null){

     	$response = array();

	    ## Read value
	    $draw = $postData['draw'];
	    $start = $postData['start'];
	    $rowperpage = $postData['length']; // Rows display per page
	    $columnIndex = $postData['order'][0]['column']; // Column index
	    $columnName = $postData['columns'][$columnIndex]['data']; // Column name
	    $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
	    $searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
        	$searchQuery = " (fname like '%".$searchValue."%' or mname like '%".$searchValue."%' or lname like'%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->select('count(*) as allcount');
     	$this->db->where(array('isapproved'=>'1'));
     	$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
     	$records = $this->db->get('users')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where(array('isapproved'=>'1'));
    	$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
     	$records = $this->db->get('users')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where(array('isapproved'=>'1'));
     	$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status'=>'Active'));
		$this->db->where('usertype!=','Student');
     	$records = $this->db->get('users')->result();
     	$data = array();
     	foreach($records as $record ){
     		$id=$record->username;
     		$usergroupP="SELECT * from usergrouppermission where usergroup=? and tableName=? and allowed=? order by id ASC ";
     		$usergroupPermission=$this->db->query($usergroupP,array($usertype,'Staff','staffDE'));
     		if($usergroupPermission->num_rows()>0){
	        	$data[] = array( 
	           		"fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname .'
	           		<a href="#" id="report_staff_incident" class="btn btn-default" value="'.$id.'" data-toggle="modal" data-target="#report_thisstaff_incident"> <i class="fas fa-edit"></i>Report Incident</a>',
	           		"usertype"=>$record->usertype,
	           	"mobile"=>$record->mobile,
	        	); 
	    	}else{
	    		$data[] = array( 
		           	"fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname,
		           	"usertype"=>$record->usertype,
		           	"mobile"=>$record->mobile,
		        ); 
		    }
	    }
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
   	}
	function getEmployees($usertype,$postData=null){

     $response = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (fname like '%".$searchValue."%' or mname like '%".$searchValue."%' or lname like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
     $records = $this->db->get('users')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
    $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
     $records = $this->db->get('users')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where('usertype!=','Student');
     $records = $this->db->get('users')->result();
     $data = array();
     foreach($records as $record ){
     	$id=$record->id;
     	$usergroupPermission=$this->db->query("SELECT * from usergrouppermission where usergroup='$usertype' and tableName='Staff' and allowed='staffDE' order by id ASC ");
     	if($usergroupPermission->num_rows()>0){
	        $data[] = array( 
	           "fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname .' ('.$record->username.')
	           <div class="table-links">
	           <a href="#" id="edit_staff" class="text-success" value="'.$id.'" data-toggle="modal" data-target="#editStaffProfile">
	                    <i class="fas fa-edit"></i>Edit</a><div class="bullet"></div>
	           <a href="#" class="text-warning InactiveCustomStaffs" name="" value="'.$id.'" id="InactiveCustomStaffs"><i class="fas fa-times-circle"></i> Inactive</a>
	           <div class="bullet"></div>
	           <a href="#" class="text-info resetPasswordCustomStaffs" name="" value="'.$id.'" id="resetPasswordCustomStaffs"><i class="fas fa-key"></i> Reset Password</a>
	           <div class="bullet"></div>
	            <a href="#" class="text-danger deleteCustomStaffs" name="" value="'.$id.'" id="deleteCustomStaffs"><i class="fas fa-trash-alt"></i> Delete </a></div>',
	           "usertype"=>$record->usertype,
	           "mobile"=>$record->mobile,
	           "branch"=>$record->branch,
	           "status"=>' <i class="fas fa-user-check"></i> '.$record->status
	        ); 
	    }else{
	    	$data[] = array( 
	           "fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname.'('.$record->username.')',
	           "usertype"=>$record->usertype,
	           "mobile"=>$record->mobile,
	           "branch"=>$record->branch,
	           "status"=>' <i class="fas fa-user-check"></i> '.$record->status
	        ); 
	    }
     }

     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );

     return $response; 
   	}
   	function getEmployees_filter($usertype,$branch,$postData=null){

     $response = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (fname like '%".$searchValue."%' or mname like '%".$searchValue."%' or lname like'%".$searchValue."%' ) ";
     }

     	## Total number of records without filtering
     	$this->db->select('count(*) as allcount');
     	$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		$this->db->not_like('usertype','Student');
     $records = $this->db->get('users')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
    $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
		$this->db->where(array('branch'=>$branch));
     $records = $this->db->get('users')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where('usertype!=','Student');
		$this->db->where(array('branch'=>$branch));
     $records = $this->db->get('users')->result();
     $data = array();
     foreach($records as $record ){
     	$id=$record->id;
     	$usergroupPermission=$this->db->query("SELECT * from usergrouppermission where usergroup='$usertype' and tableName='Staff' and allowed='staffDE' order by id ASC ");
     	if($usergroupPermission->num_rows()>0){
	        $data[] = array( 
	            "fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname .' ('.$record->username.')
	           <div class="table-links">
	           <a href="#" id="edit_staff" class="text-success" value="'.$id.'" data-toggle="modal" data-target="#editStaffProfile">
	                    <i class="fas fa-edit"></i>Edit</a><div class="bullet"></div>
	           <a href="#" class="text-warning InactiveCustomStaffs" name="" value="'.$id.'" id="InactiveCustomStaffs"><i class="fas fa-times-circle"></i> Inactive</a>
	           <div class="bullet"></div>
	           <a href="#" class="text-info resetPasswordCustomStaffs" name="" value="'.$id.'" id="resetPasswordCustomStaffs"><i class="fas fa-key"></i> Reset Password</a>
	           <div class="bullet"></div>
	            <a href="#" class="text-danger deleteCustomStaffs" name="" value="'.$id.'" id="deleteCustomStaffs"><i class="fas fa-trash-alt"></i> Delete </a></div>',
	           "usertype"=>$record->usertype,
	           "mobile"=>$record->mobile,
	           "branch"=>$record->branch,
	           "status"=>' <i class="fas fa-user-check"></i> '.$record->status
	        ); 
	    }else{
	    	$data[] = array( 
	           "fname"=>''.$record->fname .' '.$record->mname.' '.$record->lname.'('.$record->username.')',
	           "usertype"=>$record->usertype,
	           "mobile"=>$record->mobile,
	           "branch"=>$record->branch,
	           "status"=>' <i class="fas fa-user-check"></i> '.$record->status
	        ); 
	    }
     }

     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );

     return $response; 
   	}
	function fetch_staffs(){
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>UserType</th>
                <th>Mobile</th>
                <th>Branch</th>
                <th><div class="dropdown">
                		All <input type="checkbox" id="selectallstaffs" onClick="selectAllStaffs()"> Action
                        <a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a> 
                        <div class="dropdown-menu">
                        	<a href="#" class="dropdown-item has-icon text-danger deleteCustomStaffs" name="" value="" id="deleteCustomStaffs"><i class="fas fa-trash-alt"></i> Delete</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-warning InactiveCustomStaffs" name="" value="" id="InactiveCustomStaffs"><i class="fas fa-times-circle"></i> Inactive</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-info resetPasswordCustomStaffs" name="" value="" id="resetPasswordCustomStaffs"><i class="fas fa-key"></i> Reset Password</a>
                      	</div>
                    </div>
                </th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    <td><a href="#" id="edit_staff" class="text-success" value="'.$id.'" >
                    <i class="fas fa-edit"></i></a> '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'('.$staff->username.') <span class="resetStaffPasswordGrand'.$staff->id.' text-warning" ></span>
                    </td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td> 
                    <td class="text-center"> 
                    <div class="media-body">
                    <div class="text-success text-small">
                    <input type="checkbox" class="activeInactiveStaffsList" id="activeInactiveStaffsList" name="activeInactiveStaffsList[ ]" value="'.$staff->id.'"> ';
                    if($staff->status==trim('Active')){ 
                      $output.=' <i class="fas fa-user-check"></i> Active ';
                    }else {
                    	$output.='<i class="fas fa-user-times"></i> Inactive';
                    }
                    $output.='</div></div></td>                        
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchFinancemystaffs($branch,$myDivision,$usertype){
		$this->db->where(array('status2'=>$myDivision));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>UserName</th>
                <th>UserType</th>
                <th>Name</th>
                <th>Mobile</th>
                <th>Branch</th>
                <th>Status</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$usergroupPermission=$this->db->query("SELECT * from usergrouppermission where usergroup='$usertype' and allowed='Staff' order by id ASC ");
       			$id=$staff->id;
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    <td>'. $staff->username.'';
                    if($usergroupPermission->num_rows()>0){
                        $output.='<div class="table-links">
                            <a href="#" id="delete_staff" class="text-danger" value="'.$id.'" ><i class="fa fa-trash"></i> </a>
                            <div class="bullet"></div>
                            <a href="#" id="edit_staff" class="text-success" value="'.$id.'" ><i class="fa fa-pen"></i></a>
                        </div>';
                    }
                    $output.='</td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'';
                    if($usergroupPermission->num_rows()>0){
                    	$output.='<div class="table-links">
             				<a href="#" class="resetStaffPassword text-warning" id="'.$staff->id.'">Reset Password</a>
            			</div>';
            		}
                    $output.='</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td> 
                    <td> ';
                    if($usergroupPermission->num_rows()>0){
	                    if($staff->status==trim('Active')){ 
	                      $output.='<button type="submit" name="inactive" value="'.$staff->id.'" class="btn btn-success inactive">'.$staff->status.'
	                      </button>';
	                    }else {
	                       $output.='<button type="submit" name="active" value="'.$staff->id.'" class="btn btn-danger active">
	                        '.$staff->status.'
	                      </button>';
	                    }
	                }
                    $output.='</td>                        
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchstaffsTasks(){
		$this->db->order_by('stafftasks.id','DESC');
		$this->db->select('stafftasks.created_by,stafftasks.task_type,stafftasks.due_date, stafftasks.id, stafftasks.task_name, stafftasks.task_for, stafftasks.date_created,users.fname,users.mname,users.lname ');
        $this->db->from('stafftasks');
        $this->db->join('users', 
            'users.username = stafftasks.created_by');
        $query = $this->db->get();
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="card card-body">
            <div class="table-responsive">
              <table class="table table-striped">
                <tr>
                  <th>Task Name</th>
                  <th>Task For</th>
                  <th>Progress</th>
                  <th>Due Date</th>
                  <th>Created By</th>
                  <th>Date Created</th>
                  <th>Action</th>
            </tr>';
       		foreach ($query->result() as $staff) {
   				$output.=' <tr class="deletedTask'.$staff->id.'">
              	<td>'.$staff->task_name.'(<span class="text-info">'.$staff->task_type.'</span>)</td>
              	<td>'.$staff->task_for.'</td>
              	<td class="align-middle">
                	<div class="progress" data-height="4" data-toggle="tooltip" title="100%">
                  	<div class="progress-bar bg-success" data-width="100"></div>
                	</div>
              	</td>';
              	if($staff->due_date=='0000-00-00'){
              		$output.='<td>No</td>';
              	}else{
              		$output.='<td>'.$staff->due_date.'</td>';
              	}
              	$output.='<td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</td>
              	<td>'.$staff->date_created.'</td>
              	<td>';
              	if($_SESSION['usertype']===trim('superAdmin') || $_SESSION['username'] == $staff->created_by)
              	{
                    $output.='<a class="btn btn-primary btn-action mr-1" data-toggle="modal" data-target="#editTaskFormModal" id="editThisTask" value="'.$staff->id.'" type="submit"> <i class="fas fa-pencil-alt"></i> </a>
                    <a class="btn btn-danger btn-action" id="deleteThisTask" value="'.$staff->id.'" type="submit"><i class="fas fa-trash"></i></a>';
                }else{
                	$output.='<button class="btn btn-primary btn-action mr-1" disabled="disabled" type="submit"> 
                	<i class="fas fa-pencil-alt"></i> </button>
                    <button class="btn btn-danger btn-action" disabled="disabled" type="submit">
                    <i class="fas fa-trash"></i></button>';
                }
                $output.='</td>
                </tr> ';
       		}
       		$output.=' </table>
                </div>
            </div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No tasks found.
            </div></div>';
		}
		return $output;
	}
	function searchTasks($searchItem){
		$this->db->order_by('id','DESC');
		$this->db->like('task_name',$searchItem);
		$this->db->or_like('task_for', $searchItem);
		$this->db->order_by('stafftasks.id','DESC');
		$this->db->select('stafftasks.created_by,stafftasks.due_date, stafftasks.id, stafftasks.task_name, stafftasks.task_for, stafftasks.date_created,users.fname,users.mname,users.lname ');
        $this->db->from('stafftasks');
        $this->db->join('users', 
            'users.username = stafftasks.created_by');
        $query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="card card-body">
            <div class="table-responsive">
              <table class="table table-striped">
                <tr>
                  <th>Task Name</th>
                  <th>Task For</th>
                  <th>Progress</th>
                  <th>Due Date</th>
                  <th>Created By</th>
                  <th>Date Created</th>
                  <th>Action</th>
            </tr>';
       		foreach ($query->result() as $staff) {
   				$output.=' <tr class="deletedTask'.$staff->id.'">
              	<td>'.$staff->task_name.'</td>
              	<td>'.$staff->task_for.'</td>
              	<td class="align-middle">
                	<div class="progress" data-height="4" data-toggle="tooltip" title="100%">
                  	<div class="progress-bar bg-success" data-width="100"></div>
                	</div>
              	</td>
              	<td>'.$staff->due_date.'</td>
              	<td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</td>
              	<td>'.$staff->date_created.'</td>
              	<td>';
              	if($_SESSION['usertype']===trim('superAdmin') || $_SESSION['username'] == $staff->created_by)
              	{
                    $output.='<a class="btn btn-primary btn-action mr-1" data-toggle="modal" data-target="#editTaskFormModal" id="editThisTask" value="'.$staff->id.'" type="submit"> <i class="fas fa-pencil-alt"></i> </a>
                    <a class="btn btn-danger btn-action" id="deleteThisTask" value="'.$staff->id.'" type="submit"><i class="fas fa-trash"></i></a>';
                }else{
                	$output.='<button class="btn btn-primary btn-action mr-1" disabled="disabled" type="submit"> 
                	<i class="fas fa-pencil-alt"></i> </button>
                    <button class="btn btn-danger btn-action" disabled="disabled" type="submit">
                    <i class="fas fa-trash"></i></button>';
                }
                $output.='</td>
                </tr> ';
       		}
       		$output.=' </table>
                </div>
            </div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No tasks found.
            </div></div>';
		}
		return $output;
	}
	function fetch_usersTask_progress($max_year,$taskName){
		$this->db->order_by('stafftasks_report.id','DESC');
		$this->db->where('taskName',$taskName);
		$this->db->select('stafftasks_report.task_response,stafftasks_report.staff_name, stafftasks_report.taskName, stafftasks_report.date_submitted, users.fname, users.mname, users.lname,users.profile ');
        $this->db->from('stafftasks_report');
        $this->db->join('users', 
            'users.username = stafftasks_report.staff_name');
        $query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row"> ';
       		foreach ($query->result() as $staff) {
       			$output.='<div class="col-lg-12 col-12"><div class="dropdown-divider"></div>
       			<div class="support-ticket media">';
       			if($staff->profile == ''){
					$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
				}else{
					$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2">';
				}
   				$output.='<span class="font-weight-bold">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span></div>
                  <p class="my-11">'.$staff->task_response.'
                  <small class="text-muted pull-right">Task Name <span class="font-weight-bold font-13"> <u>'.$staff->taskName.'</u> </span> Submitted on '.$staff->date_submitted.'</small></p>
                  </div>';
       		}
       		$output.=' </div>';
		}else{
			$output .='<div class="dropdown-divider"></div>
			<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No progress found under '.$taskName.'
            </div></div>';
		}
		return $output;
	}
	function fetch_usersTask_progress_branch($max_year,$taskName,$branch){
		$this->db->order_by('stafftasks_report.id','DESC');
		$this->db->where('taskName',$taskName);
		$this->db->where('branch',$branch);
		$this->db->select('stafftasks_report.task_response,stafftasks_report.staff_name, stafftasks_report.taskName, stafftasks_report.date_submitted, users.fname, users.mname, users.lname,users.profile ');
        $this->db->from('stafftasks_report');
        $this->db->join('users', 
            'users.username = stafftasks_report.staff_name');
        $query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row"> ';
       		foreach ($query->result() as $staff) {
       			$output.='<div class="col-lg-12 col-12"><div class="dropdown-divider"></div>
       			<div class="support-ticket media">';
       			if($staff->profile == ''){
					$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
				}else{
					$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2">';
				}
   				$output.='<span class="font-weight-bold">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span></div>
                  <p class="my-11">'.$staff->task_response.'
                  <small class="text-muted pull-right">Task Name <span class="font-weight-bold font-13"> <u>'.$staff->taskName.'</u> </span> Submitted on '.$staff->date_submitted.'</small></p>
                  </div>';
       		}
       		$output.=' </div>';
		}else{
			$output .='<div class="dropdown-divider"></div>
			<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No progress found under '.$taskName.'
            </div></div>';
		}
		return $output;
	}
	function fetch_my_tasks($max_year,$userType,$user){
		$this->db->order_by('id','DESC');
		$this->db->group_by('task_name');
		$this->db->where('task_for',$userType);
		/*$this->db->where('academicyear',$max_year);*/
        $query = $this->db->get('stafftasks');
		$output='';
		if($query->num_rows()>0){
            $dateToday=date('Y-m-d');
       		foreach ($query->result() as $staff) {
       			$output.='<div class="card card-body">';
       			$task_name=$staff->task_name;
   				$output.=' <div class="support-ticket media pb-1 mb-3">
                    <div class="media-body ml-3">';
                    $queryCheck=$this->db->query("select * from stafftasks_report where taskName ='$task_name' and academicyear='$max_year' and staff_name='$user' ");
	              	if($queryCheck->num_rows()>0){
	              		foreach($queryCheck->result() as $row){
	              			$output.='<div class="badge badge-pill badge-success mb-1 float-right"><i class="fas fa-check-circle"></i> Done</div>
	              			<span class="font-weight-bold">Task Name </span>
		                    <a href="javascript:void(0)">'.$row->taskName.'</a>
		                    <p class="my-1">'.$row->task_response.'</p>
		                    <small class="text-muted">Submitted by <span class="font-weight-bold font-13">'.$row->staff_name.'</span> On '.$row->date_submitted.'</small> ';
	              		}
	              	}else{
	              		if($dateToday > $staff->due_date){
	              			$output.='<div class="mb-1 float-right">
	              			<a class="btn btn-danger btn-action mr-1" disabled="disabled" value="'.$staff->task_name.'" type="submit"> <i class="fas fa-times-circle"></i> Closed </a> </div>
	              				<span class="font-weight-bold">Due Date</span>
                      			<a href="javascript:void(0)">'.$staff->due_date.'</a>
                      			<p class="my-1">'.$staff->task_name.'</p>
                      			<small class="text-muted">Created by <span class="font-weight-bold font-13">'.$staff->created_by.'</span> On '.$staff->date_created.'</small>';
	              		}else{
	              			$output.='<div class="mb-1 float-right"> <a class="btn btn-primary btn-action mr-1" data-toggle="modal" data-target="#doTaskPage" id="doThisTask" value="'.$staff->task_name.'" type="submit"> <i class="fas fa-pencil-alt"></i> Do  Task </a></div>
	              				<span class="font-weight-bold">Due Date</span>
                      			<a href="javascript:void(0)">'.$staff->due_date.'</a>
                      			<p class="my-1">'.$staff->task_name.'</p>
                      			<small class="text-muted">Created by <span class="font-weight-bold font-13">'.$staff->created_by.'</span> On '.$staff->date_created.'</small> ';
	              		}
	              	}
                    $output.='
                    </div>
                  </div>
                </div>';
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No tasks found.
            </div></div>';
		}
		return $output;
	}
	function fetchThisTaskName($task_name,$max_year,$user){
		$output='';
		$this->db->where(array('task_name'=>$task_name));
		$query=$this->db->get('stafftasks');
		$queryCheck=$this->db->query("select * from stafftasks_report where taskName ='$task_name' and academicyear='$max_year' and staff_name='$user' ");
	    if($queryCheck->num_rows()>0){
	    	$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                <i class="fas fa-exclamation-triangle"> </i> This task is already submitted .
            </div></div>';
	    }else{
			foreach($query->result() as $taskName){
				$output.='<textarea class="form-control summernote-simple taskText" id="taskText" name="taskText" required>
	            </textarea>
	            <button class="btn btn-primary pull-right" value="'.$taskName->task_name.'" id="submitTask" type="button"> Submit</button>';
			}
		}
		return $output;
	}
	function edit_this_task($taskId){
		$output='';
		$this->db->where(array('id'=>$taskId));
		$query=$this->db->get('stafftasks');
		$usergroup=$this->db->query("SELECT * from usegroup group by uname order by uname ASC ");
		foreach($query->result() as $taskName){
			$output.='<form method="POST" id="submiteditedTask">
			<input type ="hidden" name="hiddenUpdatedTask" value="'.$taskId.'"> 
            <div class="row">
              <div class="form-group col-lg-3 col-6">
                <label>Task Name</label>
                <input type="text" class="form-control" name="editedtaskName" value="'.$taskName->task_name.'" required>
              </div>
              <div class="form-group col-lg-3 col-6">
                <label>Task For</label>
                <select class="form-control selectric" name="editedwhoseTask">';
                foreach($usergroup->result() as $usergroups){ 
                	$userName=$usergroups->uname;
                	if($userName==$taskName->task_for){
                		$output.='<option selected>'.$userName.'</<option>';
                	}else{
                		$output.='<option>'.$userName.'</<option>';	
                	}
                }
                $output.='</select>
              </div>
              <div class="form-group col-lg-3 col-6">
                 <label>Task Type</label>
                 <select class="form-control selectric" name="editTaskType" id="editTaskType" required="required">
                  <option> Task Type </option>';
                  $arrayType=array('Daily','Weekly','Monthly');
                  foreach($arrayType as $arrayTypes){
                  	if($taskName->task_type==$arrayTypes){
                  		$output.='<option selected>'.$arrayTypes.'</option> ';
                  	}else{
                  		$output.='<option>'.$arrayTypes.'</option> ';
                  	}
                  }
                  $output.='</select>
              	</div>
              <div class="form-group col-lg-3 col-6">
                 <label>Due Date</label>
                <input type="date" class="form-control" name="editeddueDate" value="'.$taskName->due_date.'">
              </div>
            </div>
            <button class="btn btn-primary pull-right" type="submit" id="saveEditedTasks"> Save Changes </button>
          </form>';
		}
		return $output;
	}
	function fetchstaffPhoneListAll($max_year){
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		if($query->num_rows()>0){
			$output.='<div class="row">';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$output.='<div class="col-12 col-sm-12 col-lg-6">
       			<div class="card profile-widget">
                  <div class="profile-widget-header">';
                  if($staff->profile == ''){
						$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 90px;width: 90px;" class="profile-widget-picture">';
					}else{
						$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 90px;width: 90px;" class="profile-widget-picture">';
					}
                    $output.='<div class="profile-widget-items">
                      <div class="profile-widget-item">
                        <div class="profile-widget-item-label">Mobile </div>
                        <div class="profile-widget-item-value">'.$staff->mobile.'</div>
                      </div>
                      <div class="profile-widget-item">
                        <div class="profile-widget-item-label">Branch</div>
                        <div class="profile-widget-item-value">'.$staff->branch.'</div>
                      </div>
                      <div class="profile-widget-item">
                        <div class="profile-widget-item-label">Status</div>
                        <div class="profile-widget-item-value"><span class="badge badge-success">'.$staff->status.'</span></div>
                      </div>
                    </div>
                  </div>
                  <div class="profile-widget-description pb-0">
                    <div class="profile-widget-name">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.' <div class="text-muted d-inline font-weight-normal">
                        <div class="slash"></div> '.$staff->usertype.'
                      </div>
                    </div>
                    '.$staff->biography.'
                  </div>
                </div>
                </div>';
       		}
       		$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchstaffPhoneList($branch,$myDivision,$max_year){
		$this->db->where('branch',$branch);
		$this->db->where('status2',$myDivision);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$query=$this->db->get('users');
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		if($query->num_rows()>0){
			$output.='<div class="row">';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$output.='<div class="col-12 col-sm-12 col-lg-6">
       			<div class="card profile-widget">
                  <div class="profile-widget-header">';
                  if($staff->profile == ''){
						$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 90px;width: 90px;" class="profile-widget-picture">';
					}else{
						$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 90px;width: 90px;" class="profile-widget-picture">';
					}
                    $output.='<div class="profile-widget-items">
                      <div class="profile-widget-item">
                        <div class="profile-widget-item-label">Mobile </div>
                        <div class="profile-widget-item-value">'.$staff->mobile.'</div>
                      </div>
                      <div class="profile-widget-item">
                        <div class="profile-widget-item-label">Branch</div>
                        <div class="profile-widget-item-value">'.$staff->branch.'</div>
                      </div>
                      <div class="profile-widget-item">
                        <div class="profile-widget-item-label">Status</div>
                        <div class="profile-widget-item-value"><span class="badge badge-success">'.$staff->status.'</span></div>
                      </div>
                    </div>
                  </div>
                  <div class="profile-widget-description">
                    <div class="profile-widget-name">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.' <div class="text-muted d-inline font-weight-normal">
                        <div class="slash"></div> '.$staff->usertype.'
                      </div>
                    </div>
                    '.$staff->biography.'
                  </div>
                </div>
                </div>'; 
       		}
       		$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetch_mystaffsAdmin($branch,$usertype){
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>UserType</th>
                <th>Mobile</th>
                <th>Branch</th>
                <th><div class="dropdown">
                		All <input type="checkbox" id="selectallstaffs" onClick="selectAllStaffs()"> Action
                        <a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a> 
                        <div class="dropdown-menu">
                        	<a href="#" class="dropdown-item has-icon text-danger deleteCustomStaffs" name="" value="" id="deleteCustomStaffs"><i class="fas fa-trash-alt"></i> Delete</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-warning InactiveCustomStaffs" name="" value="" id="InactiveCustomStaffs"><i class="fas fa-times-circle"></i> Inactive</a>
                        	<div class="dropdown-divider"></div>
                        	<a href="#" class="dropdown-item has-icon text-info resetPasswordCustomStaffs" name="" value="" id="resetPasswordCustomStaffs"><i class="fas fa-key"></i> Reset Password</a>
                      	</div>
                    </div>
                </th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$usergroupPermission=$this->db->query("SELECT * from usergrouppermission where usergroup='$usertype' and tableName='Staff' and allowed='staffDE' order by id ASC ");
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>';
                    if($usergroupPermission->num_rows()>0){
	                    $output.='<td><a href="#" id="edit_staff" class="text-success" value="'.$id.'" ><i class="fas fa-edit"></i></a> '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'('.$staff->username.') <span class="resetStaffPasswordGrand'.$staff->id.' text-warning" ></span>
	                    </td>';
	                }else{
	                	$output.='<td><a href="#" id="edit_staff" class="text-success" value="'.$id.'" ><i class="fas fa-edit"></i></a> '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'('.$staff->username.') <span class="resetStaffPasswordGrand'.$staff->id.' text-warning" ></span>
	                    </td>';
	                }
                    $output.='<td>'.$staff->usertype.'</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td>';
                    if($usergroupPermission->num_rows()>0){
	                    $output.='<td class="text-center"> <input type="checkbox" class="activeInactiveStaffsList" id="activeInactiveStaffsList" name="activeInactiveStaffsList[ ]" value="'.$staff->id.'"> ';
	                    if($staff->status==trim('Active')){ 
	                      $output.='<span class="badge badge-light">Active</span>';
	                    }else {
	                    	$output.='<span class="badge badge-warning">Not Active </span>';
	                    }
	                }else{
	                	$output.='<td class="text-center"> <input type="checkbox" class="activeInactiveStaffsList" id="activeInactiveStaffsList" name="activeInactiveStaffsList[ ]" value="'.$staff->id.'"> ';
	                    if($staff->status==trim('Active')){ 
	                      $output.='<span class="badge badge-light">Active</span>';
	                    }else {
	                    	$output.='<span class="badge badge-warning">Not Active </span>';
	                    }
	                }
                    $output.='</td>                        
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetch_mystaffs($branch,$myDivision,$usertype){
		$this->db->where(array('status2'=>$myDivision));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>UserName</th>
                <th>UserType</th>
                <th>Name</th>
                <th>Mobile</th>
                <th>Branch</th>
                <th>Status</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$usergroupPermission=$this->db->query("SELECT * from usergrouppermission where usergroup='$usertype' and tableName='Staff' and allowed='staffDE' order by id ASC ");
       			$id=$staff->id;
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    <td>'. $staff->username.'';
                    if($usergroupPermission->num_rows()>0){
                        $output.='<div class="table-links">
                            <a href="#" id="delete_staff" class="text-danger" value="'.$id.'" ><i class="fa fa-trash"></i> </a>
                            <div class="bullet"></div>
                            <a href="#" id="edit_staff" class="text-success" value="'.$id.'" ><i class="fa fa-edit"></i></a>
                        </div>';
                    }
                    $output.='</td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'';
                    if($usergroupPermission->num_rows()>0){
                    	$output.='<div class="table-links">
             				<a href="#" class="resetStaffPassword text-warning" id="'.$staff->id.'">Reset Password</a>
            			</div>';
            		}
                    $output.='</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td> 
                     ';
                    if($usergroupPermission->num_rows()>0){
                    	$output.='<td> ';
	                    if($staff->status==trim('Active')){ 
	                      $output.='<button type="submit" name="inactive" value="'.$staff->id.'" class="btn btn-success inactive">'.$staff->status.'
	                      </button>';
	                    }else {
	                       $output.='<button type="submit" name="active" value="'.$staff->id.'" class="btn btn-danger active">
	                        '.$staff->status.'
	                      </button>';
	                    }
	                    $output.='</td> ';
	                }else{
	                	$output.='<td> <div class="card card-header"> ';
	                    if($staff->status==trim('Active')){ 
	                      $output.='<button type="submit" disabled="disabled" value="'.$staff->id.'" class="btn btn-success ">'.$staff->status.'
	                      </button>';
	                    }else {
	                       $output.='<button type="submit" disabled="disabled" value="'.$staff->id.'" class="btn btn-danger">
	                        '.$staff->status.'
	                      </button>';
	                    }
	                    $output.='</div></td> ';
	                }
                    $output.='                       
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchStaffsForExperience(){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->group_by('username');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No</th>
                <th>Full Name</th>
                <th>Mobile</th>
                <th>Gender</th>
                <th>Registration Date</th>
                <th>Branch</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                        <div class="table-links">
                            <a href="#" id="preparexp" class="text-info preparexp" value="'.$id.'" >view experience </a>
                        </div>
                    </td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->gender.'</td>
                    <td>'.$staff->dateregister.'</td>
                    <td>'.$staff->branch.'</td> ';
                    $output.='                        
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchMyStaffsForExperience($branch){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->group_by('username');
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No</th>
                <th>Full Name</th>
                <th>Mobile</th>
                <th>Gender</th>
                <th>Registration Date</th>
                <th>Branch</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                        <div class="table-links">
                            <a href="#" id="preparexp" class="text-info preparexp" value="'.$id.'" >view experience </a>
                        </div>
                    </td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->gender.'</td>
                    <td>'.$staff->dateregister.'</td>
                    <td>'.$staff->branch.'</td> ';
                    $output.='                        
                </tr>';
                $no++; 
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchStaffsToAttendanceSuper($branch,$today){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row"> <div class="col-lg-4 col-6">
			    <div class="form-group">
					<input type="date" required="required" class="form-control" id="todayDate"/> 
				</div>
		    </div>
		    <div class="col-lg-4 col-6">
		    	<input type="number" class="form-control" placeholder="Late in Minute" id="lateMinute"/>
		    </div>
			</div>';
			$output.='<div class="">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>UserType</th>
                <th>Mobile</th>
                <th>Branch</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$queryChk=$this->db->query("select * from attendance where stuid='$id' and absentdate='$today' ");
       			if($queryChk->num_rows()>0){
       				$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
	                <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
	                <a href="#" class="atteInfo"><i class="fas fa-check-circle"></i></a>
	                </td>
	                <td>'.$staff->usertype.'</td>
	                <td>'.$staff->mobile.'</td>
	                <td>'.$staff->branch.'</td>                       
	                </tr>';
	                $no++;
       			}else{
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>                    
                    <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                    <div class="table-links">
                            <a href="#" id="absentStaff" class="text-danger" value="'.$id.'" >Absent </a>
                            <div class="bullet"></div>
                            <a href="#" id="lateStaff" class="text-warning" value="'.$id.'" >Late</a>
                            <div class="bullet"></div>
                            <a href="#" id="permissionStaff" class="text-success" value="'.$id.'" >Permission</a>
                        </div>
                    </td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td>                       
                	</tr>';
                	$no++; 
            	}
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchStaffsToAttendanceAccessBranch($today,$mydivision){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row"> <div class="col-lg-4">
			    <div class="form-group">
					<input type="date" required="required" class="form-control" id="todayDate"/> 
				</div>
		    </div>
		    <div class="col-lg-4">
		    	<input type="number" class="form-control" placeholder="Late in Minute" id="lateMinute"/>
		    </div>
			</div>';
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>UserType</th>
                <th>Mobile</th>
                <th>Branch</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$queryChk=$this->db->query("select * from attendance where stuid='$id' and absentdate='$today' ");
       			if($queryChk->num_rows()>0){
       				$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
	                
	                <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
	                <a href="#" class="atteInfo"><i class="fas fa-check-circle"></i></a>
	                </td>
	                <td>'.$staff->usertype.'</td>
	                <td>'.$staff->mobile.'</td>
	                <td>'.$staff->branch.'</td>                       
	                </tr>';
	                $no++;
       			}else{
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    
                    <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                    <div class="table-links">
                            <a href="#" id="absentStaff" class="text-danger" value="'.$id.'" >Absent </a>
                            <div class="bullet"></div>
                            <a href="#" id="lateStaff" class="text-warning" value="'.$id.'" >Late</a>
                            <div class="bullet"></div>
                            <a href="#" id="permissionStaff" class="text-success" value="'.$id.'" >Permission</a>
                        </div>
                    </td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td>                       
                	</tr>';
                	$no++; 
            	}
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchStaffsToAttendance($branch,$today,$mydivision){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status2'=>$mydivision));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row"> 
				<div class="col-lg-4 col-6">
				    <div class="form-group">
						<input type="date" required="required" class="form-control" id="todayDate"/> 
					</div>
			    </div>
			    <div class="col-lg-4 col-6">
			    	<input type="number" class="form-control" placeholder="Late in Minute" id="lateMinute"/>
			    </div>
			</div>';
			$output.='<div class="">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>UserType</th>
                <th>Mobile</th>
                <th>Branch</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->id;
       			$queryChk=$this->db->query("select * from attendance where stuid='$id' and absentdate='$today' ");
       			if($queryChk->num_rows()>0){
       				$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
	                
	                <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
	                <a href="#" class="atteInfo"><i class="fas fa-check-circle"></i></a>
	                </td>
	                <td>'.$staff->usertype.'</td>
	                <td>'.$staff->mobile.'</td>
	                <td>'.$staff->branch.'</td>                       
	                </tr>';
	                $no++;
       			}else{
       			$output.='<tr class="delete_staff'.$id.'">
                    <td>'.$no.'.</td>
                    
                    <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                    <div class="table-links">
                            <a href="#" id="absentStaff" class="text-danger" value="'.$id.'" >Absent </a>
                            <div class="bullet"></div>
                            <a href="#" id="lateStaff" class="text-warning" value="'.$id.'" >Late</a>
                            <div class="bullet"></div>
                            <a href="#" id="permissionStaff" class="text-success" value="'.$id.'" >Permission</a>
                        </div>
                    </td>
                    <td>'.$staff->usertype.'</td>
                    <td>'.$staff->mobile.'</td>
                    <td>'.$staff->branch.'</td>                       
                	</tr>';
                	$no++; 
            	}
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetch_teachers(){
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->like('usertype','Teacher');
		$this->db->order_by('id','random()');
		$this->db->limit('4');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_blogs(){
		$this->db->select('*');
		$this->db->from('blogs');
		$this->db->join('users',
		'users.username=blogs.postby');
		$query = $this->db->get();
        return $query->result();
	}
	function fetch_ViewBlogs($title){
		$this->db->select('*');
		$this->db->from('blogs');
		$this->db->join('users',
		'users.username=blogs.postby');
		$this->db->where('ntitle',$title);
		$query = $this->db->get();
        return $query->result();
	}
	function applyjobsnow($title){
		$this->db->where('vid',$title);
		$query = $this->db->get('vacancy');
        return $query->result();
	}
	function fetch_vacancy(){
		$this->db->select('*');
		$this->db->from('vacancy');
		$this->db->join('users',
		'users.username=vacancy.postby');
		$query = $this->db->get();
        return $query->result();
	}
	function fetch_all_teachers(){
		$this->db->group_by('username');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->like('usertype','Teacher');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_students($max_year){
		$this->db->order_by('fname','DESC');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_inactivestudents_gs($max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Inactive'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('usertype','Student');
		$query=$this->db->get('users');
		return $query;
	}
	function fecth_student_toregister($id,$yearDropped,$max_year,$username){
		$output='';
		$queryCheck=$this->db->query("select * from users where username='$username' and academicyear='$max_year' and status='Active' ");
		if($queryCheck->num_rows()<1 ){
			$queryGrade=$this->db->query("select grade from users where grade!='' group by grade order by grade ASC ");
			$queryYear=$this->db->query("select year_name from academicyear group by year_name order by year_name DESC ");
	        $queryBranch=$this->db->query("select name from branch group by name order by name ASC ");
			$output.='<form method="POST" id="registerDroppedStudent">
			<input type="hidden" name="register_student_id" id="register_student_id" value="'.$id.'">
			<input type="hidden" name="register_student_year" id="register_student_year" value="'.$yearDropped.'">
			<small class="text-info"><i class="fas fa-check-circle"></i> Unarchive dropped students does`t affect Rank and other reports, if dropped year and re-registered year are not the same.</small>
			<div class="row">';
			if($yearDropped==$max_year){
				$queryUser=$this->db->query("select grade,academicyear,branch from users where id='$id' and academicyear='$max_year' ");
				foreach($queryUser->result() as $row){
					$output.='
					<div class="form-group col-lg-4 col-6">
		            	<label>Select Year</label>
		            	<select class="form-control" id="register_on_year" name="register_on_year" required>
		            	<option></option>';
		                if($queryYear->num_rows()>0){
		                	foreach($queryYear->result() as $yearname) {
		                		if($yearname->year_name==$row->academicyear){
		                			$output.='<option value="'.$yearname->year_name.'" selected="selected">'.$row->academicyear.'</option>';
		                		}else{
		                			$output.='<option value="'.$yearname->year_name.'">'.$yearname->year_name.'</option>';
		                		}
		                		
		                	}
		                }
		                $output.='</select>
		            </div>
		            <div class="form-group col-lg-4 col-6">
		            	<label>Select Branch</label>
		            	<select class="form-control" id="register_on_branch" name="register_on_branch" required>
		            	<option></option>';
		                if($queryBranch->num_rows()>0){
		                	foreach($queryBranch->result() as $branchName) {
		                		if(trim(ucfirst(strtolower($branchName->name))) ==trim(ucfirst(strtolower($row->branch)))){
		                			$output.='<option value="'.$branchName->name.'" selected="selected">'.$branchName->name.'</option>';
		                		}else{
		                			$output.='<option value="'.$branchName->name.'">'.$branchName->name.'</option>';
		                		}
		                	}
		                }
		                $output.='</select>
		            </div>
		            <div class="form-group col-lg-4 col-12">
		            	<label>Select Grade</label>
		            	<select class="form-control" id="register_on_grade" name="register_on_grade" required>
		            	<option></option>';
		                if($queryGrade->num_rows()>0){
		                	foreach($queryGrade->result() as $gradeName) {
		                		if($gradeName->grade==$row->grade){
		                			$output.='<option value="'.$gradeName->grade.'" selected="selected">'.$row->grade.'</option>';
		                		}else{
		                			$output.='<option value="'.$gradeName->grade.'">'.$gradeName->grade.'</option>';
		                		}
		                	}
		                }
		                $output.='</select>
		            </div>';
		        }
			}else{
	    		$output.='
				<div class="form-group col-lg-4 col-6">
	            	<label>Select Year</label>
	            	<select class="form-control" id="register_on_year" name="register_on_year" required>';
	                if($queryYear->num_rows()>0){
	                	foreach($queryYear->result() as $yearname) {
	                		$output.='<option value="'.$yearname->year_name.'">'.$yearname->year_name.'</option>';
	                	}
	                }
	                $output.='</select>
	            </div>
	            <div class="form-group col-lg-4 col-6">
	            	<label>Select Branch</label>
	            	<select class="form-control" id="register_on_branch" name="register_on_branch" required>
	            	<option></option>';
	                if($queryBranch->num_rows()>0){
	                	foreach($queryBranch->result() as $branchName) {
	                		$output.='<option value="'.$branchName->name.'">'.$branchName->name.'</option>';
	                	}
	                }
	                $output.='</select>
	            </div>
	            <div class="form-group col-lg-4 col-12">
	            	<label>Select Grade</label>
	            	<select class="form-control" id="register_on_grade" name="register_on_grade" required>
	            	<option></option>';
	                if($queryGrade->num_rows()>0){
	                	foreach($queryGrade->result() as $gradeName) {
	                		$output.='<option value="'.$gradeName->grade.'">'.$gradeName->grade.'</option>';
	                	}
	                }
	                $output.='</select>
	            </div>';
	        }
	        $output.='</div>
	        <button class="btn btn-info pull-right" type="submit" id="re_register_dropped_student"> Register Student </button></form>';
	    }else{
	    	$output.='<div class="alert alert-info alert-dismissible show fade">
            <i class="fas fa-check-circle"> </i> Student already registered.</div>';
	    }
        return $output;
	}
	function fetch_inactivestudents($max_year,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		$this->db->where(array('status'=>'Inactive'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where('usertype','Student');
        	$searchQuery = " (fname like '%".$searchValue."%' or mname like '%".$searchValue."%' or gradesec like '%".$searchValue."%' or username like '%".$searchValue."%' or branch like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where(array('status'=>'Inactive'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('usertype','Student');
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('users')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	/*$this->db->group_by('exam.examname,exam.grade,exam.subject');*/
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where(array('status'=>'Inactive'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('usertype','Student');
     	$records = $this->db->get('users')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	/*$this->db->group_by('exam.examname,exam.grade,exam.subject');*/
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->where(array('status'=>'Inactive'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where('usertype','Student');
        $records = $this->db->get('users')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
     		$id=$staff->id;
     		$yearDropped=$staff->academicyear;
     		$userName=$staff->username;
        	$action='<a href="#" class="btn btn-info registerstudent" id="'.$id.'" value="'.$yearDropped.'" name="'.$userName.'" data-toggle="modal" data-target="#register_dropout_student"> Register</a> ';
	    	$data[] = array( 
	           "fname"=>$staff->fname. ' '.$staff->mname. ' '.$staff->lname,
	           "username"=>$staff->username,
	           "gradesec"=>$staff->gradesec,
	           "gender"=>$staff->gender,
	           "branch"=>$staff->branch,
	           "academicyear"=>$staff->academicyear,
	           "Action"=>$action,
	        ); 
     	}
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
   	}
	function fetch_branchstudents($gs_branches,$onlyGrade,$gs_gradesec,$max_year){
		if($onlyGrade==''){
		  $query=$this->db->query("select * from users where status='Active' and isapproved='1' and usertype='Student' and academicyear='$max_year' and branch='$gs_branches'
		and gradesec='$gs_gradesec' order by fname,mname,lname ASC ");  
		}else{
		    $query=$this->db->query("select * from users where status='Active' and isapproved='1' and usertype='Student' and academicyear='$max_year' and branch='$gs_branches'
		and grade='$onlyGrade' order by fname,mname,lname ASC ");
		}
		$output ='';
		$output .='
         <div class="table-responsive">
        <table class="table table-striped table-hover" style="width:100%;">
        <thead>
        <tr>
        <th>No.</th>
            <th>Student ID</th>
            <th>Full Name</th>
            <th>Gr. & Sec</th>
            <th>Gender</th>
            <th>Branch</th>
            <th>Mark</th>
        </tr>
        </thead>
       <tbody>';
        $no=1;
		foreach ($query ->result() as $value) {
			$id=$value->id;
			$output .='<tr class="delete_mem'.$value->id.'">
			<td>'.$no.'.</td>
			<td>'.$value->unique_id.'
            <div class="table-links">
             <a href="#" class="deletestudent text-danger" id="'.$value->id.'"><i class="fas fa-trash-alt"></i></a>
             <div class="bullet"></div>
             <a href="#" class="dropstudent text-warning" id="'.$value->id.'"><i class="fas fa-user-times"></i></a>
             <div class="bullet"></div>
             <a href="#" class="editstudent text-success" id="'.$value->unique_id.'" value="'.$max_year.'" data-toggle="modal" data-target="#editStudentInfoPage"><i class="fas fa-user-edit"></i></a>
             <div class="bullet"></div>
             <a href="#" class="viewStudentPrint" value="" data-toggle="modal" data-target="#printStudentViewModal" id="'.$value->unique_id.'"> <span class="text-info"><i class="fas fa-eye"></i></span></a>
            </div>
            </td>
            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.'
            <div class="table-links">
             	<a href="#" class="resetPassword text-warning" id="'.$value->unique_id.'">Reset Password</a>
             	<div class="bullet"></div>
             	<a href="#" class="leavingRequest text-info" id="'.$value->unique_id.'" value="'.$max_year.'"><i class="fas fa-user-minus"></i></a>
            </div>
            </td> ';
            if($gs_gradesec==''){
            	$output.='<td>'.$value->grade.'</td>';
            }else{
            	$output.='<td>'.$value->gradesec.'</td>';
            }
            $output.='
            <td>'.$value->gender.'</td>
            <td>'.$value->branch.' </td>   
            <td class="text-center"><a href="#" target="_blanck"><button class="btn btn-default" id="viewStuAttendance" name="'.$max_year.'" value="'.$value->username.'"><span class="text-info"> View</span></button></a> </td>   
            </tr>';
            $no++;
		}
		return $output;
	}
	function fetch_students_vaccination_info($gs_branches,$onlyGrade,$max_year){
		$query=$this->db->query("select * from users where status='Active' and isapproved='1' and usertype='Student' and academicyear='$max_year' and branch='$gs_branches' and grade='$onlyGrade' order by fname,mname,lname ASC ");
		$output ='';
		$output .='
         <div class="table-responsive">
        <table class="table table-striped table-hover" style="width:100%;">
        <thead>
        <tr>
        <th>No.</th>
            <th>Full Name</th>
            <th>Vaccination Info</th>
            <th>Illness Info</th>
            <th class="text-center">Action</th>
        </tr>
        </thead>
       <tbody>';
        $no=1;
		foreach ($query ->result() as $value) {
			$id=$value->id;
			$userName=$value->username;
			$output .='<tr>
			<td>'.$no.'.</td>';
			$output.=' <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> ';
			$queryVaccination=$this->db->query("select * from vaccination_student_list where stuid='$userName' and academicyear='$max_year' ");
			if($queryVaccination->num_rows()>0){
				$output.='<td>';
				foreach($queryVaccination->result() as $row){
					$output.='<span class="badge badge-light">'.$row->vaccinationName.'</span>';
				}
				$output.='</td>';
			}else{
				$output.='<td>No Info </td>';
			}
			$queryIllness=$this->db->query("select * from student_illness_report where stuid='$userName' and academicyear='$max_year' ");
			if($queryIllness->num_rows()>0){
				$output.='<td>';
				foreach($queryIllness->result() as $row){
					$output.='<span class="badge badge-light">'.$row->illness_cause.'</span>';
				}
				$output.='</td>';
			}else{
				$output.='<td>No Info </td>';
			}
            $output.='
            <td class="text-center" style=" white-space: nowrap;">
            <button class="btn btn-outline-warning editstudent_vaccination" id="editstudent_vaccination" name="'.$max_year.'" value="'.$value->username.'"> <i class="fas fa-plus"></i> Vaccination</button> 
             <button class="btn btn-outline-primary viewstudent_vaccination" id="viewstudent_vaccination" name="'.$max_year.'" value="'.$value->username.'"> <i class="fas fa-eye"></i> Vaccination</button>
            <button class="btn btn-outline-danger editstudent_illnessReport" id="editstudent_illnessReport" name="'.$max_year.'" value="'.$value->username.'"> <i class="fas fa-plus"></i> Illness </button>
            <button class="btn btn-outline-info viewstudent_illnessReport" id="viewstudent_illnessReport" name="'.$max_year.'" value="'.$value->username.'"> <i class="fas fa-eye"></i> Illness </button>
            </td>   
            </tr>';
            $no++;
		}
		return $output;
	}
	function previous_vaccination_report($username){
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		$queryRow=$query->row();
		$fName=$queryRow->fname;
		$mName=$queryRow->mname;
		$lName=$queryRow->lname;
		$profile=$queryRow->profile;
		$output='';
		$queryIncidet=$this->db->query("SELECT * FROM vaccination_info as ir cross join users as us where stuid='$username' and us.username=ir.createdby group by ir.id ORDER BY ir.id DESC  ");
		if($queryIncidet->num_rows()>0){
			foreach($queryIncidet->result() as $row){
				$output.='<div class="card-body">
				<div class="support-ticket media">';
                    if($profile!=''){
		            	$output.='<img class="user-img" src="'.base_url().'profile/'.$profile.'" width="70">';
			        }else{
			            $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="70">';
			        }
                    $output.='<div class="media-body ml-3">
                      <div class="badge badge-pill badge-light mb-1 float-right"> Allergies Medications Conditions:- '.$row->Allergies_Medications_Conditions.'</div>
                      <span class="font-weight-bold">'.$fName.' '.$mName.' '.$lName.'</span>
                      <span>Needs Disabilities <span class="badge badge-light">'.$row->Needs_Disabilities.'</span></span>
                      <p class="my-1">Hospital Name:- '.$row->Hospital_Name.' &nbsp;&nbsp; Phone:- '.$row->Hospital_Phone.' &nbsp;&nbsp; Address:- '.$row->Hospital_Adress.' </p>
                      <p class="my-1">Permit exceptional case:- '.$row->Permit_Exceptional_Case.'</p>';
                      $dateReported=$row->created_at;
                  	$incidentName=$this->db->query("SELECT * FROM vaccination_student_list where stuid='$username' and created_at ='$dateReported' order by vaccinationName DESC  ");
                  	if($incidentName->num_rows()>0){
	                  foreach($incidentName->result() as $incidentNames){
	                  	$output.='<div class="col-lg-6 col-md-6 col-12"> 
	                  	<div class="pretty p-fill">
			                <input type="checkbox" name="" class="" value="'.$incidentNames->vaccinationName.'" checked="checked" disabled>
			                <div class="state p-success">
			                    <label></label>'.$incidentNames->vaccinationName.'
			                </div>
							</div>
						</div>';
	                  }
	                }
                    $output.='<small class="text-muted">Created by <span class="font-weight-bold font-13">'.$row->fname.' '.$row->mname.'</span>
                        &nbsp;&nbsp; at '.$row->created_at.' </small>
                    </div>
                  </div>
                </div><hr>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function previous_illness_report($username){
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		$queryRow=$query->row();
		$fName=$queryRow->fname;
		$mName=$queryRow->mname;
		$lName=$queryRow->lname;
		$profile=$queryRow->profile;
		$output='';
		$queryIncidet=$this->db->query("SELECT * FROM student_illness_report as ir cross join users as us where stuid='$username' and us.username=ir.checkedby group by ir.id ORDER BY ir.id DESC  ");
		if($queryIncidet->num_rows()>0){
			foreach($queryIncidet->result() as $row){
				$output.='<div class="card-body">
				<div class="support-ticket media">';
                    if($profile!=''){
		            	$output.='<img class="user-img" src="'.base_url().'profile/'.$profile.'" width="70">';
			        }else{
			            $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="70">';
			        }
                    $output.='<div class="media-body ml-3">
                      <span class="font-weight-bold">'.$fName.' '.$mName.' '.$lName.'</span>
                      <span>Illness Cause <span class="badge badge-light">'.$row->illness_cause.'</span></span>
                      <p class="my-1">Action Taken:- '.$row->action_taken.'</p> ';                  	
                    $output.='<small class="text-muted">Created by <span class="font-weight-bold font-13">'.$row->fname.' '.$row->mname.'</span>
                        &nbsp;&nbsp; at '.$row->date_checkup.' </small>
                    </div>
                  </div>
                </div><hr>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_students_incident_info($gs_branches,$onlyGrade,$max_year){
		$query=$this->db->query("select * from users where status='Active' and isapproved='1' and usertype='Student' and academicyear='$max_year' and branch='$gs_branches' and grade='$onlyGrade' order by fname,mname,lname ASC ");
		$output ='';
        $no=1;
		foreach ($query ->result() as $value) {
			$id=$value->id;
			$userName=$value->username;
			$profile=$value->profile;
			$queryIncident=$this->db->query("select * from incident_report where stuid='$userName' and academicyear='$max_year' ");
			$output.='<div class="chat-container-gss">
				        <div class="message-container-gs">';
			if($queryIncident->num_rows()>0){
				$output.='<div class="have-incident-report">
					<div class="support-ticket media">';
					if($profile!=''){
		            	$output.='<img class="user-img" src="'.base_url().'profile/'.$profile.'" width="40">';
			        }else{
			            $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="40">';
			        }
	                $output.='<div class="media-body pull-right">
                      	<span class="font-weight-bold">'.$value->fname .' '.$value->mname.' '.$value->lname.'</span>
                      	<a href="javascript:void(0)" class="badge badge-pill badge-success pull-right viewstudent_incident" id="viewstudent_incident" name="'.$max_year.'" value="'.$value->username.'"> <i class="fas fa-eye"></i> View </a>
                       	<a href="javascript:void(0)" class="badge badge-pill badge-warning pull-right editstudent_incident" id="editstudent_incident" name="'.$max_year.'" value="'.$value->username.'" data-toggle="modal" data-target="#submitNewIncidentReport"> <i class="fas fa-pencil-alt"></i> Add </a><br>';
	                $output.='</div> </div> </div>';
	            }else{
	            	$output.='<div class="no-have-incident-report"> 
	            	<div class="support-ticket media">';
					if($profile!=''){
		            	$output.='<img class="user-img" src="'.base_url().'profile/'.$profile.'" width="40">';
			        }else{
			            $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="40">';
			        }
	                $output.='<div class="media-body">
                      	<span class="font-weight-bold">'.$value->fname .' '.$value->mname.' '.$value->lname.'</span>
                      	<a href="javascript:void(0)" class="badge badge-pill badge-success pull-right viewstudent_incident" id="viewstudent_incident" name="'.$max_year.'" value="'.$value->username.'"> <i class="fas fa-eye"></i> View </a>
                       	<a href="javascript:void(0)" class="badge badge-pill badge-warning pull-right editstudent_incident" id="editstudent_incident" name="'.$max_year.'" value="'.$value->username.'" data-toggle="modal" data-target="#submitNewIncidentReport"> <i class="fas fa-pencil-alt"></i> Add </a><br>';
                    $output.='</div>
	                </div> </div>';
	            }
	        $output.=' </div> </div><div class="dropdown-divider"></div>';
		}
		return $output;
	}
	function previous_incident_report($username){
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		$queryRow=$query->row();
		$fName=$queryRow->fname;
		$mName=$queryRow->mname;
		$lName=$queryRow->lname;
		$profile=$queryRow->profile;
		$output='';
		$queryIncidet=$this->db->query("SELECT ir.id,us.fname,us.lname,us.mname,us.profile,ir.incident_type, ir.incident_location,ir.admin_action,ir.is_offense,ir.previous_conse,ir.date_in_suspension, ir.incidet_desc,ir.date_out_suspension,ir.out_reentry_date,ir.date_report,ir.in_reentry_date  FROM incident_report as ir cross join users as us where stuid='$username' and us.username=ir.report_by group by ir.id ORDER BY ir.id DESC  ");
		if($queryIncidet->num_rows()>0){
			foreach($queryIncidet->result() as $row){
				$output.='<div class="support-ticket media">';
                    if($profile!=''){
		            	$output.='<img class="user-img" src="'.base_url().'profile/'.$profile.'" width="30">';
			        }else{
			            $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="30">';
			        }
                	$output.='<div class="media-body ml-3">
                  	<span class="font-weight-bold">'.$fName.' '.$mName.' '.$lName.'</span>&nbsp;';
                  	if($row->incident_type=='White Incident Form'){
                  		$output.='<div class="badge badge-pill badge-light"> '.$row->incident_type.'</div><br>';
                  	}else if($row->incident_type=='Yellow Incident Form'){
                  		$output.='<div class="badge badge-pill badge-info"> '.$row->incident_type.'</div><br>';
                  	}else if($row->incident_type=='Orange Incident Form'){
                  		$output.='<div class="badge badge-pill badge-warning"> '.$row->incident_type.'</div><br>';
                  	}else{
                  		$output.='<div class="badge badge-pill badge-danger"> '.$row->incident_type.'</div><br>';
                  	}
                  	$incidentID=$row->id;
                  	$incidentName=$this->db->query("SELECT * FROM incident_student_type where stuid='$username' and incident_id ='$incidentID' ");
                  	if($incidentName->num_rows()>0){
	                  	foreach($incidentName->result() as $incidentNames){
	                  		$output.='<div class="pretty p-fill">
			                	<input type="checkbox" name="" class="" value="'.$incidentNames->incident_type.'" checked="checked">
				                <div class="state p-info">
				                    <i class="fas fa-check"></i>'.$incidentNames->incident_type.'
				                </div>
							</div>';
	                  	}
	                }
                  	$output.='<p>Incident Location:- '.$row->incident_location.'</p>';
                  	if($row->admin_action!=''){
                  		$output.='<p>Action taken:- '.$row->admin_action.'</p>';
                  	}
                  	$output.='<p>
                  	Is it the first offense? <u>'.$row->is_offense.'</u> </p>';
                  	if($row->is_offense=='Yes'){
                  		$output.='';
                  	}else{
                  		if($row->previous_conse!=''){
                  			$output.='<p>If not, what was the previous consequence? <u>'.$row->previous_conse.'</u></p>';
                  		}else{
                  			$output.='<p>If not, what was the previous consequence? _______________________________ __________________________________________ __________________________________________</p>';
                  		}
                  		
                  	}
                    
                    $output.='<p>'.$row->incidet_desc.' </p>';
                    if($row->date_in_suspension!=''){
                    	$output.='<p><b> <u>In-school suspension :</u></b> <br>Date : <u> '.$row->date_in_suspension .'</u> &nbsp;&nbsp;&nbsp; class re-entry date: <u>'.$row->in_reentry_date.'</u> &nbsp</p>';
                    }
                    if($row->date_out_suspension!=''){
                    	$output.='<p><b> <u>Out-of-school suspension :</u></b> <br>Date : <u> '.$row->date_out_suspension .'</u> &nbsp;&nbsp;&nbsp; Re-entry date: <u>'.$row->out_reentry_date.'</u> &nbsp</p>';
                    }
                    $output.='<small class="text-muted">Report by <span class="font-weight-bold font-13">'.$row->fname.' '.$row->mname.'</span>&nbsp;
                        <span> '.$row->date_report.'</span></small>
                    </div>
                  </div>
                <hr>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function viewSingleidentReport($reportID,$username){
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		$queryRow=$query->row();
		$fName=$queryRow->fname;
		$mName=$queryRow->mname;
		$lName=$queryRow->lname;
		$profile=$queryRow->profile;
		$output='';
		$queryIncidet=$this->db->query("SELECT ir.id,us.fname,us.lname,us.mname,us.profile,ir.incident_type, ir.incident_location,ir.admin_action,ir.is_offense,ir.previous_conse,ir.date_in_suspension, ir.incidet_desc,ir.date_out_suspension,ir.out_reentry_date,ir.date_report,ir.in_reentry_date  FROM incident_report as ir cross join users as us where stuid='$username' and us.username=ir.report_by and ir.id='$reportID'  group by ir.id ORDER BY ir.id DESC  ");
		if($queryIncidet->num_rows()>0){
			foreach($queryIncidet->result() as $row){
				$output.='<form type="role" class="submit_final_decision" method="POST">
				<input type="hidden" name="inciden_id_decision" value="'.$reportID.'">
				<input type="hidden" name="student_id_decision" value="'.$username.'">
					<div class="support-ticket media">';
                    if($profile!=''){
		            	$output.='<img class="user-img" src="'.base_url().'profile/'.$profile.'" width="30">';
			        }else{
			            $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="30">';
			        }
                	$output.='<div class="media-body ml-3">
                  	<span class="font-weight-bold">'.$fName.' '.$mName.' '.$lName.'</span>&nbsp;';
                  	if($row->incident_type=='White Incident Form'){
                  		$output.='<div class="badge badge-pill badge-light"> '.$row->incident_type.'</div><br>';
                  	}else if($row->incident_type=='Yellow Incident Form'){
                  		$output.='<div class="badge badge-pill badge-info"> '.$row->incident_type.'</div><br>';
                  	}else if($row->incident_type=='Orange Incident Form'){
                  		$output.='<div class="badge badge-pill badge-warning"> '.$row->incident_type.'</div><br>';
                  	}else{
                  		$output.='<div class="badge badge-pill badge-danger"> '.$row->incident_type.'</div><br>';
                  	}
                  	$incidentID=$row->id;
                  	$incidentName=$this->db->query("SELECT * FROM incident_student_type where stuid='$username' and incident_id ='$incidentID' ");
                  	if($incidentName->num_rows()>0){
	                  	foreach($incidentName->result() as $incidentNames){
	                  		$output.='<div class="pretty p-fill">
			                	<input type="checkbox" name="" class="" value="'.$incidentNames->incident_type.'" checked="checked">
				                <div class="state p-info">
				                    <i class="fas fa-check"></i>'.$incidentNames->incident_type.'
				                </div>
							</div>';
	                  	}
	                }
                  	$output.='<p>Incident Location:- '.$row->incident_location.'</p>';
                  	if($row->admin_action!=''){
                  		$output.='<p>Action taken:- '.$row->admin_action.'</p>';
                  	}
                  	$output.='<p>
                  	Is it the first offense? <u>'.$row->is_offense.'</u> </p>';
                  	if($row->is_offense=='Yes'){
                  		$output.='';
                  	}else{
                  		if($row->previous_conse!=''){
                  			$output.='<p>If not, what was the previous consequence? <u>'.$row->previous_conse.'</u></p>';
                  		}else{
                  			$output.='<p>If not, what was the previous consequence? _______________________________ __________________________________________ __________________________________________</p>';
                  		}
                  		
                  	}
                    
                    $output.='<p>'.$row->incidet_desc.' </p>';
                    if($row->date_in_suspension!=''){
                    	$output.='<p><b> <u>In-school suspension :</u></b> <br>Date : <u> '.$row->date_in_suspension .'</u> &nbsp;&nbsp;&nbsp; class re-entry date: <u>'.$row->in_reentry_date.'</u> &nbsp</p>';
                    }
                    if($row->date_out_suspension!=''){
                    	$output.='<p><b> <u>Out-of-school suspension :</u></b> <br>Date : <u> '.$row->date_out_suspension .'</u> &nbsp;&nbsp;&nbsp; Re-entry date: <u>'.$row->out_reentry_date.'</u> &nbsp</p>';
                    }
                    $output.='<small class="text-muted">Report by <span class="font-weight-bold font-13">'.$row->fname.' '.$row->mname.'</span>&nbsp;
                        <span> '.$row->date_report.'</span></small>
                    </div>
                  </div>
                <div class="dropdown-divider"></div>';
                $queryCheck=$this->db->query("select * from incident_decision where stuid='$username' and incident_id='$incidentID' ");
                if($queryCheck->num_rows()>0){
                	$rowDecision=$queryCheck->row();
                	$decisionFound=$rowDecision->incident_decision;
                	$decisionDate=$rowDecision->date_inserted;
                	$decisionBy=$rowDecision->inserted_by;
                	$output.='<label>Consequence given by the school</label>
		            <textarea class="add_final_decision" rows="4" cols="50" wrap="physical" name="add_final_decision" id="add_final_decision" style="width:100%; height:100px;" required="required">'.$decisionFound.'</textarea>
		            <span class="text-time">Decision by '.$decisionBy.' on '.$decisionDate.'</span>';
                }else{
                	$output.='<label>Consequence given by the school</label>
		            <textarea class="add_final_decision" rows="4" cols="50" wrap="physical" name="add_final_decision" id="add_final_decision" style="width:100%; height:100px;" required="required"></textarea>';
                }
                $output.=' <button class="btn btn-info pull-right" id="updateFinalDesicion" type="submit" name="updateFinalDesicion"> Submit Changes </button>
	            </form> ';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_student_incident_report($max_year,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
        	$searchQuery = " (incident_type like '%".$searchValue."%' or stuid like '%".$searchValue."%' or incident_location like '%".$searchValue."%' or date_report like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	/*$this->db->select('count(*) as allcount');
     	$records = $this->db->get('incident_report')->result();
     	$totalRecords = $records[0]->allcount;*/

     	$this->db->where('users.usertype=','Student');
     	$this->db->select('count(*) as allcount');
     	$this->db->from('incident_report');
        $this->db->join('users', 
            'users.username = incident_report.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecords = $records[0]->allcount;


     	## Total number of record with filtering
     	$this->db->where('users.usertype=','Student');
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->from('incident_report');
        $this->db->join('users', 
            'users.username = incident_report.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where('users.academicyear',$max_year);
     	$this->db->where('users.usertype=','Student');
		$this->db->select('incident_report.id, incident_report.stuid, incident_report.incident_type, incident_report.incident_location, incident_report.report_by, incident_report.date_report, users.fname,users.mname, users.lname, users.gradesec,users.username ');
        $this->db->from('incident_report');
        $this->db->join('users', 
            'users.username = incident_report.stuid');
        $this->db->order_by('incident_report.id', 'DESC');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
     		$action='<a href="javascript:void(0)" class="view_this_student_incidentreport" id="view_this_student_incidentreport" value="'.$staff->id.'" name="'.$staff->username.'" data-toggle="modal" data-target="#viewSingleidentReport"> '.substr($staff->incident_type, 0, 6).'... </a> <div class="bullet"></div> <a href="javascript:void(0)" class="delete_this_student_incidentreport text-danger" id="delete_this_student_incidentreport" value="'.$staff->id.'" name="'.$staff->username.'"><i class="fas fa-trash-alt"></i></a>';
	    	$data[] = array( 
	    		"username"=>$staff->username,
	           	"fname"=>$staff->fname .' ' .$staff->mname .' ' . $staff->lname,
	           	"gradesec"=>$staff->gradesec,
	           	"incident_type"=>$action,
	           	"date_report"=>$staff->date_report,
	        ); 
     	}
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
   	}
   	function viewSinglestaffidentReport($reportID,$username){
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		$queryRow=$query->row();
		$fName=$queryRow->fname;
		$mName=$queryRow->mname;
		$lName=$queryRow->lname;
		$profile=$queryRow->profile;
		$output='';
		$queryIncidet=$this->db->query("SELECT ir.id,us.fname,us.lname,us.mname,us.profile,ir.incident_type, ir.incident_location,ir.admin_action,ir.is_offense,ir.previous_conse,ir.date_in_suspension, ir.incidet_desc,ir.date_out_suspension,ir.out_reentry_date,ir.date_report,ir.in_reentry_date  FROM incident_report as ir cross join users as us where stuid='$username' and us.username=ir.report_by and ir.id='$reportID'  group by ir.id ORDER BY ir.id DESC  ");
		if($queryIncidet->num_rows()>0){
			foreach($queryIncidet->result() as $row){
				$output.='
				<input type="hidden" name="inciden_id_decision" value="'.$reportID.'">
				<input type="hidden" name="student_id_decision" value="'.$username.'">
					<div class="support-ticket media">';
                    if($profile!=''){
		            	$output.='<img class="user-img" src="'.base_url().'profile/'.$profile.'" width="30">';
			        }else{
			            $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="30">';
			        }
                	$output.='<div class="media-body ml-3">
                  	<span class="font-weight-bold">'.$fName.' '.$mName.' '.$lName.'</span>&nbsp;';
                  	if($row->incident_type=='White Incident Form'){
                  		$output.='<div class="badge badge-pill badge-light"> '.$row->incident_type.'</div><br>';
                  	}else if($row->incident_type=='Yellow Incident Form'){
                  		$output.='<div class="badge badge-pill badge-info"> '.$row->incident_type.'</div><br>';
                  	}else if($row->incident_type=='Orange Incident Form'){
                  		$output.='<div class="badge badge-pill badge-warning"> '.$row->incident_type.'</div><br>';
                  	}else{
                  		$output.='<div class="badge badge-pill badge-danger"> '.$row->incident_type.'</div><br>';
                  	}
                  	$incidentID=$row->id;
                  	$incidentName=$this->db->query("SELECT * FROM incident_student_type where stuid='$username' and incident_id ='$incidentID' ");
                  	if($incidentName->num_rows()>0){
	                  	foreach($incidentName->result() as $incidentNames){
	                  		$output.='<div class="pretty p-fill">
			                	<input type="checkbox" name="" class="" value="'.$incidentNames->incident_type.'" checked="checked">
				                <div class="state p-info">
				                    <i class="fas fa-check"></i>'.$incidentNames->incident_type.'
				                </div>
							</div>';
	                  	}
	                }
                  	$output.='<p>Incident Location:- '.$row->incident_location.'</p>';
                  	if($row->admin_action!=''){
                  		$output.='<p>Action taken:- '.$row->admin_action.'</p>';
                  	}
                    $output.='<p>Incident: '.$row->incidet_desc.' </p>';
                    $output.='<small class="text-muted">Report by <span class="font-weight-bold font-13">'.$row->fname.' '.$row->mname.'</span>&nbsp;
                        <span> '.$row->date_report.'</span></small>
                    </div>
                </div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
   	function fetch_staff_incident_report($max_year,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
        	$searchQuery = " (incident_type like '%".$searchValue."%' or stuid like '%".$searchValue."%' or incident_location like '%".$searchValue."%' or date_report like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where('users.usertype!=','Student');
     	$this->db->select('count(*) as allcount');
     	 $this->db->from('incident_report');
        $this->db->join('users', 
            'users.username = incident_report.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->where('users.usertype!=','Student');
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->from('incident_report');
        $this->db->join('users', 
            'users.username = incident_report.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where('users.usertype!=','Student');
     	$this->db->where('users.academicyear',$max_year);
		$this->db->select('incident_report.id, incident_report.stuid, incident_report.incident_type, incident_report.incident_location, incident_report.report_by, incident_report.date_report, users.fname,users.mname, users.lname, users.gradesec,users.username ');
        $this->db->from('incident_report');
        $this->db->join('users', 
            'users.username = incident_report.stuid');
        $this->db->order_by('incident_report.id', 'DESC');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
     		$action='<a href="javascript:void(0)" class="view_this_staff_incidentreport" id="view_this_staff_incidentreport" value="'.$staff->id.'" name="'.$staff->username.'" data-toggle="modal" data-target="#viewSinglestaffidentReport"> '.$staff->incident_type.' </a> <div class="bullet"></div> <a href="javascript:void(0)" class="delete_this_staff_incidentreport text-danger" id="delete_this_staff_incidentreport" value="'.$staff->id.'" name="'.$staff->username.'"><i class="fas fa-trash-alt"></i></a>';
	    	$data[] = array( 
	           	"fname"=>$staff->fname .' ' .$staff->mname .' ' . $staff->lname,
	           	"incident_type"=>$action,
	           	"date_report"=>$staff->date_report,
	        ); 
     	}
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
   	}
	function myprevious_incident_report($username){
		$this->db->where('username',$username);
		$query=$this->db->get('users');
		$queryRow=$query->row();
		$fName=$queryRow->fname;
		$mName=$queryRow->mname;
		$lName=$queryRow->lname;
		$profile=$queryRow->profile;
		$output='';
		$this->db->select('*');
		$this->db->from('incident_report ir');
		$this->db->join('users us',
		'us.username=ir.report_by');
		$this->db->order_by('ir.id','DESC');
		$this->db->group_by('ir.id');
		$this->db->where('ir.stuid',$username);
		$queryIncidet=$this->db->get();
		if($queryIncidet->num_rows()>0){
			$output.='<div class="card">
                      <div class="card-body">
                      <h4 class="header-title">Incident Report</h4>';
			foreach($queryIncidet->result() as $row){
				$output.='<div class="support-ticket" id="view_ThisSubjectResult_gs">';
                $output.='<div class="media-body">
                  <div class="badge badge-pill badge-danger float-right">'.$row->incident_type.'</div>
                  <span class="font-weight-bold">'.$fName.' '.$mName.' '.$lName.'</span>
                  <br>Incident Location: '.$row->incident_location.'<br>Incident Type: ';
                  	$dateReported=$row->date_report;
                  	$this->db->where('stuid',$username);
			        $this->db->where('date_inserted',$dateReported);
			        $this->db->order_by('incident_type','DESC');
			        $incidentName=$this->db->get('incident_student_type');
                  	if($incidentName->num_rows()>0){
	                  foreach($incidentName->result() as $incidentNames){
	                  	$output.=' <div class="pretty p-fill">
					        <input type="checkbox" name="" class="" value="'.$incidentNames->incident_type.'" checked="checked" >
			                <div class="state p-success">
			                    <i class="fas fa-check"></i>'.$incidentNames->incident_type.'
			                </div>
						</div> ';
	                }
	            }
                $output.='<span class="my-2">'.$row->incidet_desc.'
                <small class="text-muted">Created by <span class="font-weight-bold font-13">'.$row->fname.' '.$row->mname.'</span> &nbsp;&nbsp; '.$row->date_report.' </small>
                  </span>
                </div>
              </div><hr> ';
			}
			$output.='</div></div>';
		}
		return $output;
	}
	function fecthThiStudentAttendance($stuID,$max_year,$gsQuarter){
		$output='';
		$queryStudent=$this->db->query("select grade,branch,gradesec,id,username,fname,lname,mname from users where academicyear='$max_year' and username='$stuID' ");
		$rowStudent=$queryStudent->row();
		$id=$rowStudent->id;
		$username=$rowStudent->username;
		$fname=$rowStudent->fname;
		$lname=$rowStudent->lname;
		$mname=$rowStudent->mname;
		$gs_branches=$rowStudent->branch;
		$gs_gradesec=$rowStudent->gradesec;
		$grade=$rowStudent->grade;
		$queryCurrent = $this->db->query("select max(term) as quarter from quarter where Academic_Year='$max_year' and termgrade='$grade' ");
        $rowCurrent = $queryCurrent->row();
        $gs_quarter=$rowCurrent->quarter;
		$queryCheckReportCard = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."' ");
		if ($queryCheckReportCard->num_rows()>0)
		{
		$queryFetchMark=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and stuid='$id' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$output.='<button class="btn btn-default pull-right" name="gethisreport" onclick="codespeedyAttendancePrint()"> <i class="fas fa-print"></i> </button>
        		<div id="prinThiStudentAttendance">';
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output.='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp; Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp; Subject :<B><u>'.$subject.'</u></B></div></br></h6>';
					
					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;height:auto;page-break-inside:avoid;">
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) 
        			{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and stuid='$id' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center"><B>Total</B></th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and stuid='$id' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result() as $mark_name)
		            	{
		            		$output.='<td class="text-center">'.$mark_name->markname.'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"> <B>100</B> </td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
	        			$grade=$evalua_name['grade'];

	            		$queryMvalue1 = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and stuid='$id' group by markname order by mid ASC",FALSE);
		            	$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and stuid='$id' group by markname order by mid ASC");
            			$sumOutOf=0;
	            		foreach ($queryMvalue->result_array() as $mark_name) {
	            			$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            			$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            		}
	        			$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' and id='$id' group by u.id order by u.fname,u.mname,u.lname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			/*$percent= $mark_name['percent'];
            			$mname_gs=$mark_name['eid'];*/

            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and stuid='$id' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' and stuid='$id' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and stuid='$id' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}

					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p>';
        		}
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Mark data not found.
            	</div></div>';
			}
		}
		$this->db->where('attendance.stuid',$stuID);
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.username = attendance.stuid');
        $query = $this->db->get();
      
        if($query->num_rows()>0){
        	$totAb=$query->num_rows();
        	$output.='<div class="row"><div class="col-lg-4 col-md-4 col-12"></div>
        	<div class="col-lg-8 col-md-8 col-12">
        	<div class="table-responsive">
                <table class="tabler table-borderedr text-center" style="width:auto;">
                <thead>
                    <tr>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                    <th>Absent Type</th>
                    <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
            $rowSpan=$totAb + $no;
            $output.='<tr>
            <td rowspan="'.$rowSpan.'"> '.$fname.' '.$mname.' '.$lname.'  </td>
            <td rowspan="'.$rowSpan.'">'.$username.'</td>
            <td rowspan="'.$rowSpan.'">'.$gs_gradesec.'</td>';
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr>
                <td>'.$fetch_today_attendances->absentype.' </td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $num=$no-1;
	        $output.='</tbody> </table> </div> </div> </div>';
	        $output.='<div class="text-center"><span class ="badge badge-success">Total Absent Days '.$num.'.</span></div></div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent days found.
            </div></div>';
	    }
        return $output;
	}
	function fetchFinanceBranchStudents($gs_branches,$gs_gradesec,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->order_by('mname','ASC');
		$this->db->order_by('lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('gradesec'=>$gs_gradesec));
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		$output ='';
		$output .='
         <div class="table-responsive">
        <table class="table table-striped table-hover" style="width:100%;">
        <thead>
        <tr>
        <th>No.</th>
            <th>ID</th>
            <th>Name</th>
            <th>Grade</th>
            <th>Gender</th>
            <th>Branch</th>
        </tr>
        </thead>
       <tbody>';
        $no=1;
		foreach ($query ->result() as $value) {
			$id=$value->id;
			$output .='<tr class="delete_mem'.$value->id.'">
			<td>'.$no.'.</td>
			<td>'.$value->unique_id.' </td>
            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
            <td>'.$value->gradesec.'</td>
            <td>'.$value->gender.'</td>
            <td>'.$value->branch.' </td>  
            </tr>';
            $no++;
		}
		return $output;
	}
	function fetch_thisgrade_branchstudents($gs_branches,$gs_gradesec,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('grade'=>$gs_gradesec));
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" id="tableExport" style="width:100%;">
	        <thead>
	        <tr>
	        	<th>No.</th>
	        	<th>Student Name</th>
	            <th>Student ID</th>
	            <th>Gender</th>
	            <th>Grade</th>
	            <th>Section</th>
	            <th>Branch</th>
	        </tr>
	        </thead>
	       <tbody>';
	       $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'. </td>
				<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
				<td>'.$value->unique_id.' </td>
				<td>'.$value->gender.'</td>
	            <td>'.$value->grade.'</td>
	            <td>'.$value->gradesec.'</td>
	            <td>'.$value->branch.' </td> </tr>';
	            $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                   <i class="fas fa-exclamation-circle"> </i> Record not found.
            </div></div>';
		}
		return $output;
	}
	function FecthThisDivStudentAgeWithName($gs_branches,$gs_gradesec,$max_year,$summaryGSAges){
		
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where('grade',$gs_gradesec);
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->where(array('age'=>$summaryGSAges));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		$output ='';
			if($query->num_rows()>0){
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
			$output='<p><h2 class="text-center"><b><u>'.$name.' Grade Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>';
			$output .='
	         <div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        	<th>No.</th>
	        	<th>Name</th>
	            <th>Student ID</th>
	            <th>Gender</th>
	            <th>Age</th>               
	            <th>Grade</th>
	            <th>Section</th>
	        </tr>
	        </thead>
	       <tbody>';
	       $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'. </td>
				<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
				<td>'.$value->unique_id.' </td>
				<td>'.$value->gender.'</td>
				<td>'.$value->age.'</td>
	            <td>'.$value->grade.'</td>
	            <td>'.$value->gradesec.'</td> 
	            </tr>';
	            $no++;
			}
			$query2 = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' then 1 else 0 end) AS femalecount FROM users where grade='$gs_gradesec' and academicyear='$max_year' and branch='$gs_branches' and age='$summaryGSAges' and status='Active' and isapproved='1' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
			foreach ($query2->result() as $value) {
				$output.='<tr><td colspan="3" rowspan="3" class="text-center"><b>Summary<small>(Branch: '.$gs_branches.')</small></b></td>
				<td colspan="2" rowspan="1" class="text-center"><b>Male:</b></td>
				<td colspan="2" class="text-center"><b>'.$value->malecount.'</b></td></tr>
				<tr>
				<td colspan="2" rowspan="1" class="text-center"><b>Female:</b></td>
				<td colspan="2" class="text-center"><b>'.$value->femalecount.'</b></td></tr>
				<tr>
				<td colspan="2" rowspan="1" class="text-center"><b>Total:</b></td>
				<td colspan="2" class="text-center"><b>'.$value->studentcount.'</b></td>
				</tr>';
			}
		}
		$output.='</tbody></table></div><div class="dropdown-divider"></div>';
		return $output;
	}
	function fetch_thisSummaryRecord($gs_branches,$gs_gradesec,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where('grade',$gs_gradesec);
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		$output ='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Grade Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>';
		$output .='
         <div class="table-responsive">
        <table class="tabler table-borderedr table-hover" style="width:100%;">
        <thead>
        <tr>
        	<th>No.</th>
        	<th>Name</th>
            <th>Student ID</th>
            <th>Gender</th>            
            <th>Grade</th>
            <th>Section</th>
        </tr>
        </thead>
       <tbody>';
       $no=1;
		foreach ($query ->result() as $value) {
			$id=$value->id;
			$output .='<tr class="delete_mem'.$value->id.'">
			<td>'.$no.'. </td>
			<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
			<td>'.$value->unique_id.' </td>
			<td>'.$value->gender.'</td>
            <td>'.$value->grade.'</td>
            <td>'.$value->gradesec.'</td> 
            </tr>';
            $no++;
		}
		$query2 = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' then 1 else 0 end) AS femalecount FROM users where grade='$gs_gradesec' and academicyear='$max_year' and branch='$gs_branches' and status='Active' and isapproved='1' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
		foreach ($query2->result() as $value) {
			$output.='<tr><td colspan="3" rowspan="3" class="text-center"><b>Summary<small>(Branch: '.$gs_branches.')</small></b></td>
			<td colspan="2" rowspan="1" class="text-center"><b>Male:</b></td>
			<td colspan="2" class="text-center"><b>'.$value->malecount.'</b></td></tr>
			<tr>
			<td colspan="2" rowspan="1" class="text-center"><b>Female:</b></td>
			<td colspan="2" class="text-center"><b>'.$value->femalecount.'</b></td></tr>
			<tr>
			<td colspan="2" rowspan="1" class="text-center"><b>Total:</b></td>
			<td colspan="2" class="text-center"><b>'.$value->studentcount.'</b></td>
			</tr>';
		}
		$output.='</tbody></table></div><div class="dropdown-divider"></div>';
		return $output;
	}
	function fetch_thisTransportService($gs_branches,$checkedGrade,$checkedPlace,$max_year){
		$output ='';
		$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
		$output .='<p><h2 class="text-center"><u><b>'.$name. ' Transport Service Statistics in '.$max_year.' Academic Year</b></u></h2></p>
        <div class="table-responsive">
        <table class="tabler table-borderedr table-hover" style="width:100%;">
        <thead>
        <tr>
        	<th>No.</th>
        	<th>Name</th>
            <th>Student ID</th>
            <th>Branch</th>
            <th>Transport</th>
            <th>Gender</th> 
            <th>Section</th>
        </tr>
        </thead>
       <tbody>';
       $no=1;
       	foreach($checkedGrade as $checkedGrades){
       		foreach($checkedPlace as $checkedPlaces){
		       	$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->where('grade',$checkedGrades);
				$this->db->where(array('branch'=>$gs_branches));
				$this->db->where(array('transportservice'=>$checkedPlaces));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				foreach ($query ->result() as $value) {
					$id=$value->id;
					$output .='<tr class="delete_mem'.$value->id.'">
					<td>'.$no.'. </td>
					<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
					<td>'.$value->username.' </td>
					<td>'.$value->branch.' </td>
					<td>'.$value->transportservice.' </td>
					<td>'.$value->gender.'</td>
		            <td>'.$value->gradesec.'</td> 
		            </tr>';
		            $no++;
				}
			}
		}
		$output.='</tbody></table></div><div class="dropdown-divider"></div>';
		return $output;
	}
	function fetch_thisTransportService_count($gs_branches,$gs_gradesec,$checkedPlace,$max_year,$countPlace){
		$output='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Transport Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>
		<div class="table-responsive">
		<table class="tabler table-borderedr table-hover" style="width:100%;">';
		$no=1;$grandTotal=0;$grandMale=0;$grandFemale=0;
		foreach($gs_gradesec as $gs_gradesecs){
			$totalSection=($countPlace * 3);
			$output.='<tr><td rowspan='.$totalSection.'>'.$no.'</td>
					<td rowspan='.$totalSection.'> Grade: '.$gs_gradesecs.'</td>';
			foreach($checkedPlace as $checkedPlaces){
				$gradeSecTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' or Gender='MALE' or Gender='m' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' or Gender='FEMALE' or Gender='f' then 1 else 0 end) AS femalecount FROM users where grade='$gs_gradesecs' and academicyear='$max_year' and branch='$gs_branches' and isapproved='1' and status='Active' and usertype='Student' and transportservice='$checkedPlaces' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
				$output.='<td rowspan="3">'.$checkedPlaces.'</td></tr>';
				if($gradeSecTotal->num_rows()>0){
					foreach ($gradeSecTotal->result() as $value) {
						$output.='<tr><td>Male</td><td>'.$value->malecount.'</td><td rowspan="2" class="text-center"> <span class="badge badge-primary">'.$value->studentcount.'</span></td> </tr>';
						$output.='<tr><td>Female</td><td>'.$value->femalecount.'</td></tr>';
					}					
				}else{
					$output.='<td>Male</td> <td>-</td> <td>-</td rowspan="2"></tr>';
					$output.='<td>Female</td><td>-</td></tr>';
				}
				$output.='</tr>';
			}
			$no++;
		}
		$output.='</table></div>';
		return $output;
	}
	function fetch_thisTransportServiceSection_count($gs_branches,$gs_gradesec,$checkedPlace,$max_year){
		$output='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Transport Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>
		<div class="table-responsive">
		<table class="tabler table-bordered table-hover" style="width:100%;">';
		$no=1;$grandTotal=0;$grandMale=0;$grandFemale=0;
		foreach($gs_gradesec as $gs_gradesecs){
			foreach($checkedPlace as $checkedPlaces){
				$querySection=$this->db->query("select gradesec from users where academicyear='$max_year' and branch='$gs_branches' and gradesec='$gs_gradesecs' and isapproved='1' and status='Active' and usertype='Student' and transportservice='$checkedPlaces' group by gradesec order by gradesec ");
				if($querySection->num_rows()>0){
					$totalSection=($querySection->num_rows() * 3) + 5;
					$output.='<tr>';
				    foreach($querySection->result() as $sectionNum){
				    	$gradesec=$sectionNum->gradesec;
						$output.='<tr><td rowspan="3">'.$sectionNum->gradesec.'</td>
						<td rowspan="3">'.$checkedPlaces.'</td>';
						$gradeSecTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' or Gender='MALE' or Gender='m' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' or Gender='FEMALE' or Gender='f' then 1 else 0 end) AS femalecount FROM users where gradesec='$gradesec' and academicyear='$max_year' and branch='$gs_branches' and isapproved='1' and status='Active' and usertype='Student' and transportservice='$checkedPlaces' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
						foreach ($gradeSecTotal->result() as $value) {
							$output.='<tr><td>Male</td><td>'.$value->malecount.'</td><td rowspan="2" class="text-center"> <span class="badge badge-primary">'.$value->studentcount.'</span></td> </tr>';
							$output.='<tr><td>Female</td><td>'.$value->femalecount.'</td></tr>';
						}
						$output.='</tr>';
					}
					$gradeTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcountt, 
					sum(case when Gender = 'Male' or Gender='M' or Gender='male' or Gender='MALE' or Gender='m' then 1 else 0 end) AS malecounttt,
					sum(case when Gender = 'Female' or Gender='F' or Gender='female' or Gender='FEMALE' or Gender='f' then 1 else 0 end) AS femalecountt FROM users where 
					grade='$gs_gradesecs' and academicyear='$max_year' and branch='$gs_branches' and isapproved='1' and status='Active' and usertype='Student' and transportservice='$checkedPlaces' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
					foreach ($gradeTotal->result() as $value) {
						$grandTotal=$grandTotal + $value->studentcountt;
						$grandMale=$grandMale + $value->malecounttt;
						$grandFemale=$grandFemale + $value->femalecountt;
						$output.='</tr><tr><td colspan="1" rowspan="3" style="background-color:#e3e3e3"><i>Grade '.$gs_gradesecs.' Total:</i></td>
						<tr><td style="background-color:#e3e3e3">Male</td><td style="background-color:#e3e3e3"><span class="badge badge-info">'.$value->malecounttt.'</span></td><td rowspan="2" class="text-center" style="background-color:#e3e3e3"><b><i><span class="badge badge-info">'.$value->studentcountt.'</span></i></b></td>
						<tr><td style="background-color:#e3e3e3">Female</td><td style="background-color:#e3e3e3"><span class="badge badge-info">'.$value->femalecountt.'</span></td></tr>
						<tr>';
					}
				}
				$no++;
			}
		}
		$output.='</table></div>';
		return $output;
	}
	function fetch_thisTransportServiceSection($gs_branches,$checkedGrade,$checkedPlace,$max_year){
		$output ='';
		$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
		$output .='<p><h2 class="text-center"><u><b>'.$name. ' Transport Service Statistics in '.$max_year.' Academic Year</b></u></h2></p>
        <div class="table-responsive">
        <table class="tabler table-borderedr table-hover" style="width:100%;">
        <thead>
        <tr>
        	<th>No.</th>
        	<th>Name</th>
            <th>Student ID</th>
            <th>Branch</th>
            <th>Transport</th>
            <th>Gender</th> 
            <th>Section</th>
        </tr>
        </thead>
       <tbody>';
       $no=1;
       	foreach($checkedGrade as $checkedGrades){
       		foreach($checkedPlace as $checkedPlaces){
		       	$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->where('gradesec',$checkedGrades);
				$this->db->where(array('branch'=>$gs_branches));
				$this->db->where(array('transportservice'=>$checkedPlaces));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				foreach ($query ->result() as $value) {
					$id=$value->id;
					$output .='<tr class="delete_mem'.$value->id.'">
					<td>'.$no.'. </td>
					<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
					<td>'.$value->username.' </td>
					<td>'.$value->branch.' </td>
					<td>'.$value->transportservice.' </td>
					<td>'.$value->gender.'</td>
		            <td>'.$value->gradesec.'</td> 
		            </tr>';
		            $no++;
				}
			}
		}
		$output.='</tbody></table></div><div class="dropdown-divider"></div>';
		return $output;
	}
	function fetch_thisSummaryRecordNoName($gs_branches,$gs_gradesec,$max_year){
		$output='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Grade Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>
		<div class="table-responsive">
		<table class="tabler table-bordered table-hover" style="width:100%;">';
		$no=1;$grandTotal=0;$grandMale=0;$grandFemale=0;
		foreach($gs_gradesec as $gs_gradesecs){
			$querySection=$this->db->query("select gradesec from users where academicyear='$max_year' and branch='$gs_branches' and grade='$gs_gradesecs' and isapproved='1' and status='Active' and usertype='Student' group by gradesec order by gradesec ");
			if($querySection->num_rows()>0){
				$totalSection=($querySection->num_rows() * 3) + 5;
				$output.='<tr><td rowspan='.$totalSection.'>'.$no.'</td><td rowspan='.$totalSection.'> Grade: '.$gs_gradesecs.'</td>';
			    foreach($querySection->result() as $sectionNum){
			    	$gradesec=$sectionNum->gradesec;
					$output.='<tr><td rowspan="3">'.$sectionNum->gradesec.'</td>';
					$gradeSecTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' or Gender='MALE' or Gender='m' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' or Gender='FEMALE' or Gender='f' then 1 else 0 end) AS femalecount FROM users where gradesec='$gradesec' and academicyear='$max_year' and branch='$gs_branches' and isapproved='1' and status='Active' and usertype='Student' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
					foreach ($gradeSecTotal->result() as $value) {
						$output.='<tr><td>Male</td><td>'.$value->malecount.'</td><td rowspan="2" class="text-center"> <span class="badge badge-primary">'.$value->studentcount.'</span></td> </tr>';
						$output.='<tr><td>Female</td><td>'.$value->femalecount.'</td></tr>';
					}
					$output.='</tr>';
				}
				$gradeTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcountt, 
				sum(case when Gender = 'Male' or Gender='M' or Gender='male' or Gender='MALE' or Gender='m' then 1 else 0 end) AS malecounttt,
				sum(case when Gender = 'Female' or Gender='F' or Gender='female' or Gender='FEMALE' or Gender='f' then 1 else 0 end) AS femalecountt FROM users where 
				grade='$gs_gradesecs' and academicyear='$max_year' and branch='$gs_branches' and isapproved='1' and status='Active' and usertype='Student' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
				foreach ($gradeTotal->result() as $value) {
					$grandTotal=$grandTotal + $value->studentcountt;
					$grandMale=$grandMale + $value->malecounttt;
					$grandFemale=$grandFemale + $value->femalecountt;
					$output.='</tr><tr><td colspan="1" rowspan="3" style="background-color:#e3e3e3"><i>Grade '.$gs_gradesecs.' Total:</i></td>
					<tr><td style="background-color:#e3e3e3">Male</td><td style="background-color:#e3e3e3"><span class="badge badge-info">'.$value->malecounttt.'</span></td><td rowspan="2" class="text-center" style="background-color:#e3e3e3"><b><i><span class="badge badge-info">'.$value->studentcountt.'</span></i></b></td>
					<tr><td style="background-color:#e3e3e3">Female</td><td style="background-color:#e3e3e3"><span class="badge badge-info">'.$value->femalecountt.'</span></td></tr>
					<tr>';
				}
			}
			$no++;
		}
		$output.='<tr style="background-color:#e3e3e3"><td colspan="3" rowspan="3"><i>Grand Total For Selected Grade:</i></td>
			<tr><td style="background-color:#e3e3e3">Male</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandMale.'</span></td><td rowspan="2" class="text-center" style="background-color:#e3e3e3"><b><i><span class="badge badge-success">'.$grandTotal.'</span></i></b></td>
					<tr><td style="background-color:#e3e3e3">Female</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandFemale.'</span></td></tr>

		</tr>';
		$output.='</table></div>';
		return $output;
	}
	function fetch_thisStaff_SummaryRecordNoName($gs_branches,$max_year){
		$output='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Staff Report Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>
		<div class="table-responsive">
		<table class="tabler table-bordered table-hover" style="width:100%;">';
		$no=1;$grandTotal=0;$grandMale=0;$grandFemale=0;
		$querySection=$this->db->query("select usertype from users where branch='$gs_branches' and usertype!='Student' and isapproved='1' and status='Active' and usertype!='' group by usertype order by usertype ASC ");
		if($querySection->num_rows()>0){
			$totalSection=($querySection->num_rows() * 3) + 5;
			/*$output.='<tr><td rowspan='.$totalSection.'>'.$no.'</td><td rowspan='.$totalSection.'> Grade: '.$gs_gradesecs.'</td>';*/
		    foreach($querySection->result() as $sectionNum){
		    	$userType=$sectionNum->usertype;
				$output.='<tr><td rowspan="3">'.$sectionNum->usertype.'</td>';
				$gradeSecTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' or Gender='MALE' or Gender='m' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' or Gender='FEMALE' or Gender='f' then 1 else 0 end) AS femalecount FROM users where usertype='$userType' and branch='$gs_branches' and isapproved='1' and status='Active' and usertype!='Student' ORDER BY fname,mname,lname ASC");
				foreach ($gradeSecTotal->result() as $value) {
					$grandTotal=$grandTotal + $value->studentcount;
					$grandMale=$grandMale + $value->malecount;
					$grandFemale=$grandFemale + $value->femalecount;
					$output.='<tr><td>Male</td><td>'.$value->malecount.'</td><td rowspan="2" class="text-center"> <span class="badge badge-primary">'.$value->studentcount.'</span></td> </tr>';
					$output.='<tr><td>Female</td><td>'.$value->femalecount.'</td></tr>';
				}
				$output.='</tr>';
			}
		}
		$no++;
		$output.='<tr style="background-color:#e3e3e3"><td rowspan="3"><i>Grand Total:</i></td>
			<tr><td style="background-color:#e3e3e3">Male</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandMale.'</span></td><td rowspan="2" class="text-center" style="background-color:#e3e3e3"><b><i><span class="badge badge-success">'.$grandTotal.'</span></i></b></td>
					<tr><td style="background-color:#e3e3e3">Female</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandFemale.'</span></td></tr>

		</tr>';
		$output.='</table></div>';
		return $output;
	}
	function fetch_thisStaff_QualificationReport_Name($gs_branches,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->where('usertype!=','Student');
		$this->db->where('usertype!=','');
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
			$output.='<p><h2 class="text-center"><b><u>'.$name.' Staff Qualification Report for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>';
			$output.='<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        	<th>No.</th>
	        	<th>Name</th>
	            <th>UserType</th>
	            <th>Qualification</th>
	            <th>Gender</th>
	        </tr>
	        </thead>
	       <tbody>';
	       $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output.='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'. </td>
				<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
				<td>'.$value->usertype.' </td>
				<td>'.$value->staff_qualification.' </td>
				<td>'.$value->gender.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</tbody></table></div><div class="dropdown-divider"></div>';
		}
		
		return $output;
	}
	function fetch_thisStaff_QualificationReport_noName($gs_branches,$max_year){
		$output='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Staff Qualification Report for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>
		<div class="table-responsive">
		<table class="tabler table-bordered table-hover" style="width:100%;">';
		$no=1;$grandTotal=0;$grandMale=0;$grandFemale=0;
		$querySection=$this->db->query("select staff_qualification from users where branch='$gs_branches' and usertype!='Student' and isapproved='1' and status='Active' and usertype!='' and staff_qualification!='' group by staff_qualification order by staff_qualification ASC ");
		if($querySection->num_rows()>0){
			$totalSection=($querySection->num_rows() * 3) + 5;
			/*$output.='<tr><td rowspan='.$totalSection.'>'.$no.'</td><td rowspan='.$totalSection.'> Grade: '.$gs_gradesecs.'</td>';*/
		    foreach($querySection->result() as $sectionNum){
		    	$staff_qualifications=$sectionNum->staff_qualification;
				$output.='<tr><td rowspan="3">'.$sectionNum->staff_qualification.'</td>';
				$gradeSecTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' or Gender='MALE' or Gender='m' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' or Gender='FEMALE' or Gender='f' then 1 else 0 end) AS femalecount FROM users where staff_qualification='$staff_qualifications' and branch='$gs_branches' and isapproved='1' and status='Active' and usertype!='Student' and usertype!='' ORDER BY fname,mname,lname ASC");
				foreach ($gradeSecTotal->result() as $value) {
					$grandTotal=$grandTotal + $value->studentcount;
					$grandMale=$grandMale + $value->malecount;
					$grandFemale=$grandFemale + $value->femalecount;
					$output.='<tr><td>Male</td><td>'.$value->malecount.'</td><td rowspan="2" class="text-center"> <span class="badge badge-primary">'.$value->studentcount.'</span></td> </tr>';
					$output.='<tr><td>Female</td><td>'.$value->femalecount.'</td></tr>';
				}
				$output.='</tr>';
			}
		}
		$no++;
		$output.='<tr style="background-color:#e3e3e3"><td rowspan="3"><i>Grand Total:</i></td>
			<tr><td style="background-color:#e3e3e3">Male</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandMale.'</span></td><td rowspan="2" class="text-center" style="background-color:#e3e3e3"><b><i><span class="badge badge-success">'.$grandTotal.'</span></i></b></td>
					<tr><td style="background-color:#e3e3e3">Female</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandFemale.'</span></td></tr>

		</tr>';
		$output.='</table></div>';
		return $output;
	}
	function FecthThisDivStaffAgeWithName($gs_branches,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->where('usertype!=','Student');
		$this->db->where('usertype!=','');
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
			$output.='<p><h2 class="text-center"><b><u>'.$name.' Staff Report Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>';
			$output.='<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        	<th>No.</th>
	        	<th>Name</th>
	            <th>UserType</th>
	            <th>Gender</th>
	        </tr>
	        </thead>
	       <tbody>';
	       $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output.='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'. </td>
				<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
				<td>'.$value->usertype.' </td>
				<td>'.$value->gender.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</tbody></table></div><div class="dropdown-divider"></div>';
		}
		
		return $output;
	}
	function fetch_staff_leaving_report($gs_branches,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output ='';
			if($query->num_rows()>0){
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
			$output='<p><h2 class="text-center"><b><u>'.$name.' Staff Leaving Report for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>';
			$output .='
	         <div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        	<th>No.</th>
	        	<th>Name</th>
	        	<th>Gender</th>
	            <th>UserType</th>
	            <th>Remaining Leave days</th>
	        </tr>
	        </thead>
	       <tbody>';
	       $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$queryAttendance=$this->db->query("select count(absentdate) as totalAttendance from attendance where stuid='$id' and academicyear='$max_year' and absentype!='Late' ");
				if($queryAttendance->num_rows()>0){
					$count_attendance=$queryAttendance->row();
					$countAttendance=$count_attendance->totalAttendance;
				}else{
					$countAttendance=0;
				}
				$remainingDays=$value->leave_days - $countAttendance;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'. </td>
				<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
				<td>'.$value->gender.'</td>
				<td>'.$value->usertype.' </td>
				<td>'.$remainingDays.' </td>
	            </tr>';
	            $no++;
			}
		}
		$output.='</tbody></table></div><div class="dropdown-divider"></div>';
		return $output;
	}
	function fetch_thisSummaryRecordNoNameAge($gs_branches,$gs_gradesec,$max_year,$summaryGSAges){
		$output='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Grade Statistics for '.$max_year.' Academic Year <small>('.$gs_branches.' Branch)</small></u></b></h2></p>
		<div class="table-responsive">
		<table class="tabler table-bordered table-hover" style="width:100%;">';
		$no=1;$grandTotal=0;$grandMale=0;$grandFemale=0;
		foreach($summaryGSAges as $summaryGSAges){

			foreach($gs_gradesec as $gs_gradesecs){
				$querySection=$this->db->query("select gradesec from users where academicyear='$max_year' and branch='$gs_branches' and grade='$gs_gradesecs' and gradesec!='' and age='$summaryGSAges' group by gradesec order by gradesec ");
				if($querySection->num_rows()>0){
					$totalSection=($querySection->num_rows() * 3) + 5;
					$output.='<tr><td rowspan='.$totalSection.'>'.$no.'.</td><td rowspan='.$totalSection.'> Grade: '.$gs_gradesecs.' Age: '.$summaryGSAges.'</td>';
				    foreach($querySection->result() as $sectionNum){
				    	$gradesec=$sectionNum->gradesec;
						$output.='<tr><td rowspan="3">'.$sectionNum->gradesec.'</td>';
						$gradeSecTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' then 1 else 0 end) AS femalecount FROM users where gradesec='$gradesec' and academicyear='$max_year' and branch='$gs_branches' and age='$summaryGSAges' and status='Active' and isapproved='1' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
						foreach ($gradeSecTotal->result() as $value) {
							$output.='<tr><td>Male</td><td>'.$value->malecount.'</td><td rowspan="2" class="text-center"> <span class="badge badge-primary">'.$value->studentcount.'</span></td> </tr>';
							$output.='<tr><td>Female</td><td>'.$value->femalecount.'</td></tr>';
						}
						$output.='</tr>';
					}
					$gradeTotal = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' then 1 else 0 end) AS femalecount FROM users where grade='$gs_gradesecs' and academicyear='$max_year' and branch='$gs_branches' and age='$summaryGSAges' and status='Active' and isapproved='1' GROUP BY academicyear ORDER BY fname,mname,lname ASC");
					foreach ($gradeTotal->result() as $value) {
						$grandTotal=$grandTotal + $value->studentcount;
						$grandMale=$grandMale + $value->malecount;
						$grandFemale=$grandFemale + $value->femalecount;
						$output.='</tr><tr><td colspan="1" rowspan="3" style="background-color:#e3e3e3"><i>Grade '.$gs_gradesecs.' Total:</i></td>
						<tr><td style="background-color:#e3e3e3">Male</td><td style="background-color:#e3e3e3"><span class="badge badge-info">'.$value->malecount.'</span></td><td rowspan="2" class="text-center" style="background-color:#e3e3e3"><b><i><span class="badge badge-info">'.$value->studentcount.'</span></i></b></td>
						<tr><td style="background-color:#e3e3e3">Female</td><td style="background-color:#e3e3e3"><span class="badge badge-info">'.$value->femalecount.'</span></td></tr>
						<tr>';
					}
				}
			}
			$no++;
		}
		$output.='<tr style="background-color:#e3e3e3"><td colspan="3" rowspan="3"><i>Grand Total For Selected Grade:</i></td>
			<tr><td style="background-color:#e3e3e3">Male</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandMale.'</span></td><td rowspan="2" class="text-center" style="background-color:#e3e3e3"><b><i><span class="badge badge-success">'.$grandTotal.'</span></i></b></td>
					<tr><td style="background-color:#e3e3e3">Female</td><td style="background-color:#e3e3e3"><span class="badge badge-primary">'.$grandFemale.'</span></td></tr>

		</tr>';
		$output.='</table></div>';
		return $output;
	}
	function fetch_thisdiv_branchstudents($gs_branches,$gs_gradesec,$max_year){
		if($gs_gradesec==='KG'){
			$array=array('KG1','KG2','KG3','Nursery','LKG','UKG');
		}else if($gs_gradesec==='div1'){
			$array=array('1','2','3','4');
		}else if($gs_gradesec==='div5'){
			$array=array('5','6','7','8');
		}else if($gs_gradesec==='div9'){
			$array=array('9','10','11','12','12n','11n','12s','11s');
		}
		$this->db->order_by('fname','ASC');
		$this->db->order_by('mname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where_in('grade',$array);
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" id="tableExport" style="width:100%;">
	        <thead>
	        <tr>
	        	<th>No.</th>
	        	<th>Name</th>
	            <th>Student ID</th>
	            <th>Gender</th>            
	            <th>Grade</th>
	            <th>Section</th>
	            <th>Branch</th>
	        </tr>
	        </thead>
	       <tbody>';
	       $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'. </td>
				<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
				<td>'.$value->unique_id.' </td>
				<td>'.$value->gender.'</td>
	            <td>'.$value->grade.'</td>
	            <td>'.$value->gradesec.'</td>
	            <td>'.$value->branch.' </td> </tr>';
	            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetch_grade_branchstudents($gs_branches,$gs_gradesec,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->order_by('mname','ASC');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('gradesec'=>$gs_gradesec));
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" id="tableExport" style="width:100%;">
	        <thead>
	        <tr>
	        	<th>No.</th>
	        	<th>Student Name</th>
	            <th>Student ID</th>
	            <th>Gender</th>
	            <th>Grade</th>
	            <th>Section</th>
	            <th>Branch</th>
	        </tr>
	        </thead>
	       <tbody>';
	       $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'. </td>
				<td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
				<td>'.$value->unique_id.' </td>
	           	<td>'.$value->gender.'</td>
	            <td>'.$value->grade.'</td>
	            <td>'.$value->gradesec.'</td>
	            <td>'.$value->branch.' </td> </tr>';
	            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetch_student_idcard($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$output.='<script>var qrcode = new QRCode(
					      "qr-code'.$staff->id.'",
					      {
					        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$placeID.' ,Website: '.$website.'",
					        width:80,
					        height:60,
					        colorDark : "#000000",
					        colorLight : "#FFFFFF",
					        correctLevel : QRCode.CorrectLevel.M
					      }
					    );</script>';
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover; background-position:center; background-repeat:no-repeat;">';
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lgs-9 col-md-9 col-9">
			          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD<br>
			          		'.strtoupper($branch).' BRANCH
			          	</div>
			        </div><div class="dropdown-divider"></div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> </div>
		            </div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_parent_idcard($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover; background-position:center; background-repeat:no-repeat;">';
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lgs-9 col-md-9 col-9">
			          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> PARENT ID CARD<br>
			          		'.strtoupper($branch).' BRANCH
			          	</div>
			        </div><div class="dropdown-divider"></div>';
					$output.='
					<div class="row">
						<div class="col-md-3 col-3" style="white-space: nowrap">';
		                	if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div>
		                <div class="col-md-9 col-9">
		                    PARENT NAME: '.$staff->mname.' '.$staff->lname.' / '.$staff->mother_name.' <br>
		                 	PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
			               	$output.='<br><u><b>Transport Status: '.$placeID.'</b></u></div>
			               	<div class="col-md-12 col-12">';
			               	$queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u cross join directorplacement as dp ON dp.staff=u.username where dp.grade='$gradesec' and dp.academicyear='$max_year' and usertype!='Student' and u.branch='$branch' and isapproved='1' and status='Active' and mysign!='' ");
				             if($queryDirector->num_rows()>0){
				              $rowSignD=$queryDirector->row();
				              $signName=$rowSignD->fname;
				              $signmame=$rowSignD->mname;
				              $signlame=$rowSignD->lname;
				              $signlame=$rowSignD->lname;
				              $signSigns=$rowSignD->mysign;
				              $output.="Authorized Name:- <u>".$signName." ".$signmame."</u>
				              Signature  <img alt='Sig.' src='".base_url()."/".$signSigns."' style='height:30px;width:50px'>";
				            }else{
				              $output.="Authorized Name___________________ Signature__";
				            }
		                $output.='</div></div>
		            </div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_student_idcard_library($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$output.='<script>var qrcode = new QRCode(
					      "qr-code'.$staff->id.'",
					      {
					        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$placeID.' ,Website: '.$website.'",
					        width:80,
					        height:60,
					        colorDark : "#000000",
					        colorLight : "#FFFFFF",
					        correctLevel : QRCode.CorrectLevel.M
					      }
					    );</script>';
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover; background-position:center; background-repeat:no-repeat;">';
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lg-9 col-md-9 col-9">
			          		<h5>'.$name.'</h5> <h5><b>STUDENT LIBRARY ID CARD</b></h5>
			          		<small>'.$gyear.' ACADEMIC YEAR</small>
			          	</div>
			        </div><div class="dropdown-divider"></div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> </div>
		            </div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_summer_student_idcard($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('summerstudent');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$output.='<script>var qrcode = new QRCode(
					      "qr-code'.$staff->id.'",
					      {
					        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$placeID.' ,Website: '.$website.'",
					        width:80,
					        height:60,
					        colorDark : "#000000",
					        colorLight : "#FFFFFF",
					        correctLevel : QRCode.CorrectLevel.M
					      }
					    );</script>';
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover; background-position:center; background-repeat:no-repeat;">';
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lg-9 col-md-9 col-9">
			          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> SUMMER STUDENT ID CARD
			          		<br>
		          		'.$branch.' BRANCH
			          	</div>
			        </div><div class="dropdown-divider"></div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> </div>
		            </div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_student_idcard_seattle($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$output.='<script>var qrcode = new QRCode(
					      "qr-code'.$staff->id.'",
					      {
					        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$placeID.' ,Website: '.$website.'",
					        width:80,
					        height:60,
					        colorDark : "#000000",
					        colorLight : "#FFFFFF",
					        correctLevel : QRCode.CorrectLevel.M
					      }
					    );</script>';
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover; background-position:center; background-repeat:no-repeat;">';
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lgs-9 col-md-9 col-9">
			          		<h5><b>'.$name.'</b></h5>'.$gyear.' Academic Year <br> STUDENT ID CARD<br>
			          		'.$phone.'
			          	</div>
			        </div><div class="dropdown-divider"></div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' ';
				                    if($staff->age>0){
				                    	$output.='&nbsp;&nbsp;Age: '.$staff->age.'';
				                    }else{
				                    	$output.='&nbsp;&nbsp;Age: ______';
				                    }
				                    $output.='
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> 
		                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.'</p>
			            </div></div>
		            </div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_student_idcard_eeaa($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$output.='<script>var qrcode = new QRCode(
					      "qr-code'.$staff->id.'",
					      {
					        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$placeID.' ,Website: '.$website.'",
					        width:80,
					        height:60,
					        colorDark : "#000000",
					        colorLight : "#FFFFFF",
					        correctLevel : QRCode.CorrectLevel.M
					      }
					    );</script>';
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover; background-position:center; background-repeat:no-repeat;">';
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lgs-9 col-md-9 col-9">
			          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD <br>
		          		'.strtoupper($staff->branch).' BRANCH
			          	</div>
			        </div><div class="dropdown-divider"></div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> 
		                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.' | <i class="fas fa-phone"></i> '.$phone.' </p>
			            </div></div>
		            </div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_student_idcard_Felegeneway($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$output.='<script>var qrcode = new QRCode(
					      "qr-code'.$staff->id.'",
					      {
					        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$placeID.' ,Website: '.$website.'",
					        width:80,
					        height:60,
					        colorDark : "#000000",
					        colorLight : "#FFFFFF",
					        correctLevel : QRCode.CorrectLevel.M
					      }
					    );</script>';
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover; background-position:center; background-repeat:no-repeat;">';
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lgs-9 col-md-9 col-9">
			          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD <br>
		          		'.strtoupper($staff->branch).' BRANCH
			          	</div>
			        </div><div class="dropdown-divider"></div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> 
		                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fas fa-envelope"></i> '.$telegram.' | <i class="fas fa-phone"></i> '.$phone.' </p>
			            </div></div>
		            </div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentIdCardSeattle($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' Academic Year <br> STUDENT ID CARD<br>
		          		'.$phone.'
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' ';
				                    if($staff->age>0){
				                    	$output.='&nbsp;&nbsp;Age: '.$staff->age.'';
				                    }else{
				                    	$output.='&nbsp;&nbsp;Age: ______';
				                    }
				                    $output.='
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> 
	                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.'</p>
			            </div>
			            </div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentIdCardEeaa($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD
		          		<br>
		          		'.strtoupper($staff->branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> 
	                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.' | <i class="fas fa-phone"></i> '.$phone.'</p>
			            </div>
			            </div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentIdCardFelegeneway($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD
		          		<br>
		          		'.strtoupper($staff->branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> 
	                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fas fa-envelope"></i> '.$telegram.' | <i class="fas fa-phone"></i> '.$phone.'</p>
			            </div>
			            </div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentIdCard($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD
		          		<br> '.strtoupper($branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'&nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchParentIdCard($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> PARENT ID CARD
		          		<br> '.strtoupper($branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='
				<div class="row">
					<div class="col-md-3 col-3" style="white-space: nowrap">';
	                	if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div>
					<div class="col-md-9 col-9">
	                    PARENT NAME: '.$staff->mname.' '.$staff->lname.' / '.$staff->mother_name.' <br>
	                 	PHONE:';
		                if($staff->mobile!='' || $staff->mobile!='0'){
		                    $output.=' '.$staff->mobile.' || ';
		                }else{
		                    $output.=' - ';
		                }
		                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
		                    $output.=' '.$staff->father_mobile.' ';
		                }else{
		                    $output.=' - ';
		                }
		                $output.='<br></div>
			               	<div class="col-md-12 col-12">';
		                $queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u cross join directorplacement as dp ON dp.staff=u.username where dp.grade='$gradesec' and dp.academicyear='$max_year' and usertype!='Student' and u.branch='$branch' and isapproved='1' and status='Active' and mysign!='' ");
			             if($queryDirector->num_rows()>0){
			              $rowSignD=$queryDirector->row();
			              $signName=$rowSignD->fname;
			              $signmame=$rowSignD->mname;
			              $signlame=$rowSignD->lname;
			              $signlame=$rowSignD->lname;
			              $signSigns=$rowSignD->mysign;
			              $output.="Authorized Name:- <u>".$signName." ".$signmame."</u>
			              Signature  <img alt='Sig.' src='".base_url()."/".$signSigns."' style='height:00px;width:50px'>";
			            }else{
			              $output.="Authorized Name___________________ Signature__";
			            }
	                $output.='</div></div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentIdCard_PrimeBridge($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$address=$schoolRow->address;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo">';
				if(trim($staff->transportservice)!='Alone'){
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9" style="background-color:#9b3621;color:yellow">
		          		<b>'.$name.'</b> <br> STUDENT ID CARD <br>';
		          		if($staff->branch=='Nibretemekonnen'){
		          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' Jemo 2, Sheger City, Ethiopia(Nibrete Mekonnen Branch)</small>';
		          		}else if($staff->branch=='Debrebirhan'){
		          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' Debre Birhan, Ethiopia (Mesfin Legesse Branch)</small>';
		          		}else{
		          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' '.$address.'</small>';
		          		}
		          	$output.='</div>
		        </div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row" style="background-color:#b1d8e2">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'&nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3" style="background-color:#b1d8e2">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6" style="background-color:#b1d8e2">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left" style="background-color:#9b3621">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> 
	                <div class="col-lg-12 col-md-12 col-12" style="background-color:#b1d8e2"> 
		          		<h5>Issued Date: _____________ <br>Authorized by: __________________</h5>
		          		<small class="text-muted">We Provide a world class education by equipping and instilling in students critical thinking skills for an every changing world.</small>
		          	</div>
		          	</div>';

		        }else{
		        	$output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9" style="background-color:#0b0b72;color:yellow">
		          		<b>'.$name.'</b> <br> STUDENT ID CARD
		          		'.$phone.'<br> '.$address.'
		          		
		          	</div>
		        </div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row" style="background-color:#89c2d1">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'&nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3" style="background-color:#89c2d1">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6" style="background-color:#89c2d1">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left" style="background-color:#008080">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> 
	                <div class="col-lg-12 col-md-12 col-12" style="background-color:#89c2d1"> 
		          		<h5>Issued Date: _____________ <br>Authorized by: __________________</h5>
		          		<small class="text-muted">We Provide a world class education by equipping and instilling in students critical thinking skills for an every changing world.</small>
		          	</div>
		          	</div>';
		        }
	            $output.='</div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_student_idcard_primebridge($max_year,$checkStudent,$gradesec,$placeIDs,$branch,$gyear){
		$output='<div class="row">';
		foreach($placeIDs as $placeID){
			foreach($checkStudent as $checkStudents){
				$this->db->order_by('fname,mname,lname','ASC');
				$this->db->where(array('transportservice'=>$placeID));
				$this->db->where(array('id'=>$checkStudents));
				$this->db->where(array('status'=>'Active'));
				$this->db->where(array('branch'=>$branch));
				$this->db->where(array('isapproved'=>'1'));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->like('usertype','Student');
				$query=$this->db->get('users');
				
				$queryLinks=$this->db->get('links');
				$linksRow=$queryLinks->row();
				$telegram=$linksRow->telegram;

				foreach ($query->result() as $staff) {
					$query_school=$this->db->get('school');
					$schoolRow=$query_school->row();
					$website=$schoolRow->website;
					$logo=$schoolRow->logo;
					$name=$schoolRow->name;
					$phone=$schoolRow->phone;
					$address=$schoolRow->address;
					$output.='<script>var qrcode = new QRCode(
					      "qr-code'.$staff->id.'",
					      {
					        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$placeID.' ,Website: '.$website.'",
					        width:80,
					        height:60,
					        colorDark : "#000000",
					        colorLight : "#FFFFFF",
					        correctLevel : QRCode.CorrectLevel.M
					      }
					    );</script>';
					$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo">';
					if(trim($staff->transportservice)!='Alone'){
		            $output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lgs-9 col-md-9 col-9" style="background-color:#9b3621;color:yellow">
			          		<b>'.$name.'</b> <br> STUDENT ID CARD <br>';
			          		if($staff->branch=='Nibretemekonnen'){
		          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' Jemo 2, Sheger City, Ethiopia(Nibrete Mekonnen Branch)</small>';
			          		}else if($staff->branch=='Debrebirhan'){
			          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' Debre Birhan, Ethiopia (Mesfin Legesse Branch)</small>';
			          		}else{
			          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' '.$address.'</small>';
			          		}
		          		
			          	$output.='</div>
			        </div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12" style="background-color:#b1d8e2">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3" style="background-color:#b1d8e2">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6" style="background-color:#b1d8e2">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left" style="background-color:#9b3621">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> 
		                <div class="col-lg-12 col-md-12 col-12" style="background-color:#b1d8e2">
		          		<h5>Issued Date: _____________<br>Authorized by: __________________</h5>
		          		<small class="text-muted">We Provide a world class education by equipping and instilling in students critical thinking skills for an every changing world.</small>
		          	</div>
		                </div>';
		            }else{
		            	$output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
			          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
			          	</div>
			          	<div class="col-lgs-9 col-md-9 col-9" style="background-color:#0b0b72;color:yellow">
			          		<b>'.$name.'</b> <br> STUDENT ID CARD
			          		'.$phone.'<br> '.$address.'
		          		
			          	</div>
			        </div>';
					$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
					<div class="row">
						<div class="col-lg-12 col-md-12 col-12" style="background-color:#89c2d1">
							<div class="row">
				                <div class="col-md-12 col-12" style="white-space: nowrap">
				                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>ID: '.$staff->username.'</small>
				                </div>
				                <div class="col-md-6 col-6">
				                    <small>GRADE: '.$staff->gradesec.'</small>
				                </div>
				          
			                </div>
			            </div>';
						$output.='<div class="col-lg-3 col-md-3 col-3" style="background-color:#89c2d1">
				                	<div class="dropdown-divider"></div>
				                	<p id="qr-code'.$staff->id.'"></p>
						        </div>
				                <div class="col-lg-6 col-md-6 col-6" style="background-color:#89c2d1">
				                <div class="dropdown-divider"></div><small>PARENT PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
							    $output.='<br>
							      	<h4 style="white-space: nowrap"><u><b>'.$placeID.'</b></u></h4> </small>
				                </div>


						<div class="col-lg-3 col-md-3 col-3 pull-left" style="background-color:#008080">';
			                if($staff->profile == ''){
								$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
							}else{
								$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
							}
		                $output.='</div> 
		                <div class="col-lg-12 col-md-12 col-12" style="background-color:#89c2d1">
		          		<h5>Issued Date: _____________<br>Authorized by: __________________</h5>
		          		<small class="text-muted">We Provide a world class education by equipping and instilling in students critical thinking skills for an every changing world.</small>
		          	</div>
		                </div>';
		            }
		            $output.='</div></div>';
		        }
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentCustomIdCard_primebridge($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$address=$schoolRow->address;
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo">';
				if(trim($staff->transportservice)!='Alone'){
	            $output.='<div class="row" >
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9" style="background-color:#9b3621;color:yellow">
		          		<b>'.$name.'</b><br> STUDENT ID CARD <br>';
		          		if($staff->branch=='Nibretemekonnen'){
		          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' Jemo 2, Sheger City, Ethiopia(Nibrete Mekonnen Branch)</small>';
			          		}else if($staff->branch=='Debrebirhan'){
			          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' Debre Birhan, Ethiopia (Mesfin Legesse Branch)</small>';
			          		}else{
			          			$output.='<small class="font-weight-bold font-10" style="color:yellow">'.$phone.' '.$address.'</small>';
			          		}
		          	$output.='</div>
		        </div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row" style="background-color:#b1d8e2">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' &nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3" style="background-color:#b1d8e2">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6" style="background-color:#b1d8e2">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.=' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3" style="background-color:#9b3621">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> 
	                <div class="col-lg-12 col-md-12 col-12" style="background-color:#b1d8e2">
		          		<h5>Issued Date: _____________<br>Authorized by: __________________</h5>
		          		<small class="text-muted">We Provide a world class education by equipping and instilling in students critical thinking skills for an every changing world.</small>
		          	</div>

	                </div>';
	            }else{
	            	$output.='<div class="row" >
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9" style="background-color:#0b0b72;color:yellow">
		          		<b>'.$name.'</b><br> STUDENT ID CARD
			            '.$phone.'<br> '.$address.'
		          	</div>
		        </div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row" style="background-color:#89c2d1">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' &nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3" style="background-color:#89c2d1">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6" style="background-color:#89c2d1">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.=' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3" style="background-color:#008080">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> 
	                <div class="col-lg-12 col-md-12 col-12" style="background-color:#89c2d1">
		          		<h5>Issued Date: _____________<br>Authorized by: __________________</h5>
		          		<small class="text-muted">We Provide a world class education by equipping and instilling in students critical thinking skills for an every changing world.</small>
		          	</div>

	                </div>';
	            }
	            $output.='</div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function fetchBackIdCard_Primebrdige($pageNumber,$max_year,$gyear,$branch,$gradesec){
		$output='<div class="row">';
		$queryLinks=$this->db->get('links');
		$linksRow=$queryLinks->row();
		$telegram=$linksRow->telegram;

		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$phone=$schoolRow->phone;
		for($i=1;$i<=$pageNumber;$i++){			
			$output.='<div class="col-md-4 col-12">
				<div class="StudentViewTextInfo">';
            		$output.='
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
					<p class="text-center">የተማሪዉ የመኖሪያ አድራሻ<br>
					አዲስ አበባ <br></p>
					<p class="text-center">ክፍለ ከተማ:___________ ወረዳ____ የቤት ቁጥር_______</p>
					<h6 class="text-center"><u>ማሳሰቢያ</u></h6><br>
					<small class="text-muted">1. ይህን መታወቂያ የያዘ የአካዳሚያችን ተማሪ ነዉ/ነች::<br>
						2. ይህ መታወቂያ ካርዱ የሚያገለግለዉ ለአንድ አመት/'.$max_year.'ዓ.ም/ ብቻ ነዉ::<br>
						3. ተማሪዉ/ዋ/ ይህንን መታወቂያ ካርድ ሁልጊዜ አለበት/አለባት/::<br>
						4. ቢጠፋ ወይም ቢበላሽ ወዲያዉ አስታዉቀዉ በምትኩ ከፍሎ ያገኛል::<br>
						5. ተማሪዉ/ዋ/ የትምህርት አመቱ ሲጠናቀቅ ካርዱ ይመለሳል::<br>
						6. መታወቂያ ካርዱ ጥቅም ላይ የሚዉለዉ የትምህርት ቤቱ ማህተምና በሚመለከተዉ ሲፈረምበት ብቻ ነዉ::<br>
						7. መታወቂያዉን አሳልፎ ለሁለተኛ ወገን መስጠት አይቻልም::<br><br>
						<span class="text-center">የተማሪዉ/ዋ/ ፊርማ __________ ቀን __________</span>
						</small>
					
		            </div>
				</div>
		           
            	</div>
            </div>';
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentIdCard_Library($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9">
		          		<h5>'.$name.'</h5> <h5><b>STUDENT LIBRARY ID CARD</b></h5>
		          		<small>'.$gyear.' ACADEMIC YEAR</small>
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' 
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentIdCard_Mountolive($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD
		          		<br> '.strtoupper($branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchSummerStudentIdCard($max_year,$checkStudent,$gradesec,$branch,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('id'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('branch'=>$branch));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('summerstudent');
			
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "qr-code'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.', Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br>SUMMER STUDENT ID CARD<br>
		          		'.$branch.' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'&nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			            
		                </div>
		            </div>';
					$output.='<div class="col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="qr-code'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div>
						      	<small>PARENT PHONE: '.$staff->mobile.' || '.$staff->father_mobile.' </small>
			                </div>
					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentCustomIdCardEeaa($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');

			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD
		          		<br>
		          		'.strtoupper($staff->branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			                

		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.='<br>
						      	<h4 style="white-space: nowrap"><u><b>'.$staff->transportservice.'</b></u></h4> </small>
			                </div>

					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div>
	                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.' | <i class="fas fa-phone"></i> '.$phone.'</p>
			            </div>
	                </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentCustomIdCardFelegeneway($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$phone=$schoolRow->phone;

		$queryLinks=$this->db->get('links');
		$linksRow=$queryLinks->row();
		$telegram=$linksRow->telegram;
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			foreach ($query->result() as $staff) {
				$age=$staff->age;
				if($age=='' || $age=='0'){
					$age='___';
				}else{
					$age=$staff->age;
				}
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD
		          		<br>
		          		'.strtoupper($staff->branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-9 col-9" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
			                </div>
			                <div class="col-md-3 col-3" style="white-space: nowrap">
			                    Age: '.$age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			                

		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.='<br>
						      	<h4 style="white-space: nowrap"><u><b>'.$staff->transportservice.'</b></u></h4> </small>
			                </div>

					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div>
	                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fas fa-envelope"></i> '.$telegram.' | <i class="fas fa-phone"></i> '.$phone.'</p>
			            </div>
	                </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentCustomIdCardSeattle($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');

			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' Academic Year <br> STUDENT ID CARD<br>
		          		'.$phone.'
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' ';
				                    if($staff->age>0 ){
				                    	$output.='&nbsp;&nbsp;Age: '.$staff->age.'';
				                    }else{
				                    	$output.='&nbsp;&nbsp;Age: ______';
				                    }
				                    $output.='
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			                

		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.='<br>
						      	<h4 style="white-space: nowrap"><u><b>'.$staff->transportservice.'</b></u></h4> </small>
			                </div>

					<div class="col-lg-3 col-md-3 col-3 pull-left">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div>
	                <div class="col-md-12 col-12">
			            	<p><i class="fas fa-website"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.'</p>
			            </div>
	                </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentCustomIdCard($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD<br>
		          		'.strtoupper($staff->branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' &nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			                

		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.='<br>
						      	<h4 style="white-space: nowrap"><u><b>'.$staff->transportservice.'</b></u></h4> </small>
			                </div>

					<div class="col-lg-3 col-md-3 col-3">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function fetchParentCustomIdCard($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');
			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;
			$query_school=$this->db->get('school');
			$schoolRow=$query_school->row();
			$website=$schoolRow->website;
			$logo=$schoolRow->logo;
			$name=$schoolRow->name;
			$phone=$schoolRow->phone;
			foreach ($query->result() as $staff) {
				$gradesec=$staff->gradesec;
				$branch=$staff->branch;
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> PARENT ID CARD<br>
		          		'.strtoupper($staff->branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-3 col-3" style="white-space: nowrap">';
			                	if($staff->profile == ''){
									$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
								}else{
									$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
								}
			                    $output.='</div>
			                    <div class="col-md-9 col-9">
			                    PARENT NAME: '.$staff->mname.' '.$staff->lname.' / '.$staff->mother_name.' <br>
			                 	PHONE:';
				                if($staff->mobile!='' || $staff->mobile!='0'){
				                    $output.=' '.$staff->mobile.' || ';
				                }else{
				                    $output.=' - ';
				                }
				                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
				                    $output.=' '.$staff->father_mobile.' ';
				                }else{
				                    $output.=' - ';
				                }
				                $output.='<br></div>
			               	<div class="col-md-12 col-12">';
				                $queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u cross join directorplacement as dp ON dp.staff=u.username where dp.grade='$gradesec' and dp.academicyear='$max_year' and usertype!='Student' and u.branch='$branch' and isapproved='1' and status='Active' and mysign!='' ");
					             if($queryDirector->num_rows()>0){
					              $rowSignD=$queryDirector->row();
					              $signName=$rowSignD->fname;
					              $signmame=$rowSignD->mname;
					              $signlame=$rowSignD->lname;
					              $signlame=$rowSignD->lname;
					              $signSigns=$rowSignD->mysign;
					              $output.="Authorized Name:- <u>".$signName." ".$signmame."</u>
					              Signature  <img alt='Sig.' src='".base_url()."/".$signSigns."' style='height:30px;width:50px'>";
					            }else{
					              $output.="Authorized Name___________________ Signature__";
					            }
							$output.='</div>
		                </div>
		            </div>';
	                $output.=' </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	
	function fetchStudentCustomIdCard_Library($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');

			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9">
		          		<h5>'.$name.'</h5> <h5><b>STUDENT LIBRARY ID CARD</b></h5>
		          		<small>'.$gyear.' ACADEMIC YEAR</small>
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			                

		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.='<br>
						      	<h4 style="white-space: nowrap"><u><b>'.$staff->transportservice.'</b></u></h4> </small>
			                </div>

					<div class="col-lg-3 col-md-3 col-3">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function fetchStudentCustomIdCard_Mountolive($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('users');

			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			foreach ($query->result() as $staff) {
				$query_school=$this->db->get('school');
				$schoolRow=$query_school->row();
				$website=$schoolRow->website;
				$logo=$schoolRow->logo;
				$name=$schoolRow->name;
				$phone=$schoolRow->phone;
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> STUDENT ID CARD<br>
		          		'.strtoupper($staff->branch).' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' 
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			                

		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.='<br>
						      	<h4 style="white-space: nowrap"><u><b>'.$staff->transportservice.'</b></u></h4> </small>
			                </div>

					<div class="col-lg-3 col-md-3 col-3">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function fetchSummer_StudentCustomIdCard($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->like('usertype','Student');
			$query=$this->db->get('summerstudent');

			$queryLinks=$this->db->get('links');
			$linksRow=$queryLinks->row();
			$telegram=$linksRow->telegram;

			$query_school=$this->db->get('school');
			$schoolRow=$query_school->row();
			$website=$schoolRow->website;
			$logo=$schoolRow->logo;
			$name=$schoolRow->name;
			$phone=$schoolRow->phone;
			foreach ($query->result() as $staff) {
				$branch=$staff->branch;
				$output.='<script>var qrcode = new QRCode(
				      "customqr-codee'.$staff->id.'",
				      {
				        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', ID: '.$staff->username.',Transport Service '.$staff->transportservice.' ,Website: '.$website.'",
				        width:80,
				        height:60,
				        colorDark : "#000000",
				        colorLight : "#FFFFFF",
				        correctLevel : QRCode.CorrectLevel.M
				      }
				    );</script>';
				$output.='<div class="col-md-4 col-12"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
		          	</div>
		          	<div class="col-lgs-9 col-md-9 col-9">
		          		<h5><b>'.$name.'</b></h5>'.$gyear.' ACADEMIC YEAR <br> SUMMER STUDENT ID CARD
			          		<br>
		          		'.$branch.' BRANCH
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">
						<div class="row">
			                <div class="col-md-12 col-12" style="white-space: nowrap">
			                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.' &nbsp;&nbsp;Age: '.$staff->age.'
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>ID: '.$staff->username.'</small>
			                </div>
			                <div class="col-md-6 col-6">
			                    <small>GRADE: '.$staff->gradesec.'</small>
			                </div>
			                

		                </div>
		            </div>';
					$output.='<div class="col-lg-3 col-md-3 col-3">
			                	<div class="dropdown-divider"></div>
			                	<p id="customqr-codee'.$staff->id.'"></p>
					        </div>
			                <div class="col-lg-6 col-md-6 col-6">
			                <div class="dropdown-divider"></div><small>PARENT PHONE:';
			                if($staff->mobile!='' || $staff->mobile!='0'){
			                    $output.=' '.$staff->mobile.' || ';
			                }else{
			                    $output.=' - ';
			                }
			                if($staff->father_mobile!='' || $staff->father_mobile!='0'){
			                    $output.=' '.$staff->father_mobile.' ';
			                }else{
			                    $output.=' - ';
			                }
						    $output.='<br>
						      	<h4 style="white-space: nowrap"><u><b>'.$staff->transportservice.'</b></u></h4> </small>
			                </div>

					<div class="col-lg-3 col-md-3 col-3">';
		                if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 100px;width: 90px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 100px;width: 90px;">';
						}
	                $output.='</div> </div>
	            
	            </div></div>';
	        }
		}
		$output.='</div>';
		return $output;
	}
	function updateSummer_StudentservicePlace($max_year,$checkStudent,$gyear,$newServicePlaceName){
		$output='';
		foreach($checkStudent as $checkStudents){
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->set('transportservice',$newServicePlaceName);
			$query=$this->db->update('summerstudent');	
		}
		if($query){
			$output .='<div class="col-lg-12"><div class="alert alert-success alert-dismissible show fade">
	            <div class="alert-body">
	                <button class="close"  data-dismiss="alert">
	                    <span>&times;</span>
	                </button>
	            <i class="fas fa-check-circle"> </i> Saved Successfully.
	           </div></div></div>';
		}else{
			$output .='<div class="col-lg-12"><div class="alert alert-warning alert-dismissible show fade">
	            <div class="alert-body">
	                <button class="close"  data-dismiss="alert">
	                    <span>&times;</span>
	                </button>
	            <i class="fas fa-check-circle"> </i> Ooops Please try again.
	           </div></div></div>';
		}
		return $output;
	}
	function fetchBackIdCard($pageNumber,$max_year,$gyear,$branch,$gradesec){
		$output='<div class="row">';
		$queryLinks=$this->db->get('links');
		$linksRow=$queryLinks->row();
		$telegram=$linksRow->telegram;

		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$phone=$schoolRow->phone;
		for($i=1;$i<=$pageNumber;$i++){			
			$output.='<div class="col-md-4 col-12">
				<div class="StudentViewTextInfo">';
            		$output.='<div class="row">
						<div class="col-lg-3 col-md-3 col-3">
	          				<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
	          			</div>
	          			<div class="col-lgs-9 col-md-9 col-9">
	          			<h4><b>'.$name.'</b></h4>'.$max_year.'E.C ('.$gyear.') ACADEMIC YEAR <br> STUDENT ID CARD
	          		</div>
	        	</div>
	        	<div class="dropdown-divider"></div>
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">';
					$queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u cross join directorplacement as dp ON dp.staff=u.username where dp.grade='$gradesec' and dp.academicyear='$max_year' and usertype!='Student' and u.branch='$branch' and isapproved='1' and status='Active' and mysign!='' ");
		             if($queryDirector->num_rows()>0){
		              $rowSignD=$queryDirector->row();
		              $signName=$rowSignD->fname;
		              $signmame=$rowSignD->mname;
		              $signlame=$rowSignD->lname;
		              $signlame=$rowSignD->lname;
		              $signSigns=$rowSignD->mysign;
		              $output.="<p>Director’s Name:- <u>".$signName." ".$signmame."</u><br>
		              Signature  <img alt='Sig.' src='".base_url()."/".$signSigns."' style='height:50px;width:140px'></p>";
		            }else{
		              $output.="<p>Director’s Name<br>______________________</p>
		              <p>Signature____________</p>";
		            }
					$output.='
		            </div>
				</div>
            	<div class="dropdown-divider"></div>
		            <div class="row">
		            	<div class="col-md-12 col-12">
			            	<p><i class="fas fa-globe"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.' <i class="fas fa-phone"></i> '.$phone.'</p>
			            </div>
	            	</div>
            	</div>
            </div>';
		}
		$output.='</div>';
		return $output;
	}
	function fetchBackStaffsIdCard($pageNumber,$max_year,$gyear,$branch){
		$output='<div class="row">';
		$queryLinks=$this->db->get('links');
		$linksRow=$queryLinks->row();
		$telegram=$linksRow->telegram;

		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$phone=$schoolRow->phone;
		$email=$schoolRow->email;
		for($i=1;$i<=$pageNumber;$i++){			
			$output.='<div class="col-md-4 col-12">
				<div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
            		$output.='<p class="">መታወቂያው የሚያገለግለው ለአንድ አመት/'.$max_year.' ዓ.ም/ ብቻ መሆኑን እያሳወቅን ይህንን የመታወቂያ ካርድ የያዘ ግለሰብ የት/ቤታችን ሰራተኛ መሆኑን እናረጋግጣለን፡፡
            		 The holder of this ID CARD is our Organization employee & will valid only for One Year /'.$max_year.' E.C/ .</p>
	        	<div class="dropdown-divider"></div>
				<div class="row">
					<div class="col-lg-12 col-md-12 col-12">';
					$queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u where u.branch='$branch' and isapproved='1' and finalapproval='1' and status='Active' and mysign!='' ");
		             if($queryDirector->num_rows()>0){
		              $rowSignD=$queryDirector->row();
		              $signName=$rowSignD->fname;
		              $signmame=$rowSignD->mname;
		              $signlame=$rowSignD->lname;
		              $signlame=$rowSignD->lname;
		              $signSigns=$rowSignD->mysign;
		              $output.="Authorized Name  <u><b>".$signName." ".$signmame."</b></u> <br>Signature <img alt='' src='".base_url()."/".$signSigns."' class='' style='height:40px;width:120px'>";
		            }else{
		              $output.="Authorized Name ____________________ <br>Signature ____________";
		            }
					$output.='
		            </div>
				</div>
            	<div class="dropdown-divider"></div>
		           <small>It is valid only if it has the seal of the school on it.</small> 
            	</div>
            </div>';
		}
		$output.='</div>';
		return $output;
	}
	function fetchStaffsCustomIdCard($max_year,$checkStudent,$gyear){
		$output='<div class="row">';
		foreach($checkStudent as $checkStudents){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->where(array('username'=>$checkStudents));
			$this->db->where(array('status'=>'Active'));
			$this->db->where(array('isapproved'=>'1'));
			$query=$this->db->get('users');
			$query_school=$this->db->get('school');
			$schoolRow=$query_school->row();
			$website=$schoolRow->website;
			$logo=$schoolRow->logo;
			$name=$schoolRow->name;
			$phone=$schoolRow->phone;
			$slogan=$schoolRow->slogan;
			$address=$schoolRow->address;
			foreach ($query->result() as $staff) {
				
				$output.='<div class="col-md-4 col-6"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 70px;width: 70px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9" style="background-color:#2b81cc;color:yellow"> 
		          	<h5><b>'.$name.'</b></h5>';
		        		if($staff->branch=='Nibretemekonnen'){
		          			$output.='<span class="font-weight-bold font-10">'.$phone.' Jemo 2, Sheger City, Ethiopia(Nibrete Mekonnen Branch)</span>';
		          		}else if($staff->branch=='Debrebirhan'){
		          			$output.='<span class="font-weight-bold font-10">'.$phone.' Debre Birhan, Ethiopia (Mesfin Legesse Branch)</span>';
		          		}else{
		          			$output.='<span class="font-weight-bold font-10">'.$phone.' '.$address.'</span>';
		          		}
		          		$output.='<br><span class="font-weight-bold font-10">EMPLOYEE`S ID CARD</span>
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-9 col-md-9 col-9"> ';
                    $output.='
                      <span class="font-weight-bold">Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br>
                      Position: '.$staff->usertype.' &nbsp; &nbsp;&nbsp;Sex: '.$staff->gender.'<br>
                      Phone: '.$staff->mobile.' <br> Email: '.$staff->email.'</div>
                      <div class="col-lg-3 col-md-3 col-3">';
                      	if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 70px;width: 80px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 70px;width: 80px;">';
						}
                      $output.='</div>
                      <div class="col-lg-12 col-md-12 col-12"> 
                      Address: City: '.$staff->city.' &nbsp; &nbsp;&nbsp; Sub city:'.$staff->sub_city.'<br>
                      Woreda: '.$staff->woreda.'  &nbsp; &nbsp;&nbsp;  Nationality: '.$staff->nationality.'<br>
                      Issued Date: '.$max_year.'E.C ('.date('M-d-Y').'G.C)
                      <div class="dropdown-divider"></div>
                      <small class="text-center">'.$slogan.'</small>
                    </div>';
				$output.='
					</div>
	            </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_staff_idcard($max_year,$branch,$gyear){
		$output='';
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('branch'=>$branch));
		/*$this->db->where(array('academicyear'=>$max_year));*/
		$this->db->where('usertype!=','Student');
		$query=$this->db->get('users');
		$output.='<div class="row">';

		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$phone=$schoolRow->phone;
		$address=$schoolRow->address;
		$slogan=$schoolRow->slogan;
		foreach ($query->result() as $staff) {
				
				$output.='<div class="col-md-4 col-6"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
	            $output.='<div class="row">
					<div class="col-lg-3 col-md-3 col-3">
		          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 70px;width: 70px;"> 
		          	</div>
		          	<div class="col-lg-9 col-md-9 col-9" style="background-color:#2b81cc;color:yellow">
		          	<h5><b>'.$name.'</b></h5>';
		        		if($staff->branch=='Nibretemekonnen'){
		          			$output.='<span class="font-weight-bold font-10">'.$phone.' Jemo 2, Sheger City, Ethiopia(Nibrete Mekonnen Branch)</span>';
		          		}else if($staff->branch=='Debrebirhan'){
		          			$output.='<span class="font-weight-bold font-10">'.$phone.' Debre Birhan, Ethiopia (Mesfin Legesse Branch)</span>';
		          		}else{
		          			$output.='<span class="font-weight-bold font-10">'.$phone.' '.$address.'</span>';
		          		}
		          		$output.='<br><span class="font-weight-bold font-10">EMPLOYEE`S ID CARD</span>
		          	</div>
		        </div><div class="dropdown-divider"></div>';
				$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
				<div class="row">
					<div class="col-lg-9 col-md-9 col-9"> ';
                    $output.='
                      <span class="font-weight-bold">Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br>
                      Position: '.$staff->usertype.' &nbsp; &nbsp;&nbsp;Sex: '.$staff->gender.'<br>
                      Phone: '.$staff->mobile.' <br> Email: '.$staff->email.'</div>
                      <div class="col-lg-3 col-md-3 col-3">';
                      	if($staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 70px;width: 80px;">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 70px;width: 80px;">';
						}
                      $output.='</div>
                      <div class="col-lg-12 col-md-12 col-12"> 
                      Address: City: '.$staff->city.' &nbsp; &nbsp;&nbsp; Sub city:'.$staff->sub_city.'<br>
                      Woreda: '.$staff->woreda.'  &nbsp; &nbsp;&nbsp;  Nationality: '.$staff->nationality.'<br>
                      Issued Date: '.$max_year.'E.C ('.date('M-d-Y').'G.C)
                      <div class="dropdown-divider"></div>
                      <small class="text-center">'.$slogan.'</small>
                    </div>';
				$output.='
					</div>
	            </div></div>';
			}
		$output.='</div>';
		return $output;

	}
	function fetch_staff_idcardDirector($max_year,$branch,$gyear,$myDivision){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('status2'=>$myDivision));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		$output='<div class="row">';
		
			
		$queryLinks=$this->db->get('links');
		$linksRow=$queryLinks->row();
		$telegram=$linksRow->telegram;

		foreach ($query->result() as $staff) {
			$query_school=$this->db->get('school');
			$schoolRow=$query_school->row();
			$website=$schoolRow->website;
			$logo=$schoolRow->logo;
			$name=$schoolRow->name;
			$phone=$schoolRow->phone;
			$output.='<script>var qrcode = new QRCode(
			      "qr-codeStaff'.$staff->id.'",
			      {
			        text: "Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.', Position: '.$staff->usertype.', Website: '.$website.'",
			        width:80,
			        height:70,
			        colorDark : "#000000",
			        colorLight : "#FFFFFF",
			        correctLevel : QRCode.CorrectLevel.M
			      }
			    );</script>';
			$output.='<div class="col-md-4 col-6"><div class="StudentViewTextInfo" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">';
            $output.='<div class="row">
				<div class="col-lg-3 col-md-3 col-3">
	          		<img src="'.base_url().'/logo/'. $logo.'" alt="logo" style="height: 80px;width: 80px;"> 
	          	</div>
	          	<div class="col-lg-9 col-md-9 col-9">
	          		<h5><b>'.$name.'</b></h5>'.$gyear.' Academic Year <br> EMPLOYEE ID CARD <br>
	          		'.$phone.'
	          	</div>
	        </div><div class="dropdown-divider"></div>';
			$output.='<input type="hidden" class="qrGeneratorFname" value="'.$staff->fname.'">
			<div class="row">
				<div class="col-lg-12 col-md-12 col-12">
					<div class="row">
		                <div class="col-md-12 col-12" style="white-space: nowrap">
		                    Name: '.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
		                </div>
		                <div class="col-md-4 col-4">
		                <small>ID CARD:'.substr($name,0,3).'/'.substr($staff->mobile,-4).'</small>
		                </div>
		                <div class="col-md-4 col-4">
		                    <small>Phone: '.$staff->mobile.'</small>
		                </div>
		                <div class="col-md-4 col-4">
		                    <small>Position: '.$staff->usertype.'</small>
		                </div>
		            
	                </div>
	            </div>';
				$output.='
				<div class="col-md-4 col-4">
				<div class="dropdown-divider"></div>';
	                if($staff->profile == ''){
						$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 80px;width: 90px;">';
					}else{
						$output.='<img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" style="border-radius:5px;height: 80px;width: 90px;">';
					}
                $output.='</div>
                <div class="col-md-4 col-4">
		            <div class="dropdown-divider"></div>
		               <p id="qr-codeStaff'.$staff->id.'"></p>
				    </div>
				<div class="col-md-4 col-4 pull-right">
				    <div class="dropdown-divider"></div>School Stamp.
				</div>
                <div class="col-md-12 col-12">
                <small class="text-muted"><p class="StudentViewTextInfo"> The holder of this ID card is our Organization employee.</p><p><i class="fas fa-website"></i> '.$website.' | <i class="fab fa-telegram-plane"></i> '.$telegram.'</p> </small>
                </div> </div>
            </div></div>';
		}
		$output.='</div>';
		return $output;

	}
	function delete_student($id){
		$this->db->where(array('id'=>$id));
		$this->db->delete('users');
	}
	function fetch_staffss($max_year){
		$this->db->order_by('fname','DESC');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->not_like('usertype','Student');
		$query=$this->db->get('users');
		return $query->result();
	}
	function viewStudentPrint($editedId,$max_year){
		$this->db->where('username',$editedId);
		$this->db->where('academicyear',$max_year);
		$this->db->group_by('username');
		$query = $this->db->get('users');
		$output='';

		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$email=$row_name['email'];
		$address=$row_name['address'];
		$phone=$row_name['phone'];
		foreach($query->result() as $lessonP){
			$output.='<div class="section-title">
			<u>Student Information</u></div>
			<div class="row">
				<div class="col-md-3 col-3">
				<img alt="image" src="'.base_url().'/profile/'.$lessonP->profile.'" class="border-circle-4profile">
				</div>
				<div class="col-md-9 col-9">
	            	<div class="row StudentViewTextInfo">
	                  <div class="col-md-3 col-6 b-r">
	                    <strong>Full Name</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->fname.' '.$lessonP->mname.' '.$lessonP->lname.'</p>
	                  </div>
	                  <div class="col-md-3 col-6 b-r">
	                    <strong>Gender</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->gender.'</p>
	                  </div>
	                  <div class="col-md-3 col-6 b-r">
	                    <strong>Birth Date</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->dob.'</p>
	                  </div>
	                  <div class="col-md-3 col-6 b-r">
	                    <strong>Grade</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->grade.'</p>
	                  </div>
	                  <div class="col-md-3 col-6 b-r">
	                    <strong>Section</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->section.'</p>
	                  </div>
	                  <div class="col-md-3 col-6 b-r">
	                    <strong>Email</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->email.'</p>
	                  </div>
	                  <div class="col-md-3 col-6">
	                    <strong>Mother Name</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->mother_name.'</p>
	                  </div>
	                  <div class="col-md-3 col-6">
	                    <strong>Mother Mobile</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->mobile.'</p>
	                  </div>
	                  <div class="col-md-3 col-6">
	                    <strong>Father Mobile</strong>
	                    <br>
	                    <p class="text-muted">'.$lessonP->father_mobile.'</p>
	                  </div>
	                </div>
                </div>
            </div>
            <p class="m-t-30"><u>Student Status</u>: '.$lessonP->status.' <i class="fas fa-check-circle"> </i> </p>
            <p></p>
            <div class="section-title"><u>Adress</u></div>
            <ul>
            	<li>City: '.$lessonP->city.'</li>
            	<li>Sub city: '.$lessonP->sub_city.'</li>
              	<li>Woreda: '.$lessonP->woreda.'</li>
              	<li>Kebele: '.$lessonP->woreda.'</li>
            </ul>
            <div class="section-title"><u>School Information</u></div>
            <ul>
              <li>Name: '.$school_name.'</li>
              <li>Phone: '.$phone.'</li>
              <li>Email: '.$email.'</li>
              <li>Address: '.$address.'</li>
            </ul> ';
		}
		return $output;
	}
	function fetch_student_toedit($id,$max_year){
		$this->db->where(array('unique_id'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('users');
		$nationals = array(
          'Afghan',
          'Albanian',
          'Algerian',
          'American',
          'Andorran',
          'Angolan',
          'Antiguans',
          'Argentinean',
          'Armenian',
          'Australian',
          'Austrian',
          'Azerbaijani',
          'Bahamian',
          'Bahraini',
          'Bangladeshi',
          'Barbadian',
          'Barbudans',
          'Batswana',
          'Belarusian',
          'Belgian',
          'Belizean',
          'Beninese',
          'Bhutanese',
          'Bolivian',
          'Bosnian',
          'Brazilian',
          'British',
          'Bruneian',
          'Bulgarian',
          'Burkinabe',
          'Burmese',
          'Burundian',
          'Cambodian',
          'Cameroonian',
          'Canadian',
          'Cape Verdean',
          'Central African',
          'Chadian',
          'Chilean',
          'Chinese',
          'Colombian',
          'Comoran',
          'Congolese',
          'Costa Rican',
          'Croatian',
          'Cuban',
          'Cypriot',
          'Czech',
          'Danish',
          'Djibouti',
          'Dominican',
          'Dutch',
          'East Timorese',
          'Ecuadorean',
          'Egyptian',
          'Emirian',
          'Equatorial Guinean',
          'Eritrean',
          'Estonian',
          'Ethiopian',
          'Fijian',
          'Filipino',
          'Finnish',
          'French',
          'Gabonese',
          'Gambian',
          'Georgian',
          'German',
          'Ghanaian',
          'Greek',
          'Grenadian',
          'Guatemalan',
          'Guinea-Bissauan',
          'Guinean',
          'Guyanese',
          'Haitian',
          'Herzegovinian',
          'Honduran',
          'Hungarian',
          'I-Kiribati',
          'Icelander',
          'Indian',
          'Indonesian',
          'Iranian',
          'Iraqi',
          'Irish',
          'Israeli',
          'Italian',
          'Ivorian',
          'Jamaican',
          'Japanese',
          'Jordanian',
          'Kazakhstani',
          'Kenyan',
          'Kittian and Nevisian',
          'Kuwaiti',
          'Kyrgyz',
          'Laotian',
          'Latvian',
          'Lebanese',
          'Liberian',
          'Libyan',
          'Liechtensteiner',
          'Lithuanian',
          'Luxembourger',
          'Macedonian',
          'Malagasy',
          'Malawian',
          'Malaysian',
          'Maldivan',
          'Malian',
          'Maltese',
          'Marshallese',
          'Mauritanian',
          'Mauritian',
          'Mexican',
          'Micronesian',
          'Moldovan',
          'Monacan',
          'Mongolian',
          'Moroccan',
          'Mosotho',
          'Motswana',
          'Mozambican',
          'Namibian',
          'Nauruan',
          'Nepali',
          'New Zealander',
          'Nicaraguan',
          'Nigerian',
          'Nigerien',
          'North Korean',
          'Northern Irish',
          'Norwegian',
          'Omani',
          'Pakistani',
          'Palauan',
          'Panamanian',
          'Papua New Guinean',
          'Paraguayan',
          'Peruvian',
          'Polish',
          'Portuguese',
          'Qatari',
          'Romanian',
          'Russian',
          'Rwandan',
          'Saint Lucian',
          'Salvadoran',
          'Samoan',
          'San Marinese',
          'Sao Tomean',
          'Saudi',
          'Scottish',
          'Senegalese',
          'Serbian',
          'Seychellois',
          'Sierra Leonean',
          'Singaporean',
          'Slovakian',
          'Slovenian',
          'Solomon Islander',
          'Somali',
          'South African',
          'South Korean',
          'Spanish',
          'Sri Lankan',
          'Sudanese',
          'Surinamer',
          'Swazi',
          'Swedish',
          'Swiss',
          'Syrian',
          'Taiwanese',
          'Tajik',
          'Tanzanian',
          'Thai',
          'Togolese',
          'Tongan',
          'Trinidadian/Tobagonian',
          'Tunisian',
          'Turkish',
          'Tuvaluan',
          'Ugandan',
          'Ukrainian',
          'Uruguayan',
          'Uzbekistani',
          'Venezuelan',
          'Vietnamese',
          'Welsh',
          'Yemenite',
          'Zambian',
          'Zimbabwean'
        );
		$arrayMarital=array('Single','Married','Separated','Divorced','Widowed');
		$output='<form method="POST" id="updateStuForm" class="">
		<div class="row">';
		foreach ($query->result() as $stuValue) {
			if ($this->session->userdata('usertype') === 'superAdmin' && !empty($stuValue->fayda_number)) {
				$fayda_number = $this->secure->decrypt($stuValue->fayda_number);
		}else {
				$fayda_number = $stuValue->fayda_number;
			}
			$output.='<input type="hidden" name="stuAcademicYear" value="'.$max_year.'">
			<input type="hidden" name="stuStuid" value="'.$stuValue->unique_id.'">
			<input type="hidden" class="form-control" name="stUsername" value="'.$stuValue->username .'">

			<div class="text-center"> 
			<div class="activity-icon text-white support-ticket pull-right">';
				if($stuValue->profile == ''){
					$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="border-radius:5px;height: 90px;width: 90px;" class="user-img mr-2">';
				}else{
					$output.='<img alt="Photo" src="'.base_url().'/profile/'.$stuValue->profile.'" style="border-radius:5px;height: 90px;width: 90px;" class="user-img mr-2">';
				}
            $output.='</div></div>';

			$output.='
			<div class="form-group col-lg-2 col-6">
	            <label>UserName/ID</label>
	            <input type="text" disabled="disabled" class="form-control" value="'.$stuValue->username .'">
            </div>
		    <div class="form-group col-lg-2 col-6">
		        <label>First Name</label>
		        <input type="text" class="form-control" name="stuFname" value="'.$stuValue->fname.'">
		    </div>
            <div class="form-group col-lg-2 col-6">
                <label>Father Name</label>
                <input type="text" class="form-control" name="stuLname" value="'.$stuValue->mname.'">
            </div>
            <div class="form-group col-lg-2 col-6">
            	<label>Last Name</label>
            	<input type="text" class="form-control" name="stuGfname" value="'.$stuValue->lname.'">
            </div>
            <div class="form-group col-lg-2 col-6">
            	<label>Last of Last Name</label>
            	<input type="text" class="form-control" name="stuLLfname" value="'.$stuValue->last_oflast_name.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Gender</label>
                <select class="form-control stuGender" required="required" name="stuGender" id="gender">
                    <option> </option>';
                    $arrayGender=array('Male','Female');
                    foreach($arrayGender as $genderName){
	                    if($stuValue->gender == $genderName){
	                    	$output.='<option selected="selected"> '.$genderName.'  </option>';
	                    }else{
	                    	$output.='<option> '.$genderName.' </option>';
	                    }
	                }
                    $output.='
                </select>
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Date of Birth</label>
                <input type="date" class="form-control" name="stuDob" 
                value="'.date('Y-m-d', strtotime($stuValue->dob)).'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Student Age</label>
                <input type="number" class="form-control" name="stuAge" 
                value="'.$stuValue->age.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <div class="form-group">
	                <label for="Profile">Profile Photo</label>
	                <input id="profile" type="file" class="form-control stuProfile" name="stuProfile">
                </div>
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Grade</label>
                <input type="text" class="form-control" name="stuGrade" value="'.$stuValue->grade.'">
            </div>
            <div class="form-group col-lg-1 col-6">
                <label>Section</label>
                <input type="text" class="form-control" name="stuSection" value="'.$stuValue->section.'">
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Year Joined</label>
                <input type="date" class="form-control" name="yearStudentJoined" 
                value="'.date('Y-m-d', strtotime($stuValue->dateregister)).'">
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Previous School</label>
                <input type="text" class="form-control" name="previous_schoolName" 
                value="'.$stuValue->previous_school.'">
            </div>
            <div class="form-group col-lg-5 col-6">
                <label>Tell us if student has Special Needs </label>
                <input type="text" class="form-control" name="student_special_needs" value="'.$stuValue->special_needs.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Father Mobile</label>
                <input type="text" class="form-control" name="father_mobile" value="'.$stuValue->father_mobile.'">
            </div>
            <div class="form-group col-lg-2 col-6">
              	<div class="form-group">
                	<label for="Mobile">Marital Status</label>
                	<select class="form-control selectric" name="marital_Status" id="marital_Status">
                  		<option> </option>';
                  		foreach($arrayMarital as $arrayMaritals){
                  			if($arrayMaritals==$stuValue->marital_status){
                  				$output.='<option selected="selected"> '.$arrayMaritals.'</option>';
                  			}else{
                  				$output.='<option> '.$arrayMaritals.'</option>';
                  			}
                  		}
                	$output.='</select>
              	</div>
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Father`s Date of Birth</label>
                <input type="date" class="form-control" name="fatherDateoB" 
                value="'.date('Y-m-d', strtotime($stuValue->father_dob)).'">
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Father`s Age</label>
                <input type="number" class="form-control" name="father_Age" value="'.$stuValue->father_age.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Work</label>
                <input type="text" class="form-control" name="work_type" value="'.$stuValue->work.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Work Place</label>
                <input type="text" class="form-control" name="work_place" value="'.$stuValue->father_workplace.'">
            </div>
            <div class="form-group col-lg-3 col-6">
              	<div class="form-group">
                	<label for="Mobile">Nationality</label>
                	<select class="form-control selectric" name="country_nationality" id="country_nationality">
                  		<option> </option>';
                  		foreach($nationals as $national){
                  			if($national==$stuValue->nationality){
                  				$output.='<option selected="selected"> '.$national.'</option>';
                  			}else{
                  				$output.='<option> '.$national.'</option>';
                  			}
                  		}
                	$output.='</select>
              	</div>
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Email</label>
                <input type="email" class="form-control" name="stuEmail" 
                value="'.$stuValue->email.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Email Optional</label>
                <input type="email" class="form-control" name="stuEmail2" 
                value="'.$stuValue->optional_email.'">
            </div> 
            <div class="form-group col-lg-3 col-6">
                <label>City</label>
                <input type="text" class="form-control" name="stuCity" 
                value="'.$stuValue->city.'">
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Sub city</label>
                <input type="text" class="form-control" name= "stuSubcity" value="'.$stuValue->sub_city.'">
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Woreda</label>
                <input type="text" class="form-control" name="stuWoreda" value="'.$stuValue->woreda.'">
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Kebele</label>
                <input type="text" class="form-control" name="stuKebele" value="'.$stuValue->kebele.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Home Place/House No</label>
                <input type="text" class="form-control" name="stuHomePlace" value="'.$stuValue->home_place.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Mother Full Name</label>
                <input type="text" class="form-control" name="stuMotherName" value="'.$stuValue->mother_name.'">
            </div>
            <div class="form-group col-lg-2 col-6">
                <label>Mother Mobile</label>
                <input type="text" class="form-control" name="stuMobile" value="'.$stuValue->mobile.'">
            </div>
            
            <div class="form-group col-lg-2 col-6">
                <label>Student Branch</label>
                <select class="form-control studentbranchName" name="studentbranchName" id="studentbranchName">
                    <option></option>';
                $queryFetchBranch=$this->db->query("SELECT * FROM branch where academicyear ='$max_year' group by name ORDER BY name ASC  ");
                foreach($queryFetchBranch->result() as $branchName){
                	if($branchName->name==$stuValue->branch){
                		$output.='<option value'.$branchName->name.' selected="selected">'.$branchName->name.'</option>';
                	}else{
                		$output.='<option value'.$branchName->name.'>'.$branchName->name.'</option>';
                	}
                }
            $output.='</select></div>
            <div class="form-group col-lg-3 col-6">
                <label>Transport Service</label>
                <select class="form-control transportService" name="transportService" id="transportService">
                    <option></option>';
                $queryFetchService=$this->db->query("select transportservice from users where academicyear ='$max_year' and transportservice!='' group by transportservice order by transportservice ASC ");
                foreach($queryFetchService->result() as $servicePlace){
                	if($servicePlace->transportservice==$stuValue->transportservice){
                		$output.='<option value'.$servicePlace->transportservice.' selected="selected">'.$servicePlace->transportservice.'</option>';
                	}else{
                		$output.='<option value'.$servicePlace->transportservice.'>'.$servicePlace->transportservice.'</option>';
                	}
                	
                }
            $output.='</select></div>
            <div class="form-group col-lg-2 col-6">
                <label>After School Program</label>
                <select class="form-control asp" name="asp" id="asp" disabled="disabled"> ';
                $arrayASp=array('Yes','No');
                foreach($arrayASp as $asp){
                	if($asp==$stuValue->asp){
                		$output.='<option value'.$asp.' selected="selected">'.$asp.'</option>';
                	}else{
                		$output.='<option value'.$asp.'>'.$asp.'</option>';
                	}
                }
            $output.='</select></div>
						<div class="form-group col-lg-2 col-6">
                <label>Fayda Number</label>
                <input type="text" class="form-control" name="faydanum" value="'. $fayda_number .'">
            </div>
            <div class="form-group col-lg-12 col-12">
                <button class="btn btn-primary pull-right" type="submit" id="save_student_profile_changes"> Save Changes
                </button>
            </div>
            ';
		}
		$output.='</div></form>';
		return $output;
	}
	function editstudent_vaccination($id,$max_year){
		$this->db->where(array('username'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('users');
		$output='
		<form method="POST" id="updateStuForm_Vaccination" class="StudentViewTextInfo">
		<div class="row">';
		$queryvaccinationName=$this->db->query("SELECT * FROM vaccination_name group by vaccinationName 
			ORDER BY vaccinationName ASC  ");
        $queryvaccinationInfo=$this->db->query("SELECT * FROM vaccination_info where stuid='$id' ");
        
        if($queryvaccinationInfo->num_rows()>0){
			foreach ($query->result() as $stuValue) {
				$output.='<input type="hidden" class="stuAcademicYear_vaccination" value="'.$max_year.'">
				<input type="hidden" class="stuStuid_vaccination" value="'.$stuValue->username.'">
				<input type="hidden" class="form-control stUsername_Vaccination" name="stUsername_Vaccination" value="'.$stuValue->username .'">';
				foreach($queryvaccinationInfo->result() as $vaccination_Info){
					$output.='
					<div class="form-group col-lg-6 col-6">
			            <label>Allergies/Medications/Conditions</label>
			            <input type="text" name="Allergies_Medications_Conditions" class="form-control Allergies_Medications_Conditions" value="'.$vaccination_Info->Allergies_Medications_Conditions .'">
		            </div>
				    <div class="form-group col-lg-6 col-6">
				        <label>Special Needs/Disabilities</label>
				        <input type="text" class="form-control Needs_Disabilities" name="Needs_Disabilities" value="'.$vaccination_Info->Needs_Disabilities .'">
				    </div>
				    <div class="dropdown-divider"></div>
		            <div class="form-group col-lg-6 col-6">
		                <label>Hospital Name</label>
		                <input type="text" class="form-control Hospital_Name" name="Hospital_Name" value="'.$vaccination_Info->Hospital_Name .'">
		            </div>
		            <div class="form-group col-lg-6 col-6">
		            	<label>Hospital Phone Number</label>
		            	<input type="text" class="form-control Hospital_Phone" name="Hospital_Phone" value="'.$vaccination_Info->Hospital_Phone .'">
		            </div>
		            <div class="form-group col-lg-4 col-6">
		                <label>Hospital Adress</label>
		                <input type="text" class="form-control Hospital_Adress" name="Hospital_Adress" value="'.$vaccination_Info->Hospital_Adress .'">
		            </div>
		            <div class="form-group col-lg-4 col-6">
		                <label>Hospital Email Adress</label>
		                <input type="email" class="form-control Hospital_Email" name="Hospital_Email" value="'.$vaccination_Info->Hospital_Email .'">
		            </div><div class="form-group col-lg-4 col-12">
		                <label>Hospital Contact Person</label> 
		                <input type="text" class="form-control Hospital_Contact_Person" name="Hospital_Contact_Person" value="'.$vaccination_Info->Hospital_Contact_Person .'">
		            </div>';
		           }
	            	$output.='<div class="form-group col-lg-12 col-6">
	                <label>Vaccination</label>';
	                $output.='<div class="row">';
                	foreach($queryvaccinationName->result() as $vaccination_Name){
                		$output.='<div class="col-md-4 col-12">';
                		$queryvaccinationStudent=$this->db->query("SELECT * FROM vaccination_student_list where stuid='$id' and vaccinationName ='$vaccination_Name->vaccinationName' ");
                		if($queryvaccinationStudent->num_rows()>0){
	                		$output.='<div class="pretty p-fill">
				                <input type="checkbox" name="setAsVaccination_Info" class="setAsVaccination_Info" value="'.$vaccination_Name->vaccinationName.'" checked="checked">
				                <div class="state p-success">
				                    <label></label>'.$vaccination_Name->vaccinationName.'
				                </div>
						    </div>';
                		}else{
                			$output.='<div class="pretty p-fill">
				                 <input type="checkbox" name="setAsVaccination_Info" class="setAsVaccination_Info" value="'.$vaccination_Name->vaccinationName.'">
				                <div class="state p-success">
				                    <label></label>'.$vaccination_Name->vaccinationName.'
				                </div>
						    </div>';
                		}
	                	$output.='</div>';
	                }
	            	$output.='</div>';
	            	$output.='</div>';    
	            	$output.='
	            	<div class="form-group col-lg-6 col-12">
	            		I Permit the nurse to give Paracetamol( Against headache period pain,high fever ) in exceptional case.';
	                	$arrayASp=array('Yes','No');
		                foreach($arrayASp as $asp){
		                	if($asp==$vaccination_Info->Permit_Exceptional_Case){
		                		$output.='<div class="pretty p-switch p-fill">
					                 <input type="radio" name="Permit_Exceptional_Case" class="Permit_Exceptional_Case" value="'.$asp.'" checked="checked">
					                <div class="state p-success">
					                    <label></label>'.$asp.'
					                </div>
							    </div>';
		                	}else{
		                		$output.='<div class="pretty p-switch p-fill">
					                 <input type="radio" name="Permit_Exceptional_Case" class="Permit_Exceptional_Case" value="'.$asp.'">
					                <div class="state p-success">
					                    <label></label>'.$asp.'
					                </div>
							    </div>';
		                	}
		                }
	            	$output.='</div>
		            <div class="form-group col-lg-6 col-12">
		                <button class="btn btn-primary btn-block" type="submit" name="savechanges"> Save Changes
		                </button>
		            </div> ';
	        	
			}
		}else{
			foreach ($query->result() as $stuValue) {
				$output.='<input type="hidden" class="stuAcademicYear_vaccination" value="'.$max_year.'">
				<input type="hidden" class="stuStuid_vaccination" value="'.$stuValue->username.'">
				<input type="hidden" class="form-control stUsername_Vaccination" name="stUsername_Vaccination" value="'.$stuValue->username .'">';
				$output.='
				<div class="form-group col-lg-6 col-6">
		            <label>Allergies/Medications/Conditions</label>
		            <input type="text" name="Allergies_Medications_Conditions" class="form-control Allergies_Medications_Conditions">
	            </div>
			    <div class="form-group col-lg-6 col-6">
			        <label>Special Needs/Disabilities</label>
			        <input type="text" class="form-control Needs_Disabilities" name="Needs_Disabilities">
			    </div>
			    <div class="dropdown-divider"></div>
	            <div class="form-group col-lg-6 col-6">
	                <label>Hospital Name</label>
	                <input type="text" class="form-control Hospital_Name" name="Hospital_Name">
	            </div>
	            <div class="form-group col-lg-6 col-6">
	            	<label>Hospital Phone Number</label>
	            	<input type="text" class="form-control Hospital_Phone" name="Hospital_Phone">
	            </div>
	            <div class="form-group col-lg-4 col-6">
	                <label>Hospital Adress</label>
	                <input type="text" class="form-control Hospital_Adress" name="Hospital_Adress">
	            </div>
	            <div class="form-group col-lg-4 col-6">
	                <label>Hospital Email Adress</label>
	                <input type="email" class="form-control Hospital_Email" name="Hospital_Email">
	            </div><div class="form-group col-lg-4 col-12">
	                <label>Hospital Contact Person</label> 
	                <input type="text" class="form-control Hospital_Contact_Person" name="Hospital_Contact_Person">
	            </div>
            	<div class="form-group col-lg-12 col-12">
                <label>Vaccination</label>';
                $output.='<div class="row">';
                	foreach($queryvaccinationName->result() as $vaccination_Name){
                		$output.='<div class="col-md-4 col-12">';
                		$output.='<div class="pretty p-switch p-fill">
			                 <input type="checkbox" name="setAsVaccination_Info" class="setAsVaccination_Info" value="'.$vaccination_Name->vaccinationName.'">
			                <div class="state p-success">
			                    <label></label>'.$vaccination_Name->vaccinationName.'
			                </div>
					    </div>';
	                	$output.='</div>';
	                }
	            	$output.='</div>';
            	$output.='</div>';    
            	$output.='
            	<div class="form-group col-lg-6 col-12">
            		I Permit the nurse to give Paracetamol( Against headache period pain,high fever ) in exceptional case.';
                	$arrayASp=array('Yes','No');
	                foreach($arrayASp as $asp){
                		$output.='<div class="pretty p-switch p-fill">
			                 <input type="radio" name="Permit_Exceptional_Case" class="Permit_Exceptional_Case" value="'.$asp.'">
			                <div class="state p-success">
			                    <label></label>'.$asp.'
			                </div>
					    </div>';
	                }
            	$output.='</div>
	            <div class="form-group col-lg-6 col-12">
	                <button class="card card-body bg-primary btn-block pull-right" type="submit" name="savechanges"> Save Changes
	                </button>
	            </div> ';
	        	
			}
		}
		$output.='</div></form>';
		return $output;
	}
	function editstudent_illnessReport($id,$max_year){
		$this->db->where(array('username'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('users');
		$output='<div class="StudentViewTextInfo">
		<div class="row">';
		foreach ($query->result() as $stuValue) {
			$output.='<input type="hidden" class="stuAcademicYear_illness" value="'.$max_year.'">
			<input type="hidden" class="stuStuid_illness" value="'.$stuValue->username.'">
			<input type="hidden" class="form-control stUsername_illness" name="stUsername_illness" value="'.$stuValue->username .'">';
			$output.='
			<div class="form-group col-lg-12 col-12">
	            <label>Illness Cause</label>
	            <textarea class="Illness_Cause" rows="4" cols="50" wrap="physical" name="Illness_Cause" id="Illness_Cause" style="width:100%; height:100px;" required> </textarea>
            </div>
            <div class="form-group col-lg-9 col-12">
                <label>Action Taken</label>
                <input type="text" class="form-control action_Taken" name="action_Taken" required="required">
            </div>
		    <div class="form-group col-lg-3 col-8">
		        <label>Date Of Check Up At School</label>
		        <input type="date" class="form-control date_of_checkup" name="date_of_checkup" required="required">
		    </div>
            ';
        	$output.='
            <div class="form-group col-lg-2 col-4">
                <button class="card card-body bg-primary btn-block pull-right" id="updateStuForm_Illness" type="submit" name="savechanges"> Save Changes
                </button>
            </div> ';
        	
		}
		$output.='</div></div>';
		return $output;
	}
	function fetch_this_incidentform_type($incidentTypeCategoryChoose){
		$output='';
		$incidentName=$this->db->query("SELECT * FROM incident_type where incident_category='$incidentTypeCategoryChoose' group by incident_name 
			ORDER BY incident_name ASC  ");
		if($incidentName->num_rows()>0){
			$output.='<div class="row">';
          	foreach($incidentName->result() as $incidentNames){
          		$output.='<div class="col-lg-12 col-md-12 col-12"> 
          			<div class="pretty p-fill">
		                <input type="checkbox" name="setAsIncident_Info" class="setAsIncident_Info" value="'.$incidentNames->incident_name.'">
		                <div class="state p-success">
		                    <label></label>'.$incidentNames->incident_name.'
		                </div>
				    </div>
				</div>';
          	}
          	$output.='</div>';
        }else{
        	$output.='<span class="text-danger">No incident type found.</span>';
        }
        return $output;
	}
	function fetch_this_incidentform_type_level($incidentTypeCategoryChoose){
		$output='';
		$date=date("Y-m-d");
		$queryMaxId=$this->db->query("SELECT max(id) as Max_ID FROM incident_category");
		if($queryMaxId->num_rows()>0){
			$maxIDRow=$queryMaxId->row();
			$maxID=$maxIDRow->Max_ID;
		}else{
			$maxID='0';
		}
		$incidentName=$this->db->query("SELECT id FROM incident_category where category_name='$incidentTypeCategoryChoose' group by category_name ");
		if($incidentName->num_rows()>0){
			$thisIdRow=$incidentName->row();
			$thisID=$thisIdRow->id;
			if($thisID==$maxID){
				$output.='<div class="row">';
					$output.='<div class="form-group col-md-3 col-lg-3 col-6">
					<label>Action taken:</label>
                    <select class="form-control" name="admin_action" id="admin_action" required="required">
	                    <option> </option>
	                    <option> Conference W/student</option>
	                    <option> Parents called in </option>
	                    <option> In-school suspension</option>
	                    <option> Out-of-school suspension</option>
	                    <option> Sent to the G.C</option>
	                    <option> Other</option>
	                  </select>
	                </div>
	                <div class="form-group col-lg-2 col-md-3 col-6">
                    	<label>In-school suspension:</label>
                    	<input type="date" class="form-control" name="date_suspension_inschool" id="date_suspension_inschool" value="'.$date.'">
                  	</div>
                  	<div class="form-group col-lg-2 col-md-3 col-6">
                    	<label>class re-entry date:</label>
                    	<input type="date" class="form-control" name="reentry_date_inschool" id="reentry_date_inschool" required>
                  	</div>
                  	<div class="form-group col-lg-3 col-md-3 col-6">
                    	<label>Out-of-school suspension:</label>
                    	<input type="date" class="form-control" name="date_suspension_outschool" id="date_suspension_outschool" value="'.$date.'">
                  	</div>
                  	<div class="form-group col-lg-2 col-md-3 col-6">
                    	<label>Re-entry date:</label>
                    	<input type="date" class="form-control" name="reentry_date_outschool" id="reentry_date_outschool" required>
                  	</div>
	            </div>';
			}
        }
        return $output;
	}
	function reportIncident_student($username,$max_year,$tname,$mname,$user){
		$this->db->where('username',$username);
		$this->db->where('academicyear',$max_year);
		$query=$this->db->get('users');
		$output='';
		$date=date("Y-m-d");
		$queryFetch=$this->db->query("select * from incident_category group by category_name order by id ASC");
		if($query->num_rows()>0){
			foreach($query->result() as $row){
				$output.='<form type="role" class="save_new_incident" method="POST">
					<input type="hidden" id="incident_teacher" name="incident_teacher" value="'.$user.'">
					<input type="hidden" id="incident_student" name="incident_student" value="'.$username.'">
					<input type="hidden" id="incidented_Name" name="incidented_Name" value="'.$row->fname.' '.$row->mname.' '.$row->lname.'">
					<input type="hidden" id="incidented_grade" name="incidented_grade" value="'.$row->gradesec.'">
					<span class="text-time">Student Name: '.$row->fname.' '.$row->mname.' '.$row->lname.' <i class="fas fa-chevron-right"></i> Grade: '.$row->gradesec.' <i class="fas fa-chevron-right"></i> Teacher Name: '.$tname.' '.$mname.' <i class="fas fa-chevron-right"></i> Date : 
					<input id="incident_date" type="date" class="form-contrdol" required="required" name="incident_date" value="'.$date.'"></span>
                	<div class="row">
                		<div class="form-group col-lg-3 col-md-3 col-6">
                    		<label>Choose Incident Type:</label>
                    		<select class="form-control" required="required" name="incidentTypeCategoryChoose" id="incidentTypeCategoryChoose">
                    			<option></option>';
								foreach($queryFetch->result() as $row){
									$output.='<option>'.$row->category_name.'</option>';
								}
							$output.='</select>
                  		</div>
	                  	<div class="form-group col-lg-6 col-md-6 col-6 table-responsive" style="height:15h">
	                  		<label>Check all that apply:</label>
	                  		<div class="page_for_incident_type"></div>
	                  	</div>
	                  	<div class="form-group col-lg-3 col-md-3 col-12">
		                  	<label>Location of Incident:</label>
		                  	<select class="form-control" name="incident_location" id="incident_location" required="required">
		                    	<option> </option>
		                    	<option> Outside</option>
		                    	<option> Dining Hall</option>
		                    	<option> Hallway</option>
		                    	<option> Restroom</option>
		                    	<option> Classroom</option>
		                    	<option> Bus/ Field trip</option>
		                    	<option> Arrival/ Dismissal</option>
		                    	<option> Other</option>
		                  	</select>
		                </div>
	                  	<div class="form-group col-lg-12 col-md-12 col-12">
	                    	<label>Describe Incident:</label>
	                    	<textarea class="form-co4ntrol incident_description" rows="4" cols="50" wrap="physical" name="incident_description" id="incident_description" placeholder="Describe Incident..." style="width:100%; height:100px;" required></textarea>
	                    	
	                  	</div>
	                  	<div class="form-group col-lg-2 col-md-3 col-12">
		                  	<label>Is this the first offense?</label>';
		                  	$queryCheck=$this->db->query("SELECT * FROM incident_report where stuid='$username' ORDER BY id DESC limit 1");
		                  	if($queryCheck->num_rows()>0){
			                  	$output.='<select class="form-control" name="is_offense" id="is_offense" required="required">
				                    <option> Yes</option>
				                    <option selected="selected"> No</option>
				                </select>';
		                  	}else{
		                  		$output.='<select class="form-control" name="is_offense" id="is_offense" required="required">
		                    	<option> No</option>
		                    	<option selected="selected"> Yes</option>
		                  		</select>';
		                  	}
		                $output.=' </div>';
		                if($queryCheck->num_rows()>0){
		                	$rowCon=$queryCheck->row();
		                    $con_prev=$rowCon->previous_conse;
			                $incidentID=$rowCon->id;
		                  	$incidentName=$this->db->query("SELECT * FROM incident_student_type where stuid='$username' and incident_id ='$incidentID' ");
		                  	if($incidentName->num_rows()>0){
		                  		$output.='<div class="form-group col-lg-4 col-md-8 col-12">
	                    		<label>Previous incident:</label><br>';
			                  	foreach($incidentName->result() as $incidentNames){
			                  		$output.='<div class="pretty p-fill">
					                	<input type="checkbox" name="" class="" value="'.$incidentNames->incident_type.'" checked="checked">
						                <div class="state p-info">
						                    <i class="fas fa-check"></i>'.$incidentNames->incident_type.'
						                </div>
									</div>';
			                  	}
			                  	$output.='</div>';
			                }
			            }
                    	$output.='<div class="form-group col-lg-6 col-md-8 col-12">
                    		<label>Previous consequences:</label>';
                    		$queryCons=$this->db->query("select * from incident_consequence group by consequence_name order by id ASC");
							if($queryCons->num_rows()>0){
								$output.='<select class="form-control" required="required" name="previous_conse" id="previous_conse">
								<option></option>';
								foreach($queryCons->result() as $rowCon){
									$coName=$rowCon->consequence_name;
				                    if($queryCheck->num_rows()>0){
				                    	$rowCon=$queryCheck->row();
				                    	$con_prev=$rowCon->previous_conse;
				                    	if($coName==$con_prev){
				                    		$output.='<option selected="selected">'.$coName.'</option>';
				                    	}else{
				                    		$output.='<option>'.$coName.'</option>';
				                    	}
				                    }else{
				                    	$output.='<option>'.$coName.'</option>';
				                    }
				               	}
				               	$output.='</select>';
							}else{
								$output.='<span class="text-danger"><br>Please set consequence lists</span>';
							}
                    	$output.='</div>';
                  		$output.='<div class="form-group col-lg-12 col-md-12 col-12">
                  			<div class="page_for_incident_type_level"></div>
                  		</div>
                  		<div class="form-group col-lg-12 col-12">
                    		<button class="btn btn-primary pull-right" id="save_incident">  Submit Incident
                    		</button>
                  		</div>
                	</div>
            	</form>';
			}
		}
		return $output;
	}
	function reportIncident_staffs($username,$max_year,$tname,$mname,$user){
		$this->db->where('username',$username);
		/*$this->db->where('academicyear',$max_year);*/
		$query=$this->db->get('users');
		$output='';
		$date=date("Y-m-d");
		$queryFetch=$this->db->query("select * from incident_category group by category_name order by id ASC");
		if($query->num_rows()>0){
			foreach($query->result() as $row){
				$output.='<form type="role" class="save_new_staff_incident" method="POST">
					<input type="hidden" id="incident_staff" name="incident_staff" value="'.$username.'">
					<input type="hidden" id="incident_staff_name" name="incident_staff_name" value="'.$username.'">
					<input type="hidden" id="incidented_Name" name="incidented_Name" value="'.$row->fname.' '.$row->mname.' '.$row->lname.'">
					<span class="text-time">Staff Name: '.$row->fname.' '.$row->mname.' '.$row->lname.'  <i class="fas fa-chevron-right"></i> Date : 
					<input id="incident_date_staff" type="date" class="form-contrdol" required="required" name="incident_date_staff" value="'.$date.'"></span>
                	<div class="row">
                		<div class="form-group col-lg-3 col-md-3 col-6">
                    		<label>Choose Incident Type:</label>
                    		<select class="form-control" required="required" name="incidentTypeCategoryChooseStaff" id="incidentTypeCategoryChooseStaff">
                    			<option></option>';
								foreach($queryFetch->result() as $row){
									$output.='<option>'.$row->category_name.'</option>';
								}
							$output.='</select>
                  		</div>
	                  	<div class="form-group col-lg-6 col-md-6 col-6 table-responsive" style="height:15h">
	                  		<label>Check all that apply:</label>
	                  		<div class="page_for_incident_type_staff"></div>
	                  	</div>
	                  	<div class="form-group col-lg-3 col-md-3 col-12">
		                  	<label>Location of Incident:</label>
		                  	<select class="form-control" name="incident_location_staff" id="incident_location_staff" required="required">
		                    	<option> </option>
		                    	<option> Outside</option>
		                    	<option> Dining Hall</option>
		                    	<option> Hallway</option>
		                    	<option> Restroom</option>
		                    	<option> Classroom</option>
		                    	<option> Bus/ Field trip</option>
		                    	<option> Arrival/ Dismissal</option>
		                    	<option> Other</option>
		                  	</select>
		                </div>
	                  	<div class="form-group col-lg-12 col-md-12 col-12">
	                    	<label>Describe Incident:</label>
	                    	<textarea class="form-co4ntrol incident_description_staff" rows="4" cols="50" wrap="physical" name="incident_description_staff" id="incident_description_staff" placeholder="Describe Incident..." style="width:100%; height:100px;" required></textarea>
	                  	</div>
	                  	<div class="form-group col-lg-12 col-md-12 col-12">
	                    	<label>Administrator Action:</label>
	                    	<textarea class="form-co4ntrol administrator_action_staff" rows="4" cols="50" wrap="physical" name="administrator_action_staff" id="administrator_action_staff" placeholder="Describe Incident..." style="width:100%; height:100px;" required></textarea>
	                  	</div>';
                  		$output.='
                  		<div class="form-group col-lg-12 col-12">
                    		<button class="btn btn-primary pull-right" id="save_staff_incident">  Submit Incident
                    		</button>
                  		</div>
                	</div>
            	</form>';
			}
		}
		return $output;
	}
	function fetch_student_toLeavingRequest($id,$max_year){
		$output='';
		$query_name = $this->db->query("select * from school");
	    $row_name = $query_name->row();
	    $school_name=$row_name->name;
	    $schooLogo=$row_name->logo;
	    $website=$row_name->website;
	    $phone=$row_name->phone;
	    $slogan=$row_name->slogan;
		$this->db->where(array('unique_id'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('users');
		$output.='<button class="btn btn-default pull-right" onclick="codespeedyStudentLeaving()" name="" type="submit" id="">
            <span class="text-dark">Print <i class="fas fa-print"></i></span>
        </button>
        <div style="width:100%;height:92%;page-break-inside:avoid;" >
        <div id="PrintStudentRequestPaper">';
        $nextYear=$max_year + 1;
		foreach ($query->result() as $stuValue) {
			$stusername=$stuValue->username;
			$queryLast=$this->db->query("select fname,mname,lname,gradesec,username,grade from users where academicyear='$max_year' and username='$stusername' ");
			if($queryLast->num_rows()>0){
				$row=$queryLast->row();
				$currentGrade=$row->gradesec;
				$current_Grade=$row->grade;
				switch ($current_Grade) {
			        case 'KG1':
			          $FutureGrade='KG2';
			          break;
			        case 'KG2':
			          $FutureGrade='KG3';
			          break;
			        case 'KG3':
			          $FutureGrade='1';
			          break;
			        default:
			          $FutureGrade= $current_Grade + 1;
			          break;
			    }
			}else{
				$currentGrade='_________________ . ';
				$FutureGrade='_________________ . ';
			}
			if($stuValue->age >0 ){
				$age=$stuValue->age;
			}else{
				$age='_________ . ';
			}
			if($stuValue->city !='' ){
				$city=$stuValue->city;
			}else{
				$city='_________________ . ';
			}
			if($stuValue->sub_city !='' ){
				$sub_city=$stuValue->sub_city;
			}else{
				$sub_city='_________________ . ';
			}
			if($stuValue->kebele !='' ){
				$kebele=$stuValue->kebele;
			}else{
				$kebele='_________ . ';
			}
			if($stuValue->woreda !='' ){
				$woreda=$stuValue->woreda;
			}else{
				$woreda='_________ . ';
			}
			$output.='<script>var qrcode = new QRCode(
		      "qrr-code'.$stuValue->id.'",
		      {
		        text: "Student Name: '.$stuValue->fname.' '.$stuValue->mname.' '.$stuValue->lname.', ID: '.$stuValue->username.' Grade : '.$stuValue->grade.' School Name : '.strtoupper($school_name).' Website : '.$website.'",
		        width:80,
		        height:130,
		        colorDark : "#000000",
		        colorLight : "#FFFFFF",
		        correctLevel : QRCode.CorrectLevel.M
		      }
		    );</script>
		    ';
			$output.='
			<div class="media pb-1 mb-3 card-header">
              	<img src="'.base_url().'/logo/'.$schooLogo.'" style="width:110px;height: 110px;" class="user-img mr-2" alt="">
              	<div class="media-body ml-3 text-center">
                	<h2><u><b>'.strtoupper($school_name).'</b></u></h2> 
                	<h3><i class="fas fa-phone"></i> '.$phone.' || <i class="fas fa-globe"></i> '.$website.'</h3> ';
              $output.='</div> </div>
            <div class="pull-right">
            	<p class="font-weight-bold font-16">Date :<u>'.date('M-d-Y').' G.C</u> </p>
            	<p class="font-weight-bold font-16">Ref.No. :<u>____________</u> </p>
            </div><br><br><br>
            <h2 class="text-center">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<u>የተማሪ መልቀቂያ ምስክር ወረቀት <br> Regular Student Leaving Certificate</u></h2>
            <div class="">
                <div class="support-ticket media">';
                $output.='<div class="media-body StudentViewTextInfo">
                      <span class="font-weight-bold font-16"> የተማሪዉ/ዋ ሙሉ ስም &nbsp;&nbsp;&nbsp; &nbsp;<u> '.$stuValue->fname.' '.$stuValue->mname.' '.$stuValue->lname.'</u> <br> Student Name:  </span>
                      <p class="my-1">
                      <small class=""><span class="font-weight-bold font-16">እድሜ / Age: <u>'.$stuValue->age.' </u>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 
                      ፆታ / Gender: <u>'.$stuValue->gender.' </u>
                      </span> </small></p>

                      <p class="my-1">
                      	<small class=""><span class="font-weight-bold font-16"> ክፍል / Grade : <u> '.$stuValue->grade.' </u></span> </small></p>
                      	<p class="my-1">
                      	<span class="font-weight-bold font-16">አድራሻ / Adress &nbsp;&nbsp;&nbsp; &nbsp; City:- <small class="">'.$city.'</small> &nbsp;&nbsp;&nbsp; &nbsp; Sub City:- <small class="">'.$sub_city.'</small> &nbsp;&nbsp;&nbsp; &nbsp; Kebele/Woreda:- <small class="">'.$kebele.'/'.$woreda.'</small> </span> </p>                      	
                    </div>
                    <p id="qrr-code'.$stuValue->id.'"></p>&nbsp;&nbsp;';
                    if($stuValue->profile == ''){
						$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" style="height: 130px;width: 100px;" class="user-img mr-2">';
					}else{
						$output.='<img alt="Photo" src="'.base_url().'/profile/'.$stuValue->profile.'" style="height: 130px;width: 100px;" class="user-img mr-2">';
					}

                $output.='</div>
                <p class="font-weight-bold font-16 my-1">ትምህርት ቤቱን የለቀቀበት/ችበት ምክንያት _____________________________________________ . <br>The reason he/she left the school </p>
                <div class="dropdown-divider"></div>
                <p class="font-weight-bold font-16 my-1">መክፈል/መመለስ የሚጠበቅበት ንብረት _____________________________________________ .<br> Property for which the school is required from he/she </p>
                <div class="dropdown-divider"></div>
                <p class="font-weight-bold font-16 my-1"> በ '.$max_year.'ዓ.ም የተማረበት / ችበት የከፍል ደረጃ &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <u>'.$current_Grade.'</u> <br> The class where the he/she was studying in '.$max_year.' Academic Year  </p>
                <div class="dropdown-divider"></div>
                <p class="font-weight-bold font-16 my-1"> በ '.$nextYear.'ዓ.ም የሚማርበት / የምትማርበት የከፍል ደረጃ  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <u>'.$FutureGrade.'</u> <br> Grade level in '.$nextYear.' Academic Year </p>
                <div class="dropdown-divider"></div>
                <p class="font-weight-bold font-16 my-1">ትምህርት ቤቱን የለቀቀበት/ችበት ቀን:- <u>'.date('M-d-Y').' G.C</u>. <br> The date of this release  </p>
                <div class="dropdown-divider"></div>
                <div class="row">
                	<div class="col-md-1"></div>
                	<div class="col-md-5 col-6">
                		Record Officer Name & Signature<br>
                		Name __________________________ __________<br>
                	</div>
                	<div class="col-md-5 col-6"> የዳይሬክተር ስምና ፊርማ/
	                	Directors Name & Signature<br>
	                	Name __________________________ __________<br> 
                	</div>
                </div>
                <div class="dropdown-divider"></div>
                <div class="row StudentViewTextInfo">
                	<div class="col-md-12">
                		ማሳሰቢያ/Reminder:- ይህ የመልቀቂያ ወረቀት ተቀባይነት የሚኖረዉ /This release paper may have value:-
                	</div>
                	<div class="col-md-12 col-12">
                		<p class="my-1"><i class="fas fa-check-circle"></i> ምንም ስርዝ ድልዝ ከሌለዉ / If there is no strike over it.</p> 
                		<p class="my-1"><i class="fas fa-check-circle"></i> የት/ቤቱ ማህተምና የዳይሬክተር ፊርማ ካለዉ /If it has the signature of the director and seal of the school .</p>
                		<p class="my-1"><i class="fas fa-check-circle"></i> የተማሪዉ/ዋ ፎቶ ያለበት የት/ቤቱ ማህተም ያረፈበት ከሆነ /Only if there is a photo of the student and the seal of the school is placed on the photo.</p>  
                	</div>
                </div>
            </div> ';
		}
		$output.='<div class="media card-header">
              <div class="media-body ml-3 text-center">
              <span class="font-16"> '.$slogan.'</span>';
              $output.='</div>
            </div><small class="text-muted pull-right">Powered BY :- GS Technologies www.grandstande.com | +251984085240</small></div></div>';
		return $output;
	}
	function update_student_detail($id,$username,$data,$max_year){
		$queryChk=$this->db->query("select * from users where unique_id='$id' and username='$username' ");
		$output='';
		if($queryChk->num_rows()<1){
			$output.='0';
		}else{
			/*$this->db->where(array('academicyear'=>$max_year));*/
			$this->db->where(array('unique_id'=>$id));
			$query=$this->db->update('users',$data);
			if($query){
				$output.='1';
			}else{
				$output.='0';
			}
		}
		return $output;
	}
	function fetch_staff_toedit($id,$max_year,$usertype){
		$this->db->where(array('id'=>$id));
		$query=$this->db->get('users');
		$nationals = array(
          'Afghan',
          'Albanian',
          'Algerian',
          'American',
          'Andorran',
          'Angolan',
          'Antiguans',
          'Argentinean',
          'Armenian',
          'Australian',
          'Austrian',
          'Azerbaijani',
          'Bahamian',
          'Bahraini',
          'Bangladeshi',
          'Barbadian',
          'Barbudans',
          'Batswana',
          'Belarusian',
          'Belgian',
          'Belizean',
          'Beninese',
          'Bhutanese',
          'Bolivian',
          'Bosnian',
          'Brazilian',
          'British',
          'Bruneian',
          'Bulgarian',
          'Burkinabe',
          'Burmese',
          'Burundian',
          'Cambodian',
          'Cameroonian',
          'Canadian',
          'Cape Verdean',
          'Central African',
          'Chadian',
          'Chilean',
          'Chinese',
          'Colombian',
          'Comoran',
          'Congolese',
          'Costa Rican',
          'Croatian',
          'Cuban',
          'Cypriot',
          'Czech',
          'Danish',
          'Djibouti',
          'Dominican',
          'Dutch',
          'East Timorese',
          'Ecuadorean',
          'Egyptian',
          'Emirian',
          'Equatorial Guinean',
          'Eritrean',
          'Estonian',
          'Ethiopian',
          'Fijian',
          'Filipino',
          'Finnish',
          'French',
          'Gabonese',
          'Gambian',
          'Georgian',
          'German',
          'Ghanaian',
          'Greek',
          'Grenadian',
          'Guatemalan',
          'Guinea-Bissauan',
          'Guinean',
          'Guyanese',
          'Haitian',
          'Herzegovinian',
          'Honduran',
          'Hungarian',
          'I-Kiribati',
          'Icelander',
          'Indian',
          'Indonesian',
          'Iranian',
          'Iraqi',
          'Irish',
          'Israeli',
          'Italian',
          'Ivorian',
          'Jamaican',
          'Japanese',
          'Jordanian',
          'Kazakhstani',
          'Kenyan',
          'Kittian and Nevisian',
          'Kuwaiti',
          'Kyrgyz',
          'Laotian',
          'Latvian',
          'Lebanese',
          'Liberian',
          'Libyan',
          'Liechtensteiner',
          'Lithuanian',
          'Luxembourger',
          'Macedonian',
          'Malagasy',
          'Malawian',
          'Malaysian',
          'Maldivan',
          'Malian',
          'Maltese',
          'Marshallese',
          'Mauritanian',
          'Mauritian',
          'Mexican',
          'Micronesian',
          'Moldovan',
          'Monacan',
          'Mongolian',
          'Moroccan',
          'Mosotho',
          'Motswana',
          'Mozambican',
          'Namibian',
          'Nauruan',
          'Nepali',
          'New Zealander',
          'Nicaraguan',
          'Nigerian',
          'Nigerien',
          'North Korean',
          'Northern Irish',
          'Norwegian',
          'Omani',
          'Pakistani',
          'Palauan',
          'Panamanian',
          'Papua New Guinean',
          'Paraguayan',
          'Peruvian',
          'Polish',
          'Portuguese',
          'Qatari',
          'Romanian',
          'Russian',
          'Rwandan',
          'Saint Lucian',
          'Salvadoran',
          'Samoan',
          'San Marinese',
          'Sao Tomean',
          'Saudi',
          'Scottish',
          'Senegalese',
          'Serbian',
          'Seychellois',
          'Sierra Leonean',
          'Singaporean',
          'Slovakian',
          'Slovenian',
          'Solomon Islander',
          'Somali',
          'South African',
          'South Korean',
          'Spanish',
          'Sri Lankan',
          'Sudanese',
          'Surinamer',
          'Swazi',
          'Swedish',
          'Swiss',
          'Syrian',
          'Taiwanese',
          'Tajik',
          'Tanzanian',
          'Thai',
          'Togolese',
          'Tongan',
          'Trinidadian/Tobagonian',
          'Tunisian',
          'Turkish',
          'Tuvaluan',
          'Ugandan',
          'Ukrainian',
          'Uruguayan',
          'Uzbekistani',
          'Venezuelan',
          'Vietnamese',
          'Welsh',
          'Yemenite',
          'Zambian',
          'Zimbabwean'
        );
		$arrayMarital=array('Single','Married','Separated','Divorced','Widowed');
		$output='
		<form method="POST" id="updateStaForm" class="formemp" name="formemp">
		<div class="StudentViewTextInfo"><div class="row">';
		foreach ($query->result() as $staffValue) {
			$output.='<input type="hidden" name="editedStaff" value="'.$staffValue->id.'">
			<div class="card-header"><span class="bade badge-info">'.$staffValue->status.'</span>';
			if($staffValue->profile==''){
                $output.='<img alt="Profile" src="'.base_url().'/profile/defaultProfile.png" style="width:70px;height:70px" class="user-img-radious-style pull-right">';
			}else{
				$output.='<img alt="Profile" src="'.base_url().'/profile/'.$staffValue->profile.'" style="width:70px;height:70px" class="user-img-radious-style pull-right">';
			}
            $output.='</div>';
            $output.='<input type="hidden" class="username" name="username" value="'.$staffValue->username.'"> ';
            $output.='<div class="form-group col-lg-3 col-6">
                <label>User Name/ID</label>
                <input type="text" class="form-control" disabled="disabled" value="'.$staffValue->username.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>First Name</label>
                <input type="text" class="form-control fname" name="fname" value="'.$staffValue->fname.'">               
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Father Name</label>
                <input type="text" class="form-control lname" name="mname" value="'.$staffValue->mname.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>G.Father Name</label>
                <input type="text" class="form-control lname" name="lname" value="'.$staffValue->lname.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Gender</label>
                <select class="form-control selectric" required="required" name="gender" id="gender">
                    <option>'.$staffValue->gender.'</option>';
                    if($staffValue->gender ===trim('Female') or $staffValue->gender ===trim('female') or $staffValue->gender ===trim('F')){
                        $output.='<option>Male </option>';
                    }else{
                        $output.='<option>Female </option>';
                    }
                $output.='</select>
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Mobile</label>
                <input type="text" class="form-control mobile" name="mobile" value="'.$staffValue->mobile.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Age</label>
                <input type="text" class="form-control staffAge" name="staffAge" value="'.$staffValue->age.'">
            </div>
            <div class="form-group col-lg-3 col-6">
              	<div class="form-group">
                	<label for="Mobile">Marital Status</label>
                	<select class="form-control selectric" name="staff_marital_Status" id="staff_marital_Status">
                  		<option> </option>';
                  		foreach($arrayMarital as $arrayMaritals){
                  			if($arrayMaritals==$staffValue->marital_status){
                  				$output.='<option selected="selected"> '.$arrayMaritals.'</option>';
                  			}else{
                  				$output.='<option> '.$arrayMaritals.'</option>';
                  			}
                  		}
                	$output.='</select>
              	</div>
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Qualification</label>
                <input type="text" class="form-control staffQualification" name="staffQualification" value="'.$staffValue->staff_qualification.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Quality Allowance</label>
                <input type="number" class="form-control text" onkeyup="calculateTotal()" id="ql" name="quality_allowance" value="'.$staffValue->quality_allowance.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Transport Allowance</label>
                <input type="number" class="form-control text" onkeyup="calculateTotal()" id="tl" name="transport_allowance" value="'.$staffValue->allowance.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Position Allowance</label>
                <input type="number" class="form-control text" onkeyup="calculateTotal()" id="pl" name="position_allowance" value="'.$staffValue->position_allowance.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Home Allowance</label>
                <input type="number" class="form-control text" onkeyup="calculateTotal()" id="hl" name="home_allowance" value="'.$staffValue->home_allowance.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Basic Salary</label>
                <input type="number" class="form-control text" onkeyup="calculateTotal()" name="gsallary" id="gs" value="'.$staffValue->gsallary.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Gross Sallary</label>
                <input type="text" class="form-control text" id="gross_sallary" name="gross_sallary" value="'.$staffValue->gross_sallary.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Taxable Income</label>
                <input type="text" class="form-control text" id="ti"  name="taxable_income" value="'.$staffValue->taxable_income.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Income tax</label>
                <input type="text" class="form-control text" id="income_tax" name="income_tax" value="'.$staffValue->income_tax.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Pension 7%</label>
                <input type="text" class="form-control text" id="pension_7" name="pension_7" value="'.$staffValue->pension_7.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Pension 11%</label>
                <input type="text" class="form-control text" id="pension_11" name="pension_11" value="'.$staffValue->pension_11.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Other</label>
                <input type="text" class="form-control text" id="other" name="other" value="'.$staffValue->other.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Net Payment</label>
                <input type="text" class="form-control text" id="ns" name="netsallary" value="'.$staffValue->netsallary.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Email</label>
                <input type="text" class="form-control email" name="email"
                value="'.$staffValue->email.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Date Employed</label>
                <input type="text" class="form-control dateregister" name="dateregister"
                value="'.$staffValue->dateregister.'">
            </div>
            <div class="form-group col-lg-3 col-6">
                <label>Nationality</label>
                <select class="form-control selectric" name="userNationality" id="userNationality"> <option></option>';
                    foreach($nationals as $nations){
                    	if($staffValue->nationality==$nations){
	                    	$output.='<option selected="selected">'.$nations.'</option>';
	                    }else{
	                    	$output.='<option>'.$nations.'</option>';
	                    }
                    }
                $output.='</select>
            </div>';
            if($usertype == 'superAdmin'){
	            $output.='<div class="form-group col-lg-2 col-6">
	                <label for="password2" class="d-block">Branch</label>
	                <select class="form-control selectric" name="branch" id="branch">
	                    <option>'.$staffValue->branch.'</option>';
						$this->db->order_by('name','ASC');
						$this->db->group_by('name');
						$this->db->where('academicyear',$max_year);
						$queryBranch=$this->db->get('branch');
	                    foreach($queryBranch->result() as $branchs){
	                    	if($staffValue->branch!==$branchs->name){
		                    	$output.='<option>'.$branchs->name.'</option>';
		                    }
	                    } 
	                $output.='</select>
	            </div>';
	        }else{
	        	$output.='<div class="form-group col-lg-2 col-6">
	                <label for="password2" class="d-block">Branch</label>
	                <select class="form-control selectric" name="branch" disabled="disabled" id="branch">
	                    <option>'.$staffValue->branch.'</option>';
						$this->db->order_by('name','ASC');
						$this->db->group_by('name');
						$this->db->where('academicyear',$max_year);
						$queryBranch=$this->db->get('branch');
	                    foreach($queryBranch->result() as $branchs){
	                    	if($staffValue->branch!==$branchs->name){
		                    	$output.='<option>'.$branchs->name.'</option>';
		                    }
	                    } 
	                $output.='</select>
	            </div>';
	        }
	        $this->db->order_by('uname','ASC');
			$this->db->group_by('uname');
			$queryUsertype=$this->db->get('usegroup');
            if($usertype == 'superAdmin'){
	            $output.='<div class="form-group col-lg-2 col-6">
	                <label for="password2" class="d-block">User Type</label>
	                <select class="form-control selectric" name="schoolusertype" id="schoolusertype">
	                    <option>'.$staffValue->usertype.'</option>';						
	                    foreach($queryUsertype->result() as $usertypes){
	                    	if($staffValue->usertype!=$usertypes->uname){
		                    	$output.='<option>'.$usertypes->uname.'</option>';
		                    }
	                    } 
	                $output.='</select>
	            </div>';
	        }
            $output.='
            <div class="form-group col-lg-2 col-6">
                <label for="password2" class="d-block">User Division</label>
                <select class="form-control selectric" name="userDivision" id="userDivision">
                    <option>'.$staffValue->status2.'</option>';
					$this->db->order_by('dname','ASC');
					$this->db->group_by('dname');
					$this->db->where('academicyear',$max_year);
					$queryDivision=$this->db->get('schooldivision');
                    foreach($queryDivision->result() as $userDivision){
                    	if($staffValue->status2!==$userDivision->dname){
	                    	$output.='<option>'.$userDivision->dname.'</option>';
	                    }
                    } 
                $output.='</select>
            </div>';
	        $output.='<div class="form-group col-lg-2 col-6">
                <label>Remaining Leave Days</label>
                <input type="text" class="form-control text" id="annual_leave_count" name="annual_leave_count" value="'.$staffValue->leave_days.'">
            </div>';
            $output.='<div class="col-lg-12 col-12 pull-right">
            <label for="password2" class="d-block"></label><div class="pull-right">';
            if($staffValue->finalapproval=='0'){
                $output.='Set as final approval <div class="pretty p-switch p-fill">
	                 <input type="checkbox" name="setAsFinalApproval" class="setAsFinalApproval" id="'.$staffValue->id.'">
	                <div class="state p-success">
	                    <label></label>
	                </div>
			    </div>';
			}else{
				$output.='Set as final approval <div class="pretty p-switch p-fill">
	                 <input type="checkbox" name="setAsFinalApproval" class="setAsFinalApproval" checked="checked" id="'.$staffValue->id.'">
	                <div class="state p-success">
	                    <label></label>
	                </div>
			    </div>';
			}
            $output.='<button class="btn btn-primary pull-right" type="submit" name="savechanges" id="savechanges_staff_update"> Save Changes </button></div>
            </div>
            ';
		}
		$output.='</div></div></form>';
		return $output;
	}
	function update_staff_detail($id,$username,$data){
		$queryChk=$this->db->query("select * from users where id!='$id' and username='$username' ");
		$output='';
		if($queryChk->num_rows()>0){
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                <i class="fas fa-exclamation-triangle"> </i>Username exists, please try other username.
            </div></div>';
		}else{
			$this->db->where(array('id'=>$id));
			$query=$this->db->update('users',$data);
			if($query){
				$output.='1';
			}else{
				$output.='0';
			}
		}
		return $output;
	}
	function deleteStaffs($ids){
		$this->db->where('id',$ids);
        $query=$this->db->delete('users');	
	}
	function active_staffs($id){
		foreach($id as $ids){
			$this->db->where(array('id'=>$ids));
			$this->db->set('status', 'Active');
			$this->db->update('users');
		}
	}
	function inactive_staffs($ids,$user){
		$todayDate=date('M-d-Y');
		$queryUsers=$this->db->query("select id,username,fname ,mname,lname,usertype,mobile from users where id='$ids' and username!='$user' ");
		foreach($queryUsers->result() as $row){
			$queryCheck=$this->db->query("select * from users_dropped where username='$row->username' and dated_dropped='$todayDate' ");
			if($queryCheck->num_rows()<1){
				$data[]=array(
					'username'=>$row->username,
					'usertype'=>$row->usertype,
					'fname'=>$row->fname,
					'mname'=>$row->mname,
					'lname'=>$row->lname,
					'mobile'=>$row->mobile,
					'dated_dropped'=>date('M-d-Y'),
					'dropped_by'=>$user
				);
			}
		}
		$this->db->where('username!=', $user);
		$this->db->where('id' , $ids);
		$this->db->set('status', 'Inactive');
		$this->db->update('users');
		if(!empty($data))
		{
			$queryInsert=$this->db->insert_batch('users_dropped',$data);
		}
	}
	function active_student($id){
		$output='';
		$this->db->where(array('id'=>$id));
		$this->db->set('status', 'Active');
		$query=$this->db->update('users');
		if($query){
			$output.='1';
		}else{
			$output.='0';
		}
		return $output;
	}
	function inactive_student($id){
		$this->db->where(array('id'=>$id));
		$this->db->set('status', 'Inactive');
		$this->db->update('users');
	}
	function add_subject($subject,$grade,$max_year,$data){
		$output='';
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->where(array('Subj_name'=>$subject));
		$this->db->where(array('Grade'=>$grade));
		$query=$this->db->get('subject');
		if($query->num_rows() > 0){
			$output.='0';
		}
		else{
			$query=$this->db->insert('subject',$data);
			if($query){
	            $output.='1';
	        }else{
	            $output.='0';
	        }
		}
		return $output;
	}
	function add_KG_subject($subject,$grade,$max_year,$data){
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('subname'=>$subject));
		$this->db->where(array('subgrade'=>$grade));
		$query=$this->db->get('kgsubject');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			$this->db->insert('kgsubject',$data);
		}
	}
	function add_KG_subject_objective($subject,$subjectName,$grade,$max_year,$max_quarter,$data){
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('subid'=>$subjectName));
		$this->db->where(array('subobjective'=>$subject));
		$this->db->where(array('ograde'=>$grade));
		$this->db->where(array('quarter'=>$max_quarter));
		$query=$this->db->get('kgsubjectobjective');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			$this->db->insert('kgsubjectobjective',$data);
		}
	}
	function fetch_subject_toplace($max_year){
		$this->db->where('Academic_Year',$max_year);
		$this->db->order_by('Subj_name','ASC');
		$this->db->group_by('Subj_name');
		$query=$this->db->get('subject');
		return $query->result();
	}
	function delete_KG_subject($id,$max_year){
		$this->db->where('subname',$id);
		$this->db->where('academicyear',$max_year);
		$this->db->delete('kgsubject');
	}
	function delete_KG_subject_objective($id,$max_year){
		$this->db->where('oid',$id);
		$this->db->where('academicyear',$max_year);
		$this->db->delete('kgsubjectobjective');
	}
	function delete_subject($id,$max_year){
		$this->db->where('Subj_name',$id);
		$this->db->where('Academic_Year',$max_year);
		$this->db->delete('subject');
	}
	function edit_KG_subject_Objective($edtisub,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('oid',$edtisub);
		$this->db->group_by('subid');
		$query=$this->db->get('kgsubjectobjective');
		$output='<form class="saveSubjectChanges" method="POST">
		<div class="card">
		<a href="#" class="backToSubject"> <i class="fas fa-backward"></i> </a>
		<div class="card-body"> <div class="row"> ';
		foreach ($query->result() as $keyvalue) {
			$sgra=$keyvalue->subid;
			$output .='<div class="col-lg-12">
				<input type="hidden" id="oldSubjName" value="'.$keyvalue->oid.'">
				<label for="Mobile">Subject Name </label>
				<input type="text" id="newSubjName" value="'.$keyvalue->subobjective.'" class="form-control"/>
			</div> ';
			/*$query2=$this->db->query("select * from kgsubjectobjective where academicyear='$max_year' and subid='$sgra'");*/
			/*foreach ($query2->result() as $kvalue) {
				$output .='<div class="col-lg-3" id="deletee'.$kvalue->subid.''.$kvalue->ograde.'">
				<a class="gr'.$kvalue->ograde.'"></a>
				<p class="text-info"> <a href="#" value="'.$kvalue->subid.'" name="'.$kvalue->ograde.'" class="dele">
					<span class="text-danger"><i class="fas fa-trash"></i> </span>
				</a> '.$kvalue->ograde.'</p>';
        		$output .='</div> ';
			}*/
		}
		$output .='</div><div class="row">
		<div class="col-lg-4"></div><div class="col-lg-4"></div>
		<div class="col-lg-4 pull-right"><button class="btn btn-outline-success text-success btn-sm form-control" type="submit">Save Changes</button></div>
		</div></div></div></form>';
		return $output ;
	}
	function edit_KG_subject($edtisub,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('subname',$edtisub);
		$this->db->group_by('subname');
		$query=$this->db->get('kgsubject');
		$output='<form class="saveSubjectChanges" method="POST"><div class="card">
		<a href="#" class="backToSubject"> <i class="fas fa-backward"></i> </a>
		<div class="card-body"> <div class="row"> ';
		foreach ($query->result() as $keyvalue) {
			$sgra=$keyvalue->subname;
			$output .='<div class="col-lg-6">
				<input type="hidden" id="oldSubjName" value="'.$keyvalue->subname.'">
				<label for="Mobile">Subject Name </label>
				<input type="text" id="newSubjName" value="'.$keyvalue->subname.'" class="form-control"/>
			</div> ';
			$output .='<div class="col-lg-6">
				<label for="Mobile">Percentage</label>
				<input type="text" id="oldSubjPercent" value="'.$keyvalue->percentage.'" class="form-control"/>
			</div> ';
			$query2=$this->db->query("select * from kgsubject where academicyear='$max_year' and subname='$sgra'");
			foreach ($query2->result() as $kvalue) {
				$output .='<div class="col-lg-3" id="deletee'.$kvalue->subname.''.$kvalue->subgrade.'">
				<a class="gr'.$kvalue->subgrade.'"></a>
				<p class="text-info"> <a href="#" value="'.$kvalue->subname.'" name="'.$kvalue->subgrade.'" class="dele">
					<span class="text-danger"><i class="fas fa-trash"></i> </span>
				</a> '.$kvalue->subgrade.'</p>';
				if($kvalue->letter=='#'){
				  	$output .='<div class="pretty p-icon p-smooth">
					  	<input type="checkbox" name="#" class="changeme" 
					  	 id="'.$kvalue->subname.'" checked="checked" value="'.$kvalue->subgrade.'">'.$kvalue->letter.'
					  	  	<div class="state p-success">
		                		<i class="icon fa fa-check"></i>
		                		<label></label>
	              			</div>
	              		</div> ';
	          			$output .='<div class="pretty p-icon p-smooth">
	          			<input class="changeme" id="'.$kvalue->subname.'" name="A" type="checkbox" value="'.$kvalue->subgrade.'">A
	          	  		<div class="state p-success">
	                		<i class="icon fa fa-check"></i>
	                		<label></label>
	              		</div>
          			</div>';
          		}else{
          			$output .='<div class="pretty p-icon p-smooth">
	          			<input class="changeme" name="A" type="checkbox" id="'.$kvalue->subname.'" checked="checked" value="'.$kvalue->subgrade.'">'.$kvalue->letter.'
	          			<div class="state p-success">
	                		<i class="icon fa fa-check"></i>
	                		<label></label>
	              		</div>
          			</div>';
          			$output .='<div class="pretty p-icon p-smooth">
	          			<input class="changeme" id="'.$kvalue->subname.'" name="#" type="checkbox" value="'.$kvalue->subgrade.'">#
	          	  		<div class="state p-success">
	                		<i class="icon fa fa-check"></i>
	                		<label></label>
	              		</div>
          			</div>';
          		}
          		if($kvalue->onreportcard=='1'){
				  	$output .='<div class="pretty p-icon p-smooth">
					  	<input type="checkbox" name="0" class="changeOnRp" 
					  	 id="'.$kvalue->subname.'" checked="checked" value="'.$kvalue->subgrade.'">RC
					  	  	<div class="state p-success">
		                		<i class="icon fa fa-check"></i>
		                		<label></label>
	              			</div>
	              		</div> ';
          		}else{
          			$output .='<div class="pretty p-icon p-smooth">
					  	<input type="checkbox" name="1" class="changeOnRp" 
					  	 id="'.$kvalue->subname.'" value="'.$kvalue->subgrade.'">RC
					  	  	<div class="state p-success">
		                		<i class="icon fa fa-check"></i>
		                		<label></label>
	              			</div>
	              		</div> ';
          		}
        		$output .='</div> ';
			}
		}
		$output .='</div><div class="row">
		<div class="col-lg-4"></div><div class="col-lg-4"></div>
		<div class="col-lg-4 pull-right"><button class="btn btn-outline-success text-success btn-sm form-control" type="submit">Save Changes</button></div>
		</div></div></div></form>';
		return $output ;
	}
	function edit_subject($edtisub,$max_year){
		$output='';
		$this->db->where('Academic_Year',$max_year);
		$this->db->where('Subj_name',$edtisub);
		$this->db->group_by('Subj_name');
		$query=$this->db->get('subject');
		$output.='<button class="btn btn-default StudentViewTextInfo backToSubject font-weight-bold font-22" id="backToSubject" ><i class="fas fa-chevron-left" style="font-size:30px"></i> Go Back</button>
		<div class="row"> ';
		foreach ($query->result() as $keyvalue) {
			$sgra=$keyvalue->Subj_name;
			$sgrade=$keyvalue->Grade;
			$output .='<div class="col-lg-12 col-12 form-group">
				<input type="hidden" id="oldSubjNameGrade" value="'.$keyvalue->Subj_name.'">
				<input type="hidden" id="renamedAcademicYear" value="'.$max_year.'">
				<label for="Mobile">Subject Name </label>
				<input type="text" required="required" id="newSubjNameGrade" value="'.$keyvalue->Subj_name.'" class="form-control"/>
			</div> ';
			$query2=$this->db->query("select * from subject where Academic_Year='$max_year' and Subj_name='$sgra' ");
			foreach ($query2->result() as $kvalue) {
				$output .='<div class="col-lg-4 col-12" id="deletee'.$kvalue->Subj_name.''.$kvalue->Grade.'">
				<div class="background-message-gs"> 
				<p> 
				<button class="btn btn-light btn-block">'.$kvalue->Subj_name.' Grade
				 '.$kvalue->Grade.' 
				<a href="javascript:void(0)" value="'.$kvalue->Subj_name.'" name="'.$kvalue->Grade.'" class="deleleSubjectGS"><span class="text-danger"> Delete <a class="gr'.$kvalue->Grade.'"></a></span>  </a> </button>';
				if($kvalue->letter == '#'){
				  	$output .='<input type="radio" name="'.$kvalue->Grade.'" class="changeme" id="'.$kvalue->Subj_name.'" checked="checked" value="#">'.$kvalue->letter.' ';
	          			$output .='<input class="changeme" id="'.$kvalue->Subj_name.'" name="'.$kvalue->Grade.'" type="radio" value="A">A';
          		}else{
          			$output .='<input class="changeme" name="'.$kvalue->Grade.'" type="radio" id="'.$kvalue->Subj_name.'" checked="checked" value="A">'.$kvalue->letter.' ';
          			$output .='<input class="changeme" id="'.$kvalue->Subj_name.'" name="'.$kvalue->Grade.'" type="radio" value="#">#';
          		}
          		$output.='&nbsp;&nbsp;&nbsp;  ';
          		if($kvalue->onreportcard == '1'){
				  	$output .=' <input type="checkbox" name="changeOnRpGS" class="0" 
					  	 id="'.$kvalue->Subj_name.'" checked="checked" value="'.$kvalue->Grade.'">RC ';
          		}else{
          			$output .=' <input type="checkbox" name="changeOnRpGS" class="1" 
					  	 id="'.$kvalue->Subj_name.'" value="'.$kvalue->Grade.'">RC ';
          		}
          		$output.='&nbsp;&nbsp;&nbsp;  ';
          		$output.='<select name="percentageGrade" style="width:100px" class="form-contrlol custom-selecdt" id="percentageGrade">';
          		for($i=100;$i>=1;$i--) { 
          			if($i==$kvalue->Merged_percent ){
          				$output.=' <option selected="selected" class="percentageGrade" name="'.$kvalue->Subj_name.'" id="'.$kvalue->Grade.'" value="'.$i.'">
                    '.$i.'</option>';
          			}else{
          				$output.=' <option class="percentageGrade" name="'.$kvalue->Subj_name.'" id="'.$kvalue->Grade.'" value="'.$i.'"> '.$i.'</option>';
          			}
                }
                $output.='</select> ';
                if($kvalue->student_view == '1'){
          			$output.='<div class="pretty p-switch">
	                    <input type="checkbox" checked="checked" id="'.$kvalue->Subj_name.'" name="change_subject_status" value="'.$kvalue->Grade.'" class="'.$kvalue->Academic_Year.'" />
	                    <div class="state p-info">
	                        <label></label><small class="text-time">Student can see this subject result </small>
	                      </div>
	                </div>';
          		}else{
          			$output.='<div class="pretty p-switch">
	                    <input type="checkbox" id="'.$kvalue->Subj_name.'" name="change_subject_status" value="'.$kvalue->Grade.'" class="'.$kvalue->Academic_Year.'"/>
	                   <div class="state p-info">
                        <label></label><small class="text-time">Student can see this subject result</small>
                      </div>
	                </div>';
          		}
          		$queryCheck=$this->db->query("select * from subject_branch_enable where academicyear='$max_year' and enable_status='1' ");
          		if($queryCheck->num_rows()>0){
          			$queryBranch=$this->db->query("select name from branch where academicyear='$max_year'  group by name");
          			if($queryBranch->num_rows()>0){
          				$output.='<br><span class="text-time">Subject Branch :</span><select name="change_subject_branch" style="width:100px" class="form-contrlol custom-selecdt" id="change_subject_branch">
          				<option class="subjectBranchName" name="'.$kvalue->Subj_name.'" id="'.$kvalue->Grade.'" value="'.$kvalue->subject_branch.'" data-sub-year="'.$max_year.'">Common</option>';
          				foreach($queryBranch->result() as $rwo){
          					$branchName=$rwo->name;
          					if($branchName==$kvalue->subject_branch ){
		          				$output.='<option selected="selected" class="subjectBranchName" name="'.$kvalue->Subj_name.'" id="'.$kvalue->Grade.'" value="'.$branchName.'" data-sub-year="'.$max_year.'"> '.$branchName.'</option>';
		          			}else{
		          				$output.='<option class="subjectBranchName" name="'.$kvalue->Subj_name.'" id="'.$kvalue->Grade.'" value="'.$branchName.'" data-sub-year="'.$max_year.'"> '.$branchName.'</option>';
		          			}
          				}
          				$output.='</select>';
          			}else{
          				$output.='<p class="text-time text-danger">Please create branch</p>';
          			}
          		}else{
          			$output.='<p class="text-time text-success">Common subject across branch</p>';
          		}

      			$studentSpecific=array('Yes','No');
  				$output.='<br><span class="text-time">Student-specific subject :</span>
  				<select name="change_subject_specific" style="width:100px" class="form-contrlol custom-selecdt" id="change_subject_specific">';
  				foreach($studentSpecific as $specific){
  					if($specific==$kvalue->student_specific ){
          				$output.='<option selected="selected" class="subjectStudentSpecific" name="'.$kvalue->Subj_name.'" id="'.$kvalue->Grade.'" value="'.$specific.'" data-sub-year="'.$max_year.'"> '.$specific.'</option>';
          			}else{
          				$output.='<option class="subjectStudentSpecific" name="'.$kvalue->Subj_name.'" id="'.$kvalue->Grade.'" value="'.$specific.'" data-sub-year="'.$max_year.'"> '.$specific.'</option>';
          			}
  				}
  				$output.='</select>';
      			
          		
        		$output .='</p></div></div>';
			}
		}
		$output.='<div class="col-lg-12 col-12 form-group">
			<button class="btn btn-info pull-right saveSubjectChangesGS type="submit">Save Changes</button>
			</div>
		</div>';
		return $output ;
	}
	function update_KG_subject_objective($oldsubjname,$data,$max_year){
		$this->db->where('oid',$oldsubjname);
		$this->db->where('academicyear',$max_year);
		$query=$this->db->update('kgsubjectobjective',$data);
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function update_KG_subject($oldsubjname,$data,$max_year,$newsubjName){
		$this->db->where('subname',$oldsubjname);
		$this->db->where('academicyear',$max_year);
		$query=$this->db->update('kgsubject',$data);
		if($query){
			$this->db->where('subid',$oldsubjname);
		    $this->db->where('academicyear',$max_year);
		    $this->db->set('subid',$newsubjName);
		    $query=$this->db->update('kgsubjectobjective');
			return true;
		}else{
			return false;
		}
	}
	function updateReportCardSubjectOrder($subject,$grade,$suborder,$max_year){
		$queryQuarter=$this->db->query("select term from quarter where Academic_year ='$max_year' ");
		if($queryQuarter->num_rows()>0){
			foreach($queryQuarter->result() as $quarterName){
				$quarter=$quarterName->term;
								
				$queryBranch=$this->db->query("select name from branch where academicyear='$max_year'  group by name");
				if($queryBranch->num_rows()>0){
					foreach($queryBranch->result() as $branchName){
						$branch=$branchName->name;
						$queryGradesec=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' and branch='$branch' group by gradesec ");
						if($queryGradesec->num_rows()>0){
							foreach($queryGradesec->result() as $GradesecName){
								$gradesec=$GradesecName->gradesec;
								$queryCheckReportCard = $this->db->query("SHOW TABLES LIKE 'reportcard".$gradesec.$max_year."' ");
								if ($queryCheckReportCard->num_rows()>0)
								{
									$this->db->where('subject',$subject);
									$this->db->where('grade',$gradesec);
									$this->db->where('academicyear',$max_year);
									$this->db->set('subjorder',$suborder);
									$queryUpdate=$this->db->update('reportcard'.$gradesec.$max_year);
								}
							}
						}
					}
				}
			}
		}
		return true;
	}
	function update_subject($oldsubjname,$data,$max_year,$newsubjName){
		$this->db->where('Subj_name',$oldsubjname);
		$this->db->where('Academic_Year',$max_year);
		$query=$this->db->update('subject',$data);
		if($query){
			$queryQuarter=$this->db->query("select term from quarter where Academic_year ='$max_year' ");
			if($queryQuarter->num_rows()>0){
				foreach($queryQuarter->result() as $quarterName){
					$quarter=$quarterName->term;
					$queryGrade=$this->db->query("select Grade from subject where Subj_name='$newsubjName' and Academic_Year='$max_year' ");
					if($queryGrade->num_rows()>0){
						foreach($queryGrade->result() as $gradeName){
							$grade=$gradeName->Grade;
							$queryBranch=$this->db->query("select name from branch where academicyear='$max_year'  group by name");
							if($queryBranch->num_rows()>0){
								foreach($queryBranch->result() as $branchName){
									$branch=$branchName->name;
									$queryGradesec=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' and branch='$branch' group by gradesec ");
									if($queryGradesec->num_rows()>0){
										foreach($queryGradesec->result() as $GradesecName){
											$gradesec=$GradesecName->gradesec;
											$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$branch.$gradesec.$quarter.$max_year."' ");
											if ($queryCheck->num_rows()>0)
											{
												$this->db->where('subname',$oldsubjname);
												$this->db->where('mgrade',$gradesec);
												/*$this->db->where('quarter',$quarter);*/
												$this->db->where('academicyear',$max_year);
												$this->db->set('subname',$newsubjName);
												$queryUpdate=$this->db->update('mark'.$branch.$gradesec.$quarter.$max_year);
												if($queryUpdate){
													$queryCheckReportCard = $this->db->query("SHOW TABLES LIKE 'reportcard".$gradesec.$max_year."' ");
													if ($queryCheckReportCard->num_rows()>0)
													{
														$this->db->where('subject',$oldsubjname);
														$this->db->where('grade',$gradesec);
														$this->db->where('academicyear',$max_year);
														$this->db->set('subject',$newsubjName);
														$queryUpdate=$this->db->update('reportcard'.$gradesec.$max_year);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			return true;
		}else{
			return false;
		}
	}
	function feedschoolcurriclum($term,$data){
		$this->db->where(array('crname'=>$term));
		$query=$this->db->get('schoolcurriclum');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			$this->db->insert('schoolcurriclum',$data);
		}
	}
	function fetchschoolcurriclum($max_year){
		$output='';
			$output.='<div class="StudentViewTextInfo">
			<h5 class="card-header"> Your School Annual Curriclum by ';
			$arrayterm=array('Quarter','Term','Semester');
			foreach($arrayterm as $termName){
				$queryCheck=$this->db->query("select * from schoolcurriclum where crname='$termName' ");
				if($queryCheck->num_rows()>0){
					$output.='<div class="pretty p-switch">
	                    <input type="checkbox" checked="checked" name="schoolAnnualCurriclum" value="'.$termName.'" />
	                    <div class="state">
	                        <label>'.$termName.'</label>
	                    </div>
	                </div>';
				}else{
					$output.='<div class="pretty p-switch">
	                  <input type="checkbox" name="schoolAnnualCurriclum" value="'.$termName.'" />
	                  <div class="state">
	                    <label>'.$termName.'</label>
	                  </div>
	                </div>';
	            }
			}
			$output.='</h5></div>';
		return $output;
	}
	function loadSchoolCurriclum4Use($max_year){
		$queryCheck=$this->db->query("select * from schoolcurriclum group by crname order by crname ASC ");
		if($queryCheck->num_rows()>0){
		$output ='<option> </option>';
			foreach ($queryCheck->result() as $row) { 
				$output .='<option value="'.$row->crname.'">'.$row->crname.'</option>';
			}
			return $output;
		}
	}
	function add_term($term,$ac,$grade){
		$this->db->where(array('term'=>$term));
		$this->db->where(array('termgrade'=>$grade));
		$this->db->where(array('Academic_year'=>$ac));
		$query=$this->db->get('quarter');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function add_year($academicyear){
		$this->db->where(array('year_name'=>$academicyear));
		$query=$this->db->get('academicyear');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function fetch_year(){
		$this->db->order_by('year_name','DESC');
		$query=$this->db->get('academicyear');
		return $query->result();
	}
	function delete_year($id){
		$this->db->where('id',$id);
		$this->db->delete('academicyear');
	}
	function fetch_grade($max_year){
		$this->db->where('usertype','Student');
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('isapproved =','1');
		$this->db->where('status =','Active');
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_grade_admin($max_year,$branch){
		$this->db->where('usertype','Student');
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('isapproved =','1');
		$this->db->where('status =','Active');
		$this->db->where('academicyear',$max_year);
		$this->db->where('branch',$branch);
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_grade4NonsuperAdmin($max_year,$branch){
		$this->db->where('usertype','Student');
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('isapproved =','1');
		$this->db->where('status =','Active');
		$this->db->where('academicyear',$max_year);
		$this->db->where('branch',$branch);
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetchDivForGradeGroup($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('dname','ASC');
		$this->db->group_by('dname');
		$query=$this->db->get('schooldivision');
		return $query->result();
	}
	function fetchKgGrade($max_year){
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('grade =','KG1');
		$this->db->where('academicyear',$max_year);
		$this->db->or_where('grade =','KG2');
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('academicyear',$max_year);
		$this->db->or_where('grade =','KG3');
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetchAllSubject4Forged($max_year){
		$query=$this->db->query("select * from subject where Academic_Year='$max_year' and onreportcard='0' group by Subj_name order by Subj_name ASC");
		return $query->result();
	}
	function fetchOnlyKgSubjects($max_year){
		$query=$this->db->query("select * from subject where Academic_Year='$max_year'  and Grade='KG1' or Academic_Year='$max_year' and  Grade='KG2' or Academic_Year='$max_year' and Grade='KG3' group by Subj_name order by Subj_name ASC");
		return $query->result();
	}
	function fetch_all_subject($max_year){
		$query=$this->db->query("select * from subject where Academic_Year='$max_year' group by Subj_name order by Subj_name ASC");
		return $query->result();
	}
	function fetch_KG_subject($max_year){
		$query=$this->db->query("select * from kgsubject where academicyear='$max_year' group by subname order by subname ASC");
		return $query->result();
	}
	function fetch_subject_grades($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(Grade) as gradess from subject where Academic_Year ='$max_year'  GROUP BY Subj_name ORDER BY Subj_name ASC");
    	return $query->result();
  	}
  	function fetchAllKGSubjetsObjectives($max_year,$max_quarter){
  		$querySubject=$this->db->query("SELECT * from kgsubjectobjective where academicyear ='$max_year' and quarter='$max_quarter' GROUP BY oid ORDER BY oid DESC");
  		$output='';
  		if($querySubject->num_rows()>0){
  			$output.='<div class="card" id="subjecttshere">
            <div class="card-body">
              <div class="row">
                <div class="table-responsive">
                  <table class="table table-stripped table-hover" style="width:100%;">
                    <thead>
                      <tr>
                        <th>No.</th>
                        <th>Subject Name</th>
                        <th>Grade</th>
                        <th>Objective</th>
                        <th>Linked Subject</th>
                        <th>Date Created</th>
                      </tr>
                    </thead>
                    <tbody>';
                    $no=1; 
                    foreach($querySubject->result() as $post){
                      $id=$post->oid;
                      $output.='<tr class="delete_mem'.$id.'">
                        <td>'.$no.'.</td>
                        <td>'.$post->subid.'</td>
                        <td>'.$post->ograde.'</td><td>'.$post->subobjective.'</td><td>'.$post->linksubject.'</td>'; 
                        $output.='
                        <td>'.$post->datecreated.'
                          <div class="table-links">
                            <a href="#" class="editSubject" value="'.$post->oid.'">Edit
                            </a>
                            <div class="bullet"></div>
                            <a href="#" class="deletesubject text-danger" id="'.$post->oid.'">Delete</a>
                          </div>
                        </td>
                       </tr>';
                       $no++; 
                    }
                    $output.='</tbody>
                  </table>
                </div>
              </div>
            </div>
           </div>';
	  	}else{
	  		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No subject objective found.
            </div></div>';
	  	}
	  	return $output;
  	}
  	function fetchAllKGSubjets($max_year){
  		$querySubject=$this->db->query("SELECT *, GROUP_CONCAT(subgrade) as gradess from kgsubject where academicyear ='$max_year'  GROUP BY subname ORDER BY subname ASC");
  		$output='';
  		if($querySubject->num_rows()>0){
  			$allSubject=$querySubject->num_rows();
  			$output.='<div class="card" id="subjecttshere">
            <div class="card-body">
              <div class="row">
                <div class="table-responsive">
                  <table class="table table-stripped table-hover" style="width:100%;">
                    <thead>
                      <tr>
                        <th>No.</th>
                        <th>Subject Name</th>
                        <th>Grade</th>
                        <th>Subject Order</th>
                        <th>Date Created</th>
                      </tr>
                    </thead>
                    <tbody>';
                    $no=1; 
                    foreach($querySubject->result() as $post){
                      $id=$post->subname;
                      $output.='<tr class="delete_mem'.$id.'">
                        <td>'.$no.'.</td>
                        <td>'.$post->subname.'</td>';
                        $output.='<td>'.$post->gradess.'</td>'; 
 						$output.='<td><select class="form-control kgsubOrderJ" required="required" name="kgsubOrder" id="kgsubOrderJ"><option class="kgsubOrder" id="'.$post->subname.'" value="'.$post->suborder.'">'.$post->suborder.'</option>';
 						for ($i=1; $i <=$allSubject ; $i++) { 
 							$output.='<option class="kgsubOrder" id="'.$post->subname.'" value="'.$i.'">'.$i.'</option>';
 						}
 						$output.='</select></td>';
                        $output.='
                        <td>'.$post->datecreated.'
                          <div class="table-links">
                            <a href="#" class="editSubject" value="'.$post->subname.'">Edit
                            </a>
                            <div class="bullet"></div>
                            <a href="#" class="deletesubject text-danger" id="'.$post->subname.'">Delete</a>
                          </div>
                        </td>
                       </tr>';
                       $no++; 
                    }
                    $output.='</tbody>
                  </table>
                </div>
              </div>
            </div>
           </div>';
	  	}else{
	  		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No subject found.
            </div></div>';
	  	}
	  	return $output;
  	}
  	function fetchAllSubjets($max_year){
  		$querySubject=$this->db->query("SELECT *, GROUP_CONCAT(Grade) as gradess from subject where Academic_Year ='$max_year'  GROUP BY Subj_name ORDER BY Subj_name ASC");
  		$output='';
  		if($querySubject->num_rows()>0){
				$this->db->where('academicyear',$max_year);
				$this->db->where('enable_status','1');
				$query = $this->db->get('subject_branch_enable');
				$output.='<small class="text-muted">Note: This toggle will be ON when school`s subject different in each branch and works only on Report card ,Roster & Transcript.</small> <span class="font-weight-bold">Separate branch-subject.</span>';
				if($query->num_rows()>0){
					$output.='<div class="pretty p-switch p-fill">
		                <input type="checkbox" name="subject_branch_enable" class="subject_branch_enable" checked="checked" id="'.$max_year.'" value="0" >
		                <div class="state p-success">
		                    <label></label>
		                </div>
				    </div>';
				}else{
					$output.='<div class="pretty p-switch p-fill">
		              	<input type="checkbox" name="subject_branch_enable" class="subject_branch_enable" id="'.$max_year.'" value="1" >
		              	<div class="state p-success">
		                	<label></label>
		              	</div>
				    </div>';
				}
  				$output.='
                <div class="table-responsive">
                  <table class="table table-striped table-hover" style="width:100%;">
                    <thead>
                      <tr>
                        <th>No.</th>
                        <th>Subject Name</th>
                        <th>Grade</th>
                        <th>Academic Year</th>
                        <th>Date Created</th>
                      </tr>
                    </thead>
                    <tbody>';
                    $no=1; 
                    foreach($querySubject->result() as $post){
                      $id=$post->Subj_name;
                      $output.='<tr class="delete_mem'.$id.'">
                        <td>'.$no.'.</td>
                        <td>'.$post->Subj_name.'
                        <div class="table-links">
                            <a href="#" class="editSubject" value="'.$post->Subj_name.'" name="'.$max_year.'">Edit
                            </a>
                            <div class="bullet"></div>
                            <a href="#" class="deletesubject text-danger" id="'.$post->Subj_name.'" name="'.$max_year.'">Delete</a>
                          </div>
                        </td>
                        <td>'.$post->gradess.'</td>'; 
                        $output.='<td>'.$post->Academic_Year.' </td>
                        <td>'.$post->date_created.' </td>
                       </tr>';
                       $no++; 
                    }
                    $output.='</tbody>
                  </table>
           </div>';
	  	}else{
	  		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No subject found.
            </div></div>';
	  	}
	  	return $output;
  	}
  	function fetch_Achiever(){
  		$this->db->order_by('achievername','ASC');
  		$this->db->group_by('achievername');
    	$query = $this->db->get('achievername');
    	return $query->result();
  	}
  	function fetchAchiever(){
  		$query=$this->db->query("SELECT *, GROUP_CONCAT(achievergrade) as gradess from achievername GROUP BY minvalue,maxivalue ORDER BY id ASC");

  		$output='';
  		if($query->num_rows()>0){
  			$output.='
                <div class="table-responsive">
                  <table class="table table-striped table-hover" style="width:100%;">
                    <thead>
                      <tr>
                        <th>No.</th>
                        <th>Grade</th>
                        <th>Achiever Name</th>
                        <th>Min. Value</th>
                        <th>Max. Value</th>
                        <th>Remark</th>
                        <th>Date Created</th>
                      </tr>
                    </thead>
                    <tbody>';
                    $no=1; 
                    foreach($query->result() as $post){
                      $id=$post->achievername;
                      $output.='<tr class="delete_mem'.$id.'">
                        <td>'.$no.'.</td>
                        <td>'.$post->gradess.'.</td>
                        <td>'.$post->achievername.'
                        <div class="table-links">
                            <a href="#" class="deleteachievername text-danger" value="'.$post->minvalue.'" name="'.$post->maxivalue.'" id="'.$post->achievername.'">Delete</a>
                          </div>
                        </td>
                        <td>'.$post->minvalue.'</td> <td>'.$post->maxivalue.'</td> <td>'.$post->remarkname.'</td>'; 
                        $output.='
                        <td>'.$post->datecreated.' </td>
                       </tr>';
                       $no++; 
                    }
                    $output.='</tbody>
                  </table>
           </div>';
	  	}else{
	  		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
	  	}
	  	return $output;
  	}
  	function fetch_merged_subject_grades($max_year){
		$query=$this->db->query("SELECT *  from subject where Academic_Year ='$max_year' and Merged_name!='' GROUP BY Merged_name,Grade ORDER BY Merged_name ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class=""> 
            <table class="tabler table-borderedr" style="width:100%;">
            <thead><tr> 
                <th>Merge Name</th>
                <th>Grade</th>
                <th>Merged Subject List</th>
                <th>Percentage</th> </tr>
            </thead>';
			foreach ($query->result() as $posts) {
				$id=$posts->Merged_name;
            	$gradee=$posts->Grade;
            	$count_span=$this->db->query(" select * from subject where Merged_name ='$id' and Grade ='$gradee' and Academic_Year ='$max_year' ");
            	$al_joss=$count_span->num_rows();
            	$output.='<tr class="removeit'.$posts->Grade.''.$posts->Merged_name.'">
                <td rowspan ="'.$al_joss.'"><button class="btn btn-primary removemerged" value="'.$posts->Grade.'" name="'.$posts->Merged_name.'" id="heresave'.$posts->Grade.'">'.$posts->Merged_name.'</button> </td> 
                <td rowspan ="'.$al_joss.'">'.$posts->Grade.'</td>';
                $query231=$this->db->query("select * from subject where Merged_name ='$id' and Grade ='$gradee' and Academic_Year ='$max_year'");
                $no=1;
                foreach ($query231->result() as $keyvalue)
                { 
                    $output.='<td>'.$keyvalue->Subj_name.'</td>  
                    <td>'.$keyvalue->Merged_percent.'</td>
                      </tr>';
                } 
            	$no++; 
			}
			$output.='</table></div>';
		}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                    No merged subject found.
                </div>';
		}
		return $output;
  	}
	function fetch_month(){
		$query=$this->db->get('month');
		return $query->result();
	}
	function fetch_term($max_year){
		$this->db->where('Academic_year',$max_year);
		$this->db->group_by('term');
		$this->db->order_by('term','ASC');
		$query=$this->db->get('quarter');
		return $query->result();
	}
	function fetch_term_desc($max_year){
		$this->db->where('Academic_year',$max_year);
		$this->db->group_by('term');
		$this->db->order_by('term','DESC');
		$query=$this->db->get('quarter');
		return $query->result();
	}
	function load_kg_subject_header($branch,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_header.academicyear',$max_year);
		$this->db->where('users.usertype','Student');
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('kg_subject_header.sub_name','ASC');
		$this->db->group_by('kg_subject_header.sub_name');
		$this->db->select('kg_subject_header.sub_name');
		$this->db->from('kg_subject_header');
		$this->db->join('users', 
            'users.grade = kg_subject_header.header_grade');
		$query = $this->db->get();
		$output.='<option></option>';
		foreach ($query->result() as $row) { 
			$output.='<option value="'.$row->sub_name.'">'.$row->sub_name.'</option>';
		}
	    return $output;
	}
	function load_kg_subject_week($branch,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_list_name.academicyear',$max_year);
		$this->db->where('users.usertype','Student');
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('kg_subject_list_name.week','ASC');
		$this->db->group_by('kg_subject_list_name.week');
		$this->db->select('kg_subject_list_name.week');
		$this->db->from('kg_subject_list_name');
		$this->db->join('users', 
            'users.grade = kg_subject_list_name.sgrade');
		$query = $this->db->get();

		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-12 col-md-6">
			<div class="pretty p-bigger">
                  	<input type="checkbox" name="kg_subject_result_weekname" value="'.$row->week.'" class="kg_subject_result_weekname" id="kg_subject_result_weekname">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->week.' 
                  	</div>
                </div>
            </div>';
		}
		$output.='</div>';
	    return $output;
	}
	function load_kg_subject_header_grade($branch,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_header.academicyear',$max_year);
		$this->db->where('kg_subject_header.header_grade',$gradesec);
		$this->db->order_by('kg_subject_header.sub_name','ASC');
		$this->db->group_by('kg_subject_header.sub_name');
		$query = $this->db->get('kg_subject_header');
		$output.='<option></option>';
		foreach ($query->result() as $row) { 
			$output.='<option value="'.$row->sub_name.'">'.$row->sub_name.'</option>';
		}
	    return $output;
	}
	function load_kg_subject_header_grade_admin($branch,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_header.academicyear',$max_year);
		$this->db->where('users.usertype','Student');
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('kg_subject_header.sub_name','ASC');
		$this->db->group_by('kg_subject_header.sub_name');
		$this->db->select('kg_subject_header.sub_name');
		$this->db->from('kg_subject_header');
		$this->db->join('users', 
            'users.grade = kg_subject_header.header_grade');
		$query = $this->db->get();
		$output.='<option></option>';
		foreach ($query->result() as $row) { 
			$output.='<option value="'.$row->sub_name.'">'.$row->sub_name.'</option>';
		}
	    return $output;
	}
	function load_kg_category_header($quarter,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_list_category.academicyear',$max_year);
		$this->db->where('kg_subject_list_category.cate_grade',$gradesec);
		$this->db->where('kg_subject_list_category.cate_term',$quarter);
		$this->db->order_by('kg_subject_list_category.category_name','ASC');
		$this->db->group_by('kg_subject_list_category.category_name');
		$query = $this->db->get('kg_subject_list_category');
		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-12 col-md-12">
			<div class="pretty p-bigger">
                  	<input type="checkbox" name="kg_subject_category_nameGS" value="'.$row->category_name.'" class="kg_subject_category_nameGS" id="kg_subject_category_nameGS">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->category_name.' 
                  	</div>
                </div>
            </div>';
		}
		$output.='</div>';
	    return $output;
	}
	function load_kg_category_header_admin($quarter,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_list_category.academicyear',$max_year);
		$this->db->where('kg_subject_list_category.cate_term',$quarter);
		$this->db->where('users.usertype','Student');
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('kg_subject_list_category.cate_grade','ASC');
		$this->db->group_by('kg_subject_list_category.category_name');
		$this->db->select('kg_subject_list_category.category_name');
		$this->db->from('kg_subject_list_category');
		$this->db->join('users', 
            'users.grade = kg_subject_list_category.cate_grade');
		$query = $this->db->get();
		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-12 col-md-12">
			<div class="pretty p-bigger">
                  	<input type="checkbox" name="kg_subject_category_nameGS_admin" value="'.$row->category_name.'" class="kg_subject_category_nameGS_admin" id="kg_subject_category_nameGS_admin">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->category_name.' 
                  	</div>
                </div>
            </div>';
		}
		$output.='</div>';
	    return $output;
	}
	function load_kg_subject_value($branch,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_value.academicyear',$max_year);
		$this->db->where('kg_subject_value.value_grade',$gradesec);
		$this->db->order_by('kg_subject_value.value_name','ASC');
		$this->db->group_by('kg_subject_value.value_name');
		$query = $this->db->get('kg_subject_value');
		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-12 col-md-6">
			<div class="pretty p-bigger">
                  	<input type="checkbox" name="kg_subject_valueGS" value="'.$row->value_name.'" class="kg_subject_valueGS" id="kg_subject_valueGS">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->value_name.' 
                  	</div>
                </div>
            </div>';	
		}
		$output.='</div>';
	    return $output;
	}
	function load_kg_subject_value_admin($branch,$gradesec,$max_year){
		$output='';
		$this->db->where('kg_subject_value.academicyear',$max_year);
		$this->db->where('users.usertype','Student');
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('kg_subject_value.value_name','ASC');
		$this->db->group_by('kg_subject_value.value_name');
		$this->db->select('kg_subject_value.value_name');
		$this->db->from('kg_subject_value');
		$this->db->join('users', 
            'users.grade = kg_subject_value.value_grade');
		$query = $this->db->get();
		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-12 col-md-6">
			<div class="pretty p-bigger">
                  	<input type="checkbox" name="kg_subject_valueGS_admin" value="'.$row->value_name.'" class="kg_subject_valueGS_admin" id="kg_subject_valueGS_admin">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->value_name.' 
                  	</div>
                </div>
            </div>';	
		}
		$output.='</div>';
	    return $output;
	}
	function fetch_kg_subject_season($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->group_by('sub_name');
		$this->db->order_by('sub_name','ASC');
		$query=$this->db->get('kg_subject_header');
		return $query->result();
	}
	function fetch_schooldivision($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('dname','ASC');
		$query=$this->db->get('schooldivision');
		return $query->result();
	}
	function fetchQuarterOfYear($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(termgrade) as gradess from quarter where Academic_year ='$max_year' GROUP BY term ORDER BY term ASC");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
                      <table class="table table-striped">
                <tr>
                  <th>Name</th>
                  <th>Grade</th>
                  <th>Starting date</th>
                  <th>Ending date</th>
                  <th>Created At</th>
                  <th>Academic Year</th>
                  <th>Action</th>
            </tr>';
			foreach ($query->result() as $qValue) {
				$id=$qValue->id;
				$startDate = $qValue->startdate;
                $endDate = $qValue->endate;
                $start_date = DateTime::createFromFormat('d/m/y',$startDate);
                $date_end = DateTime::createFromFormat('d/m/y',$endDate);
                $endDate= $date_end->format('d-m-Y');
                $startDate=$start_date->format('d-m-Y');

				$output.='                          
                <tr class="delete_mem'.$qValue->term.'">
                  	<td>'.$qValue->term.'</td>
                  	<td>'.$qValue->gradess.'</td>
                  	<td>'.$startDate.'</td>
                  	<td>'.$endDate.'</td>
                  	<td>'.$qValue->date_created.'</td>
                  	<td>'.$qValue->Academic_year.'</td>
                  	<td><button type="submit" name="editerm" id="'.$qValue->term.'" class="btn btn-success editerm" data-toggle="modal" data-target="#edit_school_season"><i class="fas fa-pen-alt"></i> </button>
                  	<button type="submit" name="deleteterm" id="'.$qValue->term.'"  class="btn btn-danger deleteterm"><i class="fas fa-trash-alt"></i> </button>';
                  	if($qValue->onoff=='1'){
                  		$output.='Status
						<div class="pretty p-switch p-fill">
			              <input type="checkbox" name="onoffQuarter" class="onoffQuarter" checked="checked" id="'.$qValue->term.'" value="'.$qValue->term.'" >
			              <div class="state p-info">
			                <label></label>
			              </div>
			            </div>';
                  	}else{
                  		$output.='Status
						<div class="pretty p-switch p-fill">
			              <input type="checkbox" name="onoffQuarter" class="onoffQuarter" id="'.$qValue->term.'" value="'.$qValue->term.'" >
			              <div class="state p-info">
			                <label></label>
			              </div>
			            </div>';
                  	}
                   	$output.='</td>
                </tr>';
			}
			$output.='</table> </div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
                No quarter found.
            </div>';
		}
		return $output;
	}
	function getQuarterToEdit($termid,$max_year){
		$this->db->where('term',$termid);
		$this->db->where('Academic_year',$max_year);
		$this->db->group_by('term');
        $query=$this->db->get('quarter');
        return $query->result();
	}
	function updateQuarter($data,$termID,$max_year){
		$this->db->where('term',$termID);
		$this->db->where('Academic_year',$max_year);
		$query=$this->db->update('quarter',$data);
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function fetch_term_4teacheer($max_year){
		$this->db->where('Academic_year',$max_year);
		$this->db->select_max('term');
		$this->db->order_by('term','ASC');
		$query=$this->db->get('quarter');
		return $query->result();
	}
	function delete_term($id,$max_year){
		$this->db->where('term',$id);
		$this->db->where('Academic_year',$max_year);
		$this->db->delete('quarter');
	}
	function fetch_usertype(){
		$this->db->order_by('usertype','ASC');
		$this->db->group_by('usertype');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_usertype_dailytasks(){
		$this->db->order_by('uname','ASC');
		$this->db->group_by('uname');
		$query=$this->db->get('usegroup');
		return $query;
	}
	function fetch_each_dailytasks(){
		$this->db->order_by('task_name','ASC');
		$this->db->group_by('task_name');
		$query=$this->db->get('stafftasks');
		return $query;
	}
	function fetch_usertype_users($usertype){
		$output='';
		$this->db->order_by('fname','ASC');
		$this->db->where('usertype',$usertype);
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$query=$this->db->get('users');
		$output .='<input type="checkbox" id="selectall" onClick="selectAll()"> 
		Select All</br>';
		foreach ($query->result() as $row) { 
			$output .='<div class="pretty p-bigger">
                  	<input type="checkbox" name="username_message[ ]" value="'.$row->username.'" class="username" id="username">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->fname.' '.$row->mname.' '.$row->lname.'
                  	</div>
                </div><br> ';
		}
		return $output;
	}
	function fetchGradesofUserStudent($usertype){
		$output='';
		$this->db->order_by('gradesec','ASC');
		$this->db->where('usertype',$usertype);
		$this->db->where('grade!=','');
		$this->db->group_by('grade');
		$query=$this->db->get('users');
		$output .='<option> </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
			}
			return $output;
	}
	function fetchThisGradeStudents($gradeselect){
		$output='';
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where('grade',$gradeselect);
		$query=$this->db->get('users');
		$output .='<input type="checkbox" id="selectall" onClick="selectAll()"> 
		Select All</br>';
			foreach ($query->result() as $row) { 
				$output .='<div class="pretty p-bigger">
                  	<input type="checkbox" name="username_message[ ]" value="'.$row->username.'" class="username" id="username">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->fname.' '.$row->mname.' '.$row->lname.'
                  	</div>
                </div>';
			}
			return $output;
	}
	function fetch_assigned_grade($max_year,$user){
		$this->db->where(array('staff'=>$user));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->group_by('grade');
		$query=$this->db->get('staffplacement');
		$output ='<option> </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
			}
			return $output;
	}
	function fetch_usertype_users_grade($usertype){
		$this->db->order_by('gradesec','ASC');
		$this->db->where('usertype',$usertype);
		$this->db->group_by('gradesec');
		$query=$this->db->get('users');
		$output ='<option> </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
			}
			return $output;
	}
	function fetch_this_grade_students($gradeselect){
		$this->db->order_by('fname','ASC');
		$this->db->where('gradesec',$gradeselect);
		$query=$this->db->get('users');
		$output ='<input type="checkbox" id="selectall" onClick="selectAll()"> 
		Select All</br>';
			foreach ($query->result() as $row) { 
				$output .='<div class="pretty p-bigger">
                  	<input type="checkbox" name="username_message[ ]" value="'.$row->username.'" class="username" id="username">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->fname.' '.$row->mname.' '.$row->lname.'
                  	</div>
                </div>';
			}
			return $output;
	}
	function compose_message($usertype,$touser,$user,$grade,$subject,$message,$datetoday){
		$data=array(
			'sender'=>$user,
			'group_staffs'=>$usertype,
			'receiver'=>$grade,
			'grade'=>$touser,
			'subject'=>$subject,
			'message'=>$message,
			'date_sent'=>$datetoday
		);
		$this->db->insert('message',$data);
	}
	function add_evaluation($grade,$evname,$ac,$max_quarter){
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('evname'=>$evname));
		$this->db->where(array('academicyear'=>$ac));
		$this->db->where(array('quarter'=>$max_quarter));
		$query=$this->db->get('evaluation');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function addCustomEvaluation($grade,$evsubject,$evname,$ac,$max_quarter){
		$this->db->where(array('customgrade'=>$grade));
		$this->db->where(array('customasses'=>$evname));
		$this->db->where(array('customsubject'=>$evsubject));
		$this->db->where(array('academicyear'=>$ac));
		$this->db->where(array('customquarter'=>$max_quarter));
		$query=$this->db->get('evaluationcustom');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function addgroupEvaluation($grade,$evname,$ac,$max_quarter){
		$this->db->where(array('groupgrade'=>$grade));
		$this->db->where(array('groupasses'=>$evname));
		$this->db->where(array('academicyear'=>$ac));
		$this->db->where(array('groupquarter'=>$max_quarter));
		$query=$this->db->get('evaluationgroup');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function summerStudent($username,$year){
		$this->db->where('academicyear',$year);
		$this->db->where('username',$username);
        $query = $this->db->get('summerstudent');
        if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function filterGradeFromBranch($branch,$max_year){
		$this->db->where('summerstudent.branch',$branch);
		$this->db->where(array('summerstudent.academicyear'=>$max_year));
		$this->db->order_by('summerstudent.gradesec','ASC');
		$this->db->group_by('summerstudent.gradesec');
		$query=$this->db->get('summerstudent');
		$output ='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}
	    return $output;
	}
	function exportSummerStudentMarkFormat($gradesec,$max_year,$branch1){
		$this->db->where('summerevaluation.academicyear',$max_year);
		$this->db->where('summerstudent.gradesec',$gradesec);
		$this->db->where('summerstudent.branch',$branch1);
		$this->db->where('summerstudent.academicyear',$max_year);
		$this->db->order_by('summerstudent.fname','ASC');
		$this->db->order_by('summerstudent.mname','ASC');
		$this->db->order_by('summerstudent.lname','ASC');
		$this->db->group_by('summerstudent.id');
		$this->db->select('*');
		$this->db->from('summerevaluation');
		$this->db->join('summerstudent', 
            'summerstudent.grade = summerevaluation.grade');
		$query = $this->db->get();
        return $query->result();
	}
	function exportThisGradeSummerEvname($gradesec,$max_year,$branch1){
		$this->db->where('summerevaluation.academicyear',$max_year);
		$this->db->where('summerstudent.gradesec',$gradesec);
		$this->db->where('summerstudent.branch',$branch1);
		$this->db->where('summerstudent.academicyear',$max_year);
		$this->db->order_by('summerevaluation.eid','ASC');
		$this->db->group_by('summerevaluation.evname');
		$this->db->select('*');
		$this->db->from('summerevaluation');
		$this->db->join('summerstudent', 
            'summerstudent.grade = summerevaluation.grade');
		$query = $this->db->get();
        return $query->result();
	}
	function getAllSummerSubject($gradesec,$max_year){
		$query=$this->db->query("select count(su.Subj_Id) as all_sub,su.Subj_Id,su.Subj_name,su.Grade from summersubject as su cross join summerstudent as u where u.grade=su.Grade and u.gradesec='$gradesec' and Academic_Year='$max_year' group by su.Subj_Id order by su.Subj_name ASC");
		return $query->result();
	}
	function fecthThisStudent($gs_branches,$gs_gradesec,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->order_by('mname','ASC');
		$this->db->order_by('lname','ASC');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('gradesec'=>$gs_gradesec));
		$this->db->where(array('branch'=>$gs_branches));
		$this->db->like('usertype','Student');
		$query=$this->db->get('summerstudent');
		$output ='';
		$output .='
         <div class="table-responsive">
        <table class="table table-striped table-hover" style="width:100%;">
        <thead>
        <tr>
        <th>No.</th>
            <th>ID</th>
            <th>Name</th>
            <th>Gr. & Sec</th>
            <th>Gender</th>
            <th>Branch</th>
        </tr>
        </thead>
       <tbody>';
        $no=1;
		foreach ($query ->result() as $value) {
			$id=$value->id;
			$output .='<tr class="delete_mem'.$value->id.'">
			<td>'.$no.'.</td>
			<td>'.$value->username.'
            <div class="table-links">
             <a href="#" class="deleteSummerStudent text-danger" id="'.$value->id.'">Delete</a>
             <div class="bullet"></div>
             <a href="#" class="editSummerStudent text-success" id="'.$value->unique_id.'">Edit</a>
            </div>
            </td>
            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
            <td>'.$value->gradesec.'</td>
            <td>'.$value->gender.'</td>
            <td>'.$value->branch.' </td>  
            </tr>';
            $no++;
		}
		return $output;
	}
	function deleteSummerStudent($id){
		$this->db->where(array('id'=>$id));
		$this->db->delete('summerstudent');
	}
	function fetchSummerStudentToEdit($id,$max_year){
		$this->db->where(array('unique_id'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('summerstudent');
		$output='<div class="dropdown-divider"></div>
		<form method="POST" id="updateSummerStuForm">
		<div class="card-body"><div class="row">';
		foreach ($query->result() as $stuValue) {
			$output.='<input type="hidden" name="stuStuidSummer" value="'.$stuValue->unique_id.'">
			<input type="hidden" class="form-control" name="stUsernameSummer" value="'.$stuValue->username .'">
			<div class="card-header"> <h4>Edit Profile
                <img alt="Profile" src="'.base_url().'/profile/'.$stuValue->profile.'" style="width: 70px" class="user-img-radious-style pull-right">
            </h4></div>';
			$output.='
			<div class="form-group col-lg-3">
	            <label>UserName/ID</label>
	            <input type="text" disabled="disabled" class="form-control" value="'.$stuValue->username .'">
            </div>
		    <div class="form-group col-lg-3">
		        <label>First Name</label>
		        <input type="text" class="form-control" name="stuFnameSummer" value="'.$stuValue->fname.'">
		    </div>
            <div class="form-group col-lg-3">
                <label>Father Name</label>
                <input type="text" class="form-control" name="stuLnameSummer" value="'.$stuValue->mname.'">
            </div>
            <div class="form-group col-lg-3">
            	<label>G.Father Name</label>
            	<input type="text" class="form-control" name="stuGfnameSummer" value="'.$stuValue->lname.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Gender</label>
                <select class="form-control stuGender" required="required" name="stuGenderSummer" id="gender">
                    <option>'.$stuValue->gender.'</option>';
                    if($stuValue->gender ===trim('Female') or $stuValue->gender ===trim('female') or $stuValue->gender ===trim('F')){
                    	$output.='<option> Male </option>';
                    }else{
                    	$output.='<option> Female </option>';
                    }
                    $output.='
                </select>
            </div>
            <div class="form-group col-lg-3">
                <label>Mother Mobile</label>
                <input type="text" class="form-control" name="stuMobileSummer" value="'.$stuValue->mobile.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Father Mobile</label>
                <input type="text" class="form-control" name="father_mobileSummer" value="'.$stuValue->father_mobile.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Grade</label>
                <input type="text" class="form-control" name="stuGradeSummer" value="'.$stuValue->grade.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Grade</label>
                <input type="text" class="form-control" name="stuSectionSummer" value="'.$stuValue->section.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Email</label>
                <input type="text" class="form-control" name="stuEmailSummer" 
                value="'.$stuValue->email.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Date of Birth</label>
                <input type="date" class="form-control" name="stuDobSummer" 
                value="'.$stuValue->dob.'">
            </div>
            <div class="form-group col-lg-3">
                <label>City</label>
                <input type="text" class="form-control" name="stuCitySummer" 
                value="'.$stuValue->city.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Sub city</label>
                <input type="text" class="form-control" name= "stuSubcitySummer" value="'.$stuValue->sub_city.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Woreda</label>
                <input type="text" class="form-control" name="stuWoredaSummer" value="'.$stuValue->woreda.'">
            </div>
            <div class="form-group col-lg-3">
                <label>Kebele</label>
                <input type="text" class="form-control" name="stuKebeleSummer" value="'.$stuValue->kebele.'">
            </div>';
            $queryFetchService=$this->db->query("select * from branch where academicyear ='$max_year' group by name order by name ASC ");
            	$output.='<div class="form-group col-lg-3">
            	<label>Branch</label><select class="form-control summerBranch" required="required" name="summerBranch" id="summerBranch">';
                foreach($queryFetchService->result() as $servicePlace){
                	if($servicePlace->name==$stuValue->branch){
                		$output.='<option value'.$servicePlace->name.' selected="selected">'.$servicePlace->name.'</option>';
                	}else{
                		$output.='<option value'.$servicePlace->name.'>'.$servicePlace->name.'</option>';
                	}
                }
            $output.='</select></div><div class="form-group col-lg-3">
                <div class="form-group">
	                <label for="Profile">Profile Photo</label>
	                <input id="profile" type="file" class="form-control stuProfile" name="stuProfileSummer">
                </div>
            </div>
            <div class="form-group col-lg-3 text-right">
                <button class="btn btn-success" type="submit" name="savechangesSummer"> Save Changes
                </button>
            </div>
            ';
		}
		$output.='</div></div></form>';
		return $output;
	}
	function fetchSummerGrade($max_year){
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$query=$this->db->get('summerstudent');
		return $query->result();
	}
	function fetchSummerSubjets($max_year){
  		$querySubject=$this->db->query("SELECT *, GROUP_CONCAT(Grade) as gradess from summersubject where Academic_Year ='$max_year'  GROUP BY Subj_name ORDER BY Subj_name ASC");
  		$output='';
  		if($querySubject->num_rows()>0){
  			$output.='<div class="card" id="summersubjecttshere">
            <div class="card-body">
              <div class="row">
                <div class="table-responsive">
                  <table class="table table-stripped table-hover" style="width:100%;">
                    <thead>
                      <tr>
                        <th>No.</th>
                        <th>Subject Name</th>
                        <th>Grade</th>
                        <th>Date Created</th>
                      </tr>
                    </thead>
                    <tbody>';
                    $no=1; 
                    foreach($querySubject->result() as $post){
                      $id=$post->Subj_name;
                      $output.='<tr class="delete_mem'.$id.'">
                        <td>'.$no.'.</td>
                        <td>'.$post->Subj_name.'</td>
                        <td>'.$post->gradess.'</td>'; 
                        $output.='
                        <td>'.$post->date_created.'
                          <div class="table-links">
                            <a href="#" class="deleteSummersubject text-danger" id="'.$post->Subj_name.'">Delete</a>
                          </div>
                        </td>
                       </tr>';
                       $no++; 
                    }
                    $output.='</tbody>
                  </table>
                </div>
              </div>
            </div>
           </div>';
	  	}else{
	  		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No subject found.
            </div></div>';
	  	}
	  	return $output;
  	}
  	function deleteSummerSubject($id,$max_year){
		$this->db->where('Subj_name',$id);
		$this->db->where('Academic_Year',$max_year);
		$this->db->delete('summersubject');
	}
  	function addSummerSubject($subject,$grade,$max_year,$data){
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->where(array('Subj_name'=>$subject));
		$this->db->where(array('Grade'=>$grade));
		$query=$this->db->get('summersubject');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			$this->db->insert('summersubject',$data);
		}
	}
	function fetchSummerEvaluations($max_year){
		$query=$this->db->query("select *, GROUP_CONCAT(grade) as evalname from summerevaluation where academicyear='$max_year' group by percent,evname order by grade DESC ");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive"> 
	            <table class="table table-striped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Evaluation Name</th>
	                <th>Grade</th>
	                <th>Percentage</th>
	                <th>Academic Year</th>
	                <th>Date Created</th> </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $fetch_evaluations) {
				$output.='
				<tr class="delete_mem'.$fetch_evaluations->percent.''.$fetch_evaluations->evname.'">
	                <td>'.$no.'</td>
	                <td>'.$fetch_evaluations->evname.'
	                    <div class="table-links">
	                        <a href="#" name="'.$fetch_evaluations->evname.'"  class="deleteSummerEvaluation text-danger" id="'.$fetch_evaluations->percent.'">Delete</a>
	                    </div>
	                </td>
	                <td>'.$fetch_evaluations->evalname.'</td>
	                <td>'.$fetch_evaluations->percent.'</td>
	                <td>'.$fetch_evaluations->academicyear.'</td>
	                <td>'.$fetch_evaluations->date_created.'</td>
	            </tr>';
			    $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No summer evaluation found.
                </div>
              </div>';
		}
		return $output;
	}
	function fetchSummerSubjectPlacement($max_year){
		$this->db->where('Academic_Year',$max_year);
		$this->db->order_by('Subj_name','ASC');
		$this->db->group_by('Subj_name');
		$query=$this->db->get('summersubject');
		return $query->result();
	}
	function fetchSummerGradesec($max_year){
		$this->db->group_by('gradesec');
		$this->db->order_by('gradesec','ASC');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('usertype','Student');
		$query=$this->db->get('summerstudent');
		return $query->result();
	}
	function fetchSummerStaffPlacement($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(st.grade) as gradess, GROUP_CONCAT(st.subject) as subjects from summerstaffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year'  GROUP BY st.staff ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive"><table class="table table-striped table-hover"  style="width:100%;">
	                <thead>
	                  <tr>
	                    <th>No.</th>
	                    <th>Name</th>
	                    <th>Subject</th>
	                    <th>Grade</th>
	                    <th>Date Created</th>
	                  </tr>
	                </thead>
	            <tbody>';$no=1;
			foreach ($query->result() as $staffplacements) {
				$output.='<tr class="deleteSummerStaffplacement'.$staffplacements->staff.'">
	            <td>'. $no.'.</td>
	            <td>'.$staffplacements->fname.' '.$staffplacements->mname.'
	            <div class="table-links">
	              <a href="#" id="deleteSummerStaffplacement" class="text-danger" 
	              value="'.$staffplacements->staff.'" >Delete
	              </a>
	            </div>
	            </td>
	            <td style="word-break:break-all;">'.$staffplacements->subjects.'</td>
	            <td style="word-break:break-all;">'.$staffplacements->gradess.'</td>
	            <td>'.$staffplacements->date_created.'</td>
	          </tr>';
	            $no++; 
	        } 

	    	$output.='</tbody> </table></div>';
	    }else{
	    	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No placement found.
            	</div></div>';
	    }
		return $output;
	}
	function checkSummerMarkImport($markname,$subname,$max_year,$gradesec,$mybranch){
		$this->db->where(array('markname'=>$markname));
		$this->db->where(array('subname'=>$subname));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('mgrade'=>$gradesec));
		$this->db->where(array('mbranch'=>$mybranch));
		$query=$this->db->get('summermark');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function filterSubjectFromSummer($gradesec,$max_year){
		$this->db->where('summerstudent.gradesec',$gradesec);
		$this->db->where(array('summersubject.Academic_Year'=>$max_year));
		$this->db->order_by('summersubject.Subj_name','ASC');
		$this->db->group_by('summersubject.Subj_name');
		$this->db->select('*');
		$this->db->from('summersubject');
		$this->db->join('summerstudent',
		'summerstudent.grade = summersubject.Grade');
		$query=$this->db->get();
		$output ='<option></option><option value="All"> All </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
			}
			return $output;
	}
	function fetchSummerGradeMarkResult($gs_branches,$gs_gradesec,$gs_subject,$max_year)
	{
		$output='';
		if($gs_subject===trim('All'))
		{
			$queryFetchMark=$this->db->query("select * from summermark where academicyear='$max_year'  and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output.='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp; Subject :<B><u>'.$subject.'</u></B></div></br></h6>';
					
					$evalname_query=$this->db->query("select us.id, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from summerevaluation as ev inner join summerstudent as us where us.grade=ev.grade and ev.academicyear='$max_year' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;height:92%;page-break-inside:avoid;">
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) 
        			{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from summermark where subname='$subject' and evaid='$mname_gs' and mbranch='$gs_branches' and mgrade='$gs_gradesec' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center"><B>Total</B></th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from summermark where subname='$subject' and evaid='$mname_gs' and mbranch='$gs_branches' and mgrade='$gs_gradesec' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result() as $mark_name)
		            	{
		            		$output.='<td class="text-center">'.$mark_name->markname.'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"> <B>100</B> </td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$queryMvalue1 = $this->db->query("select outof,sum(outof) as sum_outof from summermark where subname='$subject' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC",FALSE);
		            	$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from summermark where subname='$subject' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
            			$sumOutOf=0;
	            		foreach ($queryMvalue->result_array() as $mark_name) {
	            			$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            			$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            		}
	        			$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        			$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from summerstudent as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			$percent= $mark_name['percent'];
            			$mname_gs=$mark_name['eid'];
	            		$query_value = $this->db->query("select markname,sum(value) as total from summermark where  subname='$subject' and evaid='$mname_gs' and mbranch='$gs_branches' and mgrade='$gs_gradesec' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from summermark where stuid='$id' and subname='$subject' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from summermark where subname='$subject' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}

					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p>';
        		}
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		else{
			$querySingleSubject=$this->db->query("select * from summermark where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' ");
			if($querySingleSubject->num_rows()>0)
			{
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];

				$output.='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

				$evalname_query=$this->db->query("select us.id, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from summerevaluation as ev inner join summerstudent as us where us.grade=ev.grade and ev.academicyear='$max_year' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

				$output.='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
        		<thead>
        		<tr>
        		<th rowspan="3">No.</th>
            	<th rowspan="3">Student Name</th>
            	<th rowspan="3" class="text-center">Student ID</th>';
            	
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from summermark where subname='$gs_subject' and evaid='$mname_gs' and mbranch='$gs_branches' and mgrade='$gs_gradesec' group by markname order by mid ASC");
            		$colSpan=$queryMvalue->num_rows() +2;
            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
            	}
            	$output.='<th class="text-center">Total</th><th rowspan="3" class="text-center">Sig.</th><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from summermark where subname='$gs_subject' and evaid='$mname_gs' and mbranch='$gs_branches' and mgrade='$gs_gradesec' group by markname order by mid ASC");
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$output.='<td class="text-center">'.$mark_name['markname'].'</td>';
	            	}
	            	$output.='<td class="text-center"><b>Tot</b></td>';
	            	$output.='<td class="text-center"><b>Conv</b></td>';
	            }
	            $output.='<td rowspan="2" class="text-center"><B>100</B></td>';
            	$output.='</tr><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$percent=$evalua_name['percent'];
            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from summermark where subname='$gs_subject' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
            		$sumOutOf=0;
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            		$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            	}
	        		$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
	            }
            	$output.='</tr>';
            	$stuNO=1;
            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from summerstudent as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			$percent= $mark_name['percent'];
            			$mname_gs=$mark_name['eid'];
	            		$query_value = $this->db->query("select markname,sum(value) as total from summermark where  subname='$gs_subject' and evaid='$mname_gs' and mbranch='$gs_branches' and mgrade='$gs_gradesec' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from summermark where stuid='$id' and subname='$gs_subject' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from summermark where subname='$gs_subject' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}
				$output.='</table></div>';
				$output.='<p class="text-center">'.$school_slogan.'!</p>';
			}else{
	    		$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data not found.
            	</div></div>';
			}
		}
		return $output;
	}
	function selectSummerMarkToEdit($edtimar,$gradesec,$academicyear,$branch){
		$this->db->where(array('mid'=>$edtimar));
		$query=$this->db->get('summermark');
		$output='';
		foreach ($query->result() as $value) {
			$output .='<input type="hidden" class="aYearSummer" value="'.$academicyear.'">';
			$output .='<input type="hidden" class="gsBranchSummer" value="'.$branch.'">';
			$output .='<input type="hidden" class="gSecSummer" value="'.$gradesec.'">';
			$output .='<input type="hidden" class="outofSummer" value="'.$value->outof.'">';
			$output .='<input type="hidden" class="midSummer" value="'.$value->mid.'">';
			$output .='<div class="row">
			<div class="col-lg-4"><h5 class="card-title">'.$value->markname.'</h5></div><div class="col-lg-8"><input class="form-control correct_mark_gsSummer" id="correct_valueSummer" type="text" value="'.$value->value.'"></div></div>
			<a class="info-markSummer"></a>';
		}
		return $output;
	}
	function FetchUpdatedMarkSummer($mid,$gradesec,$year,$branch){
		$this->db->where('mid',$mid);
		$query=$this->db->get('summermark');
		$output='';
		foreach ($query->result() as $keyvalue) {
			$output.=''.$keyvalue->value.'';
		}
		return $output;
	}
	function updateEditedMarkSummer($outof,$mid,$value,$gradesec,$year,$branch)
	{
		$this->db->where(array('mid'=>$mid));
		$this->db->set('value',$value);
		$query=$this->db->update('summermark');
		$output='';
		if($query){
			$output .='<span class="text-success"> Updated</span>';
		}else{
			$output .='<span class="text-danger"> ooops</span>';
		}
		return $output;
	}
	function fetchSummerEvaluationOnQuarterchange($gradesec,$max_year){
		$this->db->where('summerstudent.gradesec',$gradesec);
		$this->db->where(array('summerevaluation.academicyear'=>$max_year));
		$this->db->where(array('summerstudent.academicyear'=>$max_year));
		$this->db->order_by('summerevaluation.evname','ASC');
		$this->db->group_by('summerevaluation.evname');
		$this->db->select('*');
		$this->db->from('summerevaluation');
		$this->db->join('summerstudent',
		'summerstudent.grade = summerevaluation.grade');
		$query=$this->db->get();
		$output ='<option> </option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->eid.'">'.$row->evname.'</option>';
		}
		return $output;
	}
	function fetchThisGradeSummertudentsFornewexam($gradesec,$subject,$evaluation,$assesname,$percentage,$branch,$max_year){
		$output='';
		$query = $this->db->query(" Select * from summerstudent where academicyear='$max_year' and status='Active' and isapproved='1' and usertype ='Student' and gradesec='$gradesec' and branch='$branch' order by fname,mname ASC ");
		$output .='<div class="table-responsive">
        	<table class="table table-bordered table-hover" style="width:100%;">
        		<thead>
        		<tr>
        		    <th>Result</th>
            		<th>Name</th>
            		<th>Grade</th>
            		<th>Branch</th>
            		<th>Subject</th>
            		<th>Assesment Name</th>
            		<th>Percentage</th>
        		</tr>
        	</thead>';
        $output.='<input type="hidden" id="Sumacademicyear" value="'.$max_year.'"> ';
        $output.='<input type="hidden" id="Sumsubject" value="'.$subject.'"> ';
        $output.='<input type="hidden" id="Sumevaluation" value="'.$evaluation.'"> ';
        $output.='<input type="hidden" id="Sumpercentage" value="'.$percentage.'"> ';
        $output.='<input type="hidden" id="Sumassesname" value="'.$assesname.'"> ';
        $output.='<input type="hidden" id="SummarkGradeSec" value="'.$gradesec.'"> ';
        $output.='<input type="hidden" id="SummarkGradeSecBranch" value="'.$branch.'"> ';
		foreach ($query->result() as $fetch_student) {
			$output.='<input type="hidden" id="stuidSummer" 
			name="stuid_resultSummer" value="'.$fetch_student->id.'"> ';
			$output.='<tr class="'.$fetch_student->id.'">
			<td><input type="text" onkeyup="chkMarkValue()" name="markvalue_resultSummer" id="resultvalueSummer" class="form-control markvalue_resultSummer">
			 </td>';
			$output.='<td>'.$fetch_student->fname.' '.$fetch_student->mname.' '.$fetch_student->lname.'</td>';
			$output.='<td>'.$gradesec.'</td>';
			$output.='<td>'.$branch.'</td>';
			$output.='<td>'.$subject.'</td>';
			$output.='<td>'.$assesname.'</td>';
			$output.='<td>'.$percentage.'</td></tr>';
		}
		$output .='</table></div>';
		$output .='<button type="submit" id="SaveResultSummer" class="btn btn-success">Save Result </button>';
		return $output;
	}
	function saveThisSummerGradeResult($academicyear,$subject,$assesname,$markGradeSec,$markGradeSecBranch){
		$this->db->where(array('mgrade'=>$markGradeSec));
		$this->db->where(array('subname'=>$subject));
		$this->db->where(array('markname'=>$assesname));
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('mbranch'=>$markGradeSecBranch));
		$querystu=$this->db->get('summermark');
		$output='';
		if($querystu->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function fetchSummerGradeMark($gs_branches,$gs_gradesec,$gs_subject,$max_year)
	{
		$output='';
		$query=$this->db->query("select id,username,fname,mname,lname from summerstudent where branch='$gs_branches' and academicyear='$max_year' and gradesec='$gs_gradesec' and status='Active' and usertype='Student' and isapproved='1' and branch='$gs_branches' order by fname,mname,lname ASC ");

		$markname_query=$this->db->query("select ma.lockmark, ma.evaid, ma.markname,ma.mid, ma.value, ma.outof,sum(outof) as total_outof from summermark as ma where ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.markname order by ma.mid ASC ");
		if($markname_query->num_rows()>0)
		{   
			$output.='<h6><small>Grade :</small>'.
			$gs_gradesec.' <small> Subject :</small> '.
			$gs_subject.'</h6>';
			$output.='<button class="btn btn-default delete_selected_gradeSummer pull-right">
			<span class="text-danger"><i class="fas fa-trash-alt"></i> Delete Grade '.$gs_gradesec.'</span> </button>';
			$output.='<button class="btn btn-default delete_selectedSummer pull-right">
			<span class="text-warning"><i class="fas fa-trash"></i> Delete '.$gs_subject.'</span> </button>';
			
			$output.='<div class="table-responsive">
    		<table class="table table-borderedr table-hover" style="width:100%;">
    		<tr> <th rowspan="2" class="text-center">Student Name</th> 
        	<th rowspan="2" class="text-center">Student ID</th>';
        	foreach ($markname_query->result_array() as $mark_name) {
        		$output.='<th class="coreMarkName'.$mark_name['markname'].'">' .$mark_name['markname'].'';
        		if($mark_name['lockmark']=='0'){
	        		$output.='<div class="table-links"> 
						<a href="#" value="'.$mark_name['markname'].'" 
						class="gs_delete_marknameSummer"> 
						<span class="text-danger"><i class="fas fa-trash"></i> </span> </a>
				    </div> </th>';
				}
        	}
        	$output.=' </tr><tr>';
			foreach ($markname_query->result_array() as $mark_name) 
			{	$output.='<td class="text-center coreOutOFSummer'.$mark_name['outof'].$mark_name['markname'].'">'.$mark_name['outof'].' ';
        		if($mark_name['lockmark']=='0'){
	        		$output.='
						<a href="#" id="'.$mark_name['outof'].'" value="'.$mark_name['markname'].'" 
						class="gs_edit_outofSummer" data-toggle="modal" 
									data-target="#editOutOfSummer"> 
						<span class="text-success">
						<small> <i class="fas fa-edit"></i> </small> </span>
						</a></td>';
				}else{
					$output.='<span class="text-warning"> <i class="fas fa-lock"></i></span> ';
				}

        		/*$output.='<td class="coreOutOFSummer'.$mark_name['outof'].$mark_name['markname'].'">'.$mark_name['outof'].'</td> ';*/
        	}
        	$output.='</tr>';
        	$output.='<input type="hidden" class="jo_gradesecSummer" value="'.$gs_gradesec.'">
			<input type="hidden" class="jo_subjectSummer" value="'.$gs_subject.'">
			<input type="hidden" class="jo_branchSummer" value="'.$gs_branches.'">
			<input type="hidden" class="jo_yearSummer" value="'.$max_year.'">';
			foreach ($query->result_array() as $row) 
			{ 
        		$id=$row['id'];
        		$output.='<tr> <td> '.$row['fname'].' '.$row['mname'].' '.$row['lname'].' </td>
        		<td>'.$row['username'].'</td>';
        		foreach ($markname_query->result_array() as $mark_name)
        		{
        			$Evaid=$mark_name['evaid'];
        			$outOFF=$mark_name['outof'];
        			$markname=$mark_name['markname'];
        			$lockmark1=$mark_name['lockmark'];
        			$query_value = $this->db->query("select lockmark,value, outof,mid, markname from summermark where markname='$markname' and stuid='$id' and subname='$gs_subject' ");
        			if($query_value->num_rows()>0)
        			{
        				$mark_value=$query_value->row_array();
    					$outof=$mark_value['outof'];
    					$value=$mark_value['value'];
    					$lockmark=$mark_value['lockmark'];
						if($outof >= $value){
							$output.='<td class="jossMarkSummer'.$mark_value['mid'].'">'.$mark_value['value'].'<small class="text-muted">('.$mark_value['markname'].')</small>';
							if($lockmark==='0'){
								$output.='<div class="table-links"> <a href="#" value="'.$mark_value['mid'].'" class="edit_mark_gsSummer" data-toggle="modal"
								data-target="#editmarkSummer">
								<span class="text-success">
								<i class="far fa-edit"> </i></span></a>
								   </div>';
                         	}else{
                         		$output.='<div  class="table-links"> 
                         			<span class="text-warning"><i class="fas fa-lock"> </i> </span>
								   </div>';
                         	}
							$output.='</td>';
						}else{
							$output.='<td><span class="text-danger"> NG
								<div class="table-links"> 
								<a href="#" value="'.$mark_value['mid'].'" class="edit_NGmark_gsSummer" data-toggle="modal" 
								data-target="#editmarkSummer"><span class="text-info"> Edit 
								</span></a>
							</div>
							</span></td>';
						}
        			}else{
        				if($lockmark1=='0'){
							$output.='<td class="JoMarkSummer'.$id.$markname.'">
							<input type="hidden" value="" class="my_IDSummer">
							<span class="text-danger"> NG</span>
							<div class="table-links"> 
								<a href="#" title="'.$id.'" id="'.$outOFF.'" name="'.$markname.'" value="'.$Evaid.'" class="edit_NGmark_gsSummer" data-toggle="modal" 
								data-target="#editngmarkSummer"><span class="text-info"> 
								<i class="fas fa-plus"></i> 
								</span></a>
							</div>
							</td>';
						}else{
							$output.='<td class="JoMarkSummer'.$id.'">
							<input type="hidden" value="" class="my_IDSummer">
							<span class="text-danger"> NG</span>
							<div class="table-links"> 
								<span class="text-warning"><i class="fas fa-lock"> </i> </span>
							</div>
							</td>';
						}
					}
        		}
			}
			$output.='</tr></table></div>';
		}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> Data not found.
            </div></div>';
		}
		return $output;
	}
	function fetchSummerGradeMarkTeacher($gs_branches,$gs_gradesec,$gs_subject,$max_year)
	{
		$output='';
		$query=$this->db->query("select id,username,fname,mname,lname from summerstudent where branch='$gs_branches' and academicyear='$max_year' and gradesec='$gs_gradesec' and status='Active' and usertype='Student' and isapproved='1' and branch='$gs_branches' order by fname,mname,lname ASC ");

		$markname_query=$this->db->query("select ma.lockmark, ma.evaid, ma.markname,ma.mid, ma.value, ma.outof,sum(outof) as total_outof from summermark as ma where ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.markname order by ma.mid ASC ");
		if($markname_query->num_rows()>0)
		{   
			$output.='<h6><small>Grade :</small>'.
			$gs_gradesec.' <small> Subject :</small> '.
			$gs_subject.'</h6>';
			
			$output.='<div class="table-responsive">
    		<table class="table table-borderedr table-hover" style="width:100%;">
    		<tr> <th rowspan="2" class="text-center">Student Name</th> 
        	<th rowspan="2" class="text-center">Student ID</th>';
        	foreach ($markname_query->result_array() as $mark_name) {
        		$output.='<th class="coreMarkName'.$mark_name['markname'].'">' .$mark_name['markname'].'';
        		if($mark_name['lockmark']=='0'){
	        		$output.='<div class="table-links"> 
						<a href="#" value="'.$mark_name['markname'].'" 
						class="gs_delete_marknameSummerTeacher"> 
						<span class="text-danger"><i class="fas fa-trash"></i> </span> </a>
				    </div> </th>';
				}
        	}
        	$output.=' </tr><tr>';
			foreach ($markname_query->result_array() as $mark_name) 
			{
        		$output.='<td class="coreOutOFSummer'.$mark_name['outof'].$mark_name['markname'].'">'.$mark_name['outof'].'</td> ';
        	}
        	$output.='</tr>';
        	$output.='<input type="hidden" class="jo_gradesecSummerTeacher" value="'.$gs_gradesec.'">
			<input type="hidden" class="jo_subjectSummerTeacher" value="'.$gs_subject.'">
			<input type="hidden" class="jo_branchSummerTeacher" value="'.$gs_branches.'">
			<input type="hidden" class="jo_yearSummerTeacher" value="'.$max_year.'">';
			foreach ($query->result_array() as $row) 
			{ 
        		$id=$row['id'];
        		$output.='<tr> <td> '.$row['fname'].' '.$row['mname'].' '.$row['lname'].' </td>
        		<td>'.$row['username'].'</td>';
        		foreach ($markname_query->result_array() as $mark_name)
        		{
        			$Evaid=$mark_name['evaid'];
        			$outOFF=$mark_name['outof'];
        			$markname=$mark_name['markname'];
        			$lockmark1=$mark_name['lockmark'];
        			$query_value = $this->db->query("select lockmark,value, outof,mid, markname from summermark where markname='$markname' and stuid='$id' and subname='$gs_subject' ");
        			if($query_value->num_rows()>0)
        			{
        				$mark_value=$query_value->row_array();
    					$outof=$mark_value['outof'];
    					$value=$mark_value['value'];
    					$lockmark=$mark_value['lockmark'];
						if($outof >= $value){
							$output.='<td class="jossMarkSummer'.$mark_value['mid'].'">'.$mark_value['value'].'<small class="text-muted">('.$mark_value['markname'].')</small>';
							if($lockmark==='0'){
								$output.='<div class="table-links"> <a href="#" value="'.$mark_value['mid'].'" class="edit_mark_gsSummerTeacher" data-toggle="modal"
								data-target="#editmarkSummerTeacher">
								<span class="text-success">
								<i class="far fa-edit"> </i></span></a>
								   </div>';
                         	}else{
                         		$output.='<div  class="table-links"> 
                         			<span class="text-warning"><i class="fas fa-lock"> </i> </span>
								   </div>';
                         	}
							$output.='</td>';
						}else{
							$output.='<td><span class="text-danger"> NG
								<div class="table-links"> 
								<a href="#" value="'.$mark_value['mid'].'" class="edit_NGmark_gsSummerTeacher" data-toggle="modal" 
								data-target="#editmarkSummerTeacher"><span class="text-info"> Edit 
								</span></a>
							</div>
							</span></td>';
						}
        			}else{
        				if($lockmark1=='0'){
							$output.='<td class="JoMarkSummer'.$id.$markname.'">
							<input type="hidden" value="" class="my_IDSummer">
							<span class="text-danger"> NG</span>
							<div class="table-links"> 
								<a href="#" title="'.$id.'" id="'.$outOFF.'" name="'.$markname.'" value="'.$Evaid.'" class="edit_NGmark_gsSummerTeacher" data-toggle="modal" 
								data-target="#editngmarkSummer"><span class="text-info"> 
								<i class="fas fa-plus"></i> 
								</span></a>
							</div>
							</td>';
						}else{
							$output.='<td class="JoMarkSummer'.$id.'">
							<input type="hidden" value="" class="my_IDSummer">
							<span class="text-danger"> NG</span>
							<div class="table-links"> 
								<span class="text-warning"><i class="fas fa-lock"> </i> </span>
							</div>
							</td>';
						}
					}
        		}
			}
			$output.='</tr></table></div>';
		}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> Data not found.
            </div></div>';
		}
		return $output;
	}
	function update_edited_ngmark($user,$data,$quarter,$gradesec,$year,$my_studentBranch,$value,$subject,$stuid,$markname,$max_quarter){
		$output='';
		date_default_timezone_set('Africa/Addis_Ababa');
		$data1=array(
			'userinfo'=>$user,
			'useraction'=>'Mark updated',
			'infograde'=>$gradesec,
			'subject'=>$subject,
			'quarter'=>$quarter,
			'academicyear'=>$year,
			'oldata'=>'-',
			'newdata'=>$value,
			'markname'=>$markname,
			'updateduser'=>$stuid,
			'userbranch'=>$my_studentBranch,
			'actiondate'=> date('Y-m-d H:i:s', time())
		);
		if($quarter!==$max_quarter){
          $queryAlert=$this->db->insert('useralertactions',$data1);
        }
		$queryInsert=$this->db->insert('useractions',$data1);
		if($queryInsert){
			$queryCheck=$this->db->query("select * from `mark".$my_studentBranch.$gradesec.$quarter.$year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and markname='$markname' and academicyear='$year' ");
			if($queryCheck->num_rows()>0){
				$this->db->where('academicyear',$year);
				$this->db->where('stuid',$stuid);
				$this->db->where('subname',$subject);
				$this->db->where('quarter',$quarter);
				$this->db->where('markname',$markname);
				$this->db->set('value',$value);
				$query=$this->db->update('mark'.$my_studentBranch.$gradesec.$quarter.$year,$data);
			}else{
				$query=$this->db->insert('mark'.$my_studentBranch.$gradesec.$quarter.$year,$data);
			}
			
			if($query){
				$output .='<span class="text-success"> Updated</span>';
			}else{
				$output .='<span class="text-danger"> ooops</span>';
			}
		}
		return $output;
	}
	function checkSummerSubject($subject,$grade,$max_year){
		$this->db->where(array('Subj_name'=>$subject));
		$this->db->where(array('gradesec'=>$grade));
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->select('*');
        $this->db->from('summersubject');
        $this->db->join('summerstudent', 
            'summerstudent.grade = summersubject.Grade');
        $query = $this->db->get();
		if($query->num_rows() > 0){
			return true;
		}
		else{
			return false;
		}
	}
	function addSummerPlacement($staff,$subject,$checkbox,$academicyear){
		$this->db->where(array('staff'=>$staff));
		$this->db->where(array('grade'=>$checkbox));
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('subject'=>$subject));
		$query=$this->db->get('summerstaffplacement');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function deleteSummerPlacement($id){
		$this->db->where(array('staff'=>$id));
		$this->db->delete('summerstaffplacement');
	}
	function addSummerEvaluation($grade,$evname,$ac){
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('evname'=>$evname));
		$this->db->where(array('academicyear'=>$ac));
		$query=$this->db->get('summerevaluation');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function deleteSummerEvaluation($id,$evname,$max_year){
		$this->db->where(array('percent'=>$id));
		$this->db->where(array('evname'=>$evname));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->delete('summerevaluation');
		if($query){
			return true;
		}
		else{
			return false;
		}
	}
	function updateSummerStudentDetail($id,$username,$data,$max_year){
		$queryChk=$this->db->query("select * from summerstudent where unique_id='$id' and username='$username' ");
		$output='';
		if($queryChk->num_rows()<1){
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i>Username exists, please try other username.
            </div></div>';
		}else{
			$this->db->where(array('unique_id'=>$id));
			$query=$this->db->update('summerstudent',$data);
			if($query){
				$output.='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Profile updated successfully.
            	</div></div>';
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> ooops, please try again.
            	</div></div>';
			}
		}
		return $output;
	}
	function fetchSummerClassStatus($max_year){
		$this->db->order_by('classname','ASC');
		$this->db->where('academicyear',$max_year);
        $query = $this->db->get('startsummerclass');
		$output='';
		if($query->num_rows()>0){
			foreach ($query->result() as $fetch_evaluations) {
				$output.='<h5 class="card-header">Summer class already started. 
				<div class="pretty p-switch p-fill">
	              <input type="checkbox" name="startSummerClass" class="startSummerClass" checked="checked" id="'.$fetch_evaluations->scid.'" value="'.$fetch_evaluations->classname.'" >
	              <div class="state p-success">
	                <label></label>
	              </div>
	            </div> </h5>';
			}
		}else{
			$output.='<h5 class="card-header">Click here if summer class starts. 
			 <div class="pretty p-switch p-fill">
                <input type="checkbox" name="startSummerClass" class="startSummerClass"  id="" value="" >
              	<div class="state p-success">
                	<label></label>
              	</div>
		    </div></h5> ';
		}
		return $output;
	}
	function checkAutoMarkLock($max_year,$max_quarter){
		$querychkAutoLock=$this->db->query("select * from lockmarkauto where academicyear='$max_year' and autolockstatus='1' ");
        if($querychkAutoLock->num_rows()>0){
        	$query2 = $this->db->query("select endate from quarter where Academic_Year='$max_year' and term='$max_quarter' ");
        	if($query2->num_rows()>0){
        		$row2 = $query2->row();
	        	$date2=$row2->endate;
	            $changeDate2 = DateTime::createFromFormat('d/m/y',$date2);
	            $endDate1= $changeDate2->format('Y-m-d');
	            $today2=Date('Y-m-d');
	            if($endDate1<=$today2){
	                return true;
	            }else{
	                return false;
	            }
        	}else{
        		return true;
        	}
        }else{
        	return false;
        }
	}
	function studentsCanSeeQuarterResult($max_year){
		$output='';
		$queryQuarter= $this->db->query("select * from quarter where Academic_Year='$max_year' group by term order by term DESC ");
		if($queryQuarter->num_rows()>0){
			foreach($queryQuarter->result() as $row){
				$max_quarter=$row->term;
				$this->db->where('academicyear',$max_year);
				$this->db->where('quarter',$max_quarter);
				$query = $this->db->get('studentcanseecard');
				$output.='Students can see '.$max_quarter.' report card result.';
				if($query->num_rows()>0){
					$output.='<div class="pretty p-switch p-fill">
		                <input type="checkbox" name="can_see_card" class="can_see_card" checked="checked" id="'.$max_quarter.'" value="0" >
		                <div class="state p-success">
		                    <label></label>
		                </div>
				    </div>';
				}else{
					$output.='<div class="pretty p-switch p-fill">
		              	<input type="checkbox" name="can_see_card" class="can_see_card" id="'.$max_quarter.'" value="1" >
		              	<div class="state p-success">
		                	<label></label>
		              	</div>
				    </div>';
				}
				$output.='<br>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close" data-dismiss="alert">
                  <span>&times;</span>
                </button><i class="fas fa-exclamation-triangle "></i> No quarter record found.
            </div>
          </div>';
		}
		return $output;
	}
	function lockMarkAutomatically($max_year){
		$this->db->where('academicyear',$max_year);
		$query = $this->db->get('lockmarkauto');
		$output='Lock mark automatically on season end date';
		if($query->num_rows()>0){
			$output.='<div class="pretty p-switch p-fill">
                <input type="checkbox" name="lockmarkautoOn" class="lockmarkautoOn" checked="checked" id="0" value="0" >
                <div class="state p-success">
                    <label></label>
                </div>
		    </div>';
		}else{
			$output.='<div class="pretty p-switch p-fill">
              	<input type="checkbox" name="lockmarkautoOn" class="lockmarkautoOn" id="1" value="1" >
              	<div class="state p-success">
                	<label></label>
              	</div>
		    </div>';
		}
		return $output;
	}
	function on_off_registration_page(){
		$this->db->where('registration_status','1');
		$query = $this->db->get('studentregistrationstatus');
		$output='Registration page status';
		if($query->num_rows()>0){
			$output.='<div class="pretty p-switch p-fill">
                <input type="checkbox" name="registration_of_off" class="registration_of_off" checked="checked" id="0" value="0" >
                <div class="state p-success">
                    <label></label>
                </div>
		    </div>';
		}else{
			$output.='<div class="pretty p-switch p-fill">
              	<input type="checkbox" name="registration_of_off" class="registration_of_off" id="1" value="1" >
              	<div class="state p-success">
                	<label></label>
              	</div>
		    </div>';
		}
		return $output;
	}
	function check_markresult_schedule($max_year){
		$query = $this->db->get('schedule_gs');
		$output='<div class="row"> <div class="col-md-12 col-12"><h4>
		Schedule Task </h4><p class="scheduleInfo"></p></div> ';
		$arrayType=array('MarkResult','ReportCard','Roster','Transcript');
		$output.='<div class="col-md-4 col-6">
			<label>Schedule Type</label>
		<select class="custom-select" required="required" name="scheduledType" id="scheduledType"> 
		<option></option>';
		foreach($arrayType as $row){
			$output.='<option value="'.$row.'">'.$row.'</option>';
		}
		$output.='</select> </div>
		<div class="col-md-4 col-6">
		Scheduled Date:<input type="date" class="form-control" name="scheduleMarkResult" id="scheduleMarkResult"></div>';
		$output.='<div class="col-md-4 col-12"><button class="btn btn-primary pull-right" id="saveSchedule" type="button">Save Schedule</button></div> ';
		if($query->num_rows()>0){
			$dateToday=date('Y-m-d');
			foreach($query->result() as $rowFethc){
				$dateFor=$rowFethc->scheduled_for;
				$dateDiff   = strtotime($dateFor) - strtotime($dateToday);
			    $numOfDays  = $dateDiff / 86400;
			    if($numOfDays>0){
			    	$output.='<div class="col-md-4 col-6"><div class="dropdown-divider"></div>
					<button class="btn btn-icon icon-left btn-outline-warning" id="deleteSchedule" value="'.$rowFethc->id.'"> <i class="far fa-trash-alt"></i> '.$rowFethc->scheduled_task.' 
					<p><i class="far fa-clock"></i>'.$rowFethc->scheduled_for.'<span class="badge badge-info">'.$numOfDays.' days left</span></p></button></div>';
			    }else if($numOfDays==0){
			    	$output.='<div class="col-md-4 col-6"><div class="dropdown-divider"></div>
					<button class="btn btn-outline-warning" disabled="disabled" value="'.$rowFethc->id.'"> 
					 '.$rowFethc->scheduled_task.' 
					<p><i class="far fa-clock"></i>'.$rowFethc->scheduled_for.'<span class="badge badge-success">Processing</span></p></button></div>';
			    }
			    else{
			    	$output.='<div class="col-md-4 col-6"><div class="dropdown-divider"></div>
					<button class="btn btn-outline-warning" disabled="disabled" value="'.$rowFethc->id.'"> '.$rowFethc->scheduled_task.' 
					<p><i class="far fa-clock"></i>'.$rowFethc->scheduled_for.'<span class="badge badge-danger">Passed</span></p></button></div>';
			    }
			}
		}
		$output.='</div>';
		return $output;
	}
	function ageCalculationMethod($max_year){
		$this->db->where('academicyear',$max_year);
		$query = $this->db->get('agecalculation');
		$arrayMethod=array('Ethiopian','Gregorian');
		$output='Age Calculation Method';
		if($query->num_rows()>0){
			$queryRow=$query->row();
			$methodAge=$queryRow->age_method;
			$output.='<select class="custom-select" required="required" name="ageMethod" id="ageMethod">';
			foreach($arrayMethod as $arrayMethods){
				if($arrayMethods== $methodAge){
					$output.='<option value="'.$arrayMethods.'" selected="selected">'.$arrayMethods.' </option>';
				}else{
					$output.='<option value="'.$arrayMethods.'">'.$arrayMethods.'  </option>';
				}
			}
			$output.='</select>';
		}else{
			$output.='<select class="custom-select" required="required" name="ageMethod" id="ageMethod">
                   <option> --- Select Method --- </option>
                   <option value="Ethiopian">Ethiopia</option>
                   <option value="Gregorian">Gregorian</option>
                </select>';
		}
		return $output;
	}
	function enableHomeRoomAccess($max_year){
		$this->db->where('academicyear',$max_year);
		$query = $this->db->get('hoomroomaccess');
		$output='Can Home Room teachers access assigned grade marks?';
		if($query->num_rows()>0){
			$output.='<div class="pretty p-switch p-fill">
                <input type="checkbox" name="isHomeroomAccesMark" class="isHomeroomAccesMark" checked="checked" id="0" value="0" >
                <div class="state p-success">
                    <label></label>
                </div>
		    </div>';
		}else{
			$output.='<div class="pretty p-switch p-fill">
              	<input type="checkbox" name="isHomeroomAccesMark" class="isHomeroomAccesMark" id="1" value="1" >
              	<div class="state p-success">
                	<label></label>
              	</div>
		    </div>';
		}
		return $output;
	}
	function enableMarkAuto($max_year){
		$this->db->where('academicyear',$max_year);
		$query = $this->db->get('enableapprovemark');
		$output='Mark approval status.';
		if($query->num_rows()>0){
			$output.='<div class="pretty p-switch p-fill">
                <input type="checkbox" name="enableapprovemark" class="enableapprovemark" checked="checked" id="0" value="0" >
                <div class="state p-success">
                    <label></label>
                </div>
		    </div>';
		}else{
			$output.='<div class="pretty p-switch p-fill">
              	<input type="checkbox" name="enableapprovemark" class="enableapprovemark" id="1" value="1" >
              	<div class="state p-success">
                	<label></label>
              	</div>
		    </div>';
		}
		return $output;
	}
	function enableCommunicationBookAuto($max_year){
		$this->db->where('academicyear',$max_year);
		$query = $this->db->get('enableapprovecommubook');
		$output='Communication book approval.';
		if($query->num_rows()>0){
			$output.='<div class="pretty p-switch p-fill">
                <input type="checkbox" name="enableapproveCommunication" class="enableapproveCommunication" checked="checked" id="0" value="0" >
                <div class="state p-success">
                    <label></label>
                </div>
		    </div>';
		}else{
			$output.='<div class="pretty p-switch p-fill">
              	<input type="checkbox" name="enableapproveCommunication" class="enableapproveCommunication" id="1" value="1" >
              	<div class="state p-success">
                	<label></label>
              	</div>
		    </div>';
		}
		return $output;
	}
	function fetchDivisionStatus($max_year,$max_quarter){
		$this->db->order_by('sd.dname','ASC');
		$this->db->group_by('sd.dname');
		$this->db->where('sd.academicyear',$max_year);
		$this->db->where('q.Academic_Year',$max_year);
		$this->db->where('q.term',$max_quarter);
		$this->db->select('*');
        $this->db->from('schooldivision sd');
        $this->db->join('quarter q', 
            'q.Academic_year = sd.academicyear');
        $query = $this->db->get();
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive"> 
	            <table class="table table-stripped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Division Name</th>
	                <th>Academic Year</th>
	                <th>Quarter</th>
	                <th>Status</th> </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $fetch_evaluations) {
				$output.='
				<tr class="">
	                <td>'.$no.'.</td>
	                <td>'.$fetch_evaluations->dname.'</td>
	                <td>'.$fetch_evaluations->academicyear.'</td>
	                <td>'.$fetch_evaluations->term.'</td>';
	                $queryChk=$this->db->query("select * from dmarkstatus where academicyear='$max_year' and dname='$fetch_evaluations->dname' and dquarter='$fetch_evaluations->term' ");
	                if($queryChk->num_rows()>0){
						$output.=' <td>
						<div class="pretty p-switch p-fill">
		                  <input type="checkbox" name="addmarkstatus" class="addmarkstatus" checked="checked" id="'.$fetch_evaluations->term.'" value="'.$fetch_evaluations->dname.'" >
		                  <div class="state p-success">
		                    <label></label>
		                  </div>
		                </div></td>';
	                }else{
	                	$output.=' <td><div class="pretty p-switch p-fill">
		                  <input type="checkbox" name="addmarkstatus" class="addmarkstatus"  id="'.$fetch_evaluations->term.'" value="'.$fetch_evaluations->dname.'" >
		                  <div class="state p-success">
		                    <label></label>
		                  </div>
		                </div></td>';
	                }
	           $output.='</tr>';
			    $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                    <div class="alert-body">
                        <button class="close" data-dismiss="alert">
                          <span>&times;</span>
                        </button><i class="fas fa-exclamation-triangle "></i> No record yet.
                    </div>
                  </div>';
		}
		return $output;
	}
	function fetch_eval_grade($max_year,$max_quarter,$min_quarter){
		$query=$this->db->query("select *, GROUP_CONCAT(grade) as evalname from evaluation where academicyear='$max_year' and quarter='$max_quarter' group by percent,evname order by grade DESC ");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive"> 
	            <table class="table table-stripped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Evaluation Name</th>
	                <th>Season</th>
	                <th>Grade</th>
	                <th>Percentage</th>
	                <th>Academic Year</th>
	                <th>Date Created</th> </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $fetch_evaluations) {
				$output.='
				<tr class="delete_mem'.$fetch_evaluations->percent.''.$fetch_evaluations->evname.'">
	                <td>'.$no.'</td>
	                <td>'.$fetch_evaluations->evname.'
	                    <div class="table-links">
	                        <a href="#" name="'.$fetch_evaluations->evname.'" value="'.$fetch_evaluations->quarter.'" class="deletevaluation text-danger" id="'.$fetch_evaluations->percent.'">Delete</a>
	                    	<div class="bullet"></div>
	                        <a href="#" data-toggle="modal" data-target="#save_evaluations" name="'.$fetch_evaluations->evname.'" value="'.$fetch_evaluations->quarter.'" class="editevaluation text-success" id="'.$fetch_evaluations->percent.'">Edit</a>
	                    </div>
	                </td>
	                <td>'.$fetch_evaluations->quarter.'</td>
	                <td>'.$fetch_evaluations->evalname.'</td>
	                <td>'.$fetch_evaluations->percent.'</td>
	                <td>'.$fetch_evaluations->academicyear.'</td>
	                <td>'.$fetch_evaluations->date_created.'</td>
	            </tr>';
			    $no++;
			}
		}else{
			$queryMin=$this->db->query("select *, GROUP_CONCAT(grade) as evalname from evaluation where academicyear='$max_year' and quarter='$min_quarter' group by percent,evname order by grade DESC ");
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No evaluation for this term/Quarter '.$max_quarter.' yet.
                </div>
              </div>';
            if($queryMin->num_rows()>0){
                $output.='<span class="text-dark">You can move previous evaluation from previous quarter/term here </span><button type="submit" id="movevaluation" class="btn btn-dark text-center"> Move Evaluation</button>';
            }
		}
		return $output;
	}
	function fetch_eval_grade_admin($max_year,$max_quarter,$min_quarter,$branch){
		$query=$this->db->query("select *, GROUP_CONCAT(grade) as evalname from evaluation where academicyear='$max_year' and quarter='$max_quarter' group by percent,evname order by grade DESC ");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive"> 
	            <table class="table table-stripped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Evaluation Name</th>
	                <th>Season</th>
	                <th>Grade</th>
	                <th>Percentage</th>
	                <th>Academic Year</th>
	                <th>Date Created</th> </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $fetch_evaluations) {
				$output.='
				<tr class="delete_mem'.$fetch_evaluations->percent.''.$fetch_evaluations->evname.'">
	                <td>'.$no.'</td>
	                <td>'.$fetch_evaluations->evname.'
	                </td>
	                <td>'.$fetch_evaluations->quarter.'</td>
	                <td>'.$fetch_evaluations->evalname.'</td>
	                <td>'.$fetch_evaluations->percent.'</td>
	                <td>'.$fetch_evaluations->academicyear.'</td>
	                <td>'.$fetch_evaluations->date_created.'</td>
	            </tr>';
			    $no++;
			}
		}else{
			/*$queryMin=$this->db->query("select *, GROUP_CONCAT(grade) as evalname from evaluation where academicyear='$max_year' and quarter='$min_quarter' group by percent,evname order by grade DESC ");*/
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No evaluation for this term/Quarter '.$max_quarter.' yet.
                </div>
              </div>';
            /*if($queryMin->num_rows()>0){
                $output.='<span class="text-dark">You can move previous evaluation from previous quarter/term here </span><button type="submit" id="movevaluation" class="btn btn-dark text-center"> Move Evaluation</button>';
            }*/
		}
		return $output;
	}
	function fetchCustomEvaluation($max_year,$max_quarter,$min_quarter,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		$this->db->where('academicyear',$max_year);
     		$this->db->where('customquarter',$max_quarter);
        	$searchQuery = " (customasses like '%".$searchValue."%' or customgrade like '%".$searchValue."%' or customquarter like '%".$searchValue."%' or customsubject like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->where('customquarter',$max_quarter);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('evaluationcustom')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->where('customquarter',$max_quarter);
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$records = $this->db->get('evaluationcustom')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->where('academicyear',$max_year);
     	$this->db->where('customquarter',$max_quarter);
        $records = $this->db->get('evaluationcustom')->result();
        $data = array();
        $no=1;
        if($records){
	     	foreach($records as $staff){
		    	$data[] = array( 
		           "customasses"=>$staff->customasses.' <a href="#" name="'.$staff->customasses.'" value="'.$staff->customquarter.'" class="deleteCustomvaluation text-danger" id="'.$staff->customid.'"><i class="fas fa-trash-alt"></i></a>',
		           "customgrade"=>$staff->customgrade,
		           "customsubject"=>$staff->customsubject,
		           "custompercent"=>$staff->custompercent,
		           "customquarter"=>$staff->customquarter,
		           "academicyear"=>$staff->academicyear,
		        ); 
	     	}
	    }else{
	    	$queryMin=$this->db->query("select * from evaluationcustom where academicyear='$max_year' and customquarter='$min_quarter' order by customsubject DESC ");
            if($queryMin->num_rows()>0){
		    	$data[] = array( 
		           "customasses"=>' <span class="text-dark">You can move previous evaluation from previous season here </span><button type="submit" id="moveCustomEvaluation" class="btn btn-dark text-center"> Move Custom Evaluation</button>',
		           "customgrade"=>'',
		           "customsubject"=>'',
		           "custompercent"=>'',
		           "customquarter"=>'',
		           "academicyear"=>'',
		        );
		    }else{
		    	$data[] = array( 
		           "customasses"=>' -',
		           "customgrade"=>'-',
		           "customsubject"=>'-',
		           "custompercent"=>'-',
		           "customquarter"=>'-',
		           "academicyear"=>'-',
		        );
		    }
	    }
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
	}
	function fetchCustomEvaluation_admin($max_year,$max_quarter,$min_quarter,$postData=null){
		$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		$this->db->where('academicyear',$max_year);
     		$this->db->where('customquarter',$max_quarter);
        	$searchQuery = " (customasses like '%".$searchValue."%' or customgrade like '%".$searchValue."%' or customquarter like '%".$searchValue."%' or customsubject like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->where('customquarter',$max_quarter);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('evaluationcustom')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->where('customquarter',$max_quarter);
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$records = $this->db->get('evaluationcustom')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->where('academicyear',$max_year);
     	$this->db->where('customquarter',$max_quarter);
        $records = $this->db->get('evaluationcustom')->result();
        $data = array();
        $no=1;
        if($records){
	     	foreach($records as $staff){
		    	$data[] = array( 
		           "customasses"=>$staff->customasses,
		           "customgrade"=>$staff->customgrade,
		           "customsubject"=>$staff->customsubject,
		           "custompercent"=>$staff->custompercent,
		           "customquarter"=>$staff->customquarter,
		           "academicyear"=>$staff->academicyear,
		        ); 
	     	}
	    }else{
	    	$queryMin=$this->db->query("select * from evaluationcustom where academicyear='$max_year' and customquarter='$min_quarter' order by customsubject DESC ");
            if($queryMin->num_rows()>0){
		    	$data[] = array( 
		           "customasses"=>' <span class="text-dark">You can move previous evaluation from previous season here </span><button type="submit" id="moveCustomEvaluation" class="btn btn-dark text-center"> Move Custom Evaluation</button>',
		           "customgrade"=>'',
		           "customsubject"=>'',
		           "custompercent"=>'',
		           "customquarter"=>'',
		           "academicyear"=>'',
		        );
		    }else{
		    	$data[] = array( 
		           "customasses"=>' -',
		           "customgrade"=>'-',
		           "customsubject"=>'-',
		           "custompercent"=>'-',
		           "customquarter"=>'-',
		           "academicyear"=>'-',
		        );
		    }
	    }
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
	}
	function fetchGroupEvaluations($max_year,$max_quarter,$min_quarter){
		$queryGroup=$this->db->query("select * from evaluationgroup where academicyear='$max_year' and groupquarter='$max_quarter' group by groupname order by groupname ASC ");
		$output='';
		if($queryGroup->num_rows()>0){
			$output.='<div class="table-responsive"> 
	            <table class="table table-bordered table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Group Name</th>
	                <th>Evaluation Name</th>
	                <th>Grade</th>
	                <th>Season</th>
	                <th>Academic Year</th> </tr>
	            </thead>';
	        $no=1;
			foreach($queryGroup->result() as $row){
				$group_name=$row->groupname;
				$query=$this->db->query("select *, GROUP_CONCAT(groupgrade) as evalname from evaluationgroup where academicyear='$max_year' and groupquarter='$max_quarter' and groupname='$group_name' group by groupasses order by groupgrade ASC ");
				$totalRows=$query->num_rows() + 1;
				$output.=' <tr class="deleteGroupevaluation'.$row->groupname.'" rowspan="'.$totalRows.'">
			    <td rowspan="'.$totalRows.'">'.$no.'</td>
			    <td rowspan="'.$totalRows.'">'.$row->groupname.'
			     	<div class="table-links">
                    	<a href="#" name="'.$row->groupname.'" value="'.$row->groupquarter.'" class="deleteGroupevaluationHeader text-danger" id="'.$row->academicyear.'">Delete</a>
                	</div>
			    </td>';
				if($query->num_rows()>0){
					foreach ($query->result() as $fetch_evaluations) {
						$output.='<tr>
			                <td>'.$fetch_evaluations->groupasses.' </td>
			                <td>'.$fetch_evaluations->evalname.'</td>
			                <td>'.$fetch_evaluations->groupquarter.'</td>
			                <td>'.$fetch_evaluations->academicyear.'</td>';
					    
					}
				}
				$output.=' </tr>';
				$no++;
			}
		}else{
			$queryMin=$this->db->query("select * from evaluationgroup where academicyear='$max_year' and groupquarter='$min_quarter' group by groupname order by groupname ASC ");
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No group evaluation for '.$max_quarter.' yet.
                </div>
              </div>';
            if($queryMin->num_rows()>0){
                $output.='<span class="text-dark">You can move previous group evaluation from previous quarter/term here </span><button type="submit" id="moveGroupEvaluation" class="btn btn-dark text-center"> Move Group Evaluation</button>';
            }
		}
		return $output;
	}
	function fetchGradeGroup($max_year){
		$query=$this->db->query("select *, GROUP_CONCAT(divgrade) as groupdivname from gradedivision group by divname order by divname ASC ");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive"> 
	            <table class="table table-stripped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Group Name</th>
	                <th>Grade</th>
	                <th>Academic Year</th>
	                <th>Date Created</th> </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $fetch_evaluations) {
				$output.='
				<tr class="delete_mem'.$fetch_evaluations->divname.'">
	                <td>'.$no.'.</td>
	                <td>'.$fetch_evaluations->divname.'
	                    <div class="table-links">
	                        <a href="#" name="'.$fetch_evaluations->divname.'" value="'.$fetch_evaluations->divname.'" class="deletGroupGrade text-danger" id="'.$fetch_evaluations->divname.'">Delete</a>
	                    </div>
	                </td>
	                <td>'.$fetch_evaluations->groupdivname.'</td>
	                <td>'.$fetch_evaluations->academicyear.'</td>
	                <td>'.$fetch_evaluations->datecreated.'</td>
	            </tr>';
			    $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No record found.
                </div>
              </div>';
		}
		return $output;
	}
	function fetch_evaluation_status($max_year,$max_quarter){
		$items = array();
		$query=$this->db->query("select grade, sum(percent) as total from evaluation where academicyear='$max_year' and quarter='$max_quarter' group by grade order by grade DESC ");
		foreach ($query->result() as $klue) {
			if($klue->total!=='100'){
				$items[] = $klue->grade;    			
    		}
		}
    	return $items;
	}
	function fetch_mergedSubject_status($max_year){
		$items = array();
		$queryCheck=$this->db->query("SELECT sum(Merged_percent) as totalMergedPercent,Grade from subject where Academic_Year ='$max_year' and Merged_name!='' GROUP BY Merged_name,Grade ORDER BY Merged_name ASC");
	    if($queryCheck->num_rows()>0){
	      	foreach($queryCheck->result() as $posts){
	        	$mergedPercent=$posts->totalMergedPercent;
	        	$gradee=$posts->Grade;
	            if($mergedPercent!=='100'){
	              $items[] = $gradee;          
	            }
	    	}
	    }
    	return $items;
	}
	function edit_evaluation($id,$quarter,$evname,$max_year){
		$this->db->where(array('percent'=>$id));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('evname'=>$evname));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->group_by('evname');
		$this->db->group_by('percent');
		$query=$this->db->get('evaluation');
		$output='<div class="row">';
		foreach ($query->result() as $keyalue) {
			$output.='
				<input type="hidden" id="my_evname" value="'.$keyalue->evname.'">';
			$output .='<div class="col-md-6 col-6">
			    <div class="form-group">
			   <input type="text" disabled="disabled" class="form-control" value="'.$keyalue->quarter.'">
			  </div> </div>';
			$output .='<div class="col-md-6 col-6">
			    <div class="form-group">
			   <input type="text" class="form-control" id="new_evname" value="'.$keyalue->evname.'">
			  </div> </div>';

			/*$output .='<div class="col-md-4">
					<div class="form-group">
				   		<input type="text" id="new_percent" class="form-control" value="'.$keyalue->percent.'">
				  	</div>
			   </div>';*/
			$query_grade=$this->db->query("select * from evaluation where evname='$evname' and quarter='$quarter' and academicyear='$max_year' and percent='$id' ");
			foreach ($query_grade->result() as $keyue) {

				$output.='<input type="hidden" id="my_quarterEval" value="'.$keyue->quarter.'">
				<input type="hidden" id="my_ac" value="'.$keyue->academicyear.'">';

				$output .='<div class="col-md-3 col-6 StudentViewTextInfo" id="deleteEva'.$keyue->grade.''.$keyue->evname.'"> 
					<a href="#" value="'.$keyue->grade.'" id="'.$keyue->evname.'" name="'.$keyue->quarter.'" class="btn btn-danger btn-block remove_evalGS"><small>Delete Grade '.$keyue->grade.' </small>  </a><br>';
              			$output.='<select name="percentageGradeEvaluation" style="width: 100px" class="form-control custom-select" id="percentageGradeEvaluation">';
	          		for($i=100;$i>=1;$i--) { 
	          			if($i==$keyue->percent ){
	          				$output.=' <option selected="selected" class="percentageGradeEvaluation" name="'.$keyue->evname.'" id="'.$keyue->grade.'" value="'.$i.'">
	                    '.$i.'</option>';
	          			}else{
	          				$output.=' <option class="percentageGradeEvaluation" name="'.$keyue->evname.'" id="'.$keyue->grade.'" value="'.$i.'">
	                    '.$i.'</option>';
	          			}
	                }
	                $output.='</select>
              	</div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function delete_thisgradevaluation($grade,$quarter,$evname,$max_year){
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('evname'=>$evname));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->delete('evaluation');
		if($query){
			return true;
		}
		else{
			return false;
		}
	}
	function edit_thisgradevaluation($evname,$max_year,$new_evname){
		/*$this->db->where(array('percent'=>$percent));*/
		 $queryCheck = $this->db->query("select * from quarter where Academic_year='$max_year' group by termgroup ");
        if($queryCheck->num_rows()>0){
            foreach($queryCheck->result() as $maxQuarter){
                $termgroup=$maxQuarter->termgroup;
                $queryCurrent = $this->db->query("select max(term) as quarter from quarter where Academic_Year='$max_year' and termgroup='$termgroup' ");
                $rowCurrent = $queryCurrent->row();
                $max_quarter=$rowCurrent->quarter;
				$this->db->where(array('quarter'=>$max_quarter));
				$this->db->where(array('evname'=>$evname));
				$this->db->where(array('academicyear'=>$max_year));
				$this->db->set('evname',$new_evname);
				$query=$this->db->update('evaluation');
				if($query){
					$this->db->where(array('saseval'=>$evname));
					$this->db->where(array('academicyear'=>$max_year));
					$this->db->set('saseval',$new_evname);
					$query2=$this->db->update('schoolassesment');
					if($query2){
						return true;
					}else{
						return false;
					}
				}else{
					return false;
				}
			}
		}
	}
	function deleteGradeGroup($divname){
		$this->db->where(array('divname'=>$divname));
		$query=$this->db->delete('gradedivision');
		if($query){
			return true;
		}
		else{
			return false;
		}
	}
	function delete_evaluation($id,$quarter,$evname,$max_year){
		$this->db->where(array('percent'=>$id));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('evname'=>$evname));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->delete('evaluation');
		if($query){
			return true;
		}
		else{
			return false;
		}
	} 
	function deleteCustomEvaluation($id,$quarter,$evname,$max_year){
		$this->db->where(array('customid'=>$id));
		$this->db->where(array('customquarter'=>$quarter));
		$this->db->where(array('customasses'=>$evname));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->delete('evaluationcustom');
		if($query){
			return true;
		}
		else{
			return false;
		}
	}
	function deleteGroupEvaluation($quarter,$evname,$max_year){
		$this->db->where(array('groupquarter'=>$quarter));
		$this->db->where(array('groupname'=>$evname));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->delete('evaluationgroup');
		if($query){
			return true;
		}
		else{
			return false;
		}
	}
	function fetch_bgcolor($id){
		$this->db->where('sid',$id);
		$query=$this->db->get('bgcolor');
		$output='';
		foreach ($query->result() as $value) {
			$output .=''.$value->bgcolor.'';
		}
		return $output;
	}
	function fetch_unseen_message_notification($username){
		$this->db->where('status','0');
		$this->db->where('receiver',$username);
		$this->db->from('message');
		return $this->db->count_all_results();
	}
	function update_unseen_message_notification($username){
		$this->db->where('receiver',$username);
		$this->db->where('status','0');
		$this->db->set('status','1');
		$this->db->update('message');
	}
	function fetchAllMyMessages($username){
		$this->db->where('receiver',$username);
		$this->db->where('status','0');
		$this->db->group_by('id');
		$query=$this->db->get('message');
		return $query;
	}
	function fetchAllMyNewUserNotification(){
	    $this->db->order_by('id','DESC');
		$this->db->select('*');
        $this->db->from('users');
        $this->db->where('isapproved','0');
        $query = $this->db->get();
		return $query;
	}
	function fetch_unseen_notification(){
		$this->db->where('isapproved','0');
		$this->db->from('users');
		return $this->db->count_all_results();
	}
	function fetch_post_likes($id){
		$this->db->where('pid',$id);
		$this->db->from('post_like');
		return $this->db->count_all_results();
	}
	function fetch_galleryToWebsite(){
		$this->db->order_by('gid','DESC');
		$query=$this->db->get('gallery');
		return $query->result();
	}
	function fetch_galleryToWebsite_login(){
		$this->db->order_by('gid','DESC');
		$this->db->limit('5');
		$query=$this->db->get('gallery');
		return $query->result();
	}
	function fetch_gallery(){
		$this->db->order_by('rand()');
		$this->db->limit('4');
		$query=$this->db->get('gallery');
		return $query->result();
	}
	function all_fetch_gallery(){
		$this->db->order_by('gid','DESC');
		$query=$this->db->get('gallery');
		$output='';
		
		if($query->num_rows()>0){
			$output.='<div class="row"> ';
			foreach ($query->result() as $fetch_gallerys) {
				$output.='<div class="col-lg-3 delete_mem'.$fetch_gallerys->gid.'">
                    <div class="hover_to_deletegallery"> 
                        <a href="#" data-sub-html="'.$fetch_gallerys->gtitle.'">
                          <img class="img-responsive" src="'.base_url().'/gallery/'. $fetch_gallerys->gname.'" alt="" style="height:240px;width:100%">
                        </a>
                        <div class="table-links">
                        <button type="submit" name="deletegallery" class="btn btn-default deletegallery" value="'.$fetch_gallerys->gid.'">
                          <span class="text-danger">
                          <i class="fa fa-trash"></i></span>
                        </button>
                       </div>
                    </div>
                </div> <div class="dropdown-divider"></div>';
			}
			$output.='</div> ';
		}else{
			$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No saved gallery found..
            </div></div>';
		}
		$output.='</div>';
		return $output;
	}
	function fetch_single_gallery(){
		$this->db->order_by('gid','random()');
		$this->db->limit('5');
		$query=$this->db->get('gallery');
		return $query->result();
	}
	function delete_gallery($id){
		$this->db->where('gid',$id);
		$this->db->delete('gallery');
	}
	function import_student($username,$usertype,$stu_id,$name,$fathername,$gfathername,$mobile,$fathermobile,$email,$grade,$section,$grasection,$dob,$age,$gender,$password,$confpassword,$mothername,$city,$subcity,$woreda,$kebele,$isapprove,$registrationdate,$branch,$transportService,$academicyear,$status){
		$this->db->where('username = ',$username);
		$this->db->or_where('unique_id = ',$stu_id);
		$data=array(
			'username'=>$username,
			'usertype'=>$usertype,
			'unique_id'=>$stu_id,
			'fname'=>$name,
			'mname'=>$fathername,
			'lname'=>$gfathername,
			'mobile'=>$mobile,
			'father_mobile'=>$fathermobile,
			'email'=>$email,
			'grade'=>$grade,
			'section'=>$section,
			'gradesec'=>$grasection,
			'dob'=>$dob,
			'age'=>$age,
			'gender'=>$gender,
			'password'=>hash('sha256', $password),
			'password2'=>hash('sha256', $password),
			'mother_name'=>$mothername,
			'city'=>$city,
			'sub_city'=>$subcity,
			'woreda'=>$woreda,
			'kebele'=>$kebele,
			'isapproved'=>$isapprove,
			'dateregister'=>$registrationdate,
			'branch'=>$branch,
			'transportservice'=>$transportService,
			'academicyear'=>$academicyear,
			'status'=>$status
		);
		$query=$this->db->get('users');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('users',$data);
			return true;
		}
	}
	function import_staffs($username){
		$this->db->where('username = ',$username);
		$query=$this->db->get('users');
		if($query->num_rows() > 0){
			return false;
		}else{
			return true;
		}
	}
	function addHomeRoomPlacement($teacher,$branch,$checkbox,$academicyear){
		$this->db->where(array('teacher'=>$teacher));
		$this->db->where(array('roomgrade'=>$checkbox));
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('branch'=>$branch));
		$query=$this->db->get('hoomroomplacement');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function fetchHomeRoomplacement($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(st.roomgrade) as gradess from hoomroomplacement as st cross join users as us where st.teacher=us.username and st.academicyear ='$max_year'  GROUP BY st.teacher ORDER BY st.teacher ASC");
		$output='';
		if($query->num_rows()>0){
		$output.='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$output.='<div class ="col-lg-6 col-12">
				<div class="support-ticket media pb-1 mb-3 delete_hrplacement'.$staffplacements->teacher.'">';
					if($staffplacements->profile!=''){
                        $output.='<td><img class="user-img" src="'.base_url().'profile/'.$staffplacements->profile.'" width="100"></td>';
                    }else{
                        $output.='<td><img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="100"></td>';
                    }
                    $output.='
                    <div class="media-body ml-3">
                      <span class="font-weight-bold">'.$staffplacements->fname.' '.$staffplacements->mname.' '.$staffplacements->lname.'</span>
                      <a href="javascript:void(0)">('.$staffplacements->branch.')</a>
                      <p class="my-1">'.$staffplacements->gradess.' <a href="#" id="delete_hoomroomplacemet" class="text-danger" value="'.$staffplacements->teacher.'" ><i class="fas fa-trash-alt"></i> </a></p>
                      <small class="text-muted">
                        &nbsp;&nbsp; '.$staffplacements->date_created.'</small>
                    </div>
                  </div>
                </div> ';
	        } 
         	$output.='</div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No hoomroom placement found.
            </div></div>';
	    }
		return $output;
	}
	function fetchMyHomeRoomplacement($max_year,$branch){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(st.roomgrade) as gradess from hoomroomplacement as st cross join users as us where st.teacher=us.username and st.academicyear ='$max_year' and st.branch='$branch'  GROUP BY st.teacher ORDER BY st.teacher ASC");
		$output='';
		if($query->num_rows()>0){
         	$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$output.='<div class ="col-lg-6 col-12">
				<div class="support-ticket media pb-1 mb-3 delete_hrplacement'.$staffplacements->teacher.'">';
					if($staffplacements->profile!=''){
                        $output.='<td><img class="user-img" src="'.base_url().'profile/'.$staffplacements->profile.'" width="100"></td>';
                    }else{
                        $output.='<td><img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="100"></td>';
                    }
                    $output.='
                    <div class="media-body ml-3">
                      <span class="font-weight-bold">'.$staffplacements->fname.' '.$staffplacements->mname.' '.$staffplacements->lname.'</span>
                      <a href="javascript:void(0)">('.$staffplacements->branch.')</a>
                      <p class="my-1">'.$staffplacements->gradess.' <a href="#" id="delete_hoomroomplacemet" class="text-danger" value="'.$staffplacements->teacher.'" ><i class="fas fa-trash-alt"></i> </a></p>
                      <small class="text-muted">
                        &nbsp;&nbsp; '.$staffplacements->date_created.'</small>
                    </div>
                  </div>
                </div> ';
	        } 
         	$output.='</div> ';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No hoom room teacher placement found.
            </div></div>';
	    }
		return $output;
	}
	function searchHroomStaffs($searchItem,$max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(st.roomgrade) as gradess from hoomroomplacement as st cross join users as us where st.teacher=us.username and st.academicyear ='$max_year' and username LIKE '%$searchItem%' ||  st.teacher=us.username and st.academicyear ='$max_year' and fname LIKE '%$searchItem%' ||  st.teacher=us.username and st.academicyear ='$max_year' and mname LIKE '%$searchItem%' GROUP BY st.teacher ORDER BY st.teacher ASC");

		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$output.='<div class ="col-lg-3 col-6"><div class="card">
				<ul class="list-unstyled list-unstyled-border list-unstyled-noborder delete_hrplacement'.$staffplacements->teacher.'">
                      <li class="media"><div class="activity-icon text-white support-ticket">';
                      	if($staffplacements->profile!=''){
                            $output.='<td><img class="user-img mr-2" src="'.base_url().'profile/'.$staffplacements->profile.'" width="70"></td>';
                        }else{
                            $output.='<td><img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="70"></td>';
                        }
                        $output.='</div><div class="media-body">

                          <div class="media-title">'.$staffplacements->fname.' '.$staffplacements->mname.' '.$staffplacements->lname.' <div class="text-time">'.$staffplacements->branch.'</div></div>
                          <div class="text-time">'.$staffplacements->date_created.'</div>
                          <div class="media-description text-muted">Grade: '.$staffplacements->gradess.' <a href="#" id="delete_hoomroomplacemet" class="text-danger" value="'.$staffplacements->teacher.'" ><i class="fas fa-trash-alt"></i> </a></div>
                        </div>
                      </li>
                    </ul>
                    </div>
                </div>
               ';
	        } 
         	$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function searchHroomStaffsAdmin($searchItem,$max_year,$branch){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(st.roomgrade) as gradess from hoomroomplacement as st cross join users as us where st.teacher=us.username and st.academicyear ='$max_year' and us.branch='$branch' and username LIKE '%$searchItem%' ||  st.teacher=us.username and st.academicyear ='$max_year' and us.branch='$branch' and fname LIKE '%$searchItem%' ||  st.teacher=us.username and st.academicyear ='$max_year' and us.branch='$branch' and mname LIKE '%$searchItem%' GROUP BY st.teacher ORDER BY st.teacher ASC");

		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$output.='<div class ="col-lg-3 col-6"><div class="card">
				<ul class="list-unstyled list-unstyled-border list-unstyled-noborder delete_hrplacement'.$staffplacements->teacher.'">
                      <li class="media"><div class="activity-icon text-white support-ticket">';
                      	if($staffplacements->profile!=''){
                            $output.='<td><img class="user-img mr-2" src="'.base_url().'profile/'.$staffplacements->profile.'" width="100"></td>';
                        }else{
                            $output.='<td><img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="100"></td>';
                        }
                        $output.='</div><div class="media-body">

                          <div class="media-title">'.$staffplacements->fname.' '.$staffplacements->mname.' '.$staffplacements->lname.' <div class="text-time">'.$staffplacements->branch.'</div></div>
                          <div class="text-time">'.$staffplacements->date_created.'</div>
                          <div class="media-description text-muted">Grade: '.$staffplacements->gradess.' <a href="#" id="delete_hoomroomplacemet" class="text-danger" value="'.$staffplacements->teacher.'" ><i class="fas fa-trash-alt"></i> </a></div>
                        </div>
                      </li>
                    </ul>
                    </div>
                </div>
               ';
	        } 
         	$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function deleteHomeRoomplacement($staff_placement,$max_year){
		$this->db->where(array('teacher'=>$staff_placement));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('hoomroomplacement');
	}
	function checkSubject($subject,$grade,$max_year){
		$this->db->group_by('users.grade');
		$this->db->where(array('Subj_name'=>$subject));
		$this->db->where(array('users.gradesec'=>$grade));
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->select('subject.Grade,subject.Subj_name');
        $this->db->from('subject');
        $this->db->join('users', 
            'users.grade = subject.Grade');
        $query = $this->db->get();
		if($query->num_rows() > 0){
			return true;
		}
		else{
			return false;
		}
	}
	function checkSubject_remotePlacement($subject,$grade,$max_year){
		$this->db->where(array('Subj_name'=>$subject));
		$this->db->where(array('gradesec'=>$grade));
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->select('*');
        $this->db->from('subject');
        $this->db->join('users', 
            'users.grade = subject.Grade');
        $query = $this->db->get();
		if($query->num_rows() > 0){
			return true;
		}
		else{
			return false;
		}
	}
	function add_placement($staff,$subject,$checkbox,$academicyear){
		$this->db->where(array('staff'=>$staff));
		$this->db->where(array('grade'=>$checkbox));
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('subject'=>$subject));
		$query=$this->db->get('staffplacement');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function add_RemotePlacement($staff,$subject,$checkbox,$academicyear,$branchRemote){
		$this->db->where(array('staff'=>$staff));
		$this->db->where(array('remotebranch'=>$branchRemote));
		$this->db->where(array('grade'=>$checkbox));
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('subject'=>$subject));
		$query=$this->db->get('staffremoteplacement');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function add_attendance_type($attendanceType,$grade,$max_year){
		$this->db->where(array('attendance_name'=>$attendanceType));
		$this->db->where(array('attendance_grade'=>$grade));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('attendance_type');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function fetch_attendance_type($max_year){
		$output='';
		$query=$this->db->query("select *, GROUP_CONCAT(attendance_grade) as grade_bsname from attendance_type where academicyear='$max_year' group by attendance_name order by id ASC ");
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach($query->result() as $row){
				$output.='<div class="col-lg-6 col-12 StudentViewTextInfo delete_attendance_type'.$row->attendance_name.'">
				<div class="card-body">
                  <div class="support-ticket">
                    <div class="media-body">
                    <button class="btn btn-danger mb-1 float-right" type="submit" name="delete_attendance_type" id="delete_attendance_type" value="'.$row->attendance_name.'"> Delete</button>
                      <span class="font-weight-bold">'.$row->attendance_name.'</span>
                      <p class="my-1">'.$row->grade_bsname.'</p>
                      <small class="text-muted">Created on '.$row->date_created.'</small>
                    </div>
                  </div>
                </div>
                </div>';
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
		return $output;
	}
	function Delete_attendance_Type($attendanceType,$max_year){
		$this->db->where(array('attendance_name'=>$attendanceType));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('attendance_type');
	}
	function Delete_attendance_program($attendanceType,$max_year){
		$this->db->where(array('program_name'=>$attendanceType));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('attendance_program');
	}
	function add_attendance_program($program_name,$grade,$max_year){
		$this->db->where(array('program_name'=>$program_name));
		$this->db->where(array('program_grade'=>$grade));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('attendance_program');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function fetch_attendance_program($max_year){
		$output='';
		$query=$this->db->query("select *, GROUP_CONCAT(program_grade) as grade_bsname from attendance_program where academicyear='$max_year' group by program_name order by id ASC ");
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach($query->result() as $row){
				$output.='<div class="col-lg-6 col-12 StudentViewTextInfo delete_attendance_program'.$row->program_name.'">
                  <div class="support-ticket">
                    <div class="media-body">
                    <span class="font-weight-bold">'.$row->program_name.'</span>
                    &nbsp;&nbsp;&nbsp;&nbsp;
                     <a href="#" class="edit_attendance_program text-success " name="edit_attendance_program" id="edit_attendance_program" value="'.$row->program_name.'">Edit</a>
                     <span class="bullet"></span>
                    <a href="#" class="delete_attendance_program text-danger " name="delete_attendance_program" id="delete_attendance_program" value="'.$row->program_name.'">Delete</a>
                      <p class="my-1">'.$row->grade_bsname.'</p>
                      <small class="text-muted">Created on '.$row->date_created.'</small>
                    </div>
                  </div>
                </div>';
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
		return $output;
	}
	function fetch_attendance_program_toedit($programName,$max_year){
		$output='';
		$query=$this->db->query("select * from attendance_program where academicyear='$max_year' and program_name='$programName' group by program_grade order by id ASC ");
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach($query->result() as $row){
				$output .='<div class="col-lg-2 col-4 form-group"> 
				<div class="StudentViewTextInfo"> 
				<a href="#" id="deleteThisedit_ProgramName" class="text-danger" name="'.$row->program_name.'" value="'.$row->program_grade.'"><i class="fas fa-trash-alt"></i> Gr. '.$row->program_grade.' </a>
				<div class="pretty p-icon p-smooth">
					<input type="checkbox" id="'.$row->program_grade.'" class="'.$row->program_name.'" name="changeedit_ProgramName" value="'.$row->program_grade.'" checked="checked">
          	  		<div class="state p-success">
                		<i class="icon fa fa-check"></i>
                		<label></label>'.$row->program_grade.'
              		</div>
      			</div>
      			</div>
      			</div>' ;
      		}
      		$output.='</div><div class="row">';
			$output.='<div class="col-lg-8 col-8 form-group">
				<input type="text" name="edit_ProgramName" class="form-control" id="edit_ProgramName" value="'.$programName.'" title="'.$programName.'">
			</div> ';
			$output.='
			<div class="col-lg-4 col-4 form-group">
					<button class="btn btn-info btn-block" type="submit" value="'.$programName.'" name="saveThisProgramNameChanges" id="saveThisProgramNameChanges">Save Changes</button>
				</div>
			</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
		return $output;
	}
	function add_staff_grouping($departmentHead,$staff_head,$checkbox,$academicyear){
		$this->db->where(array('department_name'=>$departmentHead));
		$this->db->where(array('staff_head'=>$staff_head));
		$this->db->where(array('staff_list'=>$checkbox));
		$this->db->where(array('academicyear'=>$academicyear));
		$query=$this->db->get('staff_group');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function fetchGradeSection($checkbox,$academicyear,$mybranch){
		$this->db->select('gradesec');
		$this->db->where('grade',$checkbox);
		$this->db->where('academicyear',$academicyear);
		$this->db->where('branch',$mybranch);
		$this->db->group_by('gradesec');
		$queryFetch=$this->db->get('users');
		return $queryFetch->result();
	}
	function add_Directorplacement($staff,$checkbox,$academicyear){
		$this->db->where(array('staff'=>$staff));
		$this->db->where(array('grade'=>$checkbox));
		$this->db->where(array('academicyear'=>$academicyear));
		$query=$this->db->get('directorplacement');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function add_unitDirectorplacement($staff,$checkbox,$academicyear){
		$this->db->where(array('staff'=>$staff));
		$this->db->where(array('grade'=>$checkbox));
		$this->db->where(array('academicyear'=>$academicyear));
		$query=$this->db->get('directorunitplacement');
		if($query->num_rows() > 0){
			return false;
		}
		else{
			return true;
		}
	}
	function fetch_director_placement($max_year){
		$query=$this->db->query("SELECT * from directorplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year'  GROUP BY st.staff ORDER BY st.staff ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$output.='<div class="col-lg-6 col-12">
					<div class="activities">
						<div class="activity delete_directorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="" src="'.base_url().'profile/'.$staffplacements->profile.'" style="width:auto;height:50px">';
		                    }else{
		                        $output.='<img class="" src="'.base_url().'profile/defaultProfile.png" style="width:auto;height:50px">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_directorplacement" class="dropdown-item has-icon text-danger" value="'.$staffplacements->staff.'">
			                            	<i class="fas fa-trash-alt"></i> Delete</a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from directorplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-pill">'.$gradess.'</span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';
	        } 
		    $output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No director placement found.
            	</div>
            </div>';
		}
		return $output;
	}
	function fetch_unit_admin_placement($max_year){
		$query=$this->db->query("SELECT * from directorunitplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year'  GROUP BY st.staff ORDER BY st.staff ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$output.='<div class="col-lg-6 col-12">
					<div class="activities">
						<div class="activity delete_directorunitplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="" src="'.base_url().'profile/'.$staffplacements->profile.'" style="width:auto;height:50px">';
		                    }else{
		                        $output.='<img class="" src="'.base_url().'profile/defaultProfile.png" style="width:auto;height:50px">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_directorunitplacement" class="dropdown-item has-icon text-danger" value="'.$staffplacements->staff.'">
			                            	<i class="fas fa-trash-alt"></i> Delete</a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from directorunitplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-pill">'.$gradess.'</span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';
	        } 
		    $output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No placement found.
            	</div>
            </div>';
		}
		return $output;
	}
	function fetch_staff_placement($max_year){
		$query=$this->db->query("SELECT st.staff,st.date_created, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' GROUP by st.staff  ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$queryCount=$this->db->query("SELECT * from staffplacement where staff='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;
				$output.='<div class="col-lg-12 col-md-12 col-12">
					<div class="activities">
						<div class="activity delete_directorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white support-ticket">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="user-img mr-2" src="'.base_url().'profile/'.$staffplacements->profile.'" width="70">';
		                    }else{
		                        $output.='<img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="70">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_staffAllplacemet" class="dropdown-item has-icon text-danger" name="" value="'.$staffplacements->staff.'" ><i class="fas fa-trash-alt"></i>Delete </a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from staffplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-light StudentViewTextInfo">'.$gradess.' ('.$grades->subject.')
										<a href="#" id="delete_staffplacemet" class="'.$grades->staff.'" name="'.$grades->grade.'" value="'.$grades->subject.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';	
	        }
	        $output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
	    
		return $output;
	}
	function fetch_staff_remote_placement($max_year){
		$query=$this->db->query("SELECT st.remotebranch, st.staff,st.date_created, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname from staffremoteplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' GROUP by st.staff  ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$queryCount=$this->db->query("SELECT * from staffremoteplacement where staff='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;
				$output.='<div class="col-lg-12 col-md-12 col-12">
					<div class="activities">
						<div class="activity delete_remotedirectorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white support-ticket">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="user-img" src="'.base_url().'profile/'.$staffplacements->profile.'" width="70">';
		                    }else{
		                        $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="70">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_remotestaffAllplacemet" class="dropdown-item has-icon text-danger" name="" value="'.$staffplacements->staff.'" ><i class="fas fa-trash-alt"></i>Delete </a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from staffremoteplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-light StudentViewTextInfo">'.$gradess.' ('.$grades->subject.' <small>'.$grades->remotebranch.'</small>)
										<a href="#" id="delete_remotestaffplacemet" class="'.$grades->staff.'" title="'.$grades->remotebranch.'" name="'.$grades->grade.'" value="'.$grades->subject.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';	
	        }
	        $output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
	    
		return $output;
	}
	function fetch_staff_grouping($max_year){
		$query=$this->db->query("SELECT st.staff_list,st.staff_head,st.date_created, us.profile,us.fname,us.mname,us.lname,st.department_name from staff_group as st cross join users as us where st.staff_head=us.username and st.academicyear ='$max_year' GROUP by st.staff_head ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff_head;
				$queryCount=$this->db->query("SELECT * from staff_group where staff_head='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;

				$output.='<div class="col-lg-6 col-12">
					<div class="activities">
						<div class="activity">
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                    		<h4>'.$staffplacements->department_name.' <a href="javascript:void(0)" id="delete_allStaffGroup" class="text-danger" name="" value="'.$staffplacements->staff_head.'" ><i class="fas fa-trash-alt"></i> </a></h4> 
		                      		<a class="text-job" href="javascript:void(0)">'.$staffplacements->fname.' '.$staffplacements->mname.' '.$staffplacements->lname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job">'.$staffplacements->date_created.'</span>		                        	
                      			</div>';
		                      	$queryGrade=$this->db->query("SELECT st.staff_list,st.staff_head,st.date_created, us.profile,us.fname,us.mname,us.lname,us.username from staff_group as st cross join users as us where st.staff_list=us.username and st.academicyear ='$max_year' and st.staff_head='$staffs' GROUP by st.staff_list ORDER BY us.fname,us.mname,us.lname ASC");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$output.='<span class="badge badge-light StudentViewTextInfo delete_this_staff_list'.$grades->staff_list.''.$grades->staff_head.'"> '.$grades->fname.' '.$grades->mname.' '.$grades->lname.'
										<a href="javascript:void(0)" id="delete_groupPlacement" class="'.$grades->fname.'" name="'.$grades->staff_head.'" value="'.$grades->staff_list.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';	
	        }
	        $output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
	    
		return $output;
	}
	function fetch_staff_grouping_branch($max_year,$branch){
		$query=$this->db->query("SELECT st.staff_list,st.staff_head,st.date_created, us.profile,us.fname,us.mname,us.lname,st.department_name from staff_group as st cross join users as us where st.staff_head=us.username and st.academicyear ='$max_year' and us.branch='$branch' GROUP by st.staff_head ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff_head;
				$queryCount=$this->db->query("SELECT * from staff_group where staff_head='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;

				$output.='<div class="col-lg-6 col-12">
					<div class="activities">
						<div class="activity">
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                    	<h4>'.$staffplacements->department_name.' <a href="javascript:void(0)" id="delete_allStaffGroup" class="text-danger" name="" value="'.$staffplacements->staff_head.'" ><i class="fas fa-trash-alt"></i> </a></h4> 

		                      		<a class="text-job" href="javascript:void(0)">'.$staffplacements->fname.' '.$staffplacements->mname.' '.$staffplacements->lname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job">'.$staffplacements->date_created.'</span>
                      			</div>';
		                      	$queryGrade=$this->db->query("SELECT st.staff_list,st.staff_head,st.date_created, us.profile,us.fname,us.mname,us.lname,us.username from staff_group as st cross join users as us where st.staff_list=us.username and st.academicyear ='$max_year' and st.staff_head='$staffs' GROUP by st.staff_list ORDER BY us.fname,us.mname,us.lname ASC");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$output.='<span class="badge badge-light StudentViewTextInfo delete_this_staff_list'.$grades->staff_list.''.$grades->staff_head.'"> '.$grades->fname.' '.$grades->mname.' '.$grades->lname.'
										<a href="javascript:void(0)" id="delete_groupPlacement" class="'.$grades->fname.'" name="'.$grades->staff_head.'" value="'.$grades->staff_list.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';	
	        }
	        $output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
	    
		return $output;
	}
	function searchTeacherPlacementStaffs($searchItem,$max_year){
		$query=$this->db->query("SELECT st.staff,st.date_created, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname from staffplacement as st cross join users as us ON st.staff=us.username where st.academicyear ='$max_year' and username LIKE '%$searchItem%' || st.academicyear ='$max_year' and fname LIKE '%$searchItem%' || st.academicyear ='$max_year' and mname LIKE '%$searchItem%' GROUP by st.staff  ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {

				$staffs=$staffplacements->staff;
				$queryCount=$this->db->query("SELECT * from staffplacement where staff='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;
				$output.='<div class="col-md-12 col-lg-12 col-12">
					<div class="activities">
						<div class="activity delete_directorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white support-ticket">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="user-img mr-2" src="'.base_url().'profile/'.$staffplacements->profile.'" width="70">';
		                    }else{
		                        $output.='<img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="70">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_staffAllplacemet" class="dropdown-item has-icon text-danger" name="" value="'.$staffplacements->staff.'" ><i class="fas fa-trash-alt"></i>Delete </a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from staffplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-light StudentViewTextInfo">'.$gradess.' ('.$grades->subject.')
										<a href="#" id="delete_staffplacemet" class="'.$grades->staff.'" name="'.$grades->grade.'" value="'.$grades->subject.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';
	        } 
         	$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function searchTeacherPlacementStaffsAdmin($searchItem,$max_year,$branch){
		$query=$this->db->query("SELECT st.staff,st.date_created, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname from staffplacement as st cross join users as us ON st.staff=us.username where st.academicyear ='$max_year' and us.branch='$branch' and username LIKE '%$searchItem%' || st.academicyear ='$max_year' and us.branch='$branch' and fname LIKE '%$searchItem%' || st.academicyear ='$max_year' and us.branch='$branch' and mname LIKE '%$searchItem%' GROUP by st.staff  ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$queryCount=$this->db->query("SELECT * from staffplacement where staff='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;
				$output.='<div class="col-md-12 col-lg-12 col-12">
					<div class="activities">
						<div class="activity delete_directorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="mr-3 rounded-circle" src="'.base_url().'profile/'.$staffplacements->profile.'" width="70">';
		                    }else{
		                        $output.='<img class="mr-3 rounded-circle" src="'.base_url().'profile/defaultProfile.png" width="70">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_staffAllplacemet" class="dropdown-item has-icon text-danger" name="" value="'.$staffplacements->staff.'" ><i class="fas fa-trash-alt"></i>Delete </a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from staffplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-light StudentViewTextInfo">'.$gradess.' ('.$grades->subject.')
										<a href="#" id="delete_staffplacemet" class="'.$grades->staff.'" name="'.$grades->grade.'" value="'.$grades->subject.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';
	        } 
         	$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetch_mystaff_placement($max_year,$branch){
		$query=$this->db->query("SELECT st.staff,st.date_created, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and us.branch='$branch' GROUP by st.staff  ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){

			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$queryCount=$this->db->query("SELECT * from staffplacement where staff='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;
				$output.='<div class="col-md-12 col-lg-12 col-12">
					<div class="activities">
						<div class="activity delete_directorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="mr-3 rounded-circle" src="'.base_url().'profile/'.$staffplacements->profile.'" width="70">';
		                    }else{
		                        $output.='<img class="mr-3 rounded-circle" src="'.base_url().'profile/defaultProfile.png" width="70">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_staffAllplacemet" class="dropdown-item has-icon text-danger" name="" value="'.$staffplacements->staff.'" ><i class="fas fa-trash-alt"></i>Delete </a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from staffplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-light StudentViewTextInfo">'.$gradess.' ('.$grades->subject.')
										<a href="#" id="delete_staffplacemet" class="'.$grades->staff.'" name="'.$grades->grade.'" value="'.$grades->subject.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';	
	        }
	        $output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
	    
		return $output;
	}
	function fetch_my_remotestaff_placement($max_year,$branch){
		$query=$this->db->query("SELECT st.staff,st.date_created, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname from staffremoteplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and us.branch='$branch' GROUP by st.staff  ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){

			$output='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$queryCount=$this->db->query("SELECT * from staffremoteplacement where staff='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;
				$output.='<div class="col-md-12 col-lg-12 col-12">
					<div class="activities">
						<div class="activity delete_remotedirectorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icon text-white">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="mr-3 rounded-circle" src="'.base_url().'profile/'.$staffplacements->profile.'" width="70">';
		                    }else{
		                        $output.='<img class="mr-3 rounded-circle" src="'.base_url().'profile/defaultProfile.png" width="70">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                       		<span class="bullet"></span>
		                        	<span class="text-job text-primary">'.$staffplacements->date_created.'</span>
		                        	<div class="float-right dropdown-menu-right pullDown">
		                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          		<div class="dropdown-menu">
			                            	<div class="dropdown-title">Action</div>
			                            	<a href="#" id="delete_remotestaffAllplacemet" class="dropdown-item has-icon text-danger" name="" value="'.$staffplacements->staff.'" ><i class="fas fa-trash-alt"></i>Delete </a>
			                          	</div>
		                        	</div>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from staffremoteplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$output.='<span class="badge badge-light StudentViewTextInfo">'.$gradess.' ('.$grades->subject.' <small>'.$grades->remotebranch.'</small>)
										<a href="#" id="delete_remotestaffplacemet" class="'.$grades->staff.'" title="'.$grades->remotebranch.'" name="'.$grades->grade.'" value="'.$grades->subject.'" ><span class="text-danger"><i class="fas fa-trash-alt"></i></span> </a></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';	
	        }
	        $output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
	    
		return $output;
	}
	function delete_Directorplacement($id,$max_year){
		$this->db->where(array('staff'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('directorplacement');
	}
	function delete_unitDirectorplacement($id,$max_year){
		$this->db->where(array('staff'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('directorunitplacement');
	}
	function delete_placement($staffGrade,$staffSubject,$staffName){
		$this->db->where(array('grade'=>$staffGrade));
		$this->db->where(array('subject'=>$staffSubject));
		$this->db->where(array('staff'=>$staffName));
		$this->db->delete('staffplacement');
	}
	function delete_remote_placement($staffGrade,$staffSubject,$staffName,$staff_Branch){
		$this->db->where(array('grade'=>$staffGrade));
		$this->db->where(array('subject'=>$staffSubject));
		$this->db->where(array('staff'=>$staffName));
		$this->db->where(array('remotebranch'=>$staff_Branch));
		$this->db->delete('staffremoteplacement');
	}
	function Delete_staffAllplacement($staffName,$max_year){
		$this->db->where(array('staff'=>$staffName));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('staffplacement');
	}
	function Delete_remote_staffAllplacement($staffName,$max_year){
		$this->db->where(array('staff'=>$staffName));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('staffremoteplacement');
	}
	function Delete_staffAll_group($staffName,$max_year){
		$this->db->where(array('staff_head'=>$staffName));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('staff_group');
	}
	function Delete_staff_group($staff_list,$staff_head,$max_year){
		$this->db->where(array('staff_list'=>$staff_list));
		$this->db->where(array('staff_head'=>$staff_head));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('staff_group');
	}
	function fetch_new_staffs($max_year){
		$this->db->order_by('id','DESC');
		$this->db->where('academicyear',$max_year);
		$this->db->where('isapproved','0');
		$this->db->where('status2','0');
		$query=$this->db->get('users_registration_request');
		$output='';
		if($query->num_rows()>0){
			$output .='<div class="row"> 
				<div class="col-12 col-sm-12 col-lg-12 col-md-12">
				<button class="btn btn-danger pull-right" id="deleteAllStaffRegistration">Delete All </button>
				<button class="btn btn-warning pull-right" id="declineAllStaffRegistration">Decline All </button>	
				</div>			
			</div>
			<hr>
			<div class="row">';
            	$no=1;
				foreach ($query->result() as $new_staff) {
					$id=$new_staff->id;
					$output.='<div class="col-12 col-sm-12 col-lg-6 delete_mem'.$new_staff->id.'">
					<div class="support-ticket media">';
						if($new_staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$new_staff->profile.'" class="user-img mr-2">';
						}
	                    $output.='<div class="media-body">
	                      <div class="badge badge-pill badge-light mb-1 float-right">Grade:- '.$new_staff->grade.'</div>
	                      <span class="font-weight-bold">'.$new_staff->fname.' '.$new_staff->mname.' '.$new_staff->lname.'('.$new_staff->username.')</span>
	                      <p><span class="font-weight-bold font-13">Gender:-</span> '.$new_staff->gender.'
	                      <span class="font-weight-bold font-13">Branch:-</span> '.$new_staff->branch.' <span class="font-weight-bold font-13">Mobile:-</span> '.$new_staff->mobile.'/ '.$new_staff->father_mobile.' 
	                      <small class="text-muted"><span class="font-weight-bold font-13">Requested on </span>'.$new_staff->dateregister.'</small><br>
	                      <a href="#" class="accept text-success" id="'.$new_staff->id .'">Accept</a> <span class="bullet"></span>
	                      	<a href="#" class="decline text-warning" id="'.$new_staff->id.'"> Reject</a> <span class="bullet"></span>
	                      	<a href="#" class="delete_this_registrationRequest text-danger" id="'.$new_staff->id.'">Delete </a>
	                      	</p>
	                    </div>
	                  </div>
	            	</div>';
			}
			$output .='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No new staffs found.
            	</div>
            </div>';
		}
		return $output;
	}
	function fetch_branchnew_staffs($max_year,$branch){
		$this->db->order_by('id','DESC');
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$max_year);
		$this->db->where('isapproved','0');
		$this->db->where('status2','0');
		$query=$this->db->get('users_registration_request');
		$output='';
		if($query->num_rows()>0){
			$output .='<div class="row">';
            	$no=1;
				foreach ($query->result() as $new_staff) {
					$id=$new_staff->id;
					$output.='<div class="col-12 col-sm-12 col-lg-6 delete_mem'.$new_staff->id.'">
					<div class="support-ticket media">';
						if($new_staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$new_staff->profile.'" class="user-img mr-2">';
						}
	                    $output.='<div class="media-body">
	                      <div class="badge badge-pill badge-light mb-1 float-right">Grade:- '.$new_staff->grade.'</div>
	                      <span class="font-weight-bold">'.$new_staff->fname.' '.$new_staff->mname.' '.$new_staff->lname.'('.$new_staff->username.')</span>
	                      <p><span class="font-weight-bold font-13">Gender:-</span> '.$new_staff->gender.'
	                      <span class="font-weight-bold font-13">Branch:-</span> '.$new_staff->branch.' <span class="font-weight-bold font-13">Mobile:-</span> '.$new_staff->mobile.'/ '.$new_staff->father_mobile.' 
	                      <small class="text-muted"><span class="font-weight-bold font-13">Requested on </span>'.$new_staff->dateregister.'</small><br>
	                      <a href="#" class="accept text-success" id="'.$new_staff->id .'">Accept</a> <span class="bullet"></span>
	                      	<a href="#" class="decline text-warning" id="'.$new_staff->id.'"> Reject</a> <span class="bullet"></span>
	                      	<a href="#" class="delete_this_registrationRequest text-danger" id="'.$new_staff->id.'">Delete </a>
	                      	</p>
	                    </div>
	                  </div>
	            	</div>';
			}
			$output .='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No new staffs found.
            	</div>
            </div>';
		}
		return $output;
	}
	function fetch_new_staffs_finance_approval($max_year){
		$this->db->order_by('id','DESC');
		$this->db->where('academicyear',$max_year);
		$this->db->where('isapproved','1');
		$this->db->where('status','Inactive');
		$this->db->where('status2','0');
		$query=$this->db->get('users_registration_request');
		$output='';
		if($query->num_rows()>0){
			$output .='<h4 class="card-header">Registration Approval Page</h4>
			<div class="dropdown-divider"></div>
			<div class="row">';
            	$no=1;
				foreach ($query->result() as $new_staff) {
					$id=$new_staff->id;
					$output.='<div class="col-12 col-sm-12 col-lg-6 delete_mem_financeapproval'.$new_staff->id.'">
					<div class="support-ticket media">';
						if($new_staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$new_staff->profile.'" class="user-img mr-2">';
						}
	                    $output.='<div class="media-body">
	                      <div class="badge badge-pill badge-light mb-1 float-right">Grade:- '.$new_staff->grade.'</div>
	                      <span class="font-weight-bold">'.$new_staff->fname.' '.$new_staff->mname.' '.$new_staff->lname.' ('.$new_staff->username.')</span>
	                      <p><span class="font-weight-bold font-13">Gender:-</span> '.$new_staff->gender.'
	                      <span class="font-weight-bold font-13">Branch:-</span> '.$new_staff->branch.' <span class="font-weight-bold font-13">Mobile:-</span> '.$new_staff->mobile.'/ '.$new_staff->father_mobile.' 
	                      <small class="text-muted"><span class="font-weight-bold font-13">Requested date </span>'.$new_staff->dateregister.' <span class="font-weight-bold font-13"> Accepted by '.$new_staff->isapproved_by.'</span></small><br>
	                      <a href="#" class="approveAndEnroll text-success" id="'.$new_staff->id .'">Approve & Enroll</a> <span class="bullet"></span>
	                      	<a href="#" class="rejectRegistration text-warning" id="'.$new_staff->id.'"> Reject Registration</a> 
	                      	</p>
	                    </div>
	                  </div>
	            	</div>';
			}
			$output .='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No new record found.
            	</div>
            </div>';
		}
		return $output;
	}
	function fetch_new_staffs_finance_approval_admin($max_year,$branch){
		$this->db->order_by('id','DESC');
		$this->db->where('academicyear',$max_year);
		$this->db->where('branch',$branch);
		$this->db->where('isapproved','1');
		$this->db->where('status','Inactive');
		$this->db->where('status2','0');
		$query=$this->db->get('users_registration_request');
		$output='';
		if($query->num_rows()>0){
			$output .='<h4 class="card-header">Registration Approval Page</h4>
			<div class="dropdown-divider"></div>
			<div class="row">';
            	$no=1;
				foreach ($query->result() as $new_staff) {
					$id=$new_staff->id;
					$output.='<div class="col-12 col-sm-12 col-lg-6 delete_mem_financeapproval'.$new_staff->id.'">
					<div class="support-ticket media">';
						if($new_staff->profile == ''){
							$output.='<img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
						}else{
							$output.='<img alt="Photo" src="'.base_url().'/profile/'.$new_staff->profile.'" class="user-img mr-2">';
						}
	                    $output.='<div class="media-body">
	                      <div class="badge badge-pill badge-light mb-1 float-right">Grade:- '.$new_staff->grade.'</div>
	                      <span class="font-weight-bold">'.$new_staff->fname.' '.$new_staff->mname.' '.$new_staff->lname.' ('.$new_staff->username.')</span>
	                      <p><span class="font-weight-bold font-13">Gender:-</span> '.$new_staff->gender.'
	                      <span class="font-weight-bold font-13">Branch:-</span> '.$new_staff->branch.' <span class="font-weight-bold font-13">Mobile:-</span> '.$new_staff->mobile.'/ '.$new_staff->father_mobile.' 
	                      <small class="text-muted"><span class="font-weight-bold font-13">Requested date </span>'.$new_staff->dateregister.' <span class="font-weight-bold font-13"> Accepted by '.$new_staff->isapproved_by.'</span></small><br>
	                      <a href="#" class="approveAndEnroll text-success" id="'.$new_staff->id .'">Approve & Enroll</a> <span class="bullet"></span>
	                      	<a href="#" class="rejectRegistration text-warning" id="'.$new_staff->id.'"> Reject Registration</a> 
	                      	</p>
	                    </div>
	                  </div>
	            	</div>';
			}
			$output .='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No new record found.
            	</div>
            </div>';
		}
		return $output;
	}
	function accept_staffs($id,$user){
		$this->db->where(array('id'=>$id));
		$this->db->set('isapproved','1');
		$this->db->set('isapproved_by',$user);
		$query=$this->db->update('users_registration_request');
		$output='';
		if($query){
			$output.='1';
		}else{
			$output.='0';
		}
		return $output;
	}
	function decline_staffs($id,$user){
		$this->db->where(array('id'=>$id));
		$this->db->set('status2','2');
		$this->db->set('status2_by',$user);
		$query=$this->db->update('users_registration_request');
		$output='';
		if($query){
			$output.='1';
		}else{
			$output.='0';
		}
		return $output;
	}
	function fetch_gradesec($max_year){
		$this->db->group_by('gradesec');
		$this->db->order_by('gradesec','ASC');
		$this->db->where('gradesec!=','');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_grades($max_year){
		$this->db->group_by('grade');
		$this->db->order_by('fname','ASC');
		$this->db->where('grade!=','');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_mygradesec($max_year,$branch){
		$this->db->group_by('gradesec');
		$this->db->order_by('gradesec','ASC');
		$this->db->where(array('branch'=>$branch));
		$this->db->where('gradesec!=','');
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('usertype','Student');
		$query=$this->db->get('users');
		return $query->result();
	}
	function fetch_mygradesec2($user,$max_year,$branch){
		$this->db->order_by('gradesec','ASC');
		$this->db->group_by('gradesec');
		$this->db->where(array('staff'=>$user));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('directorplacement.academicyear'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->select('*');
        $this->db->from('directorplacement');
        $this->db->join('users', 
            'users.gradesec = directorplacement.grade');
        $query = $this->db->get();
        return $query->result();
	}
	function fetch_mygrade_Director($user,$max_year,$branch){
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$this->db->where(array('staff'=>$user));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('directorplacement.academicyear'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->select('*');
        $this->db->from('directorplacement');
        $this->db->join('users', 
            'users.gradesec = directorplacement.grade');
        $query = $this->db->get();
        return $query->result();
	}
	function fetch_mygradeDirector_progress($user,$max_year,$branch){
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$this->db->where(array('directorplacement.staff'=>$user));
		$this->db->where(array('users.branch'=>$branch));
		$this->db->where(array('users.isapproved'=>'1'));
		$this->db->where(array('directorplacement.academicyear'=>$max_year));
		$this->db->select('*');
        $this->db->from('directorplacement');
        $this->db->join('users', 
            'users.gradesec = directorplacement.grade');
        $query = $this->db->get();
        return $query->result();

		/*$this->db->order_by('gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$this->db->where(array('staff'=>$user));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('directorplacement.academicyear'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->select('*');
        $this->db->from('directorplacement');
        $this->db->join('users', 
            'users.gradesec = directorplacement.grade');
        $query = $this->db->get();
        return $query->result();*/
	}
	function fetch_mygradeDirector($user,$max_year,$branch){
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$this->db->where(array('staff'=>$user));
		/*$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));*/
		$this->db->where(array('directorplacement.academicyear'=>$max_year));
		/*$this->db->where('usertype','Student');
		$this->db->select('*');
        $this->db->from('directorplacement');
        $this->db->join('users', 
            'users.gradesec = directorplacement.grade');*/
        $query = $this->db->get('directorplacement');
        return $query->result();

		/*$this->db->order_by('gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$this->db->where(array('staff'=>$user));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('directorplacement.academicyear'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->select('*');
        $this->db->from('directorplacement');
        $this->db->join('users', 
            'users.gradesec = directorplacement.grade');
        $query = $this->db->get();
        return $query->result();*/
	}
	function fetcHrGradesec($max_year,$user,$branch){
		$this->db->group_by('roomgrade');
		$this->db->order_by('roomgrade','ASC');
		$this->db->where(array('teacher'=>$user));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('hoomroomplacement');
		return $query->result();
	}
	function my_subject($max_year,$grade){
		$this->db->order_by('Subj_name','ASC');
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->where(array('Grade'=>$grade));
		$query=$this->db->get('subject');
		return $query->result();
	}
	function fetch_mygradesec_student($gradesec,$max_year,$branch){
		$this->db->where('branch',$branch);
		$this->db->where('gradesec',$gradesec);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $output .='<form method="POST" 
        	action="'.base_url().'attendance/">
        	       <div class="row">
                      <div class="col-lg-4">
                        <div class="form-group">
                          <label for="Mobile">Date</label>
                            <input class="form-control datepicker" 
                            name="datet" id="id" required="required" type="date" placeholder="Absent Date">
                         </div>
                       </div>
                     <div class="col-lg-4">
                         <div class="form-group">
                          <label for="Mobile">Late(Minute) for Late students
                          </label>
                            <input class="form-control" id="late" name="minute" type="number" placeholder="Late in Min">
                          </div>
                      </div>
                    </div>
                    <div class="table-responsive">
                      <table class="table table-striped table-hover" id="tableExport" style="width:100%;">
                        <thead>
                          <tr>
                           <th>
                            <button class="btn btn-danger" type="submit" name="absent">Absent</button>
                           </th>
                            <th><button class="btn btn-warning" type="submit" name="late">Late</button></th>
                            <th><button class="btn btn-info" type="submit" name="permission">Permission</button></th>
                            <th>Student Name</th>
                            <th>Grade</th>
                            <th>Gender</th>
                          </tr>
                        </thead>
                        <tbody>';
        foreach ($query->result() as $row) {
        	            $output .='<tr>
                          <td><input type="checkbox" name="absentid[ ]" value="'.$row->id.'"></td>
                          <td><input type="checkbox" name="lateid[ ]" value="'.$row->id.'"></td>
                          <td><input type="checkbox" name="permissionid[ ]" value="'.$row->id.'"></td>
                          <td>'.$row->fname.'&nbsp'.$row->mname.'</td>
                          <td>'.$row->gradesec.'</td>
                          <td>'.$row->gender.'</td>
                          </tr>';
        }
        '</tbody>
        </form>
        </table>
        </div>';
        return $output;
	}
	function filterGradesecForTeachers($gradesec,$max_year,$branch,$dateAttendance,$user){
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $queryType=$this->db->query("select attendance_name from attendance_type group by attendance_name order by id ASC ");
		if($queryType->num_rows() >0 ){
			$colsapn=$queryType->num_rows();
		}else{
			$colsapn=1;
		}
        $output .='<div class="table-responsive">
          	<table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Student Name</th>
                    <th rowspan="2">Student ID</th>
                    <th colspan="'.$colsapn.'" class="text-center">Date <u>'.$dateAttendance.'</u></th>
                </tr>
                <tr>';
                $queryType=$this->db->query("select attendance_name from attendance_type group by attendance_name order by id ASC ");
                if($queryType->num_rows() >0 ){
                	foreach($queryType->result() as $row){
                		$output.='<th class="rotateJossRoster"><div>'.$row->attendance_name.'</div></th>';
                	}
                }
                $output.='
                </tr>
            </thead>
        <tbody>';
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from attendance where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' ");
        	$output.='<tr>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
	        <td>'.$row->username.'</td>';
        	if($queryCheck->num_rows()<1){
        		if($queryType->num_rows() >0 ){
                	foreach($queryType->result() as $rowType){
                		$attendance_Type=$rowType->attendance_name;
                		if($attendance_Type=='Tardy' || $attendance_Type=='Late'){
			        		$output.='<td>
					        	<div class="pretty p-bigger pull-right">
				                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$attendance_Type.'">
				                  	<div class="state p-warning">
				                    	<i class="icon material-icons"></i>
				                    	<label></label> <a class="savedAttendance'.$row->username.'"'.$attendance_Type.' ></a>
				                  	</div>
				                </div>
				            </td> ';
				        }else{
	                		$output.='<td><div class="pretty p-bigger">
			                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$attendance_Type.'"> 
			                  	<div class="state p-success">
			                    	<i class="icon material-icons"></i>
			                    	<label></label> <a class="savedAttendance'.$row->username.'"'.$attendance_Type.' ></a>
			                  	</div>
			                </div>
					        </td>';
					    }
                	}
                }
        	}else{
		        $absentRow=$queryCheck->row();
        		$absentType=$absentRow->absentype;
        		$lateAttendance=$absentRow->latemin;
        		if($queryType->num_rows() >0 ){
                	foreach($queryType->result() as $rowType){
                		$attendance_Type=$rowType->attendance_name;
	        			if($attendance_Type===$absentType){
	        				$output.='<td>';
	                  			$output.='<div class="pretty p-bigger">
	                  				<input type="radio" checked="checked" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$attendance_Type.'">
	                  				<div class="state p-danger">
		                    			<i class="icon material-icons"></i>
		                    			<label></label>
		                  			</div>
		                  		</div>';
			                	$output.='<a class="savedAttendance'.$row->username.''.$attendance_Type.'" ></a>
					        </td>';
	        			}else{
	        				$output.='<td>';
	        				if($attendance_Type=='Tardy' || $attendance_Type=='Late'){
		                  		$output.='<div class="pretty p-bigger">
				                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$attendance_Type.'">
				                  	<div class="state p-warning">
				                    	<i class="icon material-icons"></i>
				                    	<label></label>
				                  	</div>
				                </div> ';
	                  		}else{
	                  			$output.='<div class="pretty p-bigger">
	                  				<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$attendance_Type.'">
	                  				<div class="state p-info">
		                    			<i class="icon material-icons"></i>
		                    			<label></label>
		                  			</div>
		                  		</div>';
		                  	}	
		                	$output.='<a class="savedAttendance'.$row->username.''.$attendance_Type.'" ></a>
					        </td>';
	        			}
	        		}
        		}
        	}
	        $output .='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        $queryCheckAgree=$this->db->query("select * from attendance_sign where signed_for_date='$dateAttendance' and academicyear='$max_year' and signed_grade='$gradesec' and signed_branch='$branch' ");
        if($queryCheckAgree->num_rows()>0){
        	$rowUser=$queryCheckAgree->row();
        	$signedUser=$rowUser->signed_user;
        	$queryName=$this->db->query("select fname,mname,lname from users where username='$signedUser' ");
        	if($queryName->num_rows()>0){
        		$rowName=$queryName->row();
        		$fName=$rowName->fname;
        		$mName=$rowName->mname;
        	}else{
        		$fName='Deleted';
        		$mName='user';
        	}
        	$output.='<div class="form-group mb-0 col-12">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" class="custom-control-input" id="'.$user.'" value="'.$dateAttendance.'" checked="checked" disabled="disabled">
                  <label class="custom-control-label" for="agreedToAttendance_activity_Teacher">Signed by '.$fName.' '.$mName.' </label>
                </div>
            </div>';
        }else{
	        $output.='
	        <div class="form-group mb-0 col-12">                                
	          <input type="checkbox" name="agreedToAttendance_activity_Teacher" class="agreedToAttendance_activity_Teacher'.$dateAttendance.'" id="'.$user.'" title="'.$gradesec.'" value="'.$dateAttendance.'" data-branch="'.$branch.'">
	          <label>I agree and sign that i have checked my student attendance for date '.$dateAttendance.'.</label>
	          <div class="text-muted form-text">
	            By checking this box, you are signing on the given attendance date and you will be responsible if something wrong happens regarding attendance.
	          </div>
	        </div>';
	    }
        return $output;
	}
	function filterGradesecForTeachers_kelem($gradesec,$max_year,$branch,$dateAttendance,$user){
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $output .='<div class="table-responsive">
          	<table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Student Name</th>
                    <th rowspan="2">Student ID</th>
                    <th colspan="4" class="text-center">Date <u>'.$dateAttendance.'</u></th>
                </tr>
                <tr><th>Present</th>
                    <th>Unexcused Absence</th>
                    <th>Tardy</th>
                    <th>Excused Absence</th></tr>
            </thead>
        <tbody>';
        $no=1;
        $arrayItem=array('Unexcused Absence','Tardy','Excused Absence');
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from attendance where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' ");
        	$output.='<tr>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
	        <td>'.$row->username.'</td>';
        	if($queryCheck->num_rows()<1){
        		$output.='<td><div class="pretty p-round p-bigger">
                  	<input type="radio" checked="checked" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label> 
                  	</div>
                </div>
		        </td>
		        <td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="Unexcused Absence">
	                  	<div class="state p-danger">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceTeacher'.$row->id.'"Unexcused Absence ></a>
	                  	</div>
	                </div>
	            </td> 
		        <td><div class="row">
		        		<div class="col-8 col-md-10">
		                 	<input class="form-control attendanceMinuteTeacher" id="attendanceMinuteTeacher_'.$row->username.'" name="attendanceMinuteTeacher" type="number" placeholder="Tardy(Min)" required="required">
		                </div>
			        	<div class="col-4 col-md-2">
				        	<div class="pretty p-round p-bigger">
			                  	<input type="radio" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="Tardy">
			                  	<div class="state p-warning">
			                    	<i class="icon material-icons"></i>
			                    	<label></label> <a class="savedAttendanceTeacher'.$row->id.'"Tardy ></a>
			                  	</div>
			                </div>
		                </div>
	                </div>
	            </td>
		        <td> <div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="Excused Absence">
	                  	<div class="state p-info">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceTeacher'.$row->id.'"Excused Absence ></a>
	                  	</div>
	                </div>
	            </td>';
        	}else{
        		$output.='<td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="Present">
	                  	<div class="state p-success">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceTeacher'.$row->id.'"Present ></a>
	                  	</div>
	                </div>
		        </td>';
		        $absentRow=$queryCheck->row();
        		$absentType=$absentRow->absentype;
        		$lateAttendance=$absentRow->latemin;
        		foreach($arrayItem as $abType){
        			if($abType===$absentType){
        				$output.='<td>';
		                  		if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-control attendanceMinuteTeacher" id="attendanceMinute_'.$row->username.'" name="attendanceMinuteTeacher" type="number" placeholder="Tardy(Min)" required="required" value="'.$lateAttendance.'">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" checked="checked" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceTeacher'.$row->id.'"Late ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceTeacher'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}else{
        				$output.='<td>';
			                  	if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-control attendanceMinuteTeacher" id="attendanceMinuteTeacher_'.$row->username.'" name="attendanceMinuteTeacher" type="number" placeholder="Tardy(Min)" required="required">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceTeacher'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioTeacher'.$row->username.'" value="'.$row->username.'" class="attendanceTypeTeacher" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceTeacher'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}
        		}
        	}
	        $output .='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        $queryCheckAgree=$this->db->query("select * from attendance_sign where signed_for_date='$dateAttendance' and academicyear='$max_year' and signed_grade='$gradesec' ");
        if($queryCheckAgree->num_rows()>0){
        	$output.='<div class="form-group mb-0 col-12">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" class="custom-control-input" id="'.$user.'" value="'.$dateAttendance.'" checked="checked" disabled="disabled">
                  <label class="custom-control-label" for="agreedToAttendance_activity">Signed. </label>
                </div>
            </div>';
        }else{
	        $output.='
	        <div class="form-group mb-0 col-12">                                
	          <input type="checkbox" name="agreedToAttendance_activity_Teacher" class="agreedToAttendance_activity'.$dateAttendance.'" id="'.$user.'" title="'.$gradesec.'" value="'.$dateAttendance.'">
	          <label>I agree and sign that i have checked my student attendance for date '.$dateAttendance.'.</label>
	          <div class="text-muted form-text">
	            By checking this box, you are signing on the given attendance date and you will be responsible if something wrong happens regarding attendance.
	          </div>
	        </div>';
	    }
        return $output;

		/*$query=$this->db->query("select fname,mname,lname,username from users where branch='$branch' and gradesec='$gradesec' and academicyear='$max_year' and username not in(select stuid from attendance where academicyear='$max_year' and absentdate='$newDateEnd' ) order by fname,mname,lname ASC ");
		$output ='';
		if($query->num_rows()>0){
	        $output .='
	            <div class="">
	                <table class="table table-borderedr table-hover" style="width:100%;">
	                    <thead>
	                        <tr>
	                        	<th>No.</th>
	                           <th>Student Name</th>
	                           <th>
	                            <a class="" href="#" name="absent">Absent</a>
	                           </th>
	                            <th><a href="#" class="" name="late">Late</a> </th>
	                            <th><a href="#" class="" name="permission"> Permission</a></th>
	                        </tr>
	                    </thead>
	                    <tbody>';
	                    	$no=1;
	        				foreach ($query->result() as $row) {
	        	              	$output .='<tr>
	        	              	<td>'.$no.'.</td>
	        	              	<td>'.$row->fname.' '.$row->mname.' '.$row->lname.' </td>
	                          	<td><input type="checkbox" name="absenStuIdSave" id="absenStuId" value="'.$row->username.'"></td>
	                          	<td><input type="checkbox" name="lateStuIdSave" id="lateStuId" value="'.$row->username.'"></td>
	                          	<td><input type="checkbox" name="permissionStuIdSave" id="perStuId" value="'.$row->username.'"></td>
	                          	</tr>';
	                          	$no++;
	        				}
	        			'</tbody>
	        		</table>
	        	</div>';
    	}else{
    		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No student found.
            </div></div>';
    	}
        return $output;*/
	}
	function feedAbsentAttendance($attendanceId,$absentDate,$abseType,$max_year,$user){
		$this->db->where('stuid',$attendanceId);
		$this->db->where(array('absentdate'=>$absentDate));
		$this->db->where(array('academicyear'=>$max_year));
		$query = $this->db->get('attendance');
		$output='';
		if($query->num_rows()>0){
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i>
            </div></div>';
		}else{
			$data=array(
				'stuid'=>$attendanceId,
				'absentdate'=>$absentDate,
				'absentype'=>$abseType,
				'academicyear'=>$max_year,
				'attend_by'=>$user
			);
			$this->db->insert('attendance',$data);
		}
		return $output;
	}
	function feedLateAttendance($attendanceId,$absentDate,$abseType,$max_year,$user,$teaStuAbsentMin){
		$this->db->where('stuid',$attendanceId);
		$this->db->where(array('absentdate'=>$absentDate));
		$this->db->where(array('academicyear'=>$max_year));
		$query = $this->db->get('attendance');
		$output='';
		if($query->num_rows()>0){
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i>
            </div></div>';
		}else{
			$data=array(
				'stuid'=>$attendanceId,
				'absentdate'=>$absentDate,
				'absentype'=>$abseType,
				'academicyear'=>$max_year,
				'attend_by'=>$user,
				'latemin'=>$teaStuAbsentMin
			);
			$this->db->insert('attendance',$data);
		}
		return $output;
	}
	function feedPermissionAttendance($attendanceId,$absentDate,$abseType,$max_year,$user){
		$this->db->where('stuid',$attendanceId);
		$this->db->where(array('absentdate'=>$absentDate));
		$this->db->where(array('academicyear'=>$max_year));
		$query = $this->db->get('attendance');
		$output='';
		if($query->num_rows()>0){
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i>
            </div></div>';
		}else{
			$data=array(
				'stuid'=>$attendanceId,
				'absentdate'=>$absentDate,
				'absentype'=>$abseType,
				'academicyear'=>$max_year,
				'attend_by'=>$user
			);
			$this->db->insert('attendance',$data);
		}
		return $output;
	}
	function fetchStudentsAttendanceFormat($gradesec,$attBranches,$max_year){
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$attBranches);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
        $output .='<p class="text-center"><u><b>'.$school_name.' </b>('.$attBranches.' Branch)</u></p>
        <div class ="row">
        	<div class ="col-lg-4 col-12"><p class="text-center"><u><b>Students Attendance in '.$max_year.' Academic Year </b></u></p> </div>
        	<div class ="col-lg-4 col-6"><p class="text-center"><b>Grade:<u>'.$gradesec.'</u></b></p></div>
        	<div class ="col-lg-4 col-6"><p class="text-center"><b> Month </b>_________</p></div>
        </div>';
        $output .='<div class="row">
            <div class="col-lg-3"> </div>
           	<div class="col-lg-3"> </div>
         	<div class="col-lg-3"> </div>
            <div class="col-lg-3"> </div>
        </div>
        <div class="table-responsive">
            <table class="tabler table-borderedr table-hover" cellspacing="9" cellpadding="9" style="width:100%;">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Gender</th>
                    <th>Age</th>';
                    for ($i=1; $i <=26 ; $i++) { 
                    	$output.='<th></th>';
                    }
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        foreach ($query->result() as $row) {
	        $output .='<tr>
	        <td>'.$no.'. </td>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
	        <td>'.$row->gender.'</td> 
	        <td>'.$row->age.'</td>';
	        for ($i=1; $i <=26 ; $i++) { 
                $output.='<td> </td>';
            }
	        $output.='</tr>';
	        $no++;
        }
        $output.='<tr><td colspan="4" class="text-center">Key</td><td colspan="8"><span class="text-success"> U= Present</span></td><td colspan="9"><span class="text-danger"> A=Absent</span></td><td colspan="9"><span class="text-warning"> P=Permission</span></td></tr>';
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetch_gradesec_student($gradesec,$attBranches,$max_year,$dateAttendance,$user){
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$attBranches);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where('usertype','Student');
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
		$queryType=$this->db->query("select attendance_name from attendance_type group by attendance_name order by id ASC ");
		if($queryType->num_rows() >0 ){
			$colsapn=$queryType->num_rows();
		}else{
			$colsapn=1;
		}
        $output .='<div class="table-responsive">
          	<table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Student Name</th>
                    <th rowspan="2">Student ID</th>
                    <th colspan="'.$colsapn.'" class="text-center">Date <u>'.$dateAttendance.'</u></th>
                </tr>
                <tr>';
                $queryType=$this->db->query("select attendance_name from attendance_type group by attendance_name order by id ASC ");
                if($queryType->num_rows() >0 ){
                	foreach($queryType->result() as $row){
                		$output.='<th class="rotateJossRoster"><div>'.$row->attendance_name.'</div></th>';
                	}
                }
                $output.='
                </tr>
            </thead>
        <tbody>';
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from attendance where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' ");
        	$output.='<tr>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
	        <td>'.$row->username.'</td>';
        	if($queryCheck->num_rows()<1){
        		if($queryType->num_rows() >0 ){
                	foreach($queryType->result() as $rowType){
                		$attendance_Type=$rowType->attendance_name;
                		if($attendance_Type=='Tardy' || $attendance_Type=='Late'){
			        		$output.='<td>
					        	<div class="pretty p-bigger pull-right">
				                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$attendance_Type.'">
				                  	<div class="state p-warning">
				                    	<i class="icon material-icons"></i>
				                    	<label></label> <a class="savedAttendance'.$row->username.'"'.$attendance_Type.' ></a>
				                  	</div>
				                </div>
				            </td> ';
				        }else{
	                		$output.='<td><div class="pretty p-bigger">
			                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$attendance_Type.'"> 
			                  	<div class="state p-success">
			                    	<i class="icon material-icons"></i>
			                    	<label></label> <a class="savedAttendance'.$row->username.'"'.$attendance_Type.' ></a>
			                  	</div>
			                </div>
					        </td>';
					    }
                	}
                }
        	}else{
		        $absentRow=$queryCheck->row();
        		$absentType=$absentRow->absentype;
        		$lateAttendance=$absentRow->latemin;
        		if($queryType->num_rows() >0 ){
                	foreach($queryType->result() as $rowType){
                		$attendance_Type=$rowType->attendance_name;
	        			if($attendance_Type===$absentType){
	        				$output.='<td>';
	                  			$output.='<div class="pretty p-bigger">
	                  				<input type="radio" checked="checked" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$attendance_Type.'">
	                  				<div class="state p-danger">
		                    			<i class="icon material-icons"></i>
		                    			<label></label>
		                  			</div>
		                  		</div>';
			                	$output.='<a class="savedAttendance'.$row->username.''.$attendance_Type.'" ></a>
					        </td>';
	        			}else{
	        				$output.='<td>';
	        				if($attendance_Type=='Tardy' || $attendance_Type=='Late'){
		                  		$output.='<div class="pretty p-bigger">
				                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$attendance_Type.'">
				                  	<div class="state p-warning">
				                    	<i class="icon material-icons"></i>
				                    	<label></label>
				                  	</div>
				                </div> ';
	                  		}else{
	                  			$output.='<div class="pretty p-bigger">
	                  				<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$attendance_Type.'">
	                  				<div class="state p-info">
		                    			<i class="icon material-icons"></i>
		                    			<label></label>
		                  			</div>
		                  		</div>';
		                  	}	
		                	$output.='<a class="savedAttendance'.$row->username.''.$attendance_Type.'" ></a>
					        </td>';
	        			}
	        		}
        		}
        	}
	        $output .='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        $queryCheckAgree=$this->db->query("select * from attendance_sign where signed_for_date='$dateAttendance' and academicyear='$max_year' and signed_grade='$gradesec' and signed_branch='$attBranches' ");
        if($queryCheckAgree->num_rows()>0){
        	$rowUser=$queryCheckAgree->row();
        	$signedUser=$rowUser->signed_user;
        	$queryName=$this->db->query("select fname,mname,lname from users where username='$signedUser' ");
        	if($queryName->num_rows()>0){
        		$rowName=$queryName->row();
        		$fName=$rowName->fname;
        		$mName=$rowName->mname;
        	}else{
        		$fName='Deleted';
        		$mName='user';
        	}
        	$output.='<div class="form-group mb-0 col-12">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" class="custom-control-input" id="'.$user.'" value="'.$dateAttendance.'" checked="checked" disabled="disabled">
                  <label class="custom-control-label" for="agreedToAttendance_activity">Signed by '.$fName.' '.$mName.' </label>
                </div>
            </div>';
        }else{
	        $output.='
	        <div class="form-group mb-0 col-12">                                
	          <input type="checkbox" name="agreedToAttendance_activity" class="agreedToAttendance_activity'.$dateAttendance.'" id="'.$user.'" title="'.$gradesec.'" value="'.$dateAttendance.'" data-branch="'.$attBranches.'">
	          <label>I agree and sign that i have checked my student attendance for date '.$dateAttendance.'.</label>
	          <div class="text-muted form-text">
	            By checking this box, you are signing on the given attendance date and you will be responsible if something wrong happens regarding attendance.
	          </div>
	        </div>';
	    }
        return $output;
	}
	function fetch_gradesec_student_kelem($gradesec,$attBranches,$max_year,$dateAttendance,$user){
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$attBranches);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $output .='<div class="table-responsive">
          	<table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Student Name</th>
                    <th rowspan="2">Student ID</th>
                    <th colspan="4" class="text-center">Date <u>'.$dateAttendance.'</u></th>
                </tr>
                <tr><th>Present</th>
                    <th>Unexcused Absence</th>
                    <th>Tardy</th>
                    <th>Excused Absence</th></tr>
            </thead>
        <tbody>';
        $no=1;
        $arrayItem=array('Unexcused Absence','Tardy','Excused Absence');
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from attendance where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' ");
        	$output.='<tr>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
	        <td>'.$row->username.'</td>';
        	if($queryCheck->num_rows()<1){
        		$output.='<td><div class="pretty p-round p-bigger">
                  	<input type="radio" checked="checked" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label> 
                  	</div>
                </div>
		        </td>
		        <td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="Unexcused Absence">
	                  	<div class="state p-danger">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendance'.$row->id.'"Unexcused Absence ></a>
	                  	</div>
	                </div>
	            </td> 
		        <td><div class="row">
		        		<div class="col-8 col-md-10">
		                 	<input class="form-control attendanceMinute" id="attendanceMinute_'.$row->username.'" name="attendanceMinute" type="number" placeholder="Tardy(Min)" required="required">
		                </div>
			        	<div class="col-4 col-md-2">
				        	<div class="pretty p-round p-bigger">
			                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="Tardy">
			                  	<div class="state p-warning">
			                    	<i class="icon material-icons"></i>
			                    	<label></label> <a class="savedAttendance'.$row->id.'"Tardy ></a>
			                  	</div>
			                </div>
		                </div>
	                </div>
	            </td>
		        <td> <div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="Excused Absence">
	                  	<div class="state p-info">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendance'.$row->id.'"Excused Absence ></a>
	                  	</div>
	                </div>
	            </td>';
        	}else{
        		$output.='<td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="Present">
	                  	<div class="state p-success">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendance'.$row->id.'"Present ></a>
	                  	</div>
	                </div>
		        </td>';
		        $absentRow=$queryCheck->row();
        		$absentType=$absentRow->absentype;
        		$lateAttendance=$absentRow->latemin;
        		foreach($arrayItem as $abType){
        			if($abType===$absentType){
        				$output.='<td>';
		                  		if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-control attendanceMinute" id="attendanceMinute_'.$row->username.'" name="attendanceMinute" type="number" placeholder="Tardy(Min)" required="required" value="'.$lateAttendance.'">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" checked="checked" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendance'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendance'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}else{
        				$output.='<td>';
			                  	if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-control attendanceMinute" id="attendanceMinute_'.$row->username.'" name="attendanceMinute" type="number" placeholder="Tardy(Min)" required="required">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendance'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadio'.$row->username.'" value="'.$row->username.'" class="attendanceType" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendance'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}
        		}
        	}
	        $output .='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        $queryCheckAgree=$this->db->query("select * from attendance_sign where signed_for_date='$dateAttendance' and academicyear='$max_year' and signed_grade='$gradesec' ");
        if($queryCheckAgree->num_rows()>0){
        	$output.='<div class="form-group mb-0 col-12">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" class="custom-control-input" id="'.$user.'" value="'.$dateAttendance.'" checked="checked" disabled="disabled">
                  <label class="custom-control-label" for="agreedToAttendance_activity">Signed. </label>
                </div>
            </div>';
        }else{
	        $output.='
	        <div class="form-group mb-0 col-12">                                
	          <input type="checkbox" name="agreedToAttendance_activity" class="agreedToAttendance_activity'.$dateAttendance.'" id="'.$user.'" title="'.$gradesec.'" value="'.$dateAttendance.'">
	          <label>I agree and sign that i have checked my student attendance for date '.$dateAttendance.'.</label>
	          <div class="text-muted form-text">
	            By checking this box, you are signing on the given attendance date and you will be responsible if something wrong happens regarding attendance.
	          </div>
	        </div>';
	    }
        return $output;
	}
	function fetch_evaluation_staff($attBranches,$max_year,$dateAttendance,$attendace_type){
		$this->db->where('usertype!=','Student');
		$this->db->where('branch',$attBranches);
		$this->db->where('isapproved','1');
		$this->db->where('supervision_attendance','1');
		$this->db->where('status','Active');
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $output .='<div class="table-responsive">
          	<table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Staff Name</th>
                    <th colspan="6" class="text-center">Date <u>'.$dateAttendance.'</u></th>
                </tr>
                <tr><th>Present</th>
                    <th>Unexcused Absence</th>
                    <th>Tardy</th>
                    <th>Excused Absence</th>
                    <th>Substitution</th>
                    <th>Comment</th></tr>
            </thead>
        <tbody>';
        $no=1;
        $arrayItem=array('Unexcused Absence','Tardy','Excused Absence','Substitution');
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from attendance_evaluation where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' and attendance_period='$attendace_type' ");
        	$output.='<tr>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td> ';
        	if($queryCheck->num_rows()<1){
        		$output.='<td><div class="pretty p-bigger">
                  	<input type="radio" checked="checked" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label> 
                  	</div>
                </div>
		        </td>
		        <td><div class="pretty p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="Unexcused Absence">
	                  	<div class="state p-danger">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaff'.$row->id.'"Unexcused Absence ></a>
	                  	</div>
	                </div>
	            </td> 
		        <td><div class="row">
		        		<div class="col-8 col-md-10">
		                 	<input class="attendanceMinuteStaff " id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required">
		                </div>
			        	<div class="col-4 col-md-2">
				        	<div class="pretty p-bigger">
			                  	<input type="radio" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="Tardy">
			                  	<div class="state p-warning">
			                    	<i class="icon material-icons"></i>
			                    	<label></label> <a class="savedAttendanceStaff'.$row->id.'"Tardy ></a>
			                  	</div>
			                </div>
		                </div>
	                </div>
	            </td>
		        <td><div class="pretty p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="Excused Absence">
	                  	<div class="state p-info">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaff'.$row->id.'"Excused Absence ></a>
	                  	</div>
	                </div>
	            </td>
	            <td> 
	            	<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_Substitution attendanceTypeStaff_Substitution'.$row->username.'" >
	                <option></option>';
	                foreach($query->result() as $rowUsers){
		                $output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
		            }
	                $output.='</select>
	            </td>
	            <td><a href="#" class="add_comment_tostaff_supervision" id="'.$max_year.'" value="'.$row->username.'" name="'.$dateAttendance.'" data-type="'.$attendace_type.'" data-toggle="modal" data-target="#add_comment_to_supervision"> Add Comment</a></td>';
        	}else{
        		$output.='<td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="Present">
	                  	<div class="state p-success">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaff'.$row->id.'"Present ></a>
	                  	</div>
	                </div>
		        </td>';
		        $absentRow=$queryCheck->row();
        		$absentType=$absentRow->absentype;
        		$lateAttendance=$absentRow->latemin;
        		$substituteBy=$absentRow->substitute_by;
        		foreach($arrayItem as $abType){
        			if($abType===$absentType){
        				$output.='<td>';
		                  		if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-contrlol attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required" value="'.$lateAttendance.'">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" checked="checked" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceStaff'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else if($abType=='Substitution'){
	                  				$output.='<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_Substitution attendanceTypeStaff_Substitution'.$row->username.'" >
					                <option></option>';
					                foreach($query->result() as $rowUsers){
					                	if($substituteBy==$rowUsers->username){
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'" selected="selected">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}else{
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'"  title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}
						                
						            }
					                $output.='</select>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceStaff'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}else{
        				$output.='<td>';
			                  	if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-contrlol attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceStaff'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else if($abType=='Substitution'){
		                  			$output.=' <select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_Substitution attendanceTypeStaff_Substitution'.$row->username.'" >
					                <option></option>';
					                foreach($query->result() as $rowUsers){
						               if($substituteBy==$rowUsers->username){
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'" selected="selected">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}else{
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}
						            }
					                $output.='</select>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioStaff'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaff attendanceTypeStaffCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceStaff'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}
        		}
        		$output.='<td><a href="#" class="add_comment_tostaff_supervision" id="'.$max_year.'" value="'.$row->username.'" name="'.$dateAttendance.'" data-type="'.$attendace_type.'" data-toggle="modal" data-target="#add_comment_to_supervision"> Add Comment</a></td>';
        	}
	        $output .='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function add_comment_tostaff_supervision($username,$max_year,$dateattendance,$attendanceType){
		$this->db->where(array('username'=>$username));
		$queryUser=$this->db->get('users');
		$output='';
		$output.='<form method="POST" id="comment_staff_tosupervision">
			<input type="hidden" name="supervision_comment_year" id="supervision_comment_year" value="'.$max_year.'">
			<input type="hidden" name="supervision_comment_staff" id="supervision_comment_staff" value="'.$username.'">
			<input type="hidden" name="supervision_comment_date" id="supervision_comment_date" value="'.$dateattendance.'">
			<input type="hidden" name="supervision_comment_type" id="supervision_comment_type" value="'.$attendanceType.'">
            <div class="row"> ';
                 if($queryUser->num_rows()>0){
                	foreach($queryUser->result() as $row){
                    	$output.='<div class="form-group col-lg-12 col-12">
		                	<label>Add Comment for '.$row->fname.' '.$row->mname.' '.$row->lname.' on '.$dateattendance.' and period '.$attendanceType.'
		                	</label>
		               	</div>
		               	<div class="form-group col-lg-12 col-12">';
		               	$queryCheck=$this->db->query("select * from attendance_evaluation where stuid='$username' and academicyear='$max_year' and absentdate='$dateattendance' and attendance_period='$attendanceType' ");
		               	if($queryCheck->num_rows()>0){
		               		foreach($queryCheck->result() as $rowComment){
		               			$output.='<textarea class="form-co4ntrol" rows="4" cols="50" wrap="physical" name="teacher_supervision_comment_gs" id="teacher_supervision_comment_gs" placeholder="Add Comment" style="width:100%; height:100px;" required>'.$rowComment->staff_comment.'</textarea>';
		               		}
		               	}else{
		               		$output.='<textarea class="form-co4ntrol" rows="4" cols="50" wrap="physical" name="teacher_supervision_comment_gs" id="teacher_supervision_comment_gs" placeholder="Add Comment" style="width:100%; height:100px;" required></textarea>';
		               	}
                		$output.='</div> ';
                	}
                }
                $output.='<div class="form-group col-lg-12 col-12">
                	<button class="btn btn-info pull-right" id="savesupervision_attendance_comment">Save Comment</button>
                </div>
            </div>
        </form>';
		return $output;
	}
	function fetch_evaluation_staff_nonAdminAllBranch($max_year,$dateAttendance,$attendace_type){
		$this->db->where('usertype!=','Student');
		$this->db->where('isapproved','1');
		$this->db->where('supervision_attendance','1');
		$this->db->where('status','Active');
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $output .='<div class="table-responsive">
          	<table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Staff Name</th>
                    <th colspan="4" class="text-center">Date <u>'.$dateAttendance.'</u></th>
                </tr>
                <tr><th>Present</th>
                    <th>Unexcused Absence</th>
                    <th>Tardy</th>
                    <th>Excused Absence</th>
                    <th>Substitution</th></tr>
            </thead>
        <tbody>';
        $no=1;
        $arrayItem=array('Unexcused Absence','Tardy','Excused Absence','Substitution');
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from attendance_evaluation where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' and attendance_period='$attendace_type' ");
        	$output.='<tr>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td> ';
        	if($queryCheck->num_rows()<1){
        		$output.='<td><div class="pretty p-round p-bigger">
                  	<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label> 
                  	</div>
                </div>
		        </td>
		        <td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="Unexcused Absence">
	                  	<div class="state p-danger">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Unexcused Absence ></a>
	                  	</div>
	                </div>
	            </td> 
		        <td><div class="row">
		        		<div class="col-8 col-md-10">
		                 	<input class="form-control attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required">
		                </div>
			        	<div class="col-4 col-md-2">
				        	<div class="pretty p-round p-bigger">
			                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="Tardy">
			                  	<div class="state p-warning">
			                    	<i class="icon material-icons"></i>
			                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Tardy ></a>
			                  	</div>
			                </div>
		                </div>
	                </div>
	            </td>
		        <td> <div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="Excused Absence">
	                  	<div class="state p-info">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Excused Absence ></a>
	                  	</div>
	                </div>
	            </td>
	            <td> 
	            	<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_AdminSubstitution attendanceTypeStaff_AdminSubstitution'.$row->username.'" >
	                <option></option>';
	                foreach($query->result() as $rowUsers){
		                $output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
		            }
	                $output.='</select>
	            </td>';
        	}else{
        		$output.='<td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="Present">
	                  	<div class="state p-success">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Present ></a>
	                  	</div>
	                </div>
		        </td>';
		        $absentRow=$queryCheck->row();
        		$absentType=$absentRow->absentype;
        		$lateAttendance=$absentRow->latemin;
        		$substituteBy=$absentRow->substitute_by;
        		foreach($arrayItem as $abType){
        			if($abType===$absentType){
        				$output.='<td>';
		                  		if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-control attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required" value="'.$lateAttendance.'">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else if($abType=='Substitution'){
	                  				$output.='<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_AdminSubstitution attendanceTypeStaff_AdminSubstitution'.$row->username.'" >
					                <option></option>';
					                foreach($query->result() as $rowUsers){
					                	if($substituteBy==$rowUsers->username){
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'" selected="selected">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}else{
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'"  title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}
						                
						            }
					                $output.='</select>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceStaffNonAdmin'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}else{
        				$output.='<td>';
			                  	if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-control attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else if($abType=='Substitution'){
	                  				$output.='<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_AdminSubstitution attendanceTypeStaff_AdminSubstitution'.$row->username.'"
					                <option></option>';
					                foreach($query->result() as $rowUsers){
					                	if($substituteBy==$rowUsers->username){
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'" selected="selected">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}else{
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'"  title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}
						                
						            }
					                $output.='</select>';
		                  		}else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceStaffNonAdmin'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}
        		}
        	}
	        $output .='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetch_evaluation_staff_nonAdmin($attBranches,$max_year,$dateAttendance,$attendace_type){
		$this->db->where('usertype!=','Student');
		$this->db->where('branch',$attBranches);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where('supervision_attendance','1');
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $output .='<div class="table-responsive">
          	<table class="table table-bordered">
            <thead>
                <tr>
                    <th rowspan="2">Staff Name</th>
                    <th colspan="5" class="text-center">Date <u>'.$dateAttendance.'</u></th>
                </tr>
                <tr><th>Present</th>
                    <th>Unexcused Absence</th>
                    <th>Tardy</th>
                    <th>Excused Absence</th>
                    <th>Substitution</th></tr>
            </thead>
        <tbody>';
        $no=1;
        $arrayItem=array('Unexcused Absence','Tardy','Excused Absence','Substitution');
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from attendance_evaluation where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' and attendance_period='$attendace_type' ");
        	$output.='<tr>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td> ';
        	if($queryCheck->num_rows()<1){
        		$output.='<td><div class="pretty p-round p-bigger">
                  	<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label> 
                  	</div>
                </div>
		        </td>
		        <td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="Unexcused Absence">
	                  	<div class="state p-danger">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Unexcused Absence ></a>
	                  	</div>
	                </div>
	            </td> 
		        <td><div class="row">
		        		<div class="col-8 col-md-10">
		                 	<input class="form-contrlol attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required">
		                </div>
			        	<div class="col-4 col-md-2">
				        	<div class="pretty p-round p-bigger">
			                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="Tardy">
			                  	<div class="state p-warning">
			                    	<i class="icon material-icons"></i>
			                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Tardy ></a>
			                  	</div>
			                </div>
		                </div>
	                </div>
	            </td>
		        <td> <div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="Excused Absence">
	                  	<div class="state p-info">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Excused Absence ></a>
	                  	</div>
	                </div>
	            </td>
	            <td> 
	            	<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_AdminSubstitution attendanceTypeStaff_AdminSubstitution'.$row->username.'" >
	                <option></option>';
	                foreach($query->result() as $rowUsers){
		                $output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
		            }
	                $output.='</select>
	            </td>';
        	}else{
        		$output.='<td><div class="pretty p-round p-bigger">
	                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin" id="'.$row->id.'" title="Present">
	                  	<div class="state p-success">
	                    	<i class="icon material-icons"></i>
	                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Present ></a>
	                  	</div>
	                </div>
		        </td>';
		        $absentRow=$queryCheck->row();
        		$absentType=$absentRow->absentype;
        		$lateAttendance=$absentRow->latemin;
        		$substituteBy=$absentRow->substitute_by;
        		foreach($arrayItem as $abType){
        			if($abType===$absentType){
        				$output.='<td>';
		                  		if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-contrlol attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required" value="'.$lateAttendance.'">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		} else if($abType=='Substitution'){
	                  				$output.='<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_AdminSubstitution attendanceTypeStaff_AdminSubstitution'.$row->username.'" >
					                <option></option>';
					                foreach($query->result() as $rowUsers){
					                	if($substituteBy==$rowUsers->username){
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'" selected="selected">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}else{
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'"  title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}
						                
						            }
					                $output.='</select>';
					            }else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" checked="checked" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceStaffNonAdmin'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}else{
        				$output.='<td>';
			                  	if($abType=='Unexcused Absence'){
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-danger">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}else if($abType=='Tardy'){
		                  			$output.='<div class="row">
						        		<div class="col-8 col-md-10">
						                 	<input class="form-contrlol attendanceMinuteStaff" id="attendanceMinuteStaff_'.$row->username.'" name="attendanceMinuteStaff" type="number" placeholder="Tardy(Min)" required="required">
						                </div>
							        	<div class="col-4 col-md-2">
								        	<div class="pretty p-round p-bigger">
							                  	<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
							                  	<div class="state p-warning">
							                    	<i class="icon material-icons"></i>
							                    	<label></label> <a class="savedAttendanceStaffNonAdmin'.$row->id.'"Tardy ></a>
							                  	</div>
							                </div>
						                </div>
					                </div>';
		                  		}else if($abType=='Substitution'){
	                  				$output.='<select name="attendanceTypeRadioStaff'.$row->username.'"  class="attendanceTypeStaff_AdminSubstitution attendanceTypeStaff_AdminSubstitution'.$row->username.'" >
					                <option></option>';
					                foreach($query->result() as $rowUsers){
					                	if($substituteBy==$rowUsers->username){
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'" title="Substitution" value="'.$row->username.'" selected="selected">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}else{
					                		$output.='<option id="'.$row->id.'" name="'.$rowUsers->username.'"  title="Substitution" value="'.$row->username.'">'.$rowUsers->fname.' '.$rowUsers->mname.' '.$rowUsers->lname.'</option>';
					                	}
						                
						            }
					                $output.='</select>';
					            }else{
		                  			$output.='<div class="pretty p-round p-bigger">
		                  				<input type="radio" name="attendanceTypeRadioStaffNonAdmin'.$row->username.'" value="'.$row->username.'" class="attendanceTypeStaffNonAdmin attendanceTypeStaffAdminCommon'.$row->username.'" id="'.$row->id.'" title="'.$abType.'">
		                  				<div class="state p-info">
			                    			<i class="icon material-icons"></i>
			                    			<label></label>
			                  			</div>
			                  		</div>';
		                  		}
		                	$output.='<a class="savedAttendanceStaffNonAdmin'.$row->id.''.$abType.'" ></a>
				        </td>';
        			}
        		}
        	}
	        $output .='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetch_gradesec_student_summer($gradesec,$attBranches,$max_year){
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$attBranches);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname ,mname,lname','ASC');
		$query = $this->db->get('summerstudent');
		$output ='';
        $output .='<div class="row">
            <div class="col-lg-3 col-6">
                <label for="Mobile">Date</label>
                <input class="form-control datepicker" name="attendanceDateSummer" id="attendanceDateSummer" required="required" type="date" 
                    placeholder="Absent Date">
            </div>
           	<div class="col-lg-3 col-6">
              <label for="Mobile">Attendance type
              </label>
                <select class="form-control selectric" disabled="disabled" 
                required="required" name="attendanceTypeSummer" id="attendanceTypeSummer">
                 <option></option>
                <option id="Absent">Absent</option>
                <option id="Late">Late</option>
                <option id="Permission">Permission</option>
                </select>
            </div>
         	<div class="col-lg-3 col-6">
              <label for="Mobile">Late(Minute)
              </label>
                <input class="form-control" disabled="disabled" id="attendanceMinuteSummer" name="attendanceMinuteSummer" type="number" placeholder="Late in Min">
            </div>
            <div class="col-lg-3 col-6">
              <label for="Mobile">Click submit
              </label>
                <button class="btn btn-success btn-block" id="saveAttendanceSummer" name="saveAttendanceSummer" type="submit"> Submit </button>
            </div>
        </div>
        <div class="dropdown-divider"></div>
        <div class="table-responsive">
            <table class="table table-striped table-hover" style="width:100%;">
            <thead>
                <tr>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                    <th>Gender</th>
                </tr>
            </thead>
        <tbody>';
        $no=1;
        foreach ($query->result() as $row) {
	        $output .='<tr>
	        <td><div class="pretty p-bigger">
                  	<input disabled="disabled" type="checkbox" name="attendanceStuidSummer" value="'.$row->username.'" class="attendanceStuidSummer" id="attendanceStuidSummer">
                  	<div class="state p-success">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->fname.' '.$row->mname.' '.$row->lname.'
                  	</div>
                </div> </td>
	        <td>'.$row->username.'</td>
	        <td>'.$row->gradesec.'</td>
	        <td>'.$row->gender.'</td> </tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetch_asp_program($grade,$max_year){
		$this->db->where('program_grade',$grade);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('program_name','ASC');
		$this->db->group_by('program_name');
		$query=$this->db->get('attendance_program');
		$output ='';
		$output.='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->program_name.'">'.$row->program_name.'</option>';
		}
	    return $output;
	}
	function fetchStudents4_asp_Attendance($gradesec,$attBranches,$max_year,$dateAttendance,$aspProgram){
		$output ='';

		$query=$this->db->query("select us.fname,us.mname,us.username,us.grade, us.asp,us.lname from users_remote as us cross join users_remote_program as le ON us.username=le.user_id where le.academicyear='$max_year' and us.grade='$gradesec' and us.branch='$attBranches' and isapproved='1' and us.academicyear='$max_year' and us.status='Active' and le.student_program='$aspProgram' group by us.id order by us.fname,us.mname,us.lname ASC ");
        $output .='
        <div class="table-responsive">
            <table class="tabler table-bordered table-hover" style="width:100%;">
            <thead>
                <tr>
                	<th>No.</th>
                    <th>Student Name</th>
                    <th>Grade</th>';
                    $queryType=$this->db->query("select attendance_name from attendance_type where  academicyear='$max_year' and attendance_grade='$gradesec' order by id ASC ");
                    if($queryType->num_rows()>0){
                    	foreach($queryType->result() as $rowType){
                    		$output.='<th class="text-center">'.$rowType->attendance_name.'</th>';
                    	}
                    }
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$queryCheck=$this->db->query("select * from aspattendance where stuid='$stuid' and academicyear='$max_year' and absentdate='$dateAttendance' and attendance_program='$aspProgram' ");
	        $output .='<tr>
	        <td>'.$no.'.</td>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
	        <td>'.$row->grade.'</td> ';
	        if($queryType->num_rows()>0){
	        	foreach($queryType->result() as $rowType){
	        		$output.='<td class="text-center">';
	        		if($queryCheck->num_rows()>0){
	        			foreach($queryCheck->result() as $rowCheck){
	        				if($rowCheck->absentype==$rowType->attendance_name){
				        			$output.='<div class="pretty p-icon p-smooth">
					              	<input type="radio" name="aspattendanceStuid'.$row->username.'" value="'.$row->username.'" class="aspattendanceStuid" id="'.$rowType->attendance_name.'" checked="checked">
					              	<div class="state p-warning">
					                	<i class="icon fa fa-check"></i>
					                	<label></label>
					              	</div>
				            	</div>';
	        				}else{        					
				        		$output.='<div class="pretty p-icon p-smooth">
					              	<input type="radio" name="aspattendanceStuid'.$row->username.'" value="'.$row->username.'" class="aspattendanceStuid" id="'.$rowType->attendance_name.'">
					              	<div class="state p-warning">
					                	<i class="icon fa fa-check"></i>
					                	<label></label>
					              	</div>
				            	</div>';
	        				}
	        			}
	        		}else{
		        		$output.='<div class="pretty p-icon p-smooth">
			              	<input type="radio" name="aspattendanceStuid'.$row->username.'" value="'.$row->username.'" class="aspattendanceStuid" id="'.$rowType->attendance_name.'">
			              	<div class="state p-warning">
			                	<i class="icon fa fa-check"></i>
			                	<label></label>
			              	</div>
		            	</div>';
	        		}
	        		$output.='</td>';
	        	}
	        }
	        $output.='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function addremove_studentASP_Attendance($gradesec,$attBranches,$max_year){
		$output ='';
		$this->db->where('grade',$gradesec);
		$this->db->where('branch',$attBranches);
		$this->db->where('isapproved','1');
		$this->db->where('status','Active');
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname,mname,lname','ASC');
		$query = $this->db->get('users_remote');
        $output .='
        <div class="table-responsive">
            <table class="tabler table-bordered table-hover" style="width:100%;">
            <thead>
                <tr>
                	<th>No.</th>
                    <th>Student Name</th>
                    <th>Grade</th>';
                    $queryType=$this->db->query("select program_name from attendance_program where  academicyear='$max_year' and program_grade='$gradesec' order by id ASC ");
                    if($queryType->num_rows()>0){
                    	foreach($queryType->result() as $rowType){
                    		$output.='<th class="text-center">'.$rowType->program_name.'</th>';
                    	}
                    }
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        foreach ($query->result() as $row) {
        	$stuid=$row->username;
        	$asp=$row->asp;
	        $output .='<tr>
	        <td>'.$no.'.</td>
	        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
	        <td>'.$row->grade.'</td> ';
	        if($queryType->num_rows()>0){
	        	foreach($queryType->result() as $rowType){
	        		$attendanceProgram=$rowType->program_name;
	        		$queryCheck=$this->db->query("select * from users_remote_program where academicyear='$max_year' and user_id='$stuid' and student_program='$attendanceProgram' ");
	        		if($queryCheck->num_rows()>0){
	        			$rowProgram=$queryCheck->row();
	        			$programName=$rowProgram->student_program;
	        		}else{
	        			$programName='';
	        		}
	        		$output.='<td class="text-center">';
    				if($programName==$attendanceProgram){
		        			$output.='<div class="pretty p-icon p-smooth">
			              	<input type="checkbox" name="addremoveaspattendanceStuid'.$row->username.'" value="'.$row->username.'" class="addremoveaspattendanceStuid" id="'.$rowType->program_name.'" checked="checked">
			              	<div class="state p-success">
			                	<i class="icon fa fa-check"></i>
			                	<label></label>
			              	</div>
		            	</div>';
    				}else{
		        		$output.='<div class="pretty p-icon p-smooth">
			              	<input type="checkbox" name="addremoveaspattendanceStuid'.$row->username.'" value="'.$row->username.'" class="addremoveaspattendanceStuid" id="'.$rowType->program_name.'">
			              	<div class="state p-success">
			                	<i class="icon fa fa-check"></i>
			                	<label></label>
			              	</div>
		            	</div>';
    				}
	        		$output.='</td>';
	        	}
	        }
	        $output.='</tr>';
	        $no++;
        }
        $output.='</tbody> </table> </div>';
	    
        return $output;
	}
	function fetchStudents4_asp_Attendance_Report($gradesecs,$attBranches,$max_year){
		$output ='';
		$query_school=$this->db->get('school');
		$schoolRow=$query_school->row();
		$website=$schoolRow->website;
		$logo=$schoolRow->logo;
		$name=$schoolRow->name;
		$output='<p><h2 class="text-center"><b><u>'.$name.' Grade Statistics for '.$max_year.' Academic Year <small>('.$attBranches.')</small></u></b></h2></p>';
		foreach($gradesecs as $gradesec){
			$this->db->where('grade',$gradesec);
			$this->db->where('branch',$attBranches);
			$this->db->where('isapproved','1');
			$this->db->where('status','Active');
			$this->db->where('asp','Yes');
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->order_by('fname ,mname,lname','ASC');
			$query = $this->db->get('users');
	        $output .='
	        <div class="table-responsive">
	            <table class="table table-striped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                <th>No.</th>
	                    <th>Student Name</th>
	                    <th>Student ID</th>
	                    <th>Grade</th>
	                    <th>Gender</th>
	                    <th>ASP Status</th>
	                </tr>
	            </thead>
	        <tbody>';
	        $no=1;
	        foreach ($query->result() as $row) {
		        $output .='<tr><td>'.$no.'.</td>
		        <td>'.$row->fname.' '.$row->mname.' '.$row->lname.' </td>
		        <td>'.$row->username.'</td>
		        <td>'.$row->gradesec.'</td>
		        <td>'.$row->gender.'</td><td><span class="badge badge-light">Active</span></td> </tr>';
		        $no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }
        return $output;
	}
	function fetchCustomStudentsAttendance($check,$attBranches,$customToDate,$customFromDate,$max_year){
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$date1 = strtotime($customFromDate);
		$date2 = strtotime($customToDate);
		$diff = $date2 - $date1;
		$days = floor($diff / (60 * 60 * 24)) + 1;
        $output .='<p class="text-center"><u><b>'.$school_name.' Students Attendance in '.$max_year.' Academic Year</b></u></p>
        <div class ="row">
        	<div class ="col-lg-12 col-12"><p class="text-center"><u><b> Date '.$customFromDate.' To '.$customToDate.'</b></u></p></div>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover" style="width:100%;">
            <thead>
            <tr>
                    <th rowspan="2" class="rotateJossRoster"><div>Student Name</div></th>
                    <th rowspan="2" class="rotateJossRoster"><div>Grade</div></th>
                    <th colspan="'.$days.'" class="text-center">Date Between <u>'.$customFromDate.' & '.$customToDate.'</u></th>
                </tr>
                <tr>';
                $begin = new DateTime($customFromDate);
				$end = new DateTime( $customToDate);
				$end = $end->modify( '+1 day' ); 

				$interval = new DateInterval('P1D');
				$daterange = new DatePeriod($begin, $interval ,$end);

				foreach($daterange as $date){
					$output.='<th class="rotateJossRoster"> <div>'.$date->format("Y-m-d").'</div></th>';
				}
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        foreach($check as $gradesec){
	        $queryStudent=$this->db->query("select fname,mname,lname, gradesec, username, gender from users as us where us.grade='$gradesec' and us.branch='$attBranches' and us.isapproved='1' and us.status='Active' and us.academicyear='$max_year' group by id order by us.fname,us.mname,us.lname ASC ");
	        if($queryStudent->num_rows()>0){
	        	foreach($queryStudent->result() as $row){
	        		$stuid=$row->username;
			        $output .='<tr <tr class="deleteAttendane">';
			        $output.='<td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
			        <td>'.$row->gradesec.'</td>';
			        foreach($daterange as $date){
			        	$dateFormate=$date->format("Y-m-d");
			        	$queryAbsent=$this->db->query("select absentdate, aid,stuid,absentype from attendance as abs where abs.absentdate='$dateFormate' and stuid='$stuid' "); 
			        	if($queryAbsent->num_rows()>0){
			        		$rowType=$queryAbsent->row();
			        		$absenType=$rowType->absentype;
			        		if($absenType=='Absent'){
			        			$output.='<td class="text-danger rotateJossRoster"> <div>'.$absenType.'</div></td>';
			        		}else if($absenType=='Late'){
			        			$output.='<td class="text-warning rotateJossRoster"><div>'.$absenType.'</div> </td>';
			        		}else{
			        			$output.='<td class="text-info rotateJossRoster"><div>'.$absenType.'</div> </td>';
			        		}
			        		
			        	}else{
			        		$output.='<td class="text-success rotateJossRoster"> <div>Present</div> </td>';
			        	}
			        }

			        $output.=' </tr>';
			        $no++;
		        }
	        }
	        
	    }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetchCustomStaffsAttendance($attBranches,$customToDate,$customFromDate,$max_year){
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$date1 = strtotime($customFromDate);
		$date2 = strtotime($customToDate);
		$diff = $date2 - $date1;
		$days = floor($diff / (60 * 60 * 24)) + 1;
        $output .='<h4 class="text-center"><u><b>'.$school_name.' Staffs Attendance in '.$max_year.' Academic Year</b></u></h4>
        <div class ="row">
        	<div class ="col-lg-12 col-12"><p class="text-center"><u><b> Date '.$customFromDate.' To '.$customToDate.'</b></u></p></div>
        </div>
        <div class="table-responsive">
            <table class="tabler table-bordered table-hover" style="width:100%;">
            <thead>
            <tr>
                    <th rowspan="2">Staff Name</th>
                    <th rowspan="2">Branch</th>
                    <th colspan="'.$days.'" class="text-center">Date Between <u>'.$customFromDate.'- '.$customToDate.'</u></th>
                </tr>
                <tr>';
                $begin = new DateTime($customFromDate);
				$end = new DateTime( $customToDate);
				$end = $end->modify( '+1 day' ); 

				$interval = new DateInterval('P1D');
				$daterange = new DatePeriod($begin, $interval ,$end);

				foreach($daterange as $date){
					$output.='<th class="rotateJossRoster"><div>'.$date->format("Y-m-d").'</div></th>';
				}
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        $queryStudent=$this->db->query("select id,fname,mname,lname, gradesec, username, gender,branch from users as us where us.usertype!='Student' and us.branch='$attBranches' and us.isapproved='1' and us.status='Active' group by id order by us.fname,us.mname,us.lname ASC ");
        if($queryStudent->num_rows()>0){
        	foreach($queryStudent->result() as $row){
        		$stuid=$row->id;
		        $output .='<tr>';
		        $output.='<td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
		        <td>'.$row->branch.'</td>';
		        foreach($daterange as $date){
		        	$dateFormate=$date->format("d/m/Y");
		        	$queryAbsent=$this->db->query("select absentdate, aid,stuid,absentype from attendance as abs where abs.absentdate='$dateFormate' and stuid='$stuid' "); 
		        	if($queryAbsent->num_rows()>0){
		        		$rowType=$queryAbsent->row();
		        		$absenType=$rowType->absentype;
		        		if($absenType=='Absent'){
		        			$output.='<td> <span class="text-danger">'.$absenType.'</span> </td>';
		        		}else if($absenType=='Late'){
		        			$output.='<td> <span class="text-warning">'.$absenType.'</span> </td>';
		        		}else{
		        			$output.='<td> <span class="text-info">'.$absenType.'</span> </td>';
		        		}
		        	}else{
		        		$output.='<td> <span class="text-success btn-block">Present</span> </td>';
		        	}
		        }
		        $output.=' </tr>';
		        $no++;
	        }
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetchCustomStaffsAttendanceCount($attBranches,$customToDate,$customFromDate,$max_year){
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
        $output .='<h4 class="text-center"><u><b>'.$school_name.' Staffs Attendance in '.$max_year.' Academic Year</b></u></h4>
        <div class ="row">
        	<div class ="col-lg-12 col-12"><p class="text-center"><u><b> Date '.$customFromDate.' To '.$customToDate.'</b></u></p></div>
        </div>
        <div class="table-responsive">
            <table class="tabler table-bordered table-hover" style="width:100%;">
            <thead>
            <tr>
                    <th rowspan="2">Staff Name</th>
                    <th rowspan="2">Branch</th>
                    <th colspan="3" class="text-center">Date Between <u>'.$customFromDate.' & '.$customToDate.'</u></th>
                </tr>
                <tr>';
               	$changeDate1 = DateTime::createFromFormat('Y-m-d',$customFromDate);
	            $changeDate2 = DateTime::createFromFormat('Y-m-d',$customToDate);
	            $startDate1= $changeDate1->format('d/m/Y');
	            $endDate1= $changeDate2->format('d/m/Y');
				$arrayType=array('Absent','Permission','Late');
				foreach($arrayType as $arrayTypes){
					$output.='<th class="text-center">'.$arrayTypes.'</th>';
				}
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        $queryStudent=$this->db->query("select id,fname,mname,lname, gradesec, username, gender,branch from users as us where us.usertype!='Student' and us.branch='$attBranches' and us.isapproved='1' and us.status='Active' group by id order by us.fname,us.mname,us.lname ASC ");
        if($queryStudent->num_rows()>0){
        	foreach($queryStudent->result() as $row){
        		$stuid=$row->id;
		        $output .='<tr>';
		        $output.='<td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
		        <td>'.$row->branch.'</td>';
		        foreach($arrayType as $arrayTypes){
		        	$count=0;
		        	$queryAbsent=$this->db->query("select absentdate from attendance as abs where stuid='$stuid' and absentype='$arrayTypes' group by absentdate "); 
		        	if($queryAbsent->num_rows()>0){
		        		foreach($queryAbsent->result() as $row){
			        		$absentdates=$row->absentdate;
			        		$date_absent = DateTime::createFromFormat('d/m/Y',$absentdates);
	            			$absent_date= $date_absent->format('Y-m-d');
			        		if($absent_date >= $customFromDate && $absent_date <= $customToDate ){
			        			$count=$count + 1;
			        		}else{
			        			$count=$count;
			        		}
			        	}
			        	$output.='<td class="text-center"> '.$count.'</td>';
		        	}else{
		        		$output.='<td class="text-center"> -</td>';
		        	}
		        }
		        $output.=' </tr>';
		        $no++;
	        }
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetchSectionStudentsAttendance($check,$attBranches,$max_year,$customToDate,$customFromDate){
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$date1 = strtotime($customFromDate);
		$date2 = strtotime($customToDate);
		$diff = $date2 - $date1;
		$days = floor($diff / (60 * 60 * 24)) + 1;
        $output .='<p class="text-center"><u><b>'.$school_name.' Students Attendance in '.$max_year.' Academic Year</b></u></p>
        <div class ="row">
        	<div class ="col-lg-12 col-12"><p class="text-center"><u><b> Date '.$customFromDate.' To '.$customToDate.'</b></u></p></div>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover" style="width:100%;">
            <thead>
            <tr>
                    <th rowspan="2" class="rotateJossRoster"><div>Student Name</div></th>
                    <th rowspan="2" class="rotateJossRoster"><div>Grade</div></th>
                    <th colspan="'.$days.'" class="text-center">Date Between <u>'.$customFromDate.' & '.$customToDate.'</u></th>
                </tr>
                <tr>';
                $begin = new DateTime($customFromDate);
				$end = new DateTime( $customToDate);
				$end = $end->modify( '+1 day' ); 

				$interval = new DateInterval('P1D');
				$daterange = new DatePeriod($begin, $interval ,$end);

				foreach($daterange as $date){
					$output.='<th class="rotateJossRoster"> <div>'.$date->format("Y-m-d").'</div></th>';
				}
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        $queryStudent=$this->db->query("select fname,mname,lname, gradesec, username, gender from users as us where us.gradesec='$check' and us.branch='$attBranches' and us.isapproved='1' and us.status='Active' and us.academicyear='$max_year' group by id order by us.fname,us.mname,us.lname ASC ");
        if($queryStudent->num_rows()>0){
        	foreach($queryStudent->result() as $row){
        		$stuid=$row->username;
		        $output .='<tr <tr class="deleteAttendane">';
		        $output.='<td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
		        <td>'.$row->gradesec.'</td>';
		        foreach($daterange as $date){
		        	$dateFormate=$date->format("Y-m-d");
		        	$queryAbsent=$this->db->query("select absentdate, aid,stuid,absentype from attendance as abs where abs.absentdate='$dateFormate' and stuid='$stuid' "); 
		        	if($queryAbsent->num_rows()>0){
		        		$rowType=$queryAbsent->row();
		        		$absenType=$rowType->absentype;
		        		if($absenType=='Absent'){
		        			$output.='<td class="text-danger rotateJossRoster"> <div>'.$absenType.'</div></td>';
		        		}else if($absenType=='Late'){
		        			$output.='<td class="text-warning rotateJossRoster"><div>'.$absenType.'</div> </td>';
		        		}else{
		        			$output.='<td class="text-info rotateJossRoster"><div>'.$absenType.'</div> </td>';
		        		}
		        		
		        	}else{
		        		$output.='<td class="text-success rotateJossRoster"> <div>Present</div> </td>';
		        	}
		        }

		        $output.=' </tr>';
		        $no++;
	        }
        }
	        
	    
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetchCustomStudentsAttendance_kelem($check,$attBranches,$customToDate,$customFromDate,$max_year){
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$date1 = strtotime($customFromDate);
		$date2 = strtotime($customToDate);
		$diff = $date2 - $date1;
		$days = floor($diff / (60 * 60 * 24)) + 1;
        $output .='<p class="text-center"><u><b>'.$school_name.' Students Attendance in '.$max_year.' Academic Year</b></u></p>
        <div class ="row">
        	<div class ="col-lg-12 col-12"><p class="text-center"><u><b> Date '.$customFromDate.' To '.$customToDate.'</b></u></p></div>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover" style="width:100%;">
            <thead>
            <tr>
                    <th rowspan="2">Student Name</th>
                    <th rowspan="2">Grade</th>
                    <th colspan="'.$days.'" class="text-center">Date Between <u>'.$customFromDate.'- '.$customToDate.'</u></th>
                </tr>
                <tr>';
                $begin = new DateTime($customFromDate);
				$end = new DateTime( $customToDate);
				$end = $end->modify( '+1 day' ); 

				$interval = new DateInterval('P1D');
				$daterange = new DatePeriod($begin, $interval ,$end);

				foreach($daterange as $date){
					$output.='<th>'.$date->format("Y-m-d").'</th>';
				}
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        foreach($check as $gradesec){
	        $queryStudent=$this->db->query("select fname,mname,lname, gradesec, username, gender from users as us where us.grade='$gradesec' and us.branch='$attBranches' and us.isapproved='1' and us.status='Active' and us.academicyear='$max_year' group by id order by us.fname,us.mname,us.lname ASC ");
	        if($queryStudent->num_rows()>0){
	        	foreach($queryStudent->result() as $row){
	        		$stuid=$row->username;
			        $output .='<tr <tr class="deleteAttendane">';
			        $output.='<td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
			        <td>'.$row->gradesec.'</td>';
			        foreach($daterange as $date){
			        	$dateFormate=$date->format("Y-m-d");
			        	$queryAbsent=$this->db->query("select absentdate, aid,stuid,absentype from attendance as abs where abs.absentdate='$dateFormate' and stuid='$stuid' "); 
			        	if($queryAbsent->num_rows()>0){
			        		$rowType=$queryAbsent->row();
			        		$absenType=$rowType->absentype;
			        		if($absenType=='Unexcused Absence'){
			        			$output.='<td> <button class="card card-body bg-danger btn-block">'.$absenType.'</button> </td>';
			        		}else if($absenType=='Tardy'){
			        			$output.='<td> <button class="card card-body bg-warning btn-block">'.$absenType.'</button> </td>';
			        		}else{
			        			$output.='<td> <button class="card card-body bg-info btn-block">'.$absenType.'</button> </td>';
			        		}
			        		
			        	}else{
			        		$output.='<td> <button class="card card-body bg-success btn-block">Present</button> </td>';
			        	}
			        }
			        $output.=' </tr>';
			        $no++;
		        }
	        }
	        
	    }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetchCustomStaffEvaluationAttendance($attBranches,$customToDate,$customFromDate,$max_year,$customattendace_type){
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$date1 = strtotime($customFromDate);
		$date2 = strtotime($customToDate);
		$diff = $date2 - $date1;
		$days = floor($diff / (60 * 60 * 24)) + 1;
        $output .="<p class='text-center'><u><b>".$school_name."  Staffs' Supervision Attendance of the ".$max_year." Academic Year</b></u></p>";
        $output .='<div class ="row">
        	<div class ="col-lg-12 col-12"><p class="text-center"><u><b> Date '.$customFromDate.' To '.$customToDate.'</b></u></p></div>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover" style="width:100%;">
            <thead>
            <tr>
                    <th rowspan="2">Staff Name</th>
                    <th colspan="'.$days.'" class="text-center">Date Between <u>'.$customFromDate.'- '.$customToDate.'</u></th>
                </tr>
                <tr>';
                $begin = new DateTime($customFromDate);
				$end = new DateTime( $customToDate);
				$end = $end->modify( '+1 day' ); 

				$interval = new DateInterval('P1D');
				$daterange = new DatePeriod($begin, $interval ,$end);

				foreach($daterange as $date){
					$output.='<th class="rotateJossRoster"><div>'.$date->format("Y-m-d").'</div></th>';
				}
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        $queryStudent=$this->db->query("select fname,mname,lname, gradesec, username, gender from users as us where us.usertype!='Student' and us.branch='$attBranches' and us.isapproved='1' and us.status='Active' group by id order by us.fname,us.mname,us.lname ASC ");
        if($queryStudent->num_rows()>0){
        	foreach($queryStudent->result() as $row){
        		$stuid=$row->username;
		        $output .='<tr <tr class="deleteAttendane">';
		        $output.='<td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>';
		        foreach($daterange as $date){
		        	$dateFormate=$date->format("Y-m-d");
		        	$queryAbsent=$this->db->query("select absentdate, aid,stuid,absentype from attendance_evaluation as abs where abs.absentdate='$dateFormate' and stuid='$stuid' and attendance_period='$customattendace_type' "); 
		        	if($queryAbsent->num_rows()>0){
		        		$rowType=$queryAbsent->row();
		        		$absenType=$rowType->absentype;
		        		if($absenType=='Unexcused Absence'){
		        			$output.='<td> <button class="card card-body bg-danger btn-block">'.$absenType.'</button> </td>';
		        		}else if($absenType=='Tardy'){
		        			$output.='<td> <button class="card card-body bg-warning btn-block">'.$absenType.'</button> </td>';
		        		}else{
		        			$output.='<td> <button class="card card-body bg-info btn-block">'.$absenType.'</button> </td>';
		        		}
		        		
		        	}else{
		        		$output.='<td> <button class="card card-body bg-success btn-block">Present</button> </td>';
		        	}
		        }

		        $output.=' </tr>';
		        $no++;
	        }
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetchCustomStaffEvaluationAttendanceNonBranch($customToDate,$customFromDate,$max_year,$customattendace_type){
		
		$output ='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$date1 = strtotime($customFromDate);
		$date2 = strtotime($customToDate);
		$diff = $date2 - $date1;
		$days = floor($diff / (60 * 60 * 24)) + 1;
         $output .="<p class='text-center'><u><b>".$school_name."  Staffs' Supervision Attendance of the ".$max_year." Academic Year</b></u></p>";
        $output .='
        <div class ="row">
        	<div class ="col-lg-12 col-12"><p class="text-center"><u><b> Date '.$customFromDate.' To '.$customToDate.'</b></u></p></div>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered table-hover" style="width:100%;">
            <thead>
            <tr>
                    <th rowspan="2">Staff Name</th>
                    <th colspan="'.$days.'" class="text-center">Date Between <u>'.$customFromDate.'- '.$customToDate.'</u></th>
                </tr>
                <tr>';
                $begin = new DateTime($customFromDate);
				$end = new DateTime( $customToDate);
				$end = $end->modify( '+1 day' ); 

				$interval = new DateInterval('P1D');
				$daterange = new DatePeriod($begin, $interval ,$end);

				foreach($daterange as $date){
					$output.='<th>'.$date->format("Y-m-d").'</th>';
				}
                $output.='</tr>
            </thead>
        <tbody>';
        $no=1;
        $queryStudent=$this->db->query("select fname,mname,lname, gradesec, username, gender from users as us where us.usertype!='Student' and us.isapproved='1' and us.status='Active' group by id order by us.fname,us.mname,us.lname ASC ");
        if($queryStudent->num_rows()>0){
        	foreach($queryStudent->result() as $row){
        		$stuid=$row->username;
		        $output .='<tr <tr class="deleteAttendane">';
		        $output.='<td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>';
		        foreach($daterange as $date){
		        	$dateFormate=$date->format("Y-m-d");
		        	$queryAbsent=$this->db->query("select absentdate, aid,stuid,absentype from attendance_evaluation as abs where abs.absentdate='$dateFormate' and stuid='$stuid' and attendance_period='$customattendace_type' "); 
		        	if($queryAbsent->num_rows()>0){
		        		$rowType=$queryAbsent->row();
		        		$absenType=$rowType->absentype;
		        		if($absenType=='Unexcused Absence'){
		        			$output.='<td> <button class="card card-body bg-danger btn-block">'.$absenType.'</button> </td>';
		        		}else if($absenType=='Tardy'){
		        			$output.='<td> <button class="card card-body bg-warning btn-block">'.$absenType.'</button> </td>';
		        		}else{
		        			$output.='<td> <button class="card card-body bg-info btn-block">'.$absenType.'</button> </td>';
		        		}
		        		
		        	}else{
		        		$output.='<td> <button class="card card-body bg-success btn-block">Present</button> </td>';
		        	}
		        }

		        $output.=' </tr>';
		        $no++;
	        }
        }
        $output.='</tbody> </table> </div>';
        return $output;
	}
	function fetch_grade_4placement($gradesec,$into,$max_year,$branch){
		$this->db->where('usertype =','Student');
		$this->db->where('grade',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname','ASC');
		$query = $this->db->get('users');
		$output ='';
    $output .='
      <div class="table-responsive">
        <table class="table table-striped table-hover" style="width:100%;">
        <thead>
        <tr>
          <th>Student Name</th>
          <th>ID</th>
          <th>Grade</th>
          <th>Branch</th>
          <th>Gender</th>';
         $query_num_grade = $this->db->query("select fname,mname,lname,grade,branch,gender,id,username from users where grade='$gradesec' and academicyear ='$max_year' and usertype='Student' group by section order by fname,mname,lname ASC");
         $num_branch= $query_num_grade->num_rows();
         $gsnum=$query_num_grade->result() ;
         $i=range('A','Z');
         for($j=0;$j<$into; $j++) {
           $output .='<th> '.$i[$j].'</th>';
          }
         $output .='</tr>
        </thead>
       <tbody>';
       foreach ($query->result() as $row) {
       $output .='<tr> 
       <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
       <td>'.$row->username.'</td>
       <td>'.$row->grade.'</td>
       <td>'.$row->branch.'</td>
       <td>'.$row->gender.'</td>';
        for($j=0;$j<$into; $j++) {
        	if($row->section == $i[$j]){
        		$output .='
        		<input type="hidden" class="grades" value="'.$row->grade.'">
           		<td> <input type="radio" name="manualPlacementRadio'.$row->id.'" class="placesiec" id="'.$row->id.'" checked="checked" value="'.$i[$j].'">
           			<a class="saved'.$row->id.''.$i[$j].'" ></a>
           		</td>';
        	}else{
           $output .='
           <input type="hidden" class="grades" value="'.$row->grade.'">
           <td><input type="radio" name="manualPlacementRadio'.$row->id.'" class="placesiec" id="'.$row->id.'" value="'.$i[$j].'">
           <a class="saved'.$row->id.''.$i[$j].'" ></a>
           </td>';
          }
        }
       }
      $output .='</tr></tbody>
     </table>
    </div>';
   	return $output;
	}
	function fetch_grade_4placement_summer($gradesec,$into,$max_year,$branch){
		$this->db->where('usertype =','Student');
		$this->db->where('grade',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname','ASC');
		$query = $this->db->get('summerstudent');
		$output ='';
    $output .='
      <div class="table-responsive">
        <table class="table table-striped table-hover" style="width:100%;">
        <thead>
        <tr>
          <th>Student Name</th>
          <th>ID</th>
          <th>Grade</th>
          <th>Branch</th>
          <th>Gender</th>';
         $query_num_grade = $this->db->query("select fname,mname,lname,grade,branch,gender,id,username from summerstudent where grade='$gradesec' and academicyear ='$max_year' and usertype='Student' group by section order by fname,mname,lname ASC");
         $num_branch= $query_num_grade->num_rows();
         $gsnum=$query_num_grade->result() ;
         $i=range('A','Z');
         for($j=0;$j<$into; $j++) {
           $output .='<th> '.$i[$j].'</th>';
          }
         $output .='</tr>
        </thead>
       <tbody>';
       foreach ($query->result() as $row) {
       $output .='<tr> 
       <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
       <td>'.$row->username.'</td>
       <td>'.$row->grade.'</td>
       <td>'.$row->branch.'</td>
       <td>'.$row->gender.'</td>';
        for($j=0;$j<$into; $j++) {
        	if($row->section == $i[$j]){
        		$output .='
        		<input type="hidden" class="grades_summer" value="'.$row->grade.'">
           		<td> <input type="radio" name="manualPlacementRadio'.$row->id.'" class="placesiecsummerstudent" id="'.$row->id.'" checked="checked" value="'.$i[$j].'">
           			<a class="saved'.$row->id.''.$i[$j].'" ></a>
           		</td>';
        	}else{
           $output .='
           <input type="hidden" class="grades_summer" value="'.$row->grade.'">
           <td><input type="radio" name="manualPlacementRadio'.$row->id.'" class="placesiecsummerstudent" id="'.$row->id.'" value="'.$i[$j].'">
           <a class="saved'.$row->id.''.$i[$j].'" ></a>
           </td>';
          }
        }
       }
      $output .='</tr></tbody>
     </table>
    </div>';
   	return $output;
	}
	function check_placement_found($branch2place,$grade2place,$max_year){
		$this->db->where('usertype =','Student');
		$this->db->where('grade',$grade2place);
		$this->db->where('branch',$branch2place);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where('section!=','');
		$query = $this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-circle"> </i> Placement Found for Grade '.$grade2place.'.
            </div></div>';
		}else{
			$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No placement Found for Grade '.$grade2place.'.
            </div></div>';
		}
		return $output;
	}
	function check_summer_placement_found($branch2place,$grade2place,$max_year){
		$this->db->where('usertype =','Student');
		$this->db->where('grade',$grade2place);
		$this->db->where('branch',$branch2place);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where('section!=','');
		$query = $this->db->get('summerstudent');
		$output ='';
		if($query->num_rows()>0){
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-circle"> </i> Placement Found for Grade '.$grade2place.'.
            </div></div>';
		}else{
			$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No placement Found for Grade '.$grade2place.'.
            </div></div>';
		}
		return $output;
	}
	function fetch_grade_4autoplacement($branch2place,$gradesec,$into,$max_year)
	{
		$query = $this->db->query("SELECT * FROM users where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' ORDER BY fname ASC"); 
		$studentcount=$query->num_rows();
		$output ='';
		if($studentcount>=$into){
			$queryMale = $this->db->query("SELECT * FROM users where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='Male' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='M' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='male'  ORDER BY mname,lname,fname ASC"); 
      		$output .='
      		<div class="table-responsive">
        	<table class="table table-bordered table-hover" id="tableExport" style="width:100%;">
        	<thead> <tr>
        	<th>No.</th>
          	<th>Student Name</th>
          	<th>Grade</th>
          	<th>Branch</th>';
         	$i=range('A','Z');
          	for($j=0;$j<$into; $j++){
          		$output .='<th>'.$i[$j].'</th>';
         	}
         	$output .='</tr></thead>
       		<tbody>';
      		$start=1;
      		$end=1;
      		$j=0;
      		foreach ($queryMale->result() as $kevalue) {
      			$id=$kevalue->id;
       			$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('gender=','Male');
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->or_where('gender=','M');
				$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->set('section',$i[$j]);
				$this->db->set('gradesec',$gradesec.$i[$j]);
				$this->db->update('users');
				if($j<$into-1){
					$j++;
				}else{
					$j=0;
				}
      		}
      		$queryFemale = $this->db->query("SELECT * FROM users where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='Female' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='F' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='female' ORDER BY mname,lname,fname ASC"); 
      		$start=1;
      		$end=1;
      		$j=0;
      		foreach ($queryFemale->result() as $kevalue) {
      			$id=$kevalue->id;
       			$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('gender=','Female');
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->or_where('gender=','F');
				$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->set('section',$i[$j]);
				$this->db->set('gradesec',$gradesec.$i[$j]);
				$this->db->update('users');
				if($j<$into-1){
					$j++;
				}else{
					$j=0;
				}
      		}
      		$query_fetch = $this->db->query("SELECT * FROM users where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' ORDER BY fname,mname,lname ASC");
      		$no=1;
      		foreach ($query_fetch->result() as $row) {
      			$id=$row->id;
        		$output .='<tr> <td>'.$no.'.</td>
        		<td>'.$row->fname.' '.$row->mname.'</td>
        		<td>'.$row->grade.'</td>
        		<td>'.$row->branch.'</td>';
        		for($j=0;$j<$into; $j++) {
        			if($row->section == $i[$j]){
        				$output .=' <td>
            			<div class="pretty p-icon p-smooth">
              				<input type="checkbox" checked="checked">
              				<div class="state p-success">
	                			<i class="icon fa fa-check"></i>
	                			<label></label>
              				</div>
            			</div> </td>';
        			}else{
        				$output .=' <td>
            			<div class="pretty p-icon p-smooth">
              				<input type="checkbox">
              				<div class="state p-success">
	                			<i class="icon fa fa-check"></i>
	                			<label></label>
              				</div>
            			</div> </td>';
        			}
        		}
        		$no++;
      		}
      		$output .='</tr></tbody>
       		</table>
      		</div>';
    	}else{
   			$output .='<div class="alert alert-danger alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Number of Students do not support this Number of Section.
            </div></div>';
   		}
   		return $output;
	}
	function fetch_grade_summer_autoplacement($branch2place,$gradesec,$into,$max_year)
	{
		$query = $this->db->query("SELECT * FROM summerstudent where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' ORDER BY fname ASC"); 
		$studentcount=$query->num_rows();
		$output ='';
		if($studentcount>=$into){
			$queryMale = $this->db->query("SELECT * FROM summerstudent where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='Male' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='M' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='male'  ORDER BY mname,lname,fname ASC"); 
      		$output .='
      		<div class="table-responsive">
        	<table class="table table-bordered table-hover" id="tableExport" style="width:100%;">
        	<thead> <tr>
        	<th>No.</th>
          	<th>Student Name</th>
          	<th>Grade</th>
          	<th>Branch</th>';
         	$i=range('A','Z');
          	for($j=0;$j<$into; $j++){
          		$output .='<th>'.$i[$j].'</th>';
         	}
         	$output .='</tr></thead>
       		<tbody>';
      		$start=1;
      		$end=1;
      		$j=0;
      		foreach ($queryMale->result() as $kevalue) {
      			$id=$kevalue->id;
       			$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('gender=','Male');
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->or_where('gender=','M');
				$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->set('section',$i[$j]);
				$this->db->set('gradesec',$gradesec.$i[$j]);
				$this->db->update('summerstudent');
				if($j<$into-1){
					$j++;
				}else{
					$j=0;
				}
      		}
      		$queryFemale = $this->db->query("SELECT * FROM summerstudent where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='Female' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='F' or usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' and gender='female' ORDER BY mname,lname,fname ASC"); 
      		$start=1;
      		$end=1;
      		$j=0;
      		foreach ($queryFemale->result() as $kevalue) {
      			$id=$kevalue->id;
       			$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('gender=','Female');
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->or_where('gender=','F');
				$this->db->where('usertype =','Student');
			    $this->db->where('grade',$gradesec);
			    $this->db->where('branch',$branch2place);
			    $this->db->where('id',$id);
				$this->db->where('academicyear',$max_year);
				$this->db->set('section',$i[$j]);
				$this->db->set('gradesec',$gradesec.$i[$j]);
				$this->db->update('summerstudent');
				if($j<$into-1){
					$j++;
				}else{
					$j=0;
				}
      		}
      		$query_fetch = $this->db->query("SELECT * FROM summerstudent where usertype='Student' and grade='$gradesec' and academicyear='$max_year' and branch='$branch2place' ORDER BY fname,mname,lname ASC");
      		$no=1;
      		foreach ($query_fetch->result() as $row) {
      			$id=$row->id;
        		$output .='<tr> <td>'.$no.'.</td>
        		<td>'.$row->fname.' '.$row->mname.'</td>
        		<td>'.$row->grade.'</td>
        		<td>'.$row->branch.'</td>';
        		for($j=0;$j<$into; $j++) {
        			if($row->section == $i[$j]){
        				$output .=' <td>
            			<div class="pretty p-icon p-smooth">
              				<input type="checkbox" checked="checked">
              				<div class="state p-success">
	                			<i class="icon fa fa-check"></i>
	                			<label></label>
              				</div>
            			</div> </td>';
        			}else{
        				$output .=' <td>
            			<div class="pretty p-icon p-smooth">
              				<input type="checkbox">
              				<div class="state p-success">
	                			<i class="icon fa fa-check"></i>
	                			<label></label>
              				</div>
            			</div> </td>';
        			}
        		}
        		$no++;
      		}
      		$output .='</tr></tbody>
       		</table>
      		</div>';
    	}else{
   			$output .='<div class="alert alert-danger alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Number of Students do not support this Number of Section.
            </div></div>';
   		}
   		return $output;
	}
	function update_student_section($stu_id,$section_id,$grade){
		$query_chk=$this->db->query("Select * from users where section='$section_id' and id='$stu_id' ");
		if($query_chk->num_rows()>0){
			$this->db->set('section','');
			$this->db->set('gradesec','');
			$this->db->where(array('id'=>$stu_id));
			$query=$this->db->update('users');
		}else{
			$this->db->set('section',$section_id);
			$this->db->set('gradesec',$grade.''.$section_id);
			$this->db->where(array('id'=>$stu_id));
			$query=$this->db->update('users');
		}
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function update_summer_student_section($stu_id,$section_id,$grade){
		$query_chk=$this->db->query("Select * from summerstudent where section='$section_id' and id='$stu_id' ");
		if($query_chk->num_rows()>0){
			$this->db->set('section','');
			$this->db->set('gradesec','');
			$this->db->where(array('id'=>$stu_id));
			$query=$this->db->update('summerstudent');
		}else{
			$this->db->set('section',$section_id);
			$this->db->set('gradesec',$grade.''.$section_id);
			$this->db->where(array('id'=>$stu_id));
			$query=$this->db->update('summerstudent');
		}
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function fetch_grade_4branch($gradesec,$max_year){
		$this->db->where('usertype =','Student');
		$this->db->where('status =','Active');
		$this->db->where('isapproved =','1');
		$this->db->where('grade',$gradesec);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
       	$output .=' <div class="table-responsive">
        <table class="table table-striped table-hover" id="tableExport" style="width:100%;">
        <thead>
        <tr>
          <th>Student Name</th>
          <th>Student ID</th>
          <th>Grade</th>
          <th>Gender</th>';
        $query_num_branch = $this->db->query("select * from branch group by name");
        $num_branch= $query_num_branch->num_rows();
        $gsnum=$query_num_branch->result() ;
        foreach ($query_num_branch->result() as $rowi) {
           $output .='<th> '.$rowi->name.' </th>';
        }
        $output .='</tr>
        </thead>
        <tbody>';
       	foreach ($query->result() as $row) {
	       $output .='<tr> 
	       <td>'.$row->fname.'&nbsp'.$row->mname.' '.$row->lname.'</td>
	       <td>'.$row->username.'</td>
	       <td>'.$row->gradesec.'</td>
	       <td>'.$row->gender.'</td>';
	        foreach ($query_num_branch->result() as $rowi) {
	        	if($row->branch == $rowi->name){
	        		$output .=' <td>
	        		<input type="radio" name="branchRadio'.$row->id.'" class="placesiec" id="'.$row->id.'" checked="checked" value="'.$rowi->name.'">
	        	   <a class="saved'.$row->id.''.$rowi->name.'" ></a>
	        		</td>';
	        	}else{
		           $output .=' <td>
		            <input type="radio" name="branchRadio'.$row->id.'" class="placesiec" id="'.$row->id.'" value="'.$rowi->name.'"> 
		            <a class="saved'.$row->id.''.$rowi->name.'"></a> 
		           </td>';
		        }
	        }
       	}
        $output .='</tr></tbody>
        </table>
        </div>';
       	return $output;
	}
	function update_student_branch($stu_id,$branchName){
		$query_ck=$this->db->query("select * from users where branch='$branchName' and id='$stu_id' ");
		if($query_ck->num_rows()>0){
			$this->db->set('branch','');
			$this->db->where(array('id'=>$stu_id));
			$query=$this->db->update('users');
		}else{
			$this->db->set('branch',$branchName);
			$this->db->where(array('id'=>$stu_id));
			$query=$this->db->update('users');
		}
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function transferThismark($stu_id,$branchName,$max_year,$previousGradesec,$previousBranch,$quarter){
		$this->db->where('stuid',$stu_id);
		$this->db->group_by('markname');
        $getMark = $this->db->get('mark'.$previousBranch.$previousGradesec.$quarter.$max_year);
        if($getMark->num_rows()>0){
        	return $getMark->result();
		}else{
			return false;
		}
	}
	function insert_absent($id,$date,$max_year,$user){
		$this->db->where(array('stuid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('absentdate'=>$date));
		$query=$this->db->get('attendance');
		if($query->num_rows() > 0){
			return false;
		}else{
			return true;
		}
	}
	function insert_Staff_evaluation_Attendance($id,$date,$max_year,$user,$attendace_type){
		$this->db->where(array('stuid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('absentdate'=>$date));
		$this->db->where(array('attendance_period'=>$attendace_type));
		$query=$this->db->get('attendance_evaluation');
		if($query->num_rows() > 0){
			return false;
		}else{
			return true;
		}
	}
	function insert_absent_summer($id,$date,$max_year,$user){
		$this->db->where(array('stuid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('absentdate'=>$date));
		$query=$this->db->get('summerattendance');
		if($query->num_rows() > 0){
			return false;
		}else{
			return true;
		}
	}
	function insert_asp_absent($id,$date,$max_year,$user,$attendanceProgram){
		$this->db->where(array('stuid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('absentdate'=>$date));
		$this->db->where(array('attendance_program'=>$attendanceProgram));
		$query=$this->db->get('aspattendance');
		if($query->num_rows() > 0){
			return false;
		}else{
			return true;
		}
	}
	function searchAttendance($searchItem,$max_year){
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('usertype','Student');
		$this->db->like('users.fname',$searchItem);
		$this->db->or_like('users.mname',$searchItem);
		$this->db->or_like('users.unique_id',$searchItem);
		$this->db->or_like('users.gradesec',$searchItem);
		$this->db->or_like('attendance.absentdate',$searchItem);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.username = attendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>
                <td>'.$fetch_today_attendances->absentype.' 
                <div class="table-links">
                        <a href="#" class="deleteThisAttendane text-danger" id="'.$fetch_today_attendances->aid.'">Delete</a>
                    </div> 
                </td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function searchStaff_Evaluation_Attendance($searchItem,$max_year){
		$this->db->where('attendance_evaluation.academicyear',$max_year);
		$this->db->where('usertype!=','Student');
		$this->db->like('users.fname',$searchItem);
		$this->db->or_like('users.mname',$searchItem);
		$this->db->or_like('users.unique_id',$searchItem);
		$this->db->or_like('attendance_evaluation.absentdate',$searchItem);
		$this->db->order_by('attendance_evaluation.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance_evaluation');
        $this->db->join('users', 
            'users.username = attendance_evaluation.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Staff Name</th>
                    <th>Attendance Type</th>
                    <th>Attendance Period</th>
                    <th>Attendance Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->absentype.' 
                <div class="table-links">
                        <a href="#" class="deleteThisStaffEvaluationAttendane text-danger" id="'.$fetch_today_attendances->aid.'">Delete</a>
                    </div> 
                </td>
                <td>'.$fetch_today_attendances->attendance_period.'</td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No record found.
            </div></div>';
	    }
        return $output;
	}
	function searchStaff_Evaluation_AttendanceNonAdmin($branch,$searchItem,$max_year){
		$this->db->where('attendance_evaluation.academicyear',$max_year);
		/*$this->db->where('users.academicyear',$max_year);*/
		$this->db->where('users.branch',$branch);
		$this->db->where('usertype!=','Student');
		$this->db->like('users.fname',$searchItem);
		$this->db->or_like('users.mname',$searchItem);
		$this->db->or_like('users.unique_id',$searchItem);
		$this->db->or_like('users.gradesec',$searchItem);
		$this->db->or_like('attendance_evaluation.absentdate',$searchItem);
		$this->db->order_by('attendance_evaluation.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance_evaluation');
        $this->db->join('users', 
            'users.username = attendance_evaluation.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Staff Name</th>
                    <th>Attendance Type</th>
                    <th>Attendance Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->absentype.' 
                <div class="table-links">
                        <a href="#" class="deleteThisStaffEvaluationAttendane text-danger" id="'.$fetch_today_attendances->aid.'">Delete</a>
                    </div> 
                </td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function searchAttendance_summer($searchItem,$max_year){
		$this->db->where('summerattendance.academicyear',$max_year);
		$this->db->where('summerstudent.academicyear',$max_year);
		$this->db->where('usertype','Student');
		$this->db->like('summerstudent.fname',$searchItem);
		$this->db->or_like('summerstudent.mname',$searchItem);
		$this->db->or_like('summerstudent.unique_id',$searchItem);
		$this->db->or_like('summerstudent.gradesec',$searchItem);
		$this->db->or_like('summerattendance.absentdate',$searchItem);
		$this->db->order_by('summerattendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('summerattendance');
        $this->db->join('summerstudent', 
            'summerstudent.username = summerattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendaneSummer'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>
                <td>'.$fetch_today_attendances->absentype.' 
                <div class="table-links">
                        <a href="#" class="deleteThisAttendaneSummer text-danger" id="'.$fetch_today_attendances->aid.'">Delete</a>
                    </div> 
                </td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function search_asp_Attendance($searchItem,$max_year){
		$this->db->where('aspattendance.academicyear',$max_year);
		$this->db->where('users_remote.academicyear',$max_year);
		$this->db->where('usertype','Student');
		$this->db->like('users_remote.fname',$searchItem);
		$this->db->or_like('users_remote.mname',$searchItem);
		$this->db->or_like('users_remote.unique_id',$searchItem);
		$this->db->or_like('users_remote.gradesec',$searchItem);
		$this->db->or_like('aspattendance.absentdate',$searchItem);
		$this->db->order_by('aspattendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('aspattendance');
        $this->db->join('users_remote', 
            'users_remote.username = aspattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>
                <td>'.$fetch_today_attendances->absentype.' 
                <div class="table-links">
                        <a href="#" class="deleteThisAttendane text-danger" id="'.$fetch_today_attendances->aid.'">Delete</a>
                    </div> 
                </td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function search_asp_Attendance_director($searchItem,$myBranch,$max_year){
		$this->db->where('aspattendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->like('users.fname',$searchItem);
		$this->db->or_like('users.mname',$searchItem);
		$this->db->where('aspattendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->or_like('users.unique_id',$searchItem);
		$this->db->where('aspattendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->or_like('users.gradesec',$searchItem);
		$this->db->where('aspattendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->or_like('aspattendance.absentdate',$searchItem);
		$this->db->where('aspattendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->order_by('aspattendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('aspattendance');
        $this->db->join('users', 
            'users.username = aspattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>
                <td>'.$fetch_today_attendances->absentype.' 
                <div class="table-links">
                        <a href="#" class="deleteThisAttendane text-danger" id="'.$fetch_today_attendances->aid.'">Delete</a>
                    </div> 
                </td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function searchAttendanceDirector($searchItem,$myBranch,$max_year){
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->like('users.fname',$searchItem);
		$this->db->or_like('users.mname',$searchItem);
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->or_like('users.unique_id',$searchItem);
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->or_like('users.gradesec',$searchItem);
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->or_like('attendance.absentdate',$searchItem);
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$myBranch);
		$this->db->where('usertype','Student');
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.username = attendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>
                <td>'.$fetch_today_attendances->absentype.' 
                <div class="table-links">
                        <a href="#" class="deleteThisAttendane text-danger" id="'.$fetch_today_attendances->aid.'">Delete</a>
                    </div> 
                </td>
                <td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function fetch_attendance_staffEvaluation($max_year,$postData=null){
     	$response = array();
     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		//$this->db->where('attendance_evaluation.academicyear',$max_year);
        	$searchQuery = " (stuid like '%".$searchValue."%' or absentdate like '%".$searchValue."%' or absentype like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	//$this->db->where('attendance_evaluation.academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('attendance_evaluation')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where('usertype!=','Student');
		//$this->db->where('attendance_evaluation.academicyear',$max_year);
		$this->db->select('branch,fname,mname,lname,stuid,absentype,absentdate,approved');
        $this->db->from('attendance_evaluation');
        $this->db->join('users', 
            'users.username = attendance_evaluation.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where('usertype!=','Student');
		//$this->db->where('attendance_evaluation.academicyear',$max_year);
		$this->db->group_by('attendance_evaluation.aid');
		$this->db->select('branch,fname,mname,lname,stuid, absentype, absentdate,approved, latemin, staff_comment');
        $this->db->from('attendance_evaluation');
        $this->db->join('users', 
            'users.username = attendance_evaluation.stuid');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $record ){
     		$id=$record->aid;
     		if($record->approved=='1'){
            	if($record->absentype=='Tardy'){
            		$output=''.$record->absentype.'('.$record->latemin.')';
            	}else{
            		$output=$record->absentype;
            	}
            }else{
            	if($record->absentype=='Tardy'){
            		$output=''.$record->absentype.'('.$record->latemin.')<a href="#" class="deleteThisStaffEvaluationAttendane text-danger" id="'.$record->aid.'"><i class="fas fa-trash-alt"></i></a>';
            	}else{
            		$output=''.$record->absentype.'<a href="#" class="deleteThisStaffEvaluationAttendane text-danger" id="'.$record->aid.'"><i class="fas fa-trash-alt"></i></a>';
            	}
            	
            } 
            if($record->substitute_by==''){
            	$substituteName=' - ';
            }else{
            	$usersName=$record->substitute_by;
            	$queryName=$this->db->query("select fname,mname,lname from users where username='$usersName' ");
            	if($queryName->num_rows()>0){
            		$rowName=$queryName->row();
            		$fName=$rowName->fname;
            		$mName=$rowName->mname;
            		$lName=$rowName->lname;
            	}else{
            		$fName='';
            		$mName='';
            		$lName='';
            	}
            	$substituteName=$fName.' '.$mName.' '.$lName.'';
            }
            if($record->staff_comment==''){
            	$commentResult='-';
            }else{
            	$commentResult=$record->staff_comment;            	
            }
	    	$data[] = array( 
	           "fname"=>$record->fname.' '.$record->mname.' '.$record->lname.'',
	           "absentype"=>$output,
	           "substitute_by"=>$substituteName,
	           "attendance_period"=>$record->attendance_period,
	           "absentdate"=>$record->absentdate,
	           "staff_comment"=>$commentResult,
	        ); 
     	}
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
   	function fetch_mattendance_staffEvaluation($max_year,$branch,$postData=null){
     	$response = array();
     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		$this->db->where('attendance_evaluation.academicyear',$max_year);
        	$searchQuery = " (stuid like '%".$searchValue."%' or absentdate like '%".$searchValue."%' or absentype like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where('attendance_evaluation.academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('attendance_evaluation')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where('usertype!=','Student');
    	$this->db->where('branch',$branch);
		$this->db->where('attendance_evaluation.academicyear',$max_year);
		$this->db->select('branch,fname,mname,lname,stuid,absentype,absentdate,approved');
        $this->db->from('attendance_evaluation');
        $this->db->join('users', 
            'users.username = attendance_evaluation.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where('usertype!=','Student');
     	$this->db->where('branch',$branch);
		$this->db->where('attendance_evaluation.academicyear',$max_year);
		$this->db->group_by('attendance_evaluation.aid');
		$this->db->select('branch,fname,mname,lname,stuid,absentype,absentdate,approved,latemin , staff_comment');
        $this->db->from('attendance_evaluation');
        $this->db->join('users', 
            'users.username = attendance_evaluation.stuid');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $record ){
     		$id=$record->aid;
     		if($record->approved=='1'){
            	
            	if($record->absentype=='Tardy'){
            		$output=''.$record->absentype.'('.$record->latemin.')';
            	}else{
            		$output=$record->absentype;
            	}
            }else{
            	if($record->absentype=='Tardy'){
            		$output=''.$record->absentype.'('.$record->latemin.')<a href="#" class="deleteThisStaffEvaluationAttendane text-danger" id="'.$record->aid.'"><i class="fas fa-trash-alt"></i></a>';
            	}else{
            		$output=''.$record->absentype.'<a href="#" class="deleteThisStaffEvaluationAttendane text-danger" id="'.$record->aid.'"><i class="fas fa-trash-alt"></i></a>';
            	}
            	
            } 
            if($record->substitute_by==''){
            	$substituteName=' - ';
            }else{
            	$usersName=$record->substitute_by;
            	$queryName=$this->db->query("select fname,mname,lname from users where username='$usersName' ");
            	if($queryName->num_rows()>0){
            		$rowName=$queryName->row();
            		$fName=$rowName->fname;
            		$mName=$rowName->mname;
            		$lName=$rowName->lname;
            	}else{
            		$fName='';
            		$mName='';
            		$lName='';
            	}
            	$substituteName=$fName.' '.$mName.' '.$lName.'';
            }
	    	if($record->staff_comment==''){
            	$commentResult='-';
            }else{
            	$commentResult=$record->staff_comment;            	
            }
	    	$data[] = array( 
	           "fname"=>$record->fname.' '.$record->mname.' '.$record->lname.'',
	           "absentype"=>$output,
	           "substitute_by"=>$substituteName,
	           "attendance_period"=>$record->attendance_period,
	           "absentdate"=>$record->absentdate,
	           "staff_comment"=>$commentResult,
	        ); 
     	}
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
	function fetch_attendance_summer($max_year){
		$this->db->where('usertype','Student');
		$this->db->where('summerattendance.academicyear',$max_year);
		$this->db->where('summerstudent.academicyear',$max_year);
		$this->db->order_by('summerattendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('summerattendance');
        $this->db->join('summerstudent', 
            'summerstudent.username = summerattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                    <th>Absent Type</th>
                    <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteSummerAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>';
                if($fetch_today_attendances->approved=='1'){
                	$output.='<td>'. $fetch_today_attendances->absentype.' </td>';
                }else{
                	$output.='<td>'. $fetch_today_attendances->absentype.'<a href="#" class="deleteThisAttendaneSummer text-danger" id="'.$fetch_today_attendances->aid.'"><i class="fas fa-trash-alt"></i></a> </td>';
                } 
                $output.='<td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function fetch_asp_attendance($max_year){
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];

		$this->db->where('usertype','Student');
		$this->db->like('aspattendance.academicyear',$max_year);
		$this->db->like('users_remote.academicyear',$max_year);
		$this->db->order_by('aspattendance.aid','DESC');
		$this->db->select('*');
        $this->db->from('aspattendance');
        $this->db->join('users_remote', 
            'users_remote.username = aspattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<p class="text-center"><u>'.$school_name.' ASP Attendance Report in '.$max_year.' Year</u></p>
        	<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                    <th>Student ID</th>
                    <th>Grade</th>
                    <th>Attendance Type</th>
                    <th>Attendance Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteaspAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td> '.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>';
                if($fetch_today_attendances->approved=='1'){
                	$output.='<td>'. $fetch_today_attendances->absentype.'('.$fetch_today_attendances->attendance_program.') </td>';
                }else{
                	$output.='<td>'. $fetch_today_attendances->absentype.'('.$fetch_today_attendances->attendance_program.')<a href="#" class="deleteThisasp_Attendane text-danger" id="'.$fetch_today_attendances->aid.'"><i class="fas fa-trash-alt"></i></a> </td>';
                } 
                $output.='<td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function fetch_mattendance($max_year,$branch){
		$this->db->where('users.branch',$branch);
		$this->db->where('usertype','Student');
		$this->db->like('attendance.academicyear',$max_year);
		$this->db->like('users.academicyear',$max_year);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.username = attendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                     <th>Student ID</th>
                      <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td>'.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>';
                if($fetch_today_attendances->approved=='1'){
                	$output.='<td>'. $fetch_today_attendances->absentype.' </td>';
                }else{
                	$output.='<td>'. $fetch_today_attendances->absentype.'<a href="#" class="deleteThisAttendane text-danger" id="'.$fetch_today_attendances->aid.'"><i class="fas fa-trash-alt"></i></a> </td>';
                }
                $output.='<td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function fetch_mattendance_summer($max_year,$branch){
		$this->db->where('summerstudent.branch',$branch);
		$this->db->where('usertype','Student');
		$this->db->like('summerattendance.academicyear',$max_year);
		$this->db->like('summerstudent.academicyear',$max_year);
		$this->db->order_by('summerattendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('summerattendance');
        $this->db->join('summerstudent', 
            'summerstudent.username = summerattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                     <th>Student ID</th>
                      <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteSummerAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td>'.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>';
                if($fetch_today_attendances->approved=='1'){
                	$output.='<td>'. $fetch_today_attendances->absentype.' </td>';
                }else{
                	$output.='<td>'. $fetch_today_attendances->absentype.'<a href="#" class="deleteThisAttendaneSummer text-danger" id="'.$fetch_today_attendances->aid.'"><i class="fas fa-trash-alt"></i></a> </td>';
                }
                $output.='<td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function fetch_mattendance_summerTeacher($max_year,$branch,$user){
		$this->db->where('summerstudent.branch',$branch);
		$this->db->where('summerattendance.attend_by',$user);
		$this->db->where('usertype','Student');
		$this->db->like('summerattendance.academicyear',$max_year);
		$this->db->like('summerstudent.academicyear',$max_year);
		$this->db->order_by('summerattendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('summerattendance');
        $this->db->join('summerstudent', 
            'summerstudent.username = summerattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                     <th>Student ID</th>
                      <th>Grade</th>
                      <th>Absent Type</th>
                      <th>Absent Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteSummerAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td>'.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>';
                if($fetch_today_attendances->approved=='1'){
                	$output.='<td>'. $fetch_today_attendances->absentype.' </td>';
                }else{
                	$output.='<td>'. $fetch_today_attendances->absentype.'<a href="#" class="deleteThisAttendaneSummer text-danger" id="'.$fetch_today_attendances->aid.'"><i class="fas fa-trash-alt"></i></a> </td>';
                }
                $output.='<td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	function fetch_asp_mattendance($max_year,$branch){
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];

		$this->db->where('users_remote.branch',$branch);
		$this->db->where('usertype','Student');
		$this->db->like('aspattendance.academicyear',$max_year);
		$this->db->like('users_remote.academicyear',$max_year);
		$this->db->order_by('aspattendance.aid','DESC');
		$this->db->select('*');
        $this->db->from('aspattendance');
        $this->db->join('users_remote', 
            'users_remote.username = aspattendance.stuid');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$output.='<p class="text-center"><u>'.$school_name.' ASP Attendance Report in '.$max_year.' Year</u></p> <div class="table-responsive">
                <table class="table table-striped table-hover" style="width:100%;">
                <thead>
                    <tr>
                    <th>No.</th>
                    <th>Student Name</th>
                     <th>Student ID</th>
                      <th>Grade</th>
                      <th>Attendance Type</th>
                      <th>Attendance Date</th>
                    </tr>
                </thead>
            <tbody>';
            $no=1;
	        foreach ($query->result() as $fetch_today_attendances) {
	        	$output.='<tr class="deleteaspAttendane'.$fetch_today_attendances->aid.'">
	        	<td>'.$no.'.</td>
	        	<td>'.$fetch_today_attendances->fname.'
                    '.$fetch_today_attendances->mname.' '.$fetch_today_attendances->lname.'  </td>
                <td>'.$fetch_today_attendances->username.'</td>
                <td>'.$fetch_today_attendances->gradesec.'</td>';
                if($fetch_today_attendances->approved=='1'){
                	$output.='<td>'. $fetch_today_attendances->absentype.'('.$fetch_today_attendances->attendance_program.') </td>';
                }else{
                	$output.='<td>'. $fetch_today_attendances->absentype.'('.$fetch_today_attendances->attendance_program.')<a href="#" class="deleteThisasp_Attendane text-danger" id="'.$fetch_today_attendances->aid.'"><i class="fas fa-trash-alt"></i></a> </td>';
                }
                $output.='<td>'.$fetch_today_attendances->absentdate.'</td>
                </tr>';$no++;
	        }
	        $output.='</tbody> </table> </div>';
	    }else{
	    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found.
            </div></div>';
	    }
        return $output;
	}
	/*function fetch_staffattendance($max_year){
		$this->db->where('usertype !=','Student');
		$this->db->like('attendance.academicyear',$max_year);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.id = attendance.stuid');
        $query = $this->db->get();
        $output='';
		if($query->num_rows()>0){
			$output.='<div class="">
        	<table class="table table-striped table-hover" >
        	<thead>
        	<tr>
	        	<th>No.</th>
                
                <th>Name</th>
                <th>AbsentType</th>
                <th>Absent Date</th>
                <th>Branch</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$queryCunt=$this->db->query("select count(stuid) as totalAbsents from attendance where stuid ='$staff->stuid' and academicyear='$max_year' ");
       			$row=$queryCunt->row();
       			$cunt=$row->totalAbsents;
       			$id=$staff->aid;
   				$output.='<tr class="delete_staff'.$id.'">
                <td>'.$no.'.</td>
                
                <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                <a href="#" class="deleteAttendance text-danger" id="'.$id.'" value="'.$id.'"><i class="fas fa-trash-alt"></i></a>
                </td>
                <td><span class="text-danger">'.$staff->absentype.'</span></td>
                <td>'.$staff->absentdate.'</td>
                <td>'.$staff->branch.'</td>                       
                </tr>';
                $no++;	
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent staffs found yet.
            </div></div>';
		}
		return $output;
	}*/
	function fetch_staffattendance($max_year,$postData=null){

     $response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
        	$searchQuery = " (stuid like '%".$searchValue."%' or absentdate like '%".$searchValue."%' or absentype like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	/*$this->db->select('count(*) as allcount');
     	$records = $this->db->get('attendance')->result();
     	$totalRecords = $records[0]->allcount;*/

     	$this->db->where('usertype!=','Student');
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->select('count(*) as allcount');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.id = attendance.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where('usertype!=','Student');
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->select('branch,fname,mname,lname,stuid,absentype,absentdate,approved');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.id = attendance.stuid');
     	$records = $this->db->get('')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where('usertype!=','Student');
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->group_by('attendance.absentdate,attendance.stuid');
		$this->db->select('branch,fname,mname,lname,stuid,absentype,absentdate,approved');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.id = attendance.stuid');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $record ){
     		$id=$record->aid;
            $attendanceType=$record->absentype.'<a href="#" class="deleteAttendance text-danger" id="'.$id.'" value="'.$id.'"><i class="fas fa-trash-alt"></i></a>';
	    	$data[] = array( 
	           "fname"=>$record->fname.' '.$record->mname.' '.$record->lname.'',
	           "branch"=>$record->branch,
	           "absentype"=>$attendanceType,
	           "absentdate"=>$record->absentdate,
	        ); 
     	}
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
	function fetch_mystaffattendanceAccessBranch($max_year,$mydivision){
		$this->db->where('usertype !=','Student');
		$this->db->where('status2',$mydivision);
		$this->db->like('attendance.academicyear',$max_year);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.id = attendance.stuid');
        $query = $this->db->get();
        $output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>UserName/ID</th>
                <th>AbsentType</th>
                <th>Name</th>
                <th>Absent Date</th>
                <th>Total Absents</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->aid;
       			$queryCunt=$this->db->query("select count(stuid) as totalAbsents from attendance where stuid ='$staff->stuid' and academicyear='$max_year' ");
       			$row=$queryCunt->row();
       			$cunt=$row->totalAbsents;
       			$id=$staff->aid;
   				$output.='<tr class="delete_staff'.$id.'">
                <td>'.$no.'.</td>
                <td>'. $staff->username.'<a href="#" class="deleteAttendance text-danger" value="'.$id.'"><i class="fas fa-times-circle"></i></a>
                </td>
                <td><span class="text-danger">'.$staff->absentype.'</span></td>
                <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                </td>
                <td>'.$staff->absentdate.'</td>
                 <td><span class ="badge badge-info">'.$cunt.'</span></td>                      
                </tr>';
                $no++;	
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetch_mystaffattendance($max_year,$branch,$mydivision){
		$this->db->where('branch',$branch);
		$this->db->where('usertype !=','Student');
		$this->db->where('status2',$mydivision);
		$this->db->like('attendance.academicyear',$max_year);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.id = attendance.stuid');
        $query = $this->db->get();
        $output='';
		if($query->num_rows()>0){
			$output.='<div class="">
        	<table class="table table-striped table-hover">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Name</th>
                <th>AbsentType</th>
                <th>Absent Date</th>
                <th>Total Absents</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			$id=$staff->aid;
       			$queryCunt=$this->db->query("select count(stuid) as totalAbsents from attendance where stuid ='$staff->stuid' and academicyear='$max_year' ");
       			$row=$queryCunt->row();
       			$cunt=$row->totalAbsents;
       			$id=$staff->aid;
   				$output.='<tr class="delete_staff'.$id.'">
                <td>'.$no.'.</td>                
                <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                <a href="#" class="deleteAttendance text-danger" value="'.$id.'"><i class="fas fa-trash-alt"></i></a>
                </td>
                <td><span class="text-danger">'.$staff->absentype.'</span></td>
                <td>'.$staff->absentdate.'</td>
                 <td><span class ="badge badge-info">'.$cunt.'</span></td>                      
                </tr>';
                $no++;	
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent staffs found yet.
            </div></div>';
		}
		return $output;
	}
	function fetchMyStuAttendanceDirector($max_year,$branch,$user){
		$output='';
		$query=$this->db->query("select grade from directorplacement where staff='$user' and academicyear='$max_year' group by grade ");
		if($query->num_rows() >0){
			foreach ($query->result() as $gValue) {
				$gradesec=$gValue->grade;
				$this->db->where('branch',$branch);
				$this->db->where('usertype =','Student');
				$this->db->where('gradesec',$gradesec);
				$this->db->where('users.academicyear',$max_year);
				$this->db->where('attendance.academicyear',$max_year);
				$this->db->order_by('attendance.absentdate','DESC');
				$this->db->group_by('attendance.stuid,attendance.absentdate');
				$this->db->select('*');
        		$this->db->from('attendance');
        		$this->db->join('users', 
            		'users.username = attendance.stuid');
        		$query = $this->db->get();
				if($query->num_rows()>0){
					$output.='<div class="table-responsive">
		        	<table class="table table-striped table-hover" style="width:100%;">
		        	<thead>
		        	<tr>
			        	<th>No.</th>
		                <th>Student ID</th>
		                <th>Student Name</th>
		                <th>Branch</th>
		                <th>Grade</th>
		                <th>AbsentType</th>
		                <th>Absent Date</th>
		        	</tr>
		        	</thead>
		       		<tbody>';
		       		$no=1;
		       		foreach ($query->result() as $staff) {
		       			$id=$staff->stuid;
		       			/*$queryCunt=$this->db->query("select count(stuid) as totalAbsents from attendance where stuid ='$staff->stuid' and academicyear='$max_year' ");
		       			$row=$queryCunt->row();
		       			$cunt=$row->totalAbsents;*/
		       			$id=$staff->stuid;
		   				$output.='<tr class="delete_staff'.$id.'">
		                <td>'.$no.'.</td>';
		                if($staff->approved=='1'){
		                	$output.='<td>'. $staff->username.' </td>';
		                }else{
		                	$output.='<td>'. $staff->username.'<a href="#" class="deleteStuAttendance text-danger" id="'.$staff->absentdate.'" value="'.$id.'"><i class="fas fa-trash-alt"></i></a> </td>';
		                }
		                
		                $output.='<td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
		                </td>
		                <td>'.$staff->branch.'</td>
		                <td>'.$staff->gradesec.'</td>

		                <td><span class="text-danger">'.$staff->absentype.'</span></td>
		                
		                <td>'.$staff->absentdate.'</td>                     
		                </tr>';
		                $no++;	
		       		}
				}/*else{
					$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-exclamation-triangle"> </i> No absent students found yet.
		            </div></div>';
				}*/
			}
		}
		return $output;
	}
	function fetchMyStuAttendance($max_year,$branch,$HrGrade){
		$this->db->where('users.branch',$branch);
		$this->db->where('hoomroomplacement.teacher',$HrGrade);
		$this->db->where('usertype =','Student');
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->group_by('attendance.absentdate,attendance.stuid');
		$this->db->select('*');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.username = attendance.stuid');
        $this->db->join('hoomroomplacement', 
            'users.gradesec = hoomroomplacement.roomgrade');
        $query = $this->db->get();
        $output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
        	<table class="table table-striped table-hover" style="width:100%;">
        	<thead>
        	<tr>
	        	<th>No.</th>
                <th>Student ID</th>
                <th>Student Name</th>
                <th>Branch</th>
                <th>AbsentType</th>
                <th>Absent Date</th>
        	</tr>
        	</thead>
       		<tbody>';
       		$no=1;
       		foreach ($query->result() as $staff) {
       			/*$id=$staff->stuid;
       			$queryCunt=$this->db->query("select count(stuid) as totalAbsents from attendance where stuid ='$staff->stuid' and academicyear='$max_year' ");
       			$row=$queryCunt->row();
       			$cunt=$row->totalAbsents;*/
       			$id=$staff->stuid;
   				$output.='<tr class="delete_staff'.$id.'">
                <td>'.$no.'.</td>';
                if($staff->approved=='1'){
                	$output.='<td>'. $staff->username.' </td>';
                }else{
                	$output.='<td>'. $staff->username.'<a href="#" class="deleteStuAttendance text-danger" id="'.$staff->absentdate.'" value="'.$id.'"><i class="fas fa-trash-alt"></i></a> </td>';
                }      
		        $output.='
                <td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'
                </td>
                <td>'.$staff->branch.'
                </td>
                <td><span class="text-danger">'.$staff->absentype.'</span></td>
                
                <td>'.$staff->absentdate.'</td>                      
                </tr>';
                $no++;	
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No absent students found yet.
            </div></div>';
		}
		return $output;
	}
	function delete_attendance($id,$absentDate){
		$this->db->where(array('stuid'=>$id));
		$this->db->where(array('absentdate'=>$absentDate));
		$this->db->delete('attendance');
	}
	function delete_Staffattendance($id,$max_year){
		$this->db->where(array('aid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('attendance');
	}
	function delete_StaffEvaluation_attendance($id,$max_year){
		$this->db->where(array('aid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('attendance_evaluation');
	}
	function delete_Staffattendance_summer($id,$max_year){
		$this->db->where(array('aid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('summerattendance');
	}
	function delete_asp_attendance($id,$max_year){
		$this->db->where(array('aid'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('aspattendance');
	}
	function student_total_absents($max_year){
		$query = $this->db->query("select us.fname, us.profile, us.mname,us.gradesec, count(stuid) as rank from attendance as at cross join users as us where us.username=at.stuid and at.academicyear='$max_year' and absentype='Absent' and us.usertype='Student' group by stuid
			HAVING count(*)=(select count(stuid) from attendance where academicyear='$max_year' and  absentype='Absent' group by stuid DESC limit 1) limit 1");
		/*select rank from(select  count(stuid) as rank from attendance  group by stuid) attendance order by rank DESC limit 8*/
		return $query->result();
	}
	function student_mtotal_absents($max_year,$branch){
		$query = $this->db->query(" select us.fname, us.profile, us.mname,us.gradesec, count(stuid) as rank,FIND_IN_SET(count(stuid),(select GROUP_CONCAT(stuid order by stuid DESC )from attendance where academicyear= '$max_year' and branch='$branch')) as attendance from attendance as at cross join users as us where us.username=at.stuid and at.academicyear='$max_year' and branch='$branch' and absentype='Absent' and us.usertype='Student' group by stuid ");
		return $query->result();
	}
	function my_total_absents($max_year,$user){
		$this->db->where('users.username',$user);
		$this->db->where('attendance.approved','1');
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->order_by('aid','DESC');
		$this->db->select('*');
		$this->db->from('attendance');
		$this->db->join('users','users.username=attendance.stuid');
		$query = $this->db->get();
		return $query;
	}
	function fetchDashboarAttendance($max_year,$user){
		$this->db->where('users.username',$user);
		$this->db->where('attendance.approved','1');
		$this->db->where('attendance.academicyear',$max_year);
		$this->db->order_by('aid','DESC');
		$this->db->select('*');
		$this->db->from('attendance');
		$this->db->join('users','users.username=attendance.stuid');
		$query = $this->db->get();
		$output='';
		if($query->num_rows()>0){
			$totalAbsent=$query->num_rows();
			$output.='<p class="StudentViewTextInfo"><small>Total Absent Days</small><span class="badge badge-info"> '.$totalAbsent.'</span></p> ';
			foreach($query->result() as $absentDate){
				$output.='<p>'.$absentDate->absentdate.'=><span class="text-danger">'.$absentDate->absentype.'</span><p>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No absent date found.
            </div></div>';
		}
		return $output;
	}
	function export_student_mark_formate($gradesec,$quarter,$max_year,$branch1){
		$this->db->where('evaluation.academicyear',$max_year);
		$this->db->where('evaluation.quarter',$quarter);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch1);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('users.fname','ASC');
		$this->db->order_by('users.mname','ASC');
		$this->db->order_by('users.lname','ASC');
		$this->db->group_by('users.id');
		$this->db->select('*');
		$this->db->from('evaluation');
		$this->db->join('users', 
            'users.grade = evaluation.grade');
		$this->db->join('schoolassesment', 
            'schoolassesment.saseval = evaluation.evname');
		$query = $this->db->get();
        return $query->result();
	}
	function export_mystudent_mark_formate($gradesec,$quarter,$max_year,$branch){
		$this->db->where('evaluation.academicyear',$max_year);
		$this->db->where('evaluation.quarter',$quarter);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('users.fname','ASC');
		$this->db->order_by('users.mname','ASC');
		$this->db->order_by('users.lname','ASC');
		$this->db->group_by('users.id');
		$this->db->select('*');
		$this->db->from('evaluation');
		$this->db->join('users', 
            'users.grade = evaluation.grade');
		$this->db->join('schoolassesment', 
            'schoolassesment.saseval = evaluation.evname');
		$query = $this->db->get();
        return $query->result();
	}
	function export_this_grade_evname($gradesec,$quarter,$max_year,$branch1){
		$this->db->where('evaluation.academicyear',$max_year);
		$this->db->where('evaluation.quarter',$quarter);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch1);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('schoolassesment.academicyear',$max_year);
		$this->db->order_by('schoolassesment.sasid','ASC');
		$this->db->group_by('schoolassesment.sasname');
		$this->db->select('*');
		$this->db->from('evaluation');
		$this->db->join('users', 
            'users.grade = evaluation.grade');
		$this->db->join('schoolassesment', 
            'schoolassesment.saseval = evaluation.evname');
		
		$query = $this->db->get();
        return $query->result();
	}
	function export_mythis_grade_evname($gradesec,$quarter,$max_year,$branch){
		$this->db->where('evaluation.academicyear',$max_year);
		$this->db->where('evaluation.quarter',$quarter);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('schoolassesment.academicyear',$max_year);
		$this->db->order_by('evaluation.eid','ASC');
		$this->db->group_by('schoolassesment.sasname');
		$this->db->select('*');
		$this->db->from('evaluation');
		$this->db->join('users', 
            'users.grade = evaluation.grade');
		$this->db->join('schoolassesment', 
            'schoolassesment.saseval = evaluation.evname');
		$query = $this->db->get();
        return $query->result();
	}
	function get_allsubject($gradesec,$max_year){
		$query=$this->db->query("select count(su.Subj_Id) as all_sub,su.Subj_Id,su.Subj_name,su.Grade from subject as su cross join users as u where u.grade=su.Grade and u.gradesec='$gradesec' and Academic_Year='$max_year' and academicyear='$max_year' group by su.Subj_Id order by su.Subj_name ASC");
		return $query->result();
	}
	function check_import_markm2($markname,$subname,$quarter,$max_year,$gradesec,$mybranch){
		$queryCheckM=$this->db->query("SHOW TABLES LIKE 'mark".$mybranch.$gradesec.$quarter.$max_year."' ");
        if ($queryCheckM->num_rows()>0)
        {
			$this->db->where(array('markname'=>$markname));
			$this->db->where(array('subname'=>$subname));
			$this->db->where(array('quarter'=>$quarter));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->where(array('mgrade'=>$gradesec));
			$this->db->where(array('mbranch'=>$mybranch));
			$query=$this->db->get('mark'.$mybranch.$gradesec.$quarter.$max_year);
			if($query->num_rows()>0){
				return false;
			}else{
				return true;
			}
		}else{
			return false;
		}
	}
	function check_import_custom($markname,$subname,$quarter,$max_year,$gradesec,$mybranch,$stuid){
		$this->db->where(array('stuid'=>$stuid));
		$this->db->where(array('markname'=>$markname));
		$this->db->where(array('subname'=>$subname));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('mgrade'=>$gradesec));
		$this->db->where(array('mbranch'=>$mybranch));
		$query=$this->db->get('mark'.$mybranch.$gradesec.$quarter.$max_year);
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function import_mark($data,$gradesec,$max_quarter,$max_year){
		$query=$this->db->insert('mark'.$mybranch.$max_quarter.$max_year,$data);
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function dump_import_subject($data){
		$query=$this->db->insert('subject',$data);
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function dump_import_evaluation($data){
		$query=$this->db->insert('evaluation',$data);
		if($query){
			return true;
		}else{
			return false;
		}
	}
	function select_edited_mark($edtimar,$quarter,$gradesec,$academicyear,$branch){
		$this->db->where(array('mid'=>$edtimar));
		$query=$this->db->get('mark'.$branch.$gradesec.$quarter.$academicyear);
		$output='';
		foreach ($query->result() as $value) {
			$output .='<input type="hidden" class="mQuarter" value="'.$quarter.'">';
			$output .='<input type="hidden" class="aYear" value="'.$academicyear.'">';
			$output .='<input type="hidden" class="gsBranch" value="'.$branch.'">';
			$output .='<input type="hidden" class="gSec" value="'.$gradesec.'">';
			$output .='<input type="hidden" class="outof" value="'.$value->outof.'">';
			$output .='<input type="hidden" class="mid" value="'.$value->mid.'">';
			$output .='<div class="row">
			<div class="col-lg-4"><h5 class="card-title">'.$value->markname.'</h5></div><div class="col-lg-8"><input class="form-control correct_mark_gs" id="correct_value" type="text" value="'.$value->value.'"></div></div>
			<a class="info-mark"></a>';
		}
		return $output;
	}
	function select_edited_ngmark($subject,$stuid,$quarter,$max_year,$gradesec,$markname,$outof,$evaid,$branch){
		$query_student=$this->db->query("select * from users where id='$stuid' and academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' ");
		$output='';
		$output.='<input type="hidden" class="my_subject" value="'.$subject.'"> ';
		$output.='<input type="hidden" class="my_quarter" value="'.$quarter.'"> ';
		$output.='<input type="hidden" class="my_year" value="'.$max_year.'"> ';
		$output.='<input type="hidden" class="my_gradeSec" value="'.$gradesec.'"> ';
		$output.='<input type="hidden" class="my_Branch" value="'.$branch.'"> ';
		$output.='<input type="hidden" class="my_student" value="'.$stuid.'"> ';
		$output.='<input type="hidden" class="my_outOf" value="'.$outof.'"> ';
		$output.='<input type="hidden" class="my_eva" value="'.$evaid.'"> ';
		foreach ($query_student->result() as $kUsers) {
			$grade=$kUsers->grade;
			$output.='<input type="hidden" class="my_studentBranch" value="'.$kUsers->branch.'"> ';
			$output.='<div class="row"> <div class="col-md-6">
			<div class="form-group">
			<input type="text" class="form-control my_markNameH" value="'.$markname.'" disabled="disabled">
			</div></div> 
			<div class="col-md-6"> <div class="form-group"> 
			<input class="form-control correct_ngmark_gs" placeholder="Value..." required="required" id="" type="text"> </div></div>
			 </div>';
			
		}$output.='<a class="info-ngmark"></a>';
		return $output;
	}
	function select_edited_ngmark_summer($subject,$stuid,$quarter,$max_year,$gradesec,$markname,$outof,$evaid,$branch){
		$query_student=$this->db->query("select * from summerstudent where id='$stuid' and academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' ");
		$output='';
		$output.='<input type="hidden" class="my_subjectSummer" value="'.$subject.'"> ';
		$output.='<input type="hidden" class="my_quarterSummer" value="'.$quarter.'"> ';
		$output.='<input type="hidden" class="my_yearSummer" value="'.$max_year.'"> ';
		$output.='<input type="hidden" class="my_gradeSecSummer" value="'.$gradesec.'"> ';
		$output.='<input type="hidden" class="my_BranchSummer" value="'.$branch.'"> ';
		$output.='<input type="hidden" class="my_studentSummer" value="'.$stuid.'"> ';
		$output.='<input type="hidden" class="my_outOfSummer" value="'.$outof.'"> ';
		$output.='<input type="hidden" class="my_evaSummer" value="'.$evaid.'"> ';
		foreach ($query_student->result() as $kUsers) {
			$grade=$kUsers->grade;
			$output.='<input type="hidden" class="my_studentBranchSummer" value="'.$kUsers->branch.'"> ';
			$output.='<div class="row"> <div class="col-md-6">
			<div class="form-group">
			<input type="text" class="form-control my_markNameHSummer" value="'.$markname.'">
			</div></div> 
			<div class="col-md-6"> <div class="form-group"> 
			<input class="form-control correct_ngmark_gsSummer" required="required" placeholder="Value..." id="" type="text"> </div></div>
			 </div>';
			
		}$output.='<a class="info-ngmarkSummer"></a>';
		return $output;
	}
	function select_edited_outof($markanme,$quarter,$subject,$gradesec,$max_year){
		$this->db->where(array('markname'=>$markanme));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('subname'=>$subject));
		$this->db->where(array('gradesec'=>$gradesec));
		$this->db->group_by('markname');
		$this->db->select('*');
		$this->db->from('mark'.$gradesec.$quarter.$max_year);
		$this->db->join('users', 
            'users.id = mark'.$gradesec.$quarter.$max_year.'.stuid');
		$query=$this->db->get();
		$output='';
		foreach ($query->result() as $value) {
			$output .='<input type="hidden" class="markname" value="'.$value->markname.'">';
			$output .='<input type="hidden" class="gr" value="'.$gradesec.'">';
			$output .='<input type="hidden" class="qu" value="'.$quarter.'">';
			$output .='<input type="hidden" class="su" value="'.$subject.'">';
			$output .='<div class="row"> <div class="col-lg-6"> <div class="form-group">
			<input class="form-control correct_markname_gs" id="correct_name" type="text" value="'.$value->markname.'">
			</div></div>';
			$output .='<div class="col-lg-6"> <input class="form-control correct_markoutof_gs" id="correct_outof" type="text" value="'.$value->outof.'">
			</div></div>
			<a class="info-mark"></a>';
		}
		return $output;
	}
	function update_edited_mark($user,$outof,$mid,$value,$quarter,$gradesec,$year,$branch,$max_quarter)
	{
		$output='';
		date_default_timezone_set('Africa/Addis_Ababa');
		$selectUpdatedMark=$this->db->query("select * from `mark".$branch.$gradesec.$quarter.$year."` where mid='$mid' ");
		$querRow=$selectUpdatedMark->row();
		$subject=$querRow->subname;
		$oldate=$querRow->value;
		$updateduser=$querRow->stuid;
		$markname=$querRow->markname;
		$data=array(
			'userinfo'=>$user,
			'useraction'=>'Mark updated',
			'infograde'=>$gradesec,
			'subject'=>$subject,
			'quarter'=>$quarter,
			'academicyear'=>$year,
			'oldata'=>$oldate,
			'newdata'=>$value,
			'markname'=>$markname,
			'updateduser'=>$updateduser,
			'userbranch'=>$branch,
			'actiondate'=> date('Y-m-d H:i:s', time())
		);
		if($quarter!==$max_quarter){
          $queryAlert=$this->db->insert('useralertactions',$data);
        }
		$queryInsert=$this->db->insert('useractions',$data);
		if($queryInsert){
			$this->db->where(array('stuid'=>$updateduser));
			$this->db->where(array('subname'=>$subject));
			$this->db->where(array('markname'=>$markname));
			$this->db->where(array('mbranch'=>$branch));
			$this->db->where(array('mgrade'=>$gradesec));
			$this->db->where(array('quarter'=>$quarter));
			/*$this->db->where(array('mid'=>$mid));*/
			$this->db->set('value',$value);
			$query=$this->db->update('mark'.$branch.$gradesec.$quarter.$year);
			if($query){
				$output .='<span class="text-success"> Updated</span>';
			}else{
				$output .='<span class="text-danger"> ooops</span>';
			}
		}
		return $output;
	}
	function update_edited_ngmark_summer($user,$data,$quarter,$gradesec,$year,$my_studentBranch,$value,$subject,$stuid,$markname){
		$output='';
		date_default_timezone_set('Africa/Addis_Ababa');
		$data1=array(
			'userinfo'=>$user,
			'useraction'=>'Mark updated',
			'infograde'=>$gradesec,
			'subject'=>$subject,
			'quarter'=>$quarter,
			'academicyear'=>$year,
			'oldata'=>'-',
			'newdata'=>$value,
			'markname'=>$markname,
			'updateduser'=>$stuid,
			'userbranch'=>$my_studentBranch,
			'actiondate'=> date('Y-m-d H:i:s', time())
		);
		$queryInsert=$this->db->insert('useractions',$data1);

		if($queryInsert){
			$queryCheck=$this->db->query("select * from summermark where stuid='$stuid' and subname='$subject' and quarter='$quarter' and markname='$markname' and academicyear='$year' ");
			if($queryCheck->num_rows()>0){
				$this->db->where('academicyear',$year);
				$this->db->where('stuid',$stuid);
				$this->db->where('subname',$subject);
				$this->db->where('quarter',$quarter);
				$this->db->where('markname',$markname);
				$this->db->set('value',$value);
				$query=$this->db->update('summermark',$data);
			}else{
				$query=$this->db->insert('summermark',$data);
			}
			
			if($query){
				$output .='<span class="text-success"> Updated</span>';
			}else{
				$output .='<span class="text-danger"> ooops</span>';
			}
		}
		return $output;
	}
	function update_edited_outof($markanme,$grade,$quarter,$subject,$correct_name,$correct_markoutof_gs,$max_year){
		$query_filetrstudent=$this->db->query("select * from users where gradesec='$grade' and academicyear='$max_year' and usertype='Student' ");
		foreach ($query_filetrstudent->result() as $kvalue) 
		{
			$id=$kvalue->id;
			$this->db->where(array('markname'=>$markanme));
			$this->db->where(array('stuid'=>$id));
			$this->db->where(array('quarter'=>$quarter));
			$this->db->where(array('subname'=>$subject));
			//$this->db->where(array('gradesec'=>$grade));
			$this->db->set('markname',$correct_name);
			$this->db->set('outof',$correct_markoutof_gs);
			$query=$this->db->update('mark');
		}
		$output='';
		if($query){
			$output .='<span class="text-success"> Updated</span>';
		}else{
			$output .='<span class="text-danger"> ooops</span>';
		}
		return $output;
	}
	function fetch_session_gradesec($user,$max_year)
	{
		$this->db->where('staffplacement.academicyear',$max_year);
		$this->db->where('staffplacement.staff',$user);
		$this->db->group_by('staffplacement.grade');
		$this->db->order_by('staffplacement.grade','ASC');
		$query = $this->db->get('staffplacement');
		return $query->result();
	}
	function fetch_mybranch_gradesec($branch,$max_year)
	{
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.branch',$branch);
		$this->db->where('users.grade !=','0');
		$this->db->group_by('users.grade');
		$this->db->order_by('users.grade','ASC');
		$query = $this->db->get('users');
		return $query->result();
	}
	function fetch_myschool_gradesec($max_year)
	{
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.grade !=','0');
		$this->db->where('users.grade !=','');
		$this->db->group_by('users.grade');
		$this->db->order_by('users.grade','ASC');
		$query = $this->db->get('users');
		return $query->result();
	}
	function fetch_my_subject($grade,$max_year){
		$this->db->where('subject.Academic_Year',$max_year);
		$this->db->where('subject.grade',$grade);
		$this->db->group_by('subject.Subj_name');
		$this->db->order_by('subject.Subj_name','ASC');
		$query = $this->db->get('subject');
		return $query->result();
	}
	function fetch_this_grade_subjects($user,$gradesec,$max_year){
		$this->db->where('staffplacement.academicyear',$max_year);
		$this->db->where('staffplacement.staff',$user);
		$this->db->where('staffplacement.grade',$gradesec);
		$query=$this->db->get('staffplacement');
		$output ='<option> </option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->subject.'">
			'.$row->subject.'</option>';
		}
		return $output;
	}
	function fetch_eachthis_grade_subjects($gradesec,$max_year){
		$this->db->where('subject.Academic_Year',$max_year);
		$this->db->where('subject.Grade',$gradesec);
		$this->db->order_by('subject.Subj_name','ASC');
		$query=$this->db->get('subject');
		$output ='<option> </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">
				'.$row->Subj_name.'</option>';
			}
			return $output;
	}
	function insert_lesson($user,$subject,$gradesec,$title,$note,$max_year){
		$data=array(
			'teacher'=>$user,
			'subject'=>$subject,
			'grade'=>$gradesec,
			'title'=>$title,
			'note'=>$note,
			'lesson_date'=>date('M-d-Y'),
			'academicyear'=>$max_year
		);
		$query=$this->db->insert('lesson',$data);
		return $query;
	}
	function checkLessonPlan($lessonGrade,$lesson_subject,$max_year){
		$this->db->where('grade',$lessonGrade);
		$this->db->where('subject',$lesson_subject);
		$this->db->where('academicyear',$max_year);
		$query=$this->db->get('lessonplan');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
		
	}
	function viewLessonPlan($max_year){
		$this->db->where('lessonplan.academicyear',$max_year);
		$this->db->order_by('lessonplan.id','DESC');
		$this->db->select('lessonplan.id, lessonplan.grade, lessonplan.subject, lessonplan.dateposted, lessonplan.postby,lessonplan.lesson_objective,users.profile,users.fname,users.mname, lessonplan.teacher_guide,lessonplan.student_guide,lessonplan.material_needed,lessonplan.academicyear');
		$this->db->from('lessonplan');
		$this->db->join('users', 
            'users.username = lessonplan.postby');
		$query = $this->db->get();
        return $query->result();
	}
	function viewLessonPlanTeacher($max_year,$user){
		$this->db->where('lessonplan.academicyear',$max_year);
		$this->db->where('lessonplan.postby',$user);
		$this->db->order_by('lessonplan.id','DESC');
		$this->db->select('lessonplan.id, lessonplan.grade, lessonplan.subject, lessonplan.dateposted, lessonplan.postby,lessonplan.lesson_objective,users.profile,users.fname,users.mname, lessonplan.teacher_guide,lessonplan.student_guide,lessonplan.material_needed,lessonplan.academicyear');
		$this->db->from('lessonplan');
		$this->db->join('users', 
            'users.username = lessonplan.postby');
		$query = $this->db->get();
        return $query->result();
	}
	function viewLessonPlanDirector($max_year,$user){
		$query = $this->db->query(" select lessonplan.id, lessonplan.grade, lessonplan.subject, lessonplan.dateposted, lessonplan.postby, lessonplan.lesson_objective, users.profile,users.fname, users.mname, lessonplan.teacher_guide,lessonplan.student_guide,lessonplan.material_needed,lessonplan.academicyear from lessonplan cross join users cross join directorplacement where users.usertype!='Student' and lessonplan.academicyear='$max_year' and users.username=lessonplan.postby and lessonplan.postby='$user' 
			OR  directorplacement.staff='$user' and directorplacement.academicyear='$max_year' and directorplacement.grade=users.gradesec and lessonplan.grade=users.grade group by lessonplan.subject order by lessonplan.id DESC  ");
        return $query->result();
	}
	function deleteLessonId($lessonID){
		$this->db->where('lessonplan.id',$lessonID);
		$query = $this->db->delete('lessonplan');
	}
	function editLessonId($lessonID){
		$this->db->where('lessonplan.id',$lessonID);
		$query = $this->db->get('lessonplan');
		$output='';
		foreach($query->result() as $lessonP){
			$output.='<input type="hidden" id="lessonPlanId" value="'.$lessonP->id.'">
			<div class="row">
              <div class="col-lg-6">
                <div class="form-group">
                  <label for="Mobile">Lesson Objective</label>
                  <textarea class="form-control summernote-simple" id="lesson_objective_update" name="lesson_objective" required="required">
                  '.$lessonP->lesson_objective.'
                   </textarea>
                </div>
              </div>
              <div class="col-lg-6">
                <div class="form-group">
                  <label for="Mobile">Teachers Guide</label>
                  <textarea class="form-control summernote-simple" id="teachers_guide_update" name="teachers_guide" required="required"> '.$lessonP->teacher_guide.'</textarea>
                </div>
              </div>
              <div class="col-lg-6">
                <div class="form-group">
                  <label for="Mobile">Students Guide</label>
                  <textarea class="form-control summernote-simple" id="students_guide_update" name="students_guide" required="required"> '.$lessonP->student_guide.'</textarea>
                </div>
              </div>
              <div class="col-lg-6">
                <div class="form-group">
                  <label for="Mobile">Materials Needed</label>
                  <textarea class="form-control summernote-simple" id="materials_needed_update" name="materials_needed" required="required"> '.$lessonP->material_needed.'</textarea>
                </div>
              </div>
            </div>';
		}
		return $output;
	}
	function viewLessonId($lessonID,$max_year){
		$this->db->where('lessonplan.id',$lessonID);
		$query = $this->db->get('lessonplan');
		$output='';

		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		foreach($query->result() as $lessonP){
			$output.='<div id="printLessonPlanGs">
			<h3 class="text-center"><p><u><b>'.$school_name.' Lesson Plan for '.$max_year.' Academic Year</b></u></p></h3>
			<p><h5 class="text-center"><u>Subject: <b>'.$lessonP->subject.'</b> & Grade: <b>'.$lessonP->grade.'</b></u></h5></p>';
			$output.='<div class="row">
              <div class="col-lg-12">
                <div class="form-group">
                  <label for="Mobile">Lesson Objective</label>
                  '.$lessonP->lesson_objective.'
                </div>
              </div>
              <div class="col-lg-12">
                <div class="form-group">
                  <label for="Mobile">Teachers Guide</label> '.$lessonP->teacher_guide.'
                </div>
              </div>
              <div class="col-lg-12">
                <div class="form-group">
                  <label for="Mobile">Students Guide</label> '.$lessonP->student_guide.'
                </div>
              </div>
              <div class="col-lg-12">
                <div class="form-group">
                  <label for="Mobile">Materials Needed</label>'.$lessonP->material_needed.'
                </div>
              </div>
            </div>
            </div>';
		}
		return $output;
	}
	function insert_elibrary($user,$subject,$gradesec,$notepdf,$max_year){
		$data=array(
			'pby'=>$user,
			'grade'=>$gradesec,
			'subjects'=>$subject,
			'ebook'=>$notepdf,
			'edate'=>date('M-d-Y'),
			'academicyear'=>$max_year
		);
		$query=$this->db->insert('library',$data);
		return $query;
	}
	function insert_lesson2($user,$subject,$gradesec,$title,$note,$max_year){
		$data=array(
			'teacher'=>$user,
			'subject'=>$subject,
			'grade'=>$gradesec,
			'title'=>$title,
			'pdfdoc'=>$note,
			'lesson_date'=>date('M-d-Y'),
			'academicyear'=>$max_year
		);
		$query=$this->db->insert('lesson',$data);
		return $query;
	}
	function answer_worksheet($id,$gradesec,$subject,$title,$notepdf,$max_year){
		$data=array(
			'sid'=>$id,
			'grade'=>$gradesec,
			'subject'=>$subject,
			'title'=>$title,
			'answeredfile'=>$notepdf,
			'answered_date'=>date('M-d-Y'),
			'academicyear'=>$max_year
		);
		$query=$this->db->insert('answerworksheet',$data);
		return $query;
	}
	function fetch_answer_worksheet($max_year,$id){
		$this->db->where('answerworksheet.sid',$id);
		$this->db->where('answerworksheet.academicyear',$max_year);
		$this->db->select('*');
		$this->db->from('answerworksheet');
		$this->db->join('users', 
            'users.id = answerworksheet.sid');
		$query = $this->db->get();
		return $query->result();
	}
	function fetch_lesson($max_year){
		$query=$this->db->query("
			Select us.fname,us.mname,us.profile,le.grade,le.title,le.pdfdoc,le.note,le.subject,le.lid,le.lesson_date,le.teacher from lesson as le cross join users as us where le.academicyear='$max_year' and le.teacher=us.username order by le.lid DESC
			");
        return $query->result();
	}
	function fetch_milesson($max_year,$user){
		$query=$this->db->query("
			Select us.fname,us.mname,us.profile,le.grade,le.title,le.pdfdoc,le.note,le.subject,le.lid,le.lesson_date,le.teacher from lesson as le cross join users as us where le.academicyear='$max_year'and le.teacher='$user' and le.teacher=us.username order by le.lid DESC
			");
        return $query->result();
	}
	function my_lesson($max_year,$gradesec,$grade){
		$this->db->where('lesson.academicyear',$max_year);
		$this->db->where('lesson.grade',$grade);
		$this->db->or_where('lesson.grade',$gradesec);
		$this->db->order_by('lesson.lid','DESC');
		$this->db->select('*');
		$this->db->from('lesson');
		$this->db->join('users', 
            'users.username = lesson.teacher');
		$query = $this->db->get();
        return $query->result();
	}
	function mystudent_lesson($max_year,$user){
		$this->db->where('lesson.academicyear',$max_year);
		$this->db->where('lesson.teacher',$user);
		$this->db->order_by('lesson.lid','DESC');
		$this->db->select('*');
		$this->db->from('lesson');
		$this->db->join('users', 
            'users.username = lesson.teacher');
		$query = $this->db->get();
        return $query->result();
	}
	function delete_lesson($id){
		$this->db->where('lid',$id);
		$this->db->delete('lesson');
	}
	function delete_elibrary($id){
		$this->db->where('lid',$id);
		$this->db->delete('library');
	}
	function delete_sent_worksheet($awid){
		$this->db->where('awid',$awid);
		$this->db->delete('answerworksheet');
	}
	function fetch_answered_worksheet($max_year){
		$this->db->where(array('answerworksheet.academicyear'=>$max_year));
		$this->db->select('*');
		$this->db->from('answerworksheet');
		$this->db->join('users', 
            'users.id = answerworksheet.sid');
		$query = $this->db->get();
        return $query->result();
	}
	function fetch_answered_worksheet_4this_admin($branch,$max_year){
		$this->db->where(array('answerworksheet.academicyear'=>$max_year));
		$this->db->where(array('users.branch'=>$branch));
		$this->db->select('*');
		$this->db->from('answerworksheet');
		$this->db->join('users', 
            'users.id = answerworksheet.sid');
		$query = $this->db->get();
        return $query->result();
	}
	function fetch_myclass_answered_worksheet($user,$max_year){
		$query = $this->db->query("
			select aw.subject,aw.awid,aw.answered_date,aw.title,aw.answeredfile, us.fname,us.profile,us.mname,us.gradesec from users as us cross join answerworksheet as aw cross join staffplacement as st where st.grade=aw.grade and st.subject=aw.subject and us.id=aw.sid  and st.staff='$user' group by aw.awid
			");
        return $query->result();
	}
	function read_lesson($id){
		$this->db->where(array('lesson.lid'=>$id));
		$this->db->select('*');
        $this->db->from('lesson');
        $this->db->join('users', 
            'users.username = lesson.teacher');
        $query = $this->db->get();
        return $query->result();
	}
	function fetch_this_subjectresult($sid,$subject,$examname,$max_year){
		$this->db->group_by('exam.examGroup,exam.examname');
		$this->db->where(array('examanswer.sid'=>$sid));
		$this->db->where(array('examanswer.subject'=>$subject));
		$this->db->where(array('examanswer.examname'=>$examname));
		$this->db->where(array('examanswer.academicyear'=>$max_year));
		$this->db->select('*');
        $this->db->from('examanswer');
        $this->db->join('exam', 
            'exam.examGroup = examanswer.ques');
        $query = $this->db->get();
        return $query->result();
	}
	function read_ansered_worksheet($id){
		$this->db->where(array('answerworksheet.awid'=>$id));
		$this->db->select('*');
        $this->db->from('answerworksheet');
        $this->db->join('users', 
            'users.id = answerworksheet.sid');
        $query = $this->db->get();
        return $query->result();
	}
	function add_payment_category($acy,$pcname,$grade,$month){
		$this->db->where(array('academicyear'=>$acy));
		$this->db->where(array('name'=>$pcname));
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('month'=>$month));
		$query=$this->db->get('paymentype');
		if($query->num_rows() > 0){
			return false;
		}else{
			return true;
		}
	}
	function delete_payment_category($id){
		$this->db->where(array('id'=>$id));
		$this->db->delete('paymentype');
	}
	function fetch_gradesec_forpayment($gradesec,$max_year){
		$this->db->where('gradesec',$gradesec);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname','ASC');
		$query = $this->db->get('users');
		$output ='';
        $output .='<div class="table-responsive">
        <table class="table table-striped table-hover" id="tableExport" style="width:100%;">
            <thead>
              <tr>
               <th>
                <button class="btn btn-success payPayment" type="submit" name="paid">Pay</button>
               </th>
                <th>Student Name</th>
                <th>Grade</th>
                <th>Branch</th>
                <th>Gender</th>
              </tr>
            </thead>
            <tbody>';
            foreach ($query->result() as $row) {
            $output .='<tr>
              <td><input type="checkbox" name="paidid" value="'.$row->id.'"></td>
              <td>'.$row->fname.'&nbsp'.$row->mname.'</td>
              <td>'.$row->gradesec.'</td>
              <td>'.$row->branch.'</td>
              <td>'.$row->gender.'</td>
              </tr>';
              }
              '</tbody>
        </table>
        </div>';
        return $output;
	}
	function insert_payment($check,$month,$ptype,$gradesec,$acy){
		$this->db->where(array('stuid'=>$check));
		$this->db->where(array('academicyear'=>$acy));
		$this->db->where(array('paymentype'=>$ptype));
		$this->db->where(array('gradesecc'=>$gradesec));
		$this->db->where(array('month'=>$month));
		$query=$this->db->get('payment');
		if($query->num_rows() > 0){
			return false;
		}else{
			return true;
		}
	}
	function fetch_payment(){
		$this->db->order_by('payment.pid','DESC');
		$this->db->select('*');
        $this->db->from('payment');
        $this->db->join('users', 
            'users.id = payment.stuid');
        $query = $this->db->get();
        return $query->result();
	}
	function delete_payment($id){
		$this->db->where(array('pid'=>$id));
		$this->db->delete('payment');
	} 
    public function getCount_payment_report() {
        $query=$this->db->query("select us.gradesec, us.fname, us.mname, us.profile, pt.name, pt.month, pt.academicyear from users as us cross join paymentype pt where us.usertype ='Student' and us.grade=pt.grade and us.id not in(select stuid from payment as p where p.paymentype = pt.name and p.month=pt.month  ) ");
        return $query->num_rows();
    }
	function fetch_payment_report($branch,$gs_gradesec,$max_year){
/*		$this->db->limit($limit, $start);*/
		$output='';
		$query = $this->db->query("select us.gradesec, us.fname, us.mname, us.profile, pt.name, pt.month, pt.academicyear from users as us cross join paymentype pt where us.usertype ='Student' and us.branch='$branch' and us.gradesec='$gs_gradesec' and us.grade=pt.grade and us.id not in(select stuid from payment as p where academicyear='$max_year' and p.paymentype = pt.name and p.month=pt.month ) ");
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
          <table class="tabler table-striped table-hover" style="width:100%;">
            <thead>
              <tr>
                <th>No.</th>
                <th>Student Name</th>
                <th>Grade</th>
                <th>Payment Type</th>
                <th>Unpaid Month</th>
                <th>Academic Year</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>';
            $no=1;
            foreach($query->result() as $payments){
            	$output.='<tr>
                    <td>'.$no.'</td>
                    <td> '.$payments->fname.' ' .$payments->mname.'</td>
                    <td>'.$payments->gradesec.'</td>
                    <td>'.$payments->name.'</td>
                    <td>'.$payments->month.'</td>
                    <td>'.$payments->academicyear.'</td>
                    <td><span class="text-danger">Unpaid</span>
                   </td>
                  </tr>';
                $no++;
            }
            $output.=' </tbody> </table> </div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No report found.
            </div></div>';
		}
		return $output;
	}
	function fetch_mypayment_report($max_year,$id){
		$query = $this->db->query("select us.gradesec, us.fname,
			us.mname,us.profile,pt.name,pt.month,pt.academicyear from users as us cross join paymentype pt where us.id='$id' and us.usertype ='Student' and us.grade=pt.grade and us.id not in(select stuid from payment as p where stuid='$id' and academicyear='$max_year' and p.paymentype = pt.name and p.month=pt.month) ;
			");
		return $query->result();
	}
	function fetch_grade_from_staffplace($user,$max_year){
		$this->db->where(array('staff'=>$user));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->group_by('grade');
		$query=$this->db->get('staffplacement');
		return $query->result();
	}
	function fetch_grade_from_staffplace4Director($user,$max_year){
		$queryChk = $this->db->select('*')
                ->where('staff', $user)
                ->where('academicyear',$max_year)
                ->get('directorplacement');
        if($queryChk->num_rows()>0){
        	return $queryChk->result();
        }else{
        	$this->db->where(array('staff'=>$user));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->group_by('grade');
			$this->db->order_by('grade','ASC');
			$query=$this->db->get('staffplacement');
			return $query->result();
        }
	}
	function fetch_grade_from_hoom_roomplace($user,$max_year){
      	$this->db->where(array('teacher'=>$user));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->group_by('roomgrade');
		$this->db->order_by('roomgrade','ASC');
		$query=$this->db->get('hoomroomplacement');
		return $query->result();
	}
	function fetch_grade_from_hoom_roomplaceD($user,$max_year){
      	$queryChk = $this->db->select('*')
            ->where('staff', $user)
            ->where('academicyear',$max_year)
            ->group_by('grade')
            ->order_by('grade','ASC')
            ->get('directorplacement');
    	return $queryChk->result();
	}
	function fetch_subject_from_staffplace($selected_branch,$gradesec,$max_year,$user,$mybranch){
		$output='';
		if($mybranch==$selected_branch){
			$this->db->where('grade',$gradesec);
			$this->db->where('staff',$user);
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->order_by('grade','ASC');
			$this->db->group_by('subject');
			$query=$this->db->get('staffplacement');
			$output .='<option> </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->subject.'">'.$row->subject.'</option>';
			}
		}else{
			$this->db->where('grade',$gradesec);
			$this->db->where('staff',$user);
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->order_by('grade','ASC');
			$this->db->group_by('subject');
			$query=$this->db->get('staffremoteplacement');
			$output .='<option> </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->subject.'">'.$row->subject.'</option>';
			}
		}
		return $output;
	}
	function fetch_grade_from_staffplacement($selected_branch,$max_year,$user,$mybranch){
		$output='';
		if($mybranch==$selected_branch){
			$this->db->where('staff',$user);
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->order_by('grade','ASC');
			$this->db->group_by('grade');
			$query=$this->db->get('staffplacement');
			$output.='<option> </option>';
			foreach ($query->result() as $row) { 
				$output.='<option value="'.$row->grade.'">'.$row->grade.'</option>';
			}
		}else{
			$this->db->where('staff',$user);
			$this->db->where('remotebranch',$selected_branch);
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->order_by('grade','ASC');
			$this->db->group_by('grade');
			$query=$this->db->get('staffremoteplacement');
			$output.='<option> </option>';
			foreach ($query->result() as $row) { 
				$output.='<option value="'.$row->grade.'">'.$row->grade.'</option>';
			}
		}
		return $output;
	}
	function fetchEval4Assesment($max_year,$quarter){
		$this->db->where(array('evaluation.quarter'=>$quarter));
		//$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('evaluation.academicyear'=>$max_year));
		//$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('evaluation.evname','ASC');
		$this->db->group_by('evaluation.evname');
		$this->db->select('*');
		$this->db->from('evaluation');
		$query=$this->db->get();
		/*$output ='<option> </option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->eid.'">'.$row->evname.'</option>';
		}*/
		return $query->result();
	}
	function fetchEval4AssesmentFilter($max_year){
		 $query2 = $this->db->query("select max(term) as quarter from quarter where Academic_Year='$max_year' group by termgroup ");
		 $output='';
        foreach($query2->result() as $quarter){
            $max_quarter=$quarter->quarter;
			$this->db->where(array('evaluation.quarter'=>$max_quarter));
			$this->db->where(array('evaluation.academicyear'=>$max_year));
			$this->db->order_by('evaluation.evname','ASC');
			$this->db->group_by('evaluation.evname');
			$this->db->select('*');
			$this->db->from('evaluation');
			$query=$this->db->get();
			foreach($query->result() as $evName){
				$output.=' <option> '.$evName->evname.' </option>';
                                
			}
		}
		return $output;	
	}
	function FilterAssesmentQuarterChange($evaluation,$gradesec,$max_year,$branch,$quarter,$subject){
		$this->db->where(array('schoolassesment.saseval'=>$evaluation));
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('schoolassesment.academicyear'=>$max_year));
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('schoolassesment.assorder','ASC');
		$this->db->group_by('schoolassesment.sasname');
		$this->db->select('*');
		$this->db->from('schoolassesment');
		$this->db->join('users',
		'users.grade = schoolassesment.sasgrade');
		$query=$this->db->get();
		$output ='<option> </option>';
		$dateToday=date('Y-m-d');
		foreach ($query->result() as $row) { 
			$ismandatory=$row->ismandatory;
			$queryCheckMark=$this->db->query("select markname from `mark".$branch.$gradesec.$quarter.$max_year."` where academicyear='$max_year' and markname='".$row->sasname."' and mbranch='$branch' and mgrade='$gradesec' and quarter='$quarter' and subname='$subject' ");
			if($queryCheckMark->num_rows()<1){
				$queryCheckDate=$this->db->query("select * from lockmarkauto where academicyear='$max_year' and autolockstatus='1' ");
				if($queryCheckDate->num_rows() > 0){
					$queryQuarterEndDate=$this->db->query("select * from schoolassesment where academicyear='$max_year' and sasname='".$row->sasname."' and dateend!='' ");
					if($queryQuarterEndDate->num_rows()>0){
						$endDateRow=$queryQuarterEndDate->row_array();
                		$endDateName=$endDateRow['dateend'];
	                	if($endDateName>=$dateToday){
	                		if($ismandatory==1){
	                			$output .='<option value="'.$row->sasname.'" class="text-danger">'.$row->sasname.'(Mandatory)</option>';
	                		}else{
	                			$output .='<option value="'.$row->sasname.'">'.$row->sasname.'</option>';
	                		}
	                	}
	                }else{
	                	$output .='<option value="'.$row->sasname.'">Set Assesment End Date</option>';
	                }
				}else{
					if($ismandatory==1){
            			$output .='<option value="'.$row->sasname.'" class="text-danger">'.$row->sasname.'(Mandatory)</option>';
            		}else{
            			$output .='<option value="'.$row->sasname.'">'.$row->sasname.'</option>';
            		}
				}
			}
		}
		return $output;
	}
	function FilterAssesmentQuarterChange_filteringby_branch($evaluation,$gradesec,$max_year,$branch,$quarter,$subject){
		$this->db->where(array('schoolassesment.saseval'=>$evaluation));
		$this->db->where(array('schoolassesment.assesment_branch'=>$branch));
		$this->db->where(array('schoolassesment.assesment_subject'=>$subject));
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('schoolassesment.academicyear'=>$max_year));
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('schoolassesment.assorder','ASC');
		$this->db->group_by('schoolassesment.sasname');
		$this->db->select('*');
		$this->db->from('schoolassesment');
		$this->db->join('users',
		'users.grade = schoolassesment.sasgrade');
		$query=$this->db->get();
		$output ='<option> </option>';
		$dateToday=date('Y-m-d');
		foreach ($query->result() as $row) { 
			$ismandatory=$row->ismandatory;
			$queryCheckMark=$this->db->query("select markname from `mark".$branch.$gradesec.$quarter.$max_year."` where academicyear='$max_year' and markname='".$row->sasname."' and mbranch='$branch' and mgrade='$gradesec' and quarter='$quarter' and subname='$subject' ");
			if($queryCheckMark->num_rows()<1){
				$queryCheckDate=$this->db->query("select * from lockmarkauto where academicyear='$max_year' and autolockstatus='1' ");
				if($queryCheckDate->num_rows() > 0){
					$queryQuarterEndDate=$this->db->query("select * from schoolassesment where academicyear='$max_year' and sasname='".$row->sasname."' and dateend!='' ");
					if($queryQuarterEndDate->num_rows()>0){
						$endDateRow=$queryQuarterEndDate->row_array();
                		$endDateName=$endDateRow['dateend'];
	                	if($endDateName>=$dateToday){
	                		if($ismandatory==1){
	                			$output .='<option value="'.$row->sasname.'" class="text-danger">'.$row->sasname.'(Mandatory)</option>';
	                		}else{
	                			$output .='<option value="'.$row->sasname.'">'.$row->sasname.'</option>';
	                		}
	                	}
	                }else{
	                	$output .='<option value="'.$row->sasname.'">Set Assesment End Date</option>';
	                }
				}else{
					if($ismandatory==1){
            			$output .='<option value="'.$row->sasname.'" class="text-danger">'.$row->sasname.'(Mandatory)</option>';
            		}else{
            			$output .='<option value="'.$row->sasname.'">'.$row->sasname.'</option>';
            		}
				}
			}
		}
		return $output;
	}
	function FilterPercentageAssesmentChange($evaluation,$gradesec,$max_year,$branch,$quarter,$subject){
		$this->db->where(array('schoolassesment.sasname'=>$evaluation));
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('schoolassesment.academicyear'=>$max_year));
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('schoolassesment.assorder','ASC');
		$this->db->group_by('schoolassesment.sasname');
		$this->db->select('schoolassesment.saspercent');
		$this->db->from('schoolassesment');
		$this->db->join('users',
		'users.grade = schoolassesment.sasgrade');
		$query=$this->db->get();
		$output ='';
		$dateToday=date('Y-m-d');
		foreach ($query->result() as $row) { 
			$saspercent=$row->saspercent;
			$output.=$saspercent;
		}
		return $output;
	}
	function fetch_evaluation_on_quarterchange($quarter,$gradesec,$max_year){
		$this->db->where(array('evaluation.quarter'=>$quarter));
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('evaluation.academicyear'=>$max_year));
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('evaluation.evname','ASC');
		$this->db->group_by('evaluation.evname');
		$this->db->select('*');
		$this->db->from('evaluation');
		$this->db->join('users',
		'users.grade = evaluation.grade');
		$query=$this->db->get();
		$output ='<option> </option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->eid.'">'.$row->evname.'</option>';
		}
		return $output;
	}
	function fetch_evaluation_from_staffplace($gradesec,$max_year,$max_quarter){
		$this->db->where(array('evaluation.quarter'=>$max_quarter));
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('evaluation.academicyear'=>$max_year));
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('evaluation.evname','ASC');
		$this->db->group_by('evaluation.evname');
		$this->db->select('*');
		$this->db->from('evaluation');
		$this->db->join('users',
		'users.grade = evaluation.grade');
		$query=$this->db->get();
		$output ='<option> </option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->eid.'">'.$row->evname.'</option>';
		}
		return $output;
	}
	function fetch_grade_from_branch($branch,$max_year){
		$output='';
		$this->db->where('users.usertype','Student');
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output .='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}
	    return $output;
	}
	function filter_quarter_fromyear($max_year){
		$output='';
		$this->db->where(array('quarter.Academic_year'=>$max_year));
		$this->db->order_by('quarter.term','ASC');
		$this->db->group_by('quarter.term');
		$query=$this->db->get('quarter');
		$output .='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->term.'">'.$row->term.'</option>';
		}
	    return $output;
	}
	function filter_quarter_fromyear_markanalysis($max_year){
		$output='';
		$this->db->where('Academic_year',$max_year);
		$this->db->group_by('term');
		$this->db->order_by('term','ASC');
		$query=$this->db->get('quarter');
		$output .='<div class="row">';
		foreach ($query->result() as $fetch_terms) { 
			$output .=' <div class="col-md-6 col-12">
                <div class="pretty p-icon p-jelly p-round p-bigger">
                  <input type="checkbox" name="quarter_statisticsGrade[ ]" value="'.$fetch_terms->term.'" id="customCheck1 quarter_statisticsGrade">
                  <div class="state p-info">
                    <i class="icon material-icons"></i>
                    <label></label>'.$fetch_terms->term.'
                  </div>
                </div>
            </div>';
		}
		$output .='</div>';
	    return $output;
	}
	function filter_gradesec_ongrade_change($grades,$max_year){
		$this->db->where('users.grade',$grades);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='';
		$output.='<input type="checkbox" class="" id="selectAll_gradesec_GS" onClick="selectAll_gradesec_GS_Now()">Select All<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-6 col-12">
                <div class="pretty p-bigger">
                  	<input type="checkbox" name="gradesec_list_gs" value="'.$row->gradesec.'" class="gradesec_list_gs" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->gradesec.'
                  	</div>
                </div>
            </div>'; 
		}
	    return $output;
	}
	function fetch_grade_from_branch_forStudentASP($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function filter_gradesec_ongrade_change_asp($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		$output.='<input type="checkbox" class="" id="selectAll_gradesec_asp" onClick="selectAll_gradesec_asp_now()">Select All<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-4 col-6">
                <div class="pretty p-bigger">
                  	<input type="checkbox" name="gradesec_list_gs_asp" value="'.$row->grade.'" class="gradesec_list_gs_asp" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->grade.'
                  	</div>
                </div>
            </div>'; 
		}
		$output.='</div>';
	    return $output;
	}
	function fetch_asp_student_list($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		$output.='<input type="checkbox" class="" id="fetch_asp_student_list" onClick="fetch_asp_student_list_now()">Select All<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-4 col-6">
                <div class="pretty p-bigger">
                  	<input type="checkbox" name="fetch_asp_student_list" value="'.$row->grade.'" class="fetch_asp_student_list" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->grade.'
                  	</div>
                </div>
            </div>'; 
		}
		$output.='</div>';
	    return $output;
	}
	function fetch_grade_from_branch_history($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function fetch_grade_from_branch_gs($gradesec,$max_year){
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output='';
		$output.='<input type="checkbox" class="" id="selectAllSubjectGS" onClick="selectAllSubject()"> Select All<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-6 col-12">
                <div class="pretty p-bigger">
                  	<input type="checkbox" name="grade_mark_resultGS" value="'.$row->Subj_name.'" class="grade_mark_resultGS" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->Subj_name.'
                  	</div>
                </div>
            </div>'; 
		}
		$output.='</div>';
		return $output;
	}
	function fetch_grade_from_branch_comment($gradesec,$max_year){
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output='';
		$output.='<option></option>';
		foreach ($query->result() as $row) {
			$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
		}
		return $output;
	}
	function fetch_term_from_grade($grade,$max_year){
		$this->db->select('quarter.term');
		$this->db->from('users');
		$this->db->join('quarter',
		'quarter.termgrade=users.grade');
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.gradesec',$grade);
		$this->db->where('quarter.Academic_year',$max_year);
		$this->db->group_by('quarter.term');
		$query=$this->db->get();
		$output ='';
		if($query->num_rows()>0){
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->term.'">'.$row->term.'</option>';
			}
		}else{
			$output .='<option>No Term/Quarter</option>';
		}
	    return $output;
	}
	function filterQuarterToNGMarkShow($grade,$max_year){
		foreach($grade as $gradesec){
			$this->db->select('quarter.term');
			$this->db->from('users');
			$this->db->join('quarter',
			'quarter.termgrade=users.grade');
			$this->db->where('users.academicyear',$max_year);
			$this->db->where('users.gradesec',$gradesec);
			$this->db->where('quarter.Academic_year',$max_year);
			$this->db->group_by('quarter.term');
			$query=$this->db->get();
			$output ='';
			if($query->num_rows()>0){
				$output.='<option></option>';
				foreach ($query->result() as $row) { 
					$output .='<option value="'.$row->term.'">'.$row->term.'</option>';
				}
			}else{
				$output .='<option>No Term/Quarter</option>';
			}
		}
	    return $output;
	}
	function fetch_term_from_gradegs($grade,$max_year){
		$this->db->where('quarter.termgrade',$grade);
		$this->db->where('quarter.Academic_year',$max_year);
		$this->db->group_by('quarter.term');
		$query=$this->db->get('quarter');
		$output ='';
		if($query->num_rows()>0){
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->term.'">'.$row->term.'</option>';
			}
		}else{
			$output .='<option>No Term/Quarter</option>';
		}
	    return $output;
	}
	function filterGradeFromBranchGS($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='';
		$output.='<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-4 col-6">
                <div class="pretty p-bigger">
                  	<input type="checkbox" name="grade2analysisGrandstande" value="'.$row->gradesec.'" class="grade2analysisGrandstande" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->gradesec.'
                  	</div>
                </div>
            </div>'; 
		}
		$output.='</div>';
	    return $output;
	}
	function filterGradesecToNGMarkShow($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='';
		$output.='<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-4 col-6">
                <div class="pretty p-icon p-jelly p-round p-bigger">
                  	<input type="checkbox" name="gradesec2ShowNgmark" value="'.$row->gradesec.'" class="gradesec2ShowNgmark" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>
                  	</div>
                </div>'.$row->gradesec.'
            </div>'; 
		}
		$output.='</div>';
	    return $output;
	}
	function filterGradeFromCustomBranchGS($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='';
		$output.='<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-3 col-6">
                <div class="pretty p-bigger">
                  	<input type="checkbox" name="gradeCustomAnalysisGrandstande" value="'.$row->gradesec.'" class="gradeCustomAnalysisGrandstande" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->gradesec.'
                  	</div>
                </div>
            </div>'; 
		}
		$output.='</div>';
	    return $output;
	}
	function filter_evaluation4CustomAnalysisGrand($mybranch,$gradesecs,$max_year,$quarter)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query=$this->db->query("select ev.sasid,ev.sasname from users as u right join schoolassesment as ev ON u.grade=ev.sasgrade where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and ev.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' group by ev.sasname , ev.sasgrade order by sasid ASC ");
			$output='<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$output.='<div class="col-lg-4 col-6">
	                <div class="pretty p-bigger">
	                  <input type="radio" name="customevaluationanalysis" value="'.$evavalue->sasname.'" class="customevaluationanalysis" id="customCheck1">
	                  <div class="state p-info">
	                    <i class="icon material-icons"></i>
	                    <label></label>'.$evavalue->sasname.'
	                  </div>
	                </div> 
	            </div>';
			}
			$output.='</div>';
		}
		return $output;
	}
	function filter_evaluation4CustomAnalysisGrand_option($mybranch,$gradesecs,$max_year,$quarter)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query=$this->db->query("select ev.sasid,ev.sasname from users as u right join schoolassesment as ev ON u.grade=ev.sasgrade where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and ev.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' group by ev.sasname , ev.sasgrade order by sasid ASC ");
			$output='';
			foreach ($query->result() as $evavalue) {
				$output.='<option value="'.$evavalue->sasname.'">'.$evavalue->sasname.'</option> ';
			}
			$output.='';
		}
		return $output;
	}
	function fetch_assesment_range_outof($mybranch,$subject,$gradesecs,$max_year,$quarter,$analysis_subject)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$mybranch.$gradesec.$quarter.$max_year."' ");
	      	if ($queryCheckMark->num_rows()>0){
				foreach($subject as $subjects){
					$query=$this->db->query("select outof from mark".$mybranch.$gradesec.$quarter.$max_year." where academicyear='$max_year' and mgrade='$gradesec' and quarter='$quarter' and mbranch='$mybranch' and subname='$subjects' and markname='$analysis_subject' group by outof order by outof ASC ");
					$output.='<option></option> ';
					foreach ($query->result() as $evavalue) {
						$vAlign=$evavalue->outof;
						for($i=$vAlign;$i>=1;$i--){
							$output.='<option value="'.$i.'"><='.$i.'</option>';
						}
					}
				}
			}
			$output.='</div>';
		}
		return $output;
	}
	function filterSubjectToNGMarkShow($mybranch,$gradesecs,$max_year)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query=$this->db->query("select ev.Subj_Id,ev.Subj_name from users as u right join subject as ev ON u.grade=ev.Grade where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and ev.Academic_Year='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' group by ev.Subj_name , ev.Grade order by Subj_name ASC ");
			$output ='<input type="checkbox" class="" id="subjectToShowNgMarkHere" onClick="selectAllSubjectList()"> Select All<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$output.='<div class="col-lg-6 col-12">
	                <div class="pretty p-bigger">
	                  <input type="checkbox" name="subjectToShowNgMark" value="'.$evavalue->Subj_name.'" class="subjectToShowNgMark" id="customCheck1">
	                  <div class="state p-success">
	                    <i class="icon material-icons"></i>
	                    <label></label>'.$evavalue->Subj_name.'
	                  </div>
	                </div> 
	            </div>';
			}
			$output.='</div>';
		}
		return $output;
	}
	function filterSubject4CustomAnalysisGrand($mybranch,$gradesecs,$max_year,$quarter,$assesname)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$mybranch.$gradesec.$quarter.$max_year."' ");
	      	if ($queryCheckMark->num_rows()>0){
				$query=$this->db->query("select subname,outof from mark".$mybranch.$gradesec.$quarter.$max_year." where academicyear='$max_year' and mgrade='$gradesec' and quarter='$quarter' and mbranch='$mybranch' and markname='$assesname' group by subname order by subname ASC ");
				$output.='<div class="row">';
				foreach ($query->result() as $evavalue) {
					$output.='<div class="col-lg-6 col-12">
	                <div class="pretty p-icon p-jelly p-bigger">
	                  <input type="checkbox" name="customSubjectAnalysis" value="'.$evavalue->subname.'" class="customSubjectAnalysis" id="customCheck1">
	                  <div class="state p-success">
	                    <i class="icon material-icons"></i>
	                    <label></label>'.$evavalue->subname.'('.$evavalue->outof.')
	                  </div>
	                </div> 
	           	 </div>';
				}
				$output.='</div>';
			}else{
				$output.='No Record';
			}
		}
		return $output;
	}
	function filterSubject4DefaultAnalysisGrand_New($mybranch,$gradesecs,$max_year,$quarter)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query=$this->db->query("select ev.Subj_Id,ev.Subj_name from users as u right join subject as ev ON u.grade=ev.Grade where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and ev.Academic_Year='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' group by ev.Subj_name , ev.Grade order by Subj_name ASC ");
			$output='<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$output.='<div class="col-lg-6 col-12">
	                <div class="pretty p-bigger">
	                  <input type="checkbox" name="defaultSubjectAnalysis_new" value="'.$evavalue->Subj_name.'" class="defaultSubjectAnalysis_new" id="customCheck1">
	                  <div class="state p-success">
	                    <i class="icon material-icons"></i>
	                    <label></label>'.$evavalue->Subj_name.'
	                  </div>
	                </div> 
	            </div>';
			}
			$output.='</div>';
		}
		return $output;
	}
	function filterSubject4DefaultAnalysisGrand($mybranch,$gradesecs,$max_year,$quarter)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query=$this->db->query("select ev.Subj_Id,ev.Subj_name from users as u right join subject as ev ON u.grade=ev.Grade where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and ev.Academic_Year='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' group by ev.Subj_name , ev.Grade order by Subj_name ASC ");
			$output='<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$output.='<div class="col-lg-6 col-6">
	                <div class="pretty p-bigger">
	                  <input type="checkbox" name="defaultSubjectAnalysis" value="'.$evavalue->Subj_name.'" class="defaultSubjectAnalysis" id="customCheck1">
	                  <div class="state p-success">
	                    <i class="icon material-icons"></i>
	                    <label></label>'.$evavalue->Subj_name.'
	                  </div>
	                </div> 
	            </div>';
			}
			$output.='</div>';
		}
		return $output;
	}
	function filterSubject4CustomEvaluation($gradesecs,$max_year)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$gradesec' group by Subj_name order by suborder ASC ");
			$output='<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$output.='<div class="col-lg-6 col-md-6 col-12">
	                <div class="pretty p-bigger">
	                  <input type="checkbox" name="subject4CustomEvaluation" value="'.$evavalue->Subj_name.'" class="subject4CustomEvaluation" id="customCheck1">
	                  <div class="state p-success">
	                    <i class="icon material-icons"></i>
	                    <label></label>'.$evavalue->Subj_name.'
	                  </div>
	                </div> 
	            </div>';
			}
			$output.='</div>';
		}
		return $output;
	}
	function filterAssesmentCustomEvaluation($gradesecs,$max_year)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query2 = $this->db->query("select max(term) as quarter from quarter where Academic_year='$max_year' and termgrade ='$gradesec' group by termgroup ");
			if($query2->num_rows()>0){
	            $row2 = $query2->row();
	            $max_quarter=$row2->quarter;
				$query=$this->db->query("select * from evaluation where academicyear='$max_year' and grade='$gradesec' and quarter='$max_quarter' group by evname order by evname ASC ");
				$output='<div class="row"> ';
				foreach ($query->result() as $evavalue) {
					$output.='<div class="col-lg-12 col-12">
		                <div class="pretty p-round p-bigger">
		                  <input type="checkbox" name="assesment4CustomEvaluation" value="'.$evavalue->evname.'" class="assesment4CustomEvaluation" id="customCheck1" >
		                  <div class="state p-success">
		                    <i class="icon material-icons"></i>
		                    <label></label>'.$evavalue->evname.'
		                  </div>
		                </div> 
		            </div>';
				}
				$output.='</div>';
			}
		}
		return $output;
	}
	function filterAssesmentStudentsExam($gradesec,$max_year,$gs_quarter)
	{
		$output='';
		$query=$this->db->query("select evname,eid from evaluation where academicyear='$max_year' and grade='$gradesec' and quarter='$gs_quarter' group by evname order by evname ASC ");
		$output='<div class="row"> ';
		foreach ($query->result() as $evavalue) {
			$output.='<div class="col-lg-6 col-12">
                <div class="pretty p-bigger">
                  <input type="checkbox" name="assesment4StudentsExam" value="'.$evavalue->eid.'" class="assesment4StudentsExam" id="customCheck1" >
                  <div class="state p-success">
                    <i class="icon material-icons"></i>
                    <label></label>'.$evavalue->evname.'
                  </div>
                </div> 
            </div>';
		}
		$output.='</div>';
		
		return $output;
	}
	function fetchSubject4SubSubject($grade2analysis,$max_year)
	{
		$output='';
		$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade2analysis' group by Subj_name order by suborder ASC ");
		$output='<div class="row"> ';
		foreach ($query->result() as $evavalue) {
			$output.='<div class="col-lg-6 col-12">
                <div class="pretty p-icon p-jelly p-round p-bigger">
                  <input type="checkbox" name="subSubjectAnalysis" value="'.$evavalue->Subj_name.'" class="subSubjectAnalysis" id="customCheck1">
                  <div class="state p-success">
                    <i class="icon material-icons"></i>
                    <label></label>
                  </div>
                </div> '.$evavalue->Subj_name.'
            </div>';
		}
		$output.='</div>';
		
		return $output;
	}
	function fetchSubject4CustomPercentage($grade2analysis,$max_year,$max_quarter)
	{
		$output='';
		$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade2analysis' group by Subj_name order by suborder ASC ");
		if($query->num_rows()>0){
			$output.='<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$grade=$evavalue->Grade;
				$subject=$evavalue->Subj_name;
				$queryCheck=$this->db->query("select * from subject_custom_percentage where academicyear='$max_year' and grade='$grade' and quarter='$max_quarter' and subject='$subject' ");
				$output.='<div class="col-lg-6 col-12">
				<div class="StudentViewTextInfo">
				<select name="customPercentageSubjectAnalysis" class="customPercentageSubjectAnalysis" id="customPercentageSubjectAnalysis">
	                <option></option>';
	                for($i=100;$i>=0;$i--) { 
	                	if($i==$evavalue->Merged_percent){
	                		$output.='<option name="'.$evavalue->Subj_name.'" id="'.$evavalue->Grade.'" value="'.$i.'" selected="selected"> '.$i.' </option>';
	                	}else{
	                		$output.='<option name="'.$evavalue->Subj_name.'" id="'.$evavalue->Grade.'" value="'.$i.'"> '.$i.' </option>';
	                	}
	                }
	              $output.='</select>'.$evavalue->Subj_name.'';
	              if($queryCheck->num_rows()>0){
	              	$rowPercent=$queryCheck->row();
	              	$percent=$rowPercent->percentage;
	              	$output.='<span class="badge badge-success">Customized to '.$percent.' </span>
	              	<button class="btn btn-default Remove_customized_subjectPercentage" title="'.$evavalue->Subj_name.'" id="'.$evavalue->Grade.'" value="'.$max_quarter.'" name="'.$max_year.'"><span class="text-danger"><i class="fas fa-times-circle"></i></span></button> ';
	              }else{
	              	$output.='<span class="badge badge-light">Default</span>';
	              }
	              $output.='</div>
	            </div>';
			}
			$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No subject found.
        	</div></div>';
		}
		return $output;
	}
	function saveSubSubjectName($subSubject,$check,$checkGrade,$last_word,$max_year){
		$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$checkGrade' and Subj_name='$check' group by Subj_name order by suborder ASC ");
		if($query->num_rows()>0){
			$subjectlist=$this->db->query("select * from subjectlist where academicyear='$max_year' and grade='$checkGrade' and subname='$check' and listname ='$subSubject' ");
			if($subjectlist->num_rows()<1){
				$data=array(
					'grade'=>$checkGrade,
					'subname'=>$check,
					'listname'=>$subSubject,
					'subav'=>$last_word,
					'academicyear'=>$max_year
				);
				$query=$this->db->insert('subjectlist',$data);
			}
		}
	}
	function fetchSubSubject($max_year){
		$query=$this->db->query("select * from subjectlist where academicyear='$max_year' group by grade,listname order by id ASC ");
		/*$query=$this->db->query("select *, GROUP_CONCAT(grade) as grade_bsname from subjectlist where academicyear='$max_year' group by listname order by id ASC ");*/
		$output='';
		if($query->num_rows()>0){
			$totalSubject=$query->num_rows();
			$output .='
			<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Group Name</th>
	                    <th>Group Order</th>
	                    <th>Grade</th>
	                    <th>Subject List</th>
	                    <th>Academic Year</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$listname=$bsnames->listname;
				$grade=$bsnames->grade;
				$queryGroup=$this->db->query("select * from subjectlist where academicyear='$max_year' and listname='$listname' and grade='$grade' group by subname order by id ASC ");
				$totalGroup=$queryGroup->num_rows() + 1;
				$output.='<tr> <td rowspan="'.$totalGroup.'">'.$no.'.</td><td rowspan="'.$totalGroup.'">'.$listname.'</td> ';

				$output.='<td rowspan="'.$totalGroup.'">
				<select class="form-control" name="subListOrder" id="subListOrder">';
				for($i=1;$i<=$totalSubject;$i++){
					if($bsnames->listorder==$i){
						$output.='<option class="'.$bsnames->listname.'" name="'.$bsnames->grade.'" selected="selected" value="'.$i.'">'.$bsnames->listorder.'</option>';
					}else{
						$output.='<option class="'.$bsnames->listname.'" name="'.$bsnames->grade.'" value="'.$i.'">'.$i.'</option>';
					}
				}
				$output.='</select></td>';
				foreach($queryGroup->result() as $listName){
					$output.='<tr class="deletesubSubject'.$listName->id.'">
	                <td>'.$listName->grade.'
	                <div class="table-links"> <a href="#" 
	                class="deleteSubSubject" value="'.$listName->id.'">
	                 <span class="text-danger">Delete</span> 
	                 </a> </div> </td>
	                <td>'.$listName->subname.'</td>';
	                $output.='<td>'.$listName->academicyear.'</td>
	            	</tr>';
				}
				$output.='</tr>';
	            $no++;
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_grade_from_branchAll($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->where('users.usertype','Student');
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-3 col-4">
			<input type="checkbox" class="studentGradeSecJoss" name="studentGradeSecJoss" value="'.$row->gradesec.'"/>'.$row->gradesec.'</div>';
		}
		$output .='</div>';

		/*foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}*/
	    return $output;
	}
	function fetch_grade_from_branchAll_dataProgress($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->where('users.usertype','Student');
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-3 col-4">
			<div class="pretty p-bigger">
              <input type="checkbox" name="studentGradeSecJoss_dataProgress" class="studentGradeSecJoss_dataProgress" id="'.$row->gradesec.'" value="'.$row->gradesec.'" >
              <div class="state p-success">
                <label></label>'.$row->gradesec.'
              </div>
            </div></div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetchCrossGradeFromBranch($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->where('users.usertype','Student');
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-3 col-4">
			<input type="checkbox" class="studentGradeCrossProgress" name="studentGradeCrossProgress" value="'.$row->grade.'"/>'.$row->grade.'</div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetchGradeFromBranchTransport($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.grade !=','');
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-4 col-6">
			<input type="checkbox" class="studentServiceGrade" name="studentServiceGrade" value="'.$row->grade.'"/>'.$row->grade.'
			<input type ="hidden" name="studentListPLace" id="studentListPLace" value="'.$max_year.'"/>
			</div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fecth_student_for_custom_password($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.grade !=','');
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-3 col-6">
				<div class="pretty p-fill">
	              <input type="checkbox" name="studentGradeOfBranch" class="studentGradeOfBranch" value="'.$row->grade.'">
	              <div class="state p-success">
	                <label></label>'.$row->grade.'
	              </div>
	            </div>
				<input type ="hidden" name="studentYearOfBranch" id="studentYearOfBranch" value="'.$max_year.'"/>
			</div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetchThisGradeStudentGeneratePassword($grade,$academicyear){
		$output ='<input type="checkbox" class="" id="selectallStudent_password" onClick="selectAll_passwordStudent()">Select All<div class="row"> ';
		foreach($grade as $grades){
			$this->db->where('grade',$grades);
			$this->db->where('status','Active');
			$this->db->where('isapproved','1');
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('users.fname,users.mname,users.lname','ASC');
			$this->db->group_by('users.id');
			$query=$this->db->get('users');
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-6 col-12">
					<div class="pretty p-fill">
	                  <input type="checkbox" name="studentListGenerate_password[ ]" class="studentListGenerate_password" value="'.$row->username.'">
	                  <div class="state p-success">
	                    <label></label>'.$row->username.' ('.$row->fname.' '.$row->mname.' '.$row->lname.')
	                  </div>
	                </div>
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function fetch_school_parents_grade($branch,$max_year){
		$output='';
		$this->db->where('users.branch',$branch);
		$this->db->where('users.grade !=','');
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-4 col-6">
			<input type="checkbox" class="fect_schoolParents_grade" name="fect_schoolParents_grade" value="'.$row->grade.'"/>'.$row->grade.'
			<input type ="hidden" name="fect_schoolParents_year" id="fect_schoolParents_year" value="'.$max_year.'"/>
			</div>';
		}
		$output .='</div>';
	    return $output;
	}
	function Filter_grade_from_branch_Back($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.grade !=','');
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'"> '.$row->gradesec.' </option>';
		}
		return $output;
	}
	function fetchGradeFromBranch_summerTransport($branch,$max_year){
		$this->db->where('summerstudent.branch',$branch);
		$this->db->where('summerstudent.grade !=','');
		$this->db->where('summerstudent.usertype','Student');
		$this->db->where(array('summerstudent.academicyear'=>$max_year));
		$this->db->order_by('summerstudent.grade','ASC');
		$this->db->group_by('summerstudent.grade');
		$query=$this->db->get('summerstudent ');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-4 col-6">
			<input type="checkbox" class="summer_studentServiceGrade" name="summer_studentServiceGrade" value="'.$row->grade.'"/>'.$row->grade.'
			<input type ="hidden" name="summer_studentListPLace" id="summer_studentListPLace" value="'.$max_year.'"/>
			</div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetchGradeForSummaryDirector($user,$max_year){
		$this->db->select('users.grade');
		$this->db->from('users');
		$this->db->join('directorplacement',
		'directorplacement.grade=users.gradesec');
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('directorplacement.academicyear',$max_year);
		$this->db->where('directorplacement.staff',$user);
		$this->db->group_by('users.grade');
		$query=$this->db->get();
		return $query->result();
	}
	function fetchGradeForSummaryTeacher($user,$max_year){
		$this->db->select('users.grade');
		$this->db->from('users');
		$this->db->join('staffplacement',
		'staffplacement.grade=users.gradesec');
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('staffplacement.academicyear',$max_year);
		$this->db->where('staffplacement.staff',$user);
		$this->db->group_by('users.grade');
		$query=$this->db->get();
		return $query->result();
	}
	function fetch_GradeFor_SummaryTeacher($user,$max_year){
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$this->db->where(array('staff'=>$user));
		$this->db->where(array('staffplacement.academicyear'=>$max_year));
        $query = $this->db->get('staffplacement');
        return $query->result();
	}
	function fetchThisGradeStudentIdcard($grade,$academicyear){
		$output ='<input type="checkbox" class="" id="selectallStudentList" onClick="selectAllStudent()">Select All<div class="row"> ';
		foreach($grade as $grades){
			$this->db->where('grade',$grades);
			$this->db->where('status','Active');
			$this->db->where('isapproved','1');
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('users.fname,users.mname,users.lname','ASC');
			$this->db->group_by('users.id');
			$query=$this->db->get('users');
			
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-12 col-12">
				<input type="checkbox" class="studentListTransportService" name="studentListTransportService[ ]" value="'.$row->id.'"/>'.$row->fname.' '.$row->mname.' '.$row->lname.'
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function fetchThisGradesummer_StudentIdcard($grade,$academicyear){
		$output ='<input type="checkbox" class="" id="summer_selectallStudentList" onClick="selectAllsummer_Student()">Select All<div class="row"> ';
		foreach($grade as $grades){
			$this->db->where('grade',$grades);
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('summerstudent.fname,summerstudent.mname,summerstudent.lname','ASC');
			$this->db->group_by('summerstudent.id');
			$query=$this->db->get('summerstudent');
			
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-12 col-12">
				<input type="checkbox" class="summer_studentListTransportService" name="summer_studentListTransportService[ ]" value="'.$row->id.'"/>'.$row->fname.' '.$row->mname.' '.$row->lname.'
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function fetchThisGradeStudentMoveCopyMarkQuarterly($academicyear,$branch){
		$output ='<div class="row"> ';
		$this->db->where('usertype','Student');
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$academicyear);
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-3 col-6">
			<input type="checkbox" class="selectAllMoveCopyMarkQuarterly" name="selectAllMoveCopyMarkQuarterly[ ]" value="'.$row->grade.'"/>'.$row->grade.'
			</div>';
		}
		
		$output .='</div>';
		return $output;
	}
	function fetchThisGradeStudentMoveCopyMarkSubject($academicyear,$branch){
		$output ='<div class="row"> ';
		$this->db->where('usertype','Student');
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$academicyear);
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-3 col-6">
			<input type="checkbox" class="selectAllMoveCopyMarkSubjectly" name="selectAllMoveCopyMarkSubjectly[ ]" value="'.$row->grade.'"/>'.$row->grade.'
			</div>';
		}
		
		$output .='</div>';
		return $output;
	}
	function fetchThisGradeSubjectQuarterly($academicyear,$grades){
		foreach($grades as $grade){
			$this->db->where('subject.Grade',$grade);
			$this->db->where(array('subject.Academic_Year'=>$academicyear));
			$this->db->order_by('subject.Subj_name','ASC');
			$this->db->group_by('subject.Subj_name');
			$query=$this->db->get('subject');
			$output ='<option>  </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
			}
			return $output;
		}
	}
	function fetchThisGradeSubjectFromark($gs_branches,$academicyear,$grades,$fromQuarter){
		$output='';
		
		foreach($grades as $grade){
			$queryUser=$this->db->query("select gradesec from users where academicyear='$academicyear' and grade='$grade' and usertype='Student' and branch='$gs_branches' group by gradesec ");
			if($queryUser->num_rows()>0){
				foreach($queryUser->result() as $gradeRow){
					$gradesec=$gradeRow->gradesec;
					$queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gradesec.$fromQuarter.$academicyear."' ");
					if ($queryCheckMark->num_rows()>0){
						$query=$this->db->query("select * from mark".$gs_branches.$gradesec.$fromQuarter.$academicyear." where academicyear='$academicyear' and mgrade='$gradesec' and quarter='$fromQuarter' and mbranch='$gs_branches' group by subname order by subname ASC ");
						foreach ($query->result() as $row) { 
							$output .='<option value="'.$row->subname.'">'.$row->subname.'</option>';
						}
					}
				}
			}
		}
		
		return $output;
	}
	function fetchThisGradeStudentMoveCopyMark($academicyear,$branch){
		$output ='<div class="row"> ';
		$this->db->where('usertype','Student');
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$academicyear);
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-3 col-6">
			<input type="checkbox" class="selectAllStudentMoveCopyMark" name="selectAllStudentMoveCopyMark[ ]" value="'.$row->grade.'"/>'.$row->gradesec.'
			</div>';
		}
		
		$output .='</div>';
		return $output;
	}
	function fetchThisGradeSubjectMoveCopyMark($academicyear,$grades){
		foreach($grades as $grade){
			$this->db->where('subject.Grade',$grade);
			$this->db->where(array('subject.Academic_Year'=>$academicyear));
			$this->db->order_by('subject.Subj_name','ASC');
			$this->db->group_by('subject.Subj_name');
			$query=$this->db->get('subject');
			$output ='<option>  </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
			}
			return $output;
		}
	}
	function copyAssesmentQuarterlyMark($gs_branches,$check,$subject,$fromQuarter,$toQuarter,$max_year){
		$output='';
		foreach($check as $grade){
			$queryUser=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' and branch='$gs_branches' group by gradesec ");
			if($queryUser->num_rows()>0){
				foreach($queryUser->result() as $gradeRow){
					$gradesec=$gradeRow->gradesec;
					$data=array();
					$queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gradesec.$fromQuarter.$max_year."' ");
		            if ($queryCheckMark->num_rows()>0){
		            	$queryEvaluation=$this->db->query("select * from evaluation where quarter='$fromQuarter' and academicyear='$max_year' and grade='$grade' group by eid order by eid ASC");
	        			if($queryEvaluation->num_rows()>0){
	        				foreach($queryEvaluation->result() as $assesName){
	        					$eid=$assesName->eid;
	        					$evalName=$assesName->evname;
			            		$queryMark=$this->db->query("select * from mark".$gs_branches.$gradesec.$fromQuarter.$max_year." where academicyear='$max_year' and subname='$subject' and mgrade='$gradesec' and quarter='$fromQuarter' and mbranch='$gs_branches' and evaid='$eid' ");
			            		if($queryMark->num_rows()>0){
			            			foreach($queryMark->result() as $markName){
				            			$stuid=$markName->stuid;
				            			$outof=$markName->outof;
				            			$value=$markName->value;
				            			$status=$markName->status;
				            			$lockmark=$markName->lockmark;
				            			$markname=$markName->markname;
				            			$approved=$markName->approved;
				            			$approvedby=$markName->approvedby;
				            			$zeromarkinfo=$markName->zeromarkinfo;
		            					$queryAssesment=$this->db->query("select * from evaluation where quarter='$toQuarter' and academicyear='$max_year' and grade='$grade' and evname='$evalName' group by eid ");
		            					if($queryAssesment->num_rows()>0){
		            						$asseRow=$queryAssesment->row_array();
		            						$eid=$asseRow['eid'];
		            						$queryCheckMark=$this->db->query("select * from mark".$gs_branches.$gradesec.$toQuarter.$max_year." where academicyear='$max_year' and subname='$subject' and mgrade='$gradesec' and quarter='$toQuarter' and mbranch='$gs_branches' and markname='$markname' ");
		            						if($queryCheckMark->num_rows()<1){
			            						$data[]=array(
			            							'stuid'=>$stuid,
			            							'mgrade'=>$gradesec,
			            							'subname'=>$subject,
			            							'evaid'=>$eid,
			            							'quarter'=>$toQuarter,
			            							'outof'=>$outof,
			            							'value'=>$value,
			            							'academicyear'=>$max_year,
			            							'markname'=>$markname,
			            							'status'=>$status,
			            							'lockmark'=>$lockmark,
			            							'approved'=>$approved,
			            							'approvedby'=>$approvedby,
			            							'zeromarkinfo'=>$zeromarkinfo,
			            							'mbranch'=>$gs_branches
			            						);
			            					}
		            					}else{
		            						$output .='<div class="alert alert-warning alert-dismissible show fade">
								                <div class="alert-body">
								                    <button class="close"  data-dismiss="alert">
								                        <span>&times;</span>
								                    </button>
								                <i class="fas fa-check-circle"> </i> Something wrong at new Quarter evaluation for Grade '.$gradesec.'.
								        	</div></div>';
		            					}
		            				}
		            			}
		            		}
		            	}else{
		            		$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> Something wrong at evaluation for Grade '.$gradesec.'.
				        	</div></div>';
		            	}
		        	}else{
		        		$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> No table found for Grade '.$gradesec.'.
				        	</div></div>';
		        	}
		        	if(!empty($data)){
						$query=$this->db->insert_batch('mark'.$gs_branches.$gradesec.$toQuarter.$max_year,$data);
						if($query){
							$output .='<div class="alert alert-success alert-dismissible show fade">
					                <div class="alert-body">
					                    <button class="close"  data-dismiss="alert">
					                        <span>&times;</span>
					                    </button>
					                <i class="fas fa-check-circle"> </i>Data copied successfully for grade '.$gradesec.'.
						    </div></div>';
				        }else{
				        	$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> ooops Please try again.
				        	</div></div>';
				        }
					}
		        }
	        } 
		}
		
		return $output;		
	}
	function copyAssesmentSubjectlyMark($gs_branches,$check,$fromSubject,$toSubject,$fromQuarter,$max_year){
		$output='';
		foreach($check as $grade){
			$queryUser=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' and branch='$gs_branches' group by gradesec ");
			if($queryUser->num_rows()>0){
				foreach($queryUser->result() as $gradeRow){
					$data=array();
					$gradesec=$gradeRow->gradesec;
					$queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gradesec.$fromQuarter.$max_year."' ");
		            if ($queryCheckMark->num_rows()>0){
		            	$queryEvaluation=$this->db->query("select * from evaluation where quarter='$fromQuarter' and academicyear='$max_year' and grade='$grade' group by eid order by eid ASC");
	        			if($queryEvaluation->num_rows()>0){
	        				foreach($queryEvaluation->result() as $assesName){
	        					$eid=$assesName->eid;
	        					$evalName=$assesName->evname;
			            		$queryMark=$this->db->query("select * from mark".$gs_branches.$gradesec.$fromQuarter.$max_year." where academicyear='$max_year' and subname='$fromSubject' and mgrade='$gradesec' and quarter='$fromQuarter' and mbranch='$gs_branches' and evaid='$eid' ");
			            		if($queryMark->num_rows()>0){
			            			foreach($queryMark->result() as $markName){
				            			$stuid=$markName->stuid;
				            			$outof=$markName->outof;
				            			$eid=$markName->evaid;
				            			$value=$markName->value;
				            			$status=$markName->status;
				            			$lockmark=$markName->lockmark;
				            			$markname=$markName->markname;
				            			$approved=$markName->approved;
				            			$approvedby=$markName->approvedby;
				            			$zeromarkinfo=$markName->zeromarkinfo;
	            						$queryCheckMark=$this->db->query("select * from mark".$gs_branches.$gradesec.$fromQuarter.$max_year." where academicyear='$max_year' and subname='$toSubject' and mgrade='$gradesec' and quarter='$fromQuarter' and mbranch='$gs_branches' and markname='$markname' ");
	            						if($queryCheckMark->num_rows()<1){
		            						$data[]=array(
		            							'stuid'=>$stuid,
		            							'mgrade'=>$gradesec,
		            							'subname'=>$toSubject,
		            							'evaid'=>$eid,
		            							'quarter'=>$fromQuarter,
		            							'outof'=>$outof,
		            							'value'=>$value,
		            							'academicyear'=>$max_year,
		            							'markname'=>$markname,
		            							'status'=>$status,
		            							'lockmark'=>$lockmark,
		            							'approved'=>$approved,
		            							'approvedby'=>$approvedby,
		            							'zeromarkinfo'=>$zeromarkinfo,
		            							'mbranch'=>$gs_branches
		            						);
		            					}		            					
		            				}
		            			}
		            		}
		            	}else{
		            		$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> Something wrong at evaluation for Grade '.$gradesec.'.
				        	</div></div>';
		            	}
		        	}else{
		        		$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> No table found for Grade '.$gradesec.'.
				        	</div></div>';
		        	}
		        	if(!empty($data)){
						$query=$this->db->insert_batch('mark'.$gs_branches.$gradesec.$fromQuarter.$max_year,$data);
						if($query){
							$output .='<div class="alert alert-success alert-dismissible show fade">
					                <div class="alert-body">
					                    <button class="close"  data-dismiss="alert">
					                        <span>&times;</span>
					                    </button>
					                <i class="fas fa-check-circle"> </i>Data copied successfully for grade '.$gradesec.'.
						    </div></div>';
				        }else{
				        	$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> ooops Please try again.
				        	</div></div>';
				        }
					}
		        }
	        } 
		}
		
		return $output;		
	}
	function editStudentSectionwithMark($stuIdArray,$newSection,$max_year){
		$output='';
		foreach($stuIdArray as $stuIdArrays){
			$username=trim($stuIdArrays);
            $queryFetchSection=$this->db->query("select fname, grade,section,branch,id from users where academicyear='$max_year' and username='$username' and usertype='Student' ");
            foreach($queryFetchSection->result() as $queryRow){
                $grades=$queryRow->grade;
                $oldSection=$queryRow->section;
                $oldBranch=$queryRow->branch;
                $stuid=$queryRow->id;
                $fname=$queryRow->fname;
                $oldGradesec=$grades.$oldSection;
                $newGradesec=$grades.$newSection;
                if($newGradesec !==$oldGradesec){
	                $this->db->where('username',$username);
	                $this->db->where('academicyear',$max_year);
	                $this->db->set('section',$newSection);
	                $this->db->set('gradesec',$grades.$newSection);
	                $queryUpdate=$this->db->update('users');
	                if($queryUpdate){
	                    $queryQuarter = $this->db->query("select term from quarter where Academic_year='$max_year' and termgrade='$grades' group by term ");
	                    if($queryQuarter->num_rows()>0){
	                        foreach($queryQuarter->result() as $quarterName){
	                            $max_quarter=$quarterName->term;
	                            $queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$oldBranch.$oldGradesec.$max_quarter.$max_year."' ");
	                            if ($queryCheck->num_rows()>0) {
	                            	$queryMark = $this->db->query("select * from mark".$oldBranch.$oldGradesec.$max_quarter.$max_year." where stuid='$stuid' ");
	                            	if($queryMark->num_rows()>0){
		                                foreach($queryMark->result() as $newMark){
		                                	$subject=$newMark->subname;
		                                	$markName=$newMark->markname;
		                                    $dataMark=array(
		                                        'stuid'=>$newMark->stuid,
		                                        'mgrade'=>$newGradesec,
		                                        'subname'=>$newMark->subname,
		                                        'evaid'=>$newMark->evaid,
		                                        'quarter'=>$newMark->quarter,
		                                        'outof'=>$newMark->outof,
		                                        'value'=>$newMark->value,
		                                        'academicyear'=>$newMark->academicyear,
		                                        'markname'=>$newMark->markname,
		                                        'status'=>$newMark->status,
		                                        'lockmark'=>$newMark->lockmark,
		                                        'approved'=>$newMark->approved,
		                                        'approvedby'=>$newMark->approvedby,
		                                        'zeromarkinfo'=>$newMark->zeromarkinfo,
		                                        'mbranch'=>$newMark->mbranch

		                                    );
		                                    $queryCheckNewMark = $this->db->query("select * from mark".$oldBranch.$newGradesec.$max_quarter.$max_year." where stuid='$stuid' and subname='$subject' and markname='$markName' ");
	                            			if($queryCheckNewMark->num_rows()<1){

			                                    $queryInsert=$this->db->insert('mark'.$oldBranch.$newGradesec.$max_quarter.$max_year,$dataMark);
			                                    if($queryInsert){
			                                    	$this->db->where('stuid',$stuid);
		                                            $this->db->where('academicyear',$max_year);
		                                            $queryDeleteMark=$this->db->delete('mark'.$oldBranch.$oldGradesec.$max_quarter.$max_year);
			                                    }
			                                }
		                                }
		                                
		                            }else{
		                            	$output.='<div class="alert alert-warning alert-dismissible show fade">
		                                    <div class="alert-body">
		                                    <i class="fas fa-check-circle"> </i> No mark found for student '.$fname.' at '.$max_quarter.'.
		                                </div></div>';
		                            }
	                            }else{
	                                $output.='<div class="alert alert-warning alert-dismissible show fade">
	                                    <div class="alert-body">
	                                    <i class="fas fa-check-circle"> </i> No mark table found for Grade '.$grades.'.
	                                </div></div>'; 
	                            }
	                        }
	                        if($queryDeleteMark){
	                        	$checkBasikSkill = $this->db->query("SHOW TABLES LIKE 'basicskillvalue".$oldGradesec.$max_year."' ");
	                            if ($checkBasikSkill->num_rows()>0) {
	                            	$queryBasicSkill = $this->db->query("select * from basicskillvalue".$oldGradesec.$max_year." where stuid='$stuid' ");
	                            	if($queryBasicSkill->num_rows()>0){
		                                foreach($queryBasicSkill->result() as $newBS){
		                                	$bsname=$newBS->bsname;
		                                	$quarter=$newBS->quarter;
		                                    $dataBasicSkill=array(
		                                        'stuid'=>$newBS->stuid,
		                                        'bsname'=>$newBS->bsname,
		                                        'value'=>$newBS->value,
		                                        'quarter'=>$newBS->quarter,
		                                        'academicyear'=>$newBS->academicyear,
		                                        'datecreated'=>$newBS->datecreated,
		                                        'byuser'=>$newBS->byuser,
		                                        'bsgrade'=>$newGradesec,
		                                        'bsbranch'=>$newBS->bsbranch

		                                    );
		                                    $queryCheckNewBS = $this->db->query("select * from basicskillvalue".$newGradesec.$max_year." where quarter='$quarter' and bsname='$bsname' and stuid='$stuid' ");
	                            			if($queryCheckNewBS->num_rows()<1){

			                                    $queryInsertBS=$this->db->insert('basicskillvalue'.$newGradesec.$max_year,$dataBasicSkill);
			                                    if($queryInsertBS){
			                                    	$this->db->where('stuid',$stuid);
		                                            $this->db->where('academicyear',$max_year);
		                                            $queryDeleteBs=$this->db->delete('basicskillvalue'.$oldGradesec.$max_year);
			                                    }
			                                }
		                                }
		                            }else{
		                            	$output.='<div class="alert alert-warning alert-dismissible show fade">
		                                    <div class="alert-body">
		                                    <i class="fas fa-check-circle"> </i> No basic skill found for student '.$fname.'.
		                                </div></div>';
		                            }
	                            }else{
	                            	 $output.='<div class="alert alert-warning alert-dismissible show fade">
	                                    <div class="alert-body">
	                                    <i class="fas fa-check-circle"> </i> No basic skill table found for Grade '.$grades.'.
	                                </div></div>'; 
	                            }

                            	$output.='<div class="alert alert-success alert-dismissible show fade">
                                    <div class="alert-body">
                                    <i class="fas fa-check-circle"> </i> Mark transfered for student '.$fname.'.
                                </div></div>';
                            }

	                    }else{
	                         $output.='<div class="alert alert-warning alert-dismissible show fade">
	                            <div class="alert-body">
	                            <i class="fas fa-check-circle"> </i> No Quarter/Term found for Grade '.$grades.'.
	                        </div></div>'; 
	                    }
	                }
	            }else{
	            	$output.='<div class="alert alert-warning alert-dismissible show fade">
	                            <div class="alert-body">
	                            <i class="fas fa-check-circle"> </i> Please enter new section for '.$fname.'.
                    </div></div>'; 
	            }

            }  
        }
        return $output;
	}
	function editStudentBranchwithMark($stuIdArray,$branchGroup,$max_year){
		$output='';
		foreach($stuIdArray as $stuIdArrays){
			$username=trim($stuIdArrays);
            $queryFetchSection=$this->db->query("select fname, grade,section,branch,id from users where academicyear='$max_year' and username='$username' and usertype='Student' ");
            foreach($queryFetchSection->result() as $queryRow){
                $grades=$queryRow->grade;
                $oldSection=$queryRow->section;
                $oldBranch=$queryRow->branch;
                $stuid=$queryRow->id;
                $fname=$queryRow->fname;
                $oldGradesec=$grades.$oldSection;
                $newBranch=$branchGroup;
                if($newBranch !==$oldBranch){
	                $this->db->where('username',$username);
	                $this->db->where('academicyear',$max_year);
	                $this->db->set('branch',$branchGroup);
	                $queryUpdate=$this->db->update('users');
	                if($queryUpdate){
	                    $queryQuarter = $this->db->query("select term from quarter where Academic_year='$max_year' and termgrade='$grades' group by term ");
	                    if($queryQuarter->num_rows()>0){
	                        foreach($queryQuarter->result() as $quarterName){
	                            $max_quarter=$quarterName->term;
	                            $queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$oldBranch.$oldGradesec.$max_quarter.$max_year."' ");
	                            if ($queryCheck->num_rows()>0) {
	                            	$queryMark = $this->db->query("select * from mark".$oldBranch.$oldGradesec.$max_quarter.$max_year." where stuid='$stuid' ");
	                            	if($queryMark->num_rows()>0){
		                                foreach($queryMark->result() as $newMark){
		                                	$subject=$newMark->subname;
		                                	$markName=$newMark->markname;
		                                    $dataMark=array(
		                                        'stuid'=>$newMark->stuid,
		                                        'mgrade'=>$oldGradesec,
		                                        'subname'=>$newMark->subname,
		                                        'evaid'=>$newMark->evaid,
		                                        'quarter'=>$newMark->quarter,
		                                        'outof'=>$newMark->outof,
		                                        'value'=>$newMark->value,
		                                        'academicyear'=>$newMark->academicyear,
		                                        'markname'=>$newMark->markname,
		                                        'status'=>$newMark->status,
		                                        'lockmark'=>$newMark->lockmark,
		                                        'approved'=>$newMark->approved,
		                                        'approvedby'=>$newMark->approvedby,
		                                        'zeromarkinfo'=>$newMark->zeromarkinfo,
		                                        'mbranch'=>$newBranch

		                                    );
		                                    $queryCheckNewMark = $this->db->query("select * from mark".$newBranch.$oldGradesec.$max_quarter.$max_year." where stuid='$stuid' and subname='$subject' and markname='$markName' ");
	                            			if($queryCheckNewMark->num_rows()<1){
			                                    $queryInsert=$this->db->insert('mark'.$newBranch.$oldGradesec.$max_quarter.$max_year,$dataMark);
			                                    if($queryInsert){
			                                    	$this->db->where('stuid',$stuid);
		                                            $this->db->where('academicyear',$max_year);
		                                            $queryDeleteMark=$this->db->delete('mark'.$oldBranch.$oldGradesec.$max_quarter.$max_year);
			                                    }
			                                }
		                                }
		                                
		                            }else{
		                            	$output.='<div class="alert alert-warning alert-dismissible show fade">
		                                    <div class="alert-body">
		                                    <i class="fas fa-check-circle"> </i> No mark found for student '.$fname.' at '.$max_quarter.'.
		                                </div></div>';
		                            }
	                            }else{
	                                $output.='<div class="alert alert-warning alert-dismissible show fade">
	                                    <div class="alert-body">
	                                    <i class="fas fa-check-circle"> </i> No mark table found for Grade '.$grades.'.
	                                </div></div>'; 
	                            }
	                        }
	                        if($queryDeleteMark){                            
                            	$output.='<div class="alert alert-success alert-dismissible show fade">
                                    <div class="alert-body">
                                    <i class="fas fa-check-circle"> </i> Mark transfered for student '.$fname.'.
                                </div></div>';
                            }

	                    }else{
	                         $output.='<div class="alert alert-warning alert-dismissible show fade">
	                            <div class="alert-body">
	                            <i class="fas fa-check-circle"> </i> No Quarter/Term found for Grade '.$grades.'.
	                        </div></div>'; 
	                    }
	                }
	            }else{
	            	$output.='<div class="alert alert-warning alert-dismissible show fade">
	                            <div class="alert-body">
	                            <i class="fas fa-check-circle"> </i> Please enter new section for '.$fname.'.
                    </div></div>'; 
	            }

            }  
        }
        return $output;
	}
	function copyAssesmentStudentMark($check,$fromQuarter,$toQuarter,$max_year){
		$output='';
		foreach($check as $stuid){
			$queryUser=$this->db->query("select gradesec,grade,branch,id,fname from users where academicyear='$max_year' and username='$stuid' and usertype='Student' group by id ");
			if($queryUser->num_rows()>0){
				foreach($queryUser->result() as $gradeRow){
					$data=array();
					$gradesec=trim($gradeRow->gradesec);
					$stuid=$gradeRow->id;
					$gs_branches=trim($gradeRow->branch);
					$grade=$gradeRow->grade;
					$fName=$gradeRow->fname;
					$queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gradesec.$fromQuarter.$max_year."' ");
		            if ($queryCheckMark->num_rows()>0){
		            	$queryEvaluation=$this->db->query("select * from evaluation where quarter='$fromQuarter' and academicyear='$max_year' and grade='$grade' group by eid order by eid ASC");
	        			if($queryEvaluation->num_rows()>0){
	        				$querySubject=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' group by Subj_name order by Subj_name ASC");
	        				if($querySubject->num_rows()>0){
	        					foreach($querySubject->result() as $subname){
	        						$subject=$subname->Subj_name;
			        				foreach($queryEvaluation->result() as $assesName){
			        					$eid=$assesName->eid;
			        					$evalName=$assesName->evname;
					            		$queryMark=$this->db->query("select * from mark".$gs_branches.$gradesec.$fromQuarter.$max_year." where academicyear='$max_year' and subname='$subject' and mgrade='$gradesec' and quarter='$fromQuarter' and mbranch='$gs_branches' and evaid='$eid' and stuid='$stuid' ");
					            		if($queryMark->num_rows()>0){
					            			foreach($queryMark->result() as $markName){
						            			$stuid=$markName->stuid;
						            			$outof=$markName->outof;
						            			$value=$markName->value;
						            			$status=$markName->status;
						            			$lockmark=$markName->lockmark;
						            			$markname=$markName->markname;
						            			$approved=$markName->approved;
						            			$approvedby=$markName->approvedby;
						            			$zeromarkinfo=$markName->zeromarkinfo;
				            					$queryAssesment=$this->db->query("select * from evaluation where quarter='$toQuarter' and academicyear='$max_year' and grade='$grade' and evname='$evalName' group by eid ");
				            					if($queryAssesment->num_rows()>0){
				            						$asseRow=$queryAssesment->row_array();
				            						$eid=$asseRow['eid'];
				            						$queryCheckMark=$this->db->query("select * from mark".$gs_branches.$gradesec.$toQuarter.$max_year." where academicyear='$max_year' and subname='$subject' and mgrade='$gradesec' and quarter='$toQuarter' and mbranch='$gs_branches' and markname='$markname' and stuid='$stuid' ");
				            						if($queryCheckMark->num_rows()<1){
					            						$data[]=array(
					            							'stuid'=>$stuid,
					            							'mgrade'=>$gradesec,
					            							'subname'=>$subject,
					            							'evaid'=>$eid,
					            							'quarter'=>$toQuarter,
					            							'outof'=>$outof,
					            							'value'=>$value,
					            							'academicyear'=>$max_year,
					            							'markname'=>$markname,
					            							'status'=>$status,
					            							'lockmark'=>$lockmark,
					            							'approved'=>$approved,
					            							'approvedby'=>$approvedby,
					            							'zeromarkinfo'=>$zeromarkinfo,
					            							'mbranch'=>$gs_branches
					            						);
					            					}
				            					}else{
				            						$output .='<div class="alert alert-warning alert-dismissible show fade">
										                <div class="alert-body">
										                    <button class="close"  data-dismiss="alert">
										                        <span>&times;</span>
										                    </button>
										                <i class="fas fa-check-circle"> </i> Something wrong at new Quarter evaluation for student '.$fName.'.
										        	</div></div>';
				            					}
				            				}
				            			}
				            		}
				            	}
			            	}
		            	}else{
		            		$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> Something wrong at evaluation for student '.$fName.'.
				        	</div></div>';
		            	}
		        	}else{
		        		$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> No table found for student '.$fName.'.
				        	</div></div>';
		        	}
		        	if(!empty($data)){
						$query=$this->db->insert_batch('mark'.$gs_branches.$gradesec.$toQuarter.$max_year,$data);
						if($query){
							$output .='<div class="alert alert-success alert-dismissible show fade">
					                <div class="alert-body">
					                    <button class="close"  data-dismiss="alert">
					                        <span>&times;</span>
					                    </button>
					                <i class="fas fa-check-circle"> </i>Data copied successfully for student '.$fName.'.
						    </div></div>';
				        }else{
				        	$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> ooops Please try again.
				        	</div></div>';
				        }
					}
		        }
	        } 
		}
		
		return $output;		
	}
	function copyAssesmentMark($gs_branches,$check,$subject,$gs_quarter,$max_year){
		$output='';
		foreach($check as $grade){
			$queryUser=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' and branch='$gs_branches' group by gradesec ");
			if($queryUser->num_rows()>0){
				foreach($queryUser->result() as $rowGradesec){
					$gradesec=$rowGradesec->gradesec;
					$data=array();
					$queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gradesec.$gs_quarter.$max_year."' ");
		            if ($queryCheckMark->num_rows()>0){
		            	$queryMark=$this->db->query("select * from mark".$gs_branches.$gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and subname='$subject' and mgrade='$gradesec' and quarter='$gs_quarter' and mbranch='$gs_branches' ");
		            	if($queryMark->num_rows()>0){
		            		foreach($queryMark->result() as $markName){
		            			$stuid=$markName->stuid;
		            			$eid=$markName->evaid;
		            			$outof=$markName->outof;
		            			$value=$markName->value;
		            			$status=$markName->status;
		            			$lockmark=$markName->lockmark;
		            			$approved=$markName->approved;
		            			$approvedby=$markName->approvedby;
		            			$zeromarkinfo=$markName->zeromarkinfo;
		            			$queryEvaluation=$this->db->query("select * from evaluation where quarter='$gs_quarter' and academicyear='$max_year' and grade='$grade' and eid!='$eid' group by eid ");
		            			if($queryEvaluation->num_rows()>0){
		            				foreach($queryEvaluation->result() as $assesName){
		            					$evalName=$assesName->evname;
		            					$eid=$assesName->eid;
		            					$queryAssesment=$this->db->query("select sasname from schoolassesment where sasgrade='$grade' and saseval='$evalName' ");
		            					if($queryAssesment->num_rows()>0){
		            						$asseRow=$queryAssesment->row_array();
		            						$sasname=$asseRow['sasname'];
		            						$queryCheck=$this->db->query("select * from mark".$gs_branches.$gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and subname='$subject' and mgrade='$gradesec' and quarter='$gs_quarter' and mbranch='$gs_branches' and markname='$sasname' ");
		            						if($queryCheck->num_rows()<1){
			            						$data[]=array(
			            							'stuid'=>$stuid,
			            							'mgrade'=>$gradesec,
			            							'subname'=>$subject,
			            							'evaid'=>$eid,
			            							'quarter'=>$gs_quarter,
			            							'outof'=>$outof,
			            							'value'=>$value,
			            							'academicyear'=>$max_year,
			            							'markname'=>$sasname,
			            							'status'=>$status,
			            							'lockmark'=>$lockmark,
			            							'approved'=>$approved,
			            							'approvedby'=>$approvedby,
			            							'zeromarkinfo'=>$zeromarkinfo,
			            							'mbranch'=>$gs_branches
			            						);
			            					}
		            					}
		            				}
		            			}
		            		}
		            	}
		        	}else{
		        		$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> No table found.
				        	</div></div>';
		        	}
		        	if(!empty($data)){
						$query=$this->db->insert_batch('mark'.$gs_branches.$gradesec.$gs_quarter.$max_year,$data);
						if($query){
							$output .='<div class="alert alert-success alert-dismissible show fade">
					                <div class="alert-body">
					                    <button class="close"  data-dismiss="alert">
					                        <span>&times;</span>
					                    </button>
					                <i class="fas fa-check-circle"> </i>Data copied successfully for '.$gradesec.'.
						    </div></div>';
				        }else{
				        	$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> ooops Please try again.
				        	</div></div>';
				        }
					}
		        }
	        } 
		}
		
		return $output;		
	}
	function fetchThisGradeStudentMoveCopyBS($gradesec,$academicyear,$branch){
		$output ='<input type="checkbox" class="" id="selectAllStudentMoveCopyBSGS" onClick="selectAllStudentMoveCopyBS()">Select All<div class="row"> ';
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$academicyear);
		$this->db->order_by('users.fname,users.mname,users.lname','ASC');
		$this->db->group_by('users.id');
		$query=$this->db->get('users');
		
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-12 col-12">
			<input type="checkbox" class="selectAllStudentMoveCopyBS" name="selectAllStudentMoveCopyBS[ ]" value="'.$row->id.'"/>'.$row->fname.' '.$row->mname.' '.$row->lname.'
			</div>';
		}
		
		$output .='</div>';
		return $output;
	}
	function fetchThisGradeStudentMoveCopyBSGS($gradesec,$academicyear,$branch){
		$output ='<input type="checkbox" class="" id="selectAllStudentMoveCopyBSGSJ" onClick="selectAllStudentMoveCopyBSkill()">Select All<div class="row"> ';
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$academicyear);
		$this->db->order_by('users.fname,users.mname,users.lname','ASC');
		$this->db->group_by('users.id');
		$query=$this->db->get('users');
		
		foreach ($query->result() as $row) {
			$output .='<div class="col-lg-12 col-12">
			<input type="checkbox" class="selectAllStudentMoveCopyBSkill" name="selectAllStudentMoveCopyBSkill[ ]" value="'.$row->id.'"/>'.$row->fname.' '.$row->mname.' '.$row->lname.'
			</div>';
		}
		
		$output .='</div>';
		return $output;
	}
	function copybasicskill($branch,$gradesec,$fromquarter,$toquarter,$checkStudent,$academicyear,$byuser){
		$output='';
		$queryCheckB=$this->db->query("SHOW TABLES LIKE 'basicskillvalue".$gradesec.$academicyear."' ");
        if ($queryCheckB->num_rows()>0){
			foreach($checkStudent as $checkStudents){
				$queryBasicSkill=$this->db->query("select * from basicskillvalue".$gradesec.$academicyear." where academicyear='$academicyear' and quarter='$fromquarter' and stuid='$checkStudents' and bsbranch='$branch' ");
				if($queryBasicSkill->num_rows()>0){
					foreach($queryBasicSkill->result() as $bsValue){
						$bsName=$bsValue->bsname;
						$queryCheck=$this->db->query("select * from basicskillvalue".$gradesec.$academicyear." where academicyear='$academicyear' and quarter='$toquarter' and stuid='$checkStudents' and bsbranch='$branch' and bsname='$bsName' ");
						if($queryCheck->num_rows()<1){
							$data[]=array(
								'stuid'=>$checkStudents,
								'bsname'=>$bsValue->bsname,
								'value'=>$bsValue->value,
								'quarter'=>$toquarter,
								'academicyear'=>$academicyear,
								'datecreated'=>date('M-d-Y'),
								'byuser'=>$byuser,
								'bsgrade'=>$gradesec,
								'bsbranch'=>$branch
							);
						}
					}
				}
			}
			if(!empty($data)){
				$query=$this->db->insert_batch('basicskillvalue'.$gradesec.$academicyear,$data);
				if($query){
					$output .='<div class="alert alert-success alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> Basic Skill data copied successfully.
		        	</div></div>';
				}else{
					$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> Ooops Please try again.
		        	</div></div>';
				}
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No table found.
		        	</div></div>';
		}
		return $output;
	}
	function movebasicskill($branch,$gradesec,$fromquarter,$toquarter,$checkStudent,$academicyear,$byuser){
		$output='';
		$queryCheckB=$this->db->query("SHOW TABLES LIKE 'basicskillvalue".$gradesec.$academicyear."' ");
        if ($queryCheckB->num_rows()>0){
			foreach($checkStudent as $checkStudents){
				$queryBasicSkill=$this->db->query("select * from basicskillvalue".$gradesec.$academicyear." where academicyear='$academicyear' and quarter='$fromquarter' and stuid='$checkStudents' and bsbranch='$branch' ");
				if($queryBasicSkill->num_rows()>0){
					foreach($queryBasicSkill->result() as $bsValue){
						$bsName=$bsValue->bsname;
						$queryCheck=$this->db->query("select * from basicskillvalue".$gradesec.$academicyear." where academicyear='$academicyear' and quarter='$toquarter' and stuid='$checkStudents' and bsbranch='$branch' and bsname='$bsName' ");
						if($queryCheck->num_rows()<1){
							$data=array(
								'stuid'=>$checkStudents,
								'bsname'=>$bsValue->bsname,
								'value'=>$bsValue->value,
								'quarter'=>$toquarter,
								'academicyear'=>$academicyear,
								'datecreated'=>date('M-d-Y'),
								'byuser'=>$byuser,
								'bsgrade'=>$gradesec,
								'bsbranch'=>$branch
							);
							$this->db->where('academicyear',$academicyear);
							$this->db->where('stuid',$checkStudents);
							$this->db->where('bsname',$bsName);
							$this->db->where('quarter',$fromquarter);
							$this->db->where('bsbranch',$branch);
							$query=$this->db->update('basicskillvalue'.$gradesec.$academicyear,$data);
						}
					}
				}
			}
			if(!empty($data)){
				if($query){
					$output .='<div class="alert alert-success alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> Basic Skill data moved successfully.
		        	</div></div>';
				}else{
					$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> Ooops Please try again.
		        	</div></div>';
				}
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No table found.
		        	</div></div>';
		}
		return $output;
	}
	function fetchThisBranchGrade($branch,$academicyear){
		$output ='<div class="row"> ';
		foreach($branch as $branchs){
			$this->db->where('branch',$branchs);
			$this->db->where('usertype','Student');
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('users.grade','ASC');
			$this->db->group_by('users.grade');
			$query=$this->db->get('users');
			
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-4 col-6">
				<input type="checkbox" class="gradeListForLockMarkList" name="gradecListForLockMarkList[ ]" value="'.$row->grade.'"/>'.$row->grade.' 
				<small id="lockGradeInfo'.$row->grade.'"></small>
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function fetchThisBranchGrade4Assesment($branch,$academicyear){
		$output='';
		$output .='<div class="row"> ';
		foreach($branch as $branchs){
			$this->db->where('branch',$branchs);
			$this->db->where('usertype','Student');
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('users.grade','ASC');
			$this->db->group_by('users.grade');
			$query=$this->db->get('users');
			
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-4 col-6">
				<input type="checkbox" class="gradeListForLockAssesmentMarkList" name="gradeListForLockAssesmentMarkList[ ]" value="'.$row->grade.'"/>'.$row->grade.' <small id="lockGradeInfo'.$row->grade.'"></small>
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function fetchThisGradeEvaluation($grade,$quarter,$academicyear){
		$output ='<div class="row"> ';
		foreach($grade as $grades){
			$this->db->where('grade',$grades);
			$this->db->where('quarter',$quarter);
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('evaluation.evname','ASC');
			$this->db->group_by('evaluation.evname');
			$query=$this->db->get('evaluation');
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-4 col-4">
				<input type="checkbox" class="evaluationListForLockAssesment" name="evaluationListForLockAssesment[ ]" value="'.$row->eid.'"/>'.$row->evname.' <small id="lockGradeInfo'.$row->evname.'"></small>
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function fetchTermFromGrade4Assesmet($grade,$max_year){
		$output ='';
		foreach($grade as $grades){
			$this->db->where('quarter.termgrade',$grades);
			$this->db->where('quarter.Academic_year',$max_year);
			$this->db->group_by('quarter.term');
			$this->db->order_by('quarter.term','DESC');
			$query=$this->db->get('quarter');
			if($query->num_rows()>0){
				$output.='<option></option>';
				foreach ($query->result() as $row) { 
					$output .='<option value="'.$row->term.'">'.$row->term.'</option>';
				}
			}else{
				$output .='<option>No Term/Quarter</option>';
			}
		}
	    return $output;
	}
	function fetchAssesmentStatusToLockUnlock($branchs,$evaluation,$grade,$max_quarter,$max_year){
		$output='';		
		foreach($branchs as $branch){
			foreach($grade as $grades){ 
                $queryGradeSec=$this->db->query("select gradesec from users where academicyear='$max_year' and branch='$branch' and grade='$grades' and usertype='Student' group by gradesec order by gradesec ASC");
    			if($queryGradeSec->num_rows()>0){
    				$output.='<div class="table-responsive">
			            <table class="tabler table-borderedr" width="100%">
			                <tr>
			                    <th>Grade</th>
			                    <th>Subject</th>
			                    <th>Assesment Name</th>
			                    <th>Lock/Unlock Status</th>
			                </tr>';
        			foreach($queryGradeSec->result() as $gradesecs){
        				$gradesec=$gradesecs->gradesec;	            				
                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branch.$gradesec.$max_quarter.$max_year."' ");
                        if ($queryCheckMark->num_rows()>0)
                        {
							
					        foreach($evaluation as $evaluations){
								$queryMark=$this->db->query("select ma.subname, ma.lockmark, ma.lockmark, ma.mgrade, ma.evaid, ma.markname, ma.mid, ma.value, ma.outof,sum(outof) as total_outof from mark".$branch.$gradesec.$max_quarter.$max_year." as ma where ma.academicyear='$max_year' and ma.quarter='$max_quarter' and ma.mgrade='$gradesec' and ma.mbranch='$branch' and evaid='$evaluations' group by ma.markname,ma.subname order by ma.mid DESC ");
								if($queryMark->num_rows()>0){
									$numRows=$queryMark->num_rows() + 1;
									$rowGrade=$queryMark->row();
									$gradesecName=$rowGrade->mgrade;
									$output.='<tr>';
									$output.='<td rowspan='.$numRows.'>'.$gradesecName.' </td> ';
									foreach($queryMark->result() as $markName){
										$output.='<tr>
										<td>'.$markName->subname.'</td>
										<td>'.$markName->markname.'</td>';
										if($markName->lockmark=='0'){
											$uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='lockstudentmark' order by id ASC "); 
								            if($uperStuDE->num_rows() >0){
												$output.=' <td>
												<div class="pretty p-switch p-fill">
								                  <input type="checkbox" name="lockThisAssesmentMarkGS" class="'.$markName->subname.'" id="'.$markName->markname.'" value="'.$markName->mgrade.'" title="'.$max_quarter.'" >
								                  <div class="state p-success">
								                    <label></label>
								                  </div>
								                </div></td>';
								            }else{
								            	$output.=' <td>No Permission to lock</td>';
								            }
						                }else{
						                	$uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='unlockstudentmark' order by id ASC ");
								            if($uperStuDE->num_rows() >0){
							                	$output.=' <td><div class="pretty p-switch p-fill">
								                  <input type="checkbox" checked="checked" name="lockThisAssesmentMarkGS" class="'.$markName->subname.'"  id="'.$markName->markname.'" value="'.$markName->mgrade.'" title="'.$max_quarter.'" >
								                  <div class="state p-success">
								                    <label></label>
								                  </div>
								                </div></td>';
								            }else{
								            	$output.=' <td>No Permission to unlock</td>';
								            }
						                }
										$output.='</tr>';
									}
									$output.='</tr>';
								}
						    }
                        }
                    }
                    $output.='</table></div>';
                }
	                
	            
	        }		
		}
		return $output;
	}
	function unlockThisAssesmentMark($assesgrade,$max_quarter,$subject,$assesname,$max_year){
		$queryBranch=$this->db->query("select * from branch where academicyear='$max_year' group by name order by name ASC ");
		if($queryBranch->num_rows()>0){
			$gradesec=$assesgrade;
			foreach($queryBranch->result() as $branch){
				$branchs=$branch->name;
	           	$queryGradeSec=$this->db->query("select grade from users where academicyear='$max_year' and branch='$branchs' and gradesec='$assesgrade' group by grade ");
	        	if($queryGradeSec->num_rows()>0){
	            	foreach($queryGradeSec->result() as $gradesecs){
	            		$grade=$gradesecs->grade;
                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$gradesec.$max_quarter.$max_year."' ");
                        if ($queryCheckMark->num_rows()>0)
                        {
                        	$this->db->where('subname',$subject);
                        	$this->db->where('markname',$assesname);
                        	$this->db->where('mgrade',$gradesec);
                            $this->db->where('lockmark','1');
                            $this->db->set('lockmark','0');
                            $queryUpdate=$this->db->update('mark'.$branchs.$gradesec.$max_quarter.$max_year);
                        }
	                }
	            }		
			}
		}
	}
	function lockThisAssesmentMark($assesgrade,$max_quarter,$subject,$assesname,$max_year){
		$queryBranch=$this->db->query("select * from branch where academicyear='$max_year' group by name order by name ASC ");
		if($queryBranch->num_rows()>0){
			$gradesec=$assesgrade;
			foreach($queryBranch->result() as $branch){
				$branchs=$branch->name;
	           	$queryGradeSec=$this->db->query("select grade from users where academicyear='$max_year' and branch='$branchs' and gradesec='$assesgrade' group by grade ");
	        	if($queryGradeSec->num_rows()>0){
	            	foreach($queryGradeSec->result() as $gradesecs){
	            		$grade=$gradesecs->grade;
                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$gradesec.$max_quarter.$max_year."' ");
                        if ($queryCheckMark->num_rows()>0)
                        {
                        	$this->db->where('markname',$assesname);
                        	$this->db->where('subname',$subject);
                        	$this->db->where('mgrade',$gradesec);
                            $this->db->where('lockmark','0');
                            $this->db->set('lockmark','1');
                            $queryUpdate=$this->db->update('mark'.$branchs.$gradesec.$max_quarter.$max_year);
                        }
	                }
	            }		
			}
		}
	}
	function lockThisBranchMark($branch,$max_year){
		foreach($branch as $branchs){
			$queryTerm=$this->db->query("select term from quarter where Academic_year='$max_year' group by term ");
            if($queryTerm->num_rows()>0){
            	$queryGradeSec=$this->db->query("select gradesec from users where academicyear='$max_year' and branch='$branchs' ");
        		if($queryGradeSec->num_rows()>0){
            		foreach($queryGradeSec->result() as $gradesecs){
            			$gradesec=$gradesecs->gradesec;
	                    foreach($queryTerm->result() as $termName){
	                        $max_quarter=$termName->term;
	                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$gradesec.$max_quarter.$max_year."' ");
	                        if ($queryCheckMark->num_rows()>0)
	                        {
	                            $this->db->where('lockmark','0');
	                            $this->db->set('lockmark','1');
	                            $queryUpdate=$this->db->update('mark'.$branchs.$gradesec.$max_quarter.$max_year);
	                        }
	                    }
	                }
                }
            }		
		}
	}
	function unlockThisBranchMark($branch,$max_year){
		foreach($branch as $branchs){
			$queryTerm=$this->db->query("select term from quarter where Academic_year='$max_year' group by term ");
            if($queryTerm->num_rows()>0){
            	$queryGradeSec=$this->db->query("select gradesec from users where academicyear='$max_year' and branch='$branchs' ");
        		if($queryGradeSec->num_rows()>0){
            		foreach($queryGradeSec->result() as $gradesecs){
            			$gradesec=$gradesecs->gradesec;
	                    foreach($queryTerm->result() as $termName){
	                        $max_quarter=$termName->term;
	                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$gradesec.$max_quarter.$max_year."' ");
	                        if ($queryCheckMark->num_rows()>0)
	                        {
	                            $this->db->where('lockmark','1');
	                            $this->db->set('lockmark','0');
	                            $queryUpdate=$this->db->update('mark'.$branchs.$gradesec.$max_quarter.$max_year);
	                        }
	                    }
	                }
                }
            }		
		}
	}
	function lockThisGradeMark($branch,$checkGrade,$max_year){
		foreach($branch as $branchs){
			foreach($checkGrade as $checkGrades){
				$queryTerm=$this->db->query("select term from quarter where Academic_year='$max_year' group by term ");
                if($queryTerm->num_rows()>0){
                	$queryGradeSec=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$checkGrades' ");
            		if($queryGradeSec->num_rows()>0){
	            		foreach($queryGradeSec->result() as $gradesecs){
	            			$gradesec=$gradesecs->gradesec;
		                    foreach($queryTerm->result() as $termName){
		                        $max_quarter=$termName->term;
		                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$gradesec.$max_quarter.$max_year."' ");
		                        if ($queryCheckMark->num_rows()>0)
		                        {
		                            $this->db->where('lockmark','0');
		                            $this->db->set('lockmark','1');
		                            $queryUpdate=$this->db->update('mark'.$branchs.$gradesec.$max_quarter.$max_year);
		                        }
		                    }
		                }
	                }
                }	
			}
		}
	}
	function unlockThisGradeMark($branch,$checkGrade,$max_year){
		foreach($branch as $branchs){
			foreach($checkGrade as $checkGrades){
				$queryTerm=$this->db->query("select term from quarter where Academic_year='$max_year' group by term ");
                if($queryTerm->num_rows()>0){
                	$queryGradeSec=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$checkGrades' ");
            		if($queryGradeSec->num_rows()>0){
	            		foreach($queryGradeSec->result() as $gradesecs){
	            			$gradesec=$gradesecs->gradesec;
		                    foreach($queryTerm->result() as $termName){
		                        $max_quarter=$termName->term;
		                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$gradesec.$max_quarter.$max_year."' ");
		                        if ($queryCheckMark->num_rows()>0)
		                        {
		                            $this->db->where('lockmark','1');
		                            $this->db->set('lockmark','0');
		                            $queryUpdate=$this->db->update('mark'.$branchs.$gradesec.$max_quarter.$max_year);
		                        }
		                    }
		                }
	                }
                }	
			}
		}
	}
	function fetchThisBranchSection($branch,$academicyear){
		$output ='<div class="row"> ';
		foreach($branch as $branchs){
			$this->db->where('branch',$branchs);
			$this->db->where('usertype','Student');
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('users.gradesec','ASC');
			$this->db->group_by('users.gradesec');
			$query=$this->db->get('users');
			
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-4 col-6">
				<input type="checkbox" class="gradesescListForLockMarkList" name="gradesescListForLockMarkList[ ]" value="'.$row->gradesec.'"/>'.$row->gradesec.' 
				<small id="locksectionInfo'.$row->gradesec.'"></small>
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function lockThisSectionMark($branch,$checkGradesec,$max_year){
		foreach($branch as $branchs){
			foreach($checkGradesec as $checkGradesecs){
				$queryTerm=$this->db->query("select term from quarter where Academic_year='$max_year' group by term ");
                if($queryTerm->num_rows()>0){
                    foreach($queryTerm->result() as $termName){
                        $max_quarter=$termName->term;
                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$checkGradesecs.$max_quarter.$max_year."' ");
                        if ($queryCheckMark->num_rows()>0)
                        {
                            $this->db->where('lockmark','0');
                            $this->db->set('lockmark','1');
                            $queryUpdate=$this->db->update('mark'.$branchs.$checkGradesecs.$max_quarter.$max_year);
                        }
                    }
                }	
			}
		}
	}
	function UnlockThisSectionMark($branch,$checkGradesec,$max_year){
		foreach($branch as $branchs){
			foreach($checkGradesec as $checkGradesecs){
				$queryTerm=$this->db->query("select term from quarter where Academic_year='$max_year' group by term ");
                if($queryTerm->num_rows()>0){
                    foreach($queryTerm->result() as $termName){
                        $max_quarter=$termName->term;
                        $queryCheckMark = $this->db->query("SHOW TABLES LIKE 'mark".$branchs.$checkGradesecs.$max_quarter.$max_year."' ");
                        if ($queryCheckMark->num_rows()>0)
                        {
                            $this->db->where('lockmark','1');
                            $this->db->set('lockmark','0');
                            $queryUpdate=$this->db->update('mark'.$branchs.$checkGradesecs.$max_quarter.$max_year);
                        }
                    }
                }	
			}
		}
	}
	function fetchThisGradeStudentIdcardDirector($grade,$academicyear,$mybranch){
		$output ='<input type="checkbox" class="" id="selectallStudentList" onClick="selectAllStudent()">Select All<div class="row"> ';
		foreach($grade as $grades){
			$this->db->where('grade',$grades);
			$this->db->where('branch',$mybranch);
			$this->db->where('academicyear',$academicyear);
			$this->db->order_by('users.fname,users.mname,users.lname','ASC');
			$this->db->group_by('users.id');
			$query=$this->db->get('users');
			
			foreach ($query->result() as $row) {
				$output .='<div class="col-lg-12 col-12">
				<input type="checkbox" class="studentListTransportService" name="studentListTransportService[ ]" value="'.$row->id.'"/>'.$row->fname.' '.$row->mname.' '.$row->lname.'
				</div>';
			}
		}
		$output .='</div>';
		return $output;
	}
	function fetch_servicePlace_branch($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.transportservice !=','');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.transportservice','ASC');
		$this->db->group_by('users.transportservice');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		$output ='<input type="checkbox" class="" id="selectallServicePlaceList" onClick="selectAllPlaceList()">Select All<div class="row"> ';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-lg-6 col-12">
			<input type="checkbox" class="studentServicePlace" name="studentServicePlace[ ]" value="'.$row->transportservice.'"/>'.$row->transportservice.' </div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetch_summer_servicePlace_branch($branch,$max_year){
		$this->db->where('summerstudent.branch',$branch);
		$this->db->where('summerstudent.transportservice !=','');
		$this->db->where(array('summerstudent.academicyear'=>$max_year));
		$this->db->order_by('summerstudent.transportservice','ASC');
		$this->db->group_by('summerstudent.transportservice');
		$query=$this->db->get('summerstudent');
		$output ='<div class="row">';
		$output ='<input type="checkbox" class="" id="selectallSummerServicePlaceList" onClick="selectAllSummerPlaceList()">Select All<div class="row"> ';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-lg-6 col-12">
			<input type="checkbox" class="summer_studentServicePlace" name="summer_studentServicePlace[ ]" value="'.$row->transportservice.'"/>'.$row->transportservice.' </div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetch_servicePlace_branchReport($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.transportservice !=','');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.transportservice','ASC');
		$this->db->group_by('users.transportservice');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		$output ='<input type="checkbox" class="" id="selectallServicePlaceListReport" onClick="selectAllPlaceListRecord()">Select All<div class="row"> ';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-lg-6 col-12">
			<input type="checkbox" class="studentServicePlaceReport" name="studentServicePlaceReport[ ]" value="'.$row->transportservice.'"/>'.$row->transportservice.' </div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetch_servicePlace_branchReportSection($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.transportservice !=','');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.transportservice','ASC');
		$this->db->group_by('users.transportservice');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		$output ='<input type="checkbox" class="" id="selectallServicePlaceListSectionReport" onClick="selectAllPlaceListRecordSection()">Select All<div class="row"> ';
		foreach ($query->result() as $row) { 
			$output .='<div class="col-lg-6 col-12">
			<input type="checkbox" class="studentServicePlaceSectionReport" name="studentServicePlaceSectionReport[ ]" value="'.$row->transportservice.'"/>'.$row->transportservice.' </div>';
		}
		$output .='</div>';
	    return $output;
	}
	function fetchQuarterFromAcademicYear($max_year){
		$this->db->where(array('Academic_year'=>$max_year));
		$this->db->order_by('term','ASC');
		$this->db->group_by('term');
		$query=$this->db->get('quarter');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->term.'">'.$row->term.'</option>';
		}
	    return $output;
	}
	function fetchOnlyGradeFromBranch_group($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output .='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function filterOnlyGradeFromBranch($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output .='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}
	    return $output;
	}
	function fetchOnlyGradeFromBranch_gs_statistics($branch,$max_year){
		$output='';
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output .='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}
	    return $output;
	}
	function fetch_quarter_from_academicYear($academicyear){
		$this->db->where(array('Academic_year'=>$academicyear));
		$this->db->order_by('term','ASC');
		$this->db->group_by('term');
		$query=$this->db->get('quarter');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->term.'">'.$row->term.'</option>';
		}
	    return $output;
	}
	function filterGradesecfromBranch($academicyear){
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->order_by('name','ASC');
		$this->db->group_by('name');
		$query=$this->db->get('branch');
		$output ='';
		$output.='<option>--Select Branch--</option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->name.'">'.$row->name.'</option>';
		}
	    return $output;
	}
	function fetch_grade_from_branch4rank($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='<option>All</option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}
	    return $output;
	}
	function filterGradeFromBranch4Rank($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='<option> </option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}
	    return $output;
	}
	function filterGradeFromBranch4Rankgs($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where('users.usertype','Student');
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='';
		$output.='<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-4 col-6">
                <div class="pretty p-bigger">
                  	<input type="checkbox" name="sectionRankGrandstande" value="'.$row->gradesec.'" class="sectionRankGrandstande" id="customCheck1">
                  	<div class="state p-info">
                    	<i class="icon material-icons"></i>
                    	<label></label>'.$row->gradesec.'
                  	</div>
                </div>
            </div>'; 
		}
		$output.='</div>';
	    return $output;
	}
	function fetch_grade_from_branch_4statistics($branch,$max_year)
	{
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function fetchGradeFromBranch($branch,$max_year)
	{
		$this->db->where('users.usertype','Student');
		$this->db->where('users.grade!=','');
		$this->db->where('users.status','Active');
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<input id="grade_statistics" type="checkbox" value="'.$row->grade.'">'.$row->grade.'&nbsp;&nbsp;';
		}
	    return $output;
	}
	function fetchSubjectFromBranch4Statistics($grade,$max_year)
	{
		$this->db->where('subject.Grade',$grade);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$query=$this->db->get('subject');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<input type="checkbox" value="'.$row->Subj_name.'">'.$row->Subj_name.'&nbsp;&nbsp;';
		}
	    return $output;
	}
	function fetch_subject_from_branch_4statistics($grade,$max_year)
	{
		$this->db->where('subject.Grade',$grade);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$query=$this->db->get('subject');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
		}
	    return $output;
	}
	function fetch_transcript_grade($branch,$max_year)
	{
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->gradesec.'">'.$row->gradesec.'</option>';
		}
	    return $output;
	}
	function fetch_thisgrade_from_branch($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function fetch_thisgrade_from_branch_summer($branch,$max_year){
		$this->db->where('summerstudent.branch',$branch);
		$this->db->where(array('summerstudent.academicyear'=>$max_year));
		$this->db->order_by('summerstudent.grade','ASC');
		$this->db->group_by('summerstudent.grade');
		$query=$this->db->get('summerstudent');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function fetch_thisgrade_from_branchNow($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->where('users.usertype','Student');
		$this->db->where('users.grade!=','');
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='<input type="checkbox" class="" id="selectAll_Grade_GS_Now" onClick="selectAll_Grade_GS()">Select All<br>';
		foreach ($query->result() as $row) {
			$output.='
                <div class="pretty p-bigger">
                    <input type="checkbox" class="summaryGSGrade" name="summaryGSGrade" value="'.$row->grade.'" id="customCheck1 summaryGSGrade"> 
                    <div class="state p-info">
                      <i class="icon material-icons"></i>
                      <label></label>'.$row->grade.'
                    </div>
                </div>'; 
		}
	    return $output;
	}
	function fetch_thisgradeAge($branch,$summaryGSGrades,$max_year){
		$output ='';
		foreach($summaryGSGrades as $summaryGSGradess){
			$this->db->where('users.branch',$branch);
			$this->db->where('users.grade',$summaryGSGradess);
			$this->db->where(array('users.academicyear'=>$max_year));
			$this->db->where('users.usertype','Student');
			$this->db->where('users.age!=','0');
			$this->db->order_by('users.age','ASC');
			$this->db->group_by('users.age');
			$query=$this->db->get('users');
			foreach ($query->result() as $row) {
				$output.='
	                <div class="pretty p-icon p-jelly p-bigger">
	                    <input type="checkbox" class="summaryGSAge" name="summaryGSAge" value="'.$row->age.'" id="customCheck1 summaryGSAge"> 
	                    <div class="state p-info">
	                      <i class="icon material-icons"></i>
	                      <label></label>'.$row->age.'
	                    </div>
	                </div>'; 
			}
		}
	    return $output;
	}
	function fetch_thissection_from_branchNow($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->where('users.usertype','Student');
		$this->db->where('users.grade!=','');
		$this->db->order_by('users.gradesec','ASC');
		$this->db->group_by('users.gradesec');
		$query=$this->db->get('users');
		$output ='<div class="row">';
		foreach ($query->result() as $row) {
			$output.='<div class="col-lg-6 col-12">
                <div class="pretty p-bigger">
                    <input type="checkbox" name="summaryGSGradeSec" value="'.$row->gradesec.'" id="customCheck1 summaryGSGradeSec"> 
                    <div class="state p-info">
                      <i class="icon material-icons"></i>
                      <label></label>'.$row->gradesec.'
                    </div>
                </div>
            </div>'; 
		}
		$output.='</div>';
	    return $output;
	}
	function FilterBranchGrade($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function editMarkName($branch,$gradesec,$subject,$quarter,$year,$markname){
       	$arrayMark = array('mgrade' => $gradesec, 'mbranch' => $branch,'subname'=>$subject,'academicyear'=>$year,'quarter'=>$quarter, 'markname'=>$markname,'lockmark'=>'0');
      	$this->db->where($arrayMark); 
      	$this->db->group_by('markname');
      	$this->db->distinct();
      	$query = $this->db->get('mark'.$branch.$gradesec.$quarter.$year);
      	return $query->result();
	}
	function editMarkNameSummer($branch,$gradesec,$subject,$year,$markname){
       	$arrayMark = array('mgrade' => $gradesec, 'mbranch' => $branch,'subname'=>$subject,'academicyear'=>$year, 'markname'=>$markname,'lockmark'=>'0');
      	$this->db->where($arrayMark); 
      	$this->db->group_by('markname');
      	$this->db->distinct();
      	$query = $this->db->get('summermark');
      	return $query->result();
	}
	function fetch_evaluation4markName($quarter,$gradesec,$max_year){
		$this->db->where(array('evaluation.quarter'=>$quarter));
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('evaluation.academicyear'=>$max_year));
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->group_by('evaluation.evname');
		$this->db->select('*');
		$this->db->from('evaluation');
		$this->db->join('users',
		'users.grade = evaluation.grade');
		$query=$this->db->get();
		return $query->result();
	}
	function fetch_custom_grade_mark($gs_branches,$gs_gradesec,$gs_quarter,$max_year)
	{
		$output='';
		$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."' ");
		if($queryCheck->num_rows()>0){
			$markname_query=$this->db->query("select ma.subname,ma.lockmark, ma.evaid, ma.markname, ma.mid, ma.value, ma.outof,sum(outof) as total_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` as ma where ma.academicyear='$max_year' and ma.quarter='$gs_quarter' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.subname order by ma.subname ASC ");
			if($markname_query->num_rows()>0){   
				$uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='addstudentmark' order by id ASC ");
				if($uperStuDE->num_rows() > 0 ){
					$output.='<input type="hidden" class="jo_gradesecCustom" value="'.$gs_gradesec.'">
					<input type="hidden" class="jo_quarterCustom" value="'.$gs_quarter.'">
					<input type="hidden" class="jo_branchCustom" value="'.$gs_branches.'">
					<input type="hidden" class="jo_yearCustom" value="'.$max_year.'">';
	        		foreach ($markname_query->result_array() as $mark_name) {
	        			$subject=$mark_name['subname'];	
	        			$output.='<input type="hidden" class="jo_subjectCustom" value="'.$subject.'">';				
						if($mark_name['lockmark']=='0'){
			        		$output.='<div class="card">
			                <div class="card-body">
			                  <div class="support-ticket media pb-1 mb-3 StudentViewTextInfo">
			                    <div class="media-body ml-3">
			                      	<button class="btn btn-outline-warning mb-1 float-right" id="deleteCustomSubjectMark" value="'.$subject.'">Delete</button>
			                      	<span class="font-weight-bold">'.$mark_name['subname'].'</span>
			                    </div>
			                  </div>
			                </div>
			              </div>';
			          	}else{
			          		$output.='<div class="card">
			                <div class="card-body">
			                  <div class="support-ticket media pb-1 mb-3 StudentViewTextInfo">
			                    <div class="media-body ml-3">
			                    	<button class="btn btn-outline-warning mb-1 float-right" id="deleteCustomSubjectMark" value="'.$subject.'">Unlock & Delete</button>
			                      	<span class="font-weight-bold">'.$mark_name['subname'].'</span>
			                      	<p class="my-1 text-muted alert alert-light">
			                      		To delete subject,you should unlock it first & Once you deleted you can not recover it again.</p>
			                    </div>
			                  </div>
			                </div>
			              </div>';
			          	}
			        }
	        	}else{
	        		$output.='<div class="alert alert-warning alert-dismissible show fade">
		            <div class="alert-body">
		                <button class="close"  data-dismiss="alert">
		                    <span>&times;</span>
		                </button>
		               <i class="fas fa-exclamation-circle"> </i> You are n ot allowed to delete mark.
		            </div></div>';
	        	}
			}else{
	    		$output.='<div class="alert alert-warning alert-dismissible show fade">
	            <div class="alert-body">
	                <button class="close"  data-dismiss="alert">
	                    <span>&times;</span>
	                </button>
	               <i class="fas fa-exclamation-circle"> </i> Data not found.
	            </div></div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No prepared table found.
            </div></div>';
		}
		return $output;
	}
	function fetch_grade_mark($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year)
	{
		$output='';
		$query=$this->db->query("select id,username,fname,mname,lname from users where branch='$gs_branches' and academicyear='$max_year' and gradesec='$gs_gradesec' and status='Active' and usertype='Student' and isapproved='1' and branch='$gs_branches' order by fname,mname,lname ASC ");

		$markname_query=$this->db->query("select ma.lockmark, ma.evaid, ma.markname,ma.mid, ma.value, ma.outof,sum(outof) as total_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` as ma where ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$gs_quarter' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.markname order by ma.mid ASC ");
		if($markname_query->num_rows()>0)
		{   
			$output.='<h6><small>Grade :</small>'.
			$gs_gradesec.' <small>Quarter :</small>'.
			$gs_quarter.'<small> Subject :</small> '.
			$gs_subject.'</h6>';
			$output.='<button class="btn btn-outline-danger delete_selected_grade pull-right">
			<i class="fas fa-trash-alt"></i> Delete Grade '.$gs_gradesec.' </button>';
			$output.='<button class="btn btn-outline-warning delete_selected pull-right">
			<i class="fas fa-trash"></i> Delete '.$gs_subject.' </button>';
			/*$uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='lockstudentmark' order by id ASC ");
			if($uperStuDE->num_rows() > 0 ){
				$output.='<button class="btn btn-default lock_selected"><span class="text-info"><i class="fas fa-lock"></i> Lock / Unlock '.$gs_subject.'</span></button>';
				$output.='<button class="btn btn-default lock_selected_grade"><span class="text-success"><i class="fas fa-lock"></i> Lock / Unlock Grade '.$gs_gradesec.'</span></button>';
			}*/
			
			$output.='<div class="table-responsive">
    		<table class="table table-bordered table-hover" style="width:100%;">
    		<tr> <th rowspan="2" class="text-center">Student Name</th> 
        	<th rowspan="2" class="text-center">Student ID</th>';
        	foreach ($markname_query->result_array() as $mark_name) {
        		$output.='<th class="text-center coreMarkName'.$mark_name['markname'].'">' .$mark_name['markname'].'';
        		if($mark_name['lockmark']=='0'){
	        		$output.='
						<a href="#" value="'.$mark_name['markname'].'" 
						class="gs_delete_markname"> 
						<span class="text-danger"><i class="fas fa-trash-alt"></i> </span> </a>
						<a href="#" value="'.$mark_name['markname'].'" 
						class="gs_edit_markname" data-toggle="modal" 
									data-target="#editmarkName"> 
						<span class="text-success">
						<small> <i class="fas fa-edit"></i> </small> </span>
						</a> ';
				}else{
					$output.='<span class="text-warning"> <i class="fas fa-lock"></i></span> ';
				}
				$output.='</th>';
        	}
        	$output.=' </tr><tr>';
			foreach ($markname_query->result_array() as $mark_name) 
			{
        		$output.='<td class="text-center coreOutOF'.$mark_name['outof'].$mark_name['markname'].'">'.$mark_name['outof'].' ';
        		if($mark_name['lockmark']=='0'){
	        		$output.='
						<a href="#" id="'.$mark_name['outof'].'" value="'.$mark_name['markname'].'" 
						class="gs_edit_outof" data-toggle="modal" 
									data-target="#editOutOf"> 
						<span class="text-success">
						<small> <i class="fas fa-edit"></i> </small> </span>
						</a></td>';
				}else{
					$output.='<span class="text-warning"> <i class="fas fa-lock"></i></span> ';
				}
        	}
        	$output.='</tr>';
        	$output.='<input type="hidden" class="jo_gradesec" value="'.$gs_gradesec.'">
			<input type="hidden" class="jo_subject" value="'.$gs_subject.'">
			<input type="hidden" class="jo_quarter" value="'.$gs_quarter.'">
			<input type="hidden" class="jo_branch" value="'.$gs_branches.'">
			<input type="hidden" class="jo_year" value="'.$max_year.'">';
			foreach ($query->result_array() as $row) 
			{ 
        		$id=$row['id'];
        		$output.='<tr> <td> '.$row['fname'].' '.$row['mname'].' '.$row['lname'].'

					<a href="#" value="'.$id.'" class="lock_me">
						<span class="text-info">
						Lock /Unlock</span>
					</a></td><td>'.$row['username'].'</td>';
        		foreach ($markname_query->result_array() as $mark_name)
        		{
        			$Evaid=$mark_name['evaid'];
        			$outOFF=$mark_name['outof'];
        			$markname=$mark_name['markname'];
        			$lockmark1=$mark_name['lockmark'];
        			$query_value = $this->db->query("select lockmark,value, outof,mid, markname from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where markname='$markname' and stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' ");
        			if($query_value->num_rows()>0)
        			{
        				$mark_value=$query_value->row_array();
    					$outof=$mark_value['outof'];
    					$value=$mark_value['value'];
    					$lockmark=$mark_value['lockmark'];
						if($outof >= $value){
							$output.='<td class="text-center jossMark'.$mark_value['mid'].'">'.$mark_value['value'].'<small class="text-muted">('.$mark_value['markname'].')</small>';
							if($lockmark==='0'){
								$output.='<a href="#" value="'.$mark_value['mid'].'" class="edit_mark_gs" data-toggle="modal"
								data-target="#editmark">
								<span class="text-success">
								<i class="far fa-edit"> </i></span></a>';
                         	}else{
                         		$output.='
                         			<span class="text-warning"><i class="fas fa-lock"> </i> </span>';
                         	}
							$output.='</td>';
						}else{
							$output.='<td class="text-center"><span class="text-danger"> NG 
								<a href="#" value="'.$mark_value['mid'].'" class="edit_mark_gs" data-toggle="modal" 
								data-target="#editmark"><span class="text-info"> Edit 
								</span></a>
							</span></td>';
						}
        			}else{
        				//if($lockmark1=='0'){
							$output.='<td class="text-center JoMark'.$id.$markname.'">
							<input type="hidden" value="" class="my_ID">
							<span class="text-danger"> NG</span>
								<a href="#" title="'.$id.'" id="'.$outOFF.'" name="'.$markname.'" value="'.$Evaid.'" class="edit_NGmark_gs" data-toggle="modal" 
								data-target="#editngmark"><span class="text-info"> 
								<i class="fas fa-edit"></i> 
								</span></a>
							</td>';
						/*}else{
							$output.='<td class="text-center JoMark'.$id.'">
							<input type="hidden" value="" class="my_ID">
							<span class="text-danger"> NG</span>
								<span class="text-warning"><i class="fas fa-lock"> </i> </span>
							</td>';
						}*/
					}
        		}
			}
			$output.='</tr></table></div>';
		}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> Data not Found.
            </div></div>';
		}
		return $output;
	}
	/*function fetch_grade_mark_4teacher($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year){
		$output='';
		$query=$this->db->query("select id,username,fname,mname,lname from users where branch='$gs_branches' and academicyear='$max_year' and gradesec='$gs_gradesec' and status='Active' and usertype='Student' and isapproved='1' and branch='$gs_branches' order by fname,mname ASC ");

		$markname_query=$this->db->query("select ma.evaid, ma.markname, ma.mid,ma.value, ma.outof,sum(outof) as total_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." as ma where ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$gs_quarter' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.markname order by ma.mid ASC ");
		if($markname_query->num_rows()>0)
		{   
			$output.='<h6><small>Grade :</small>'.
			$gs_gradesec.' <small>Quarter :</small>'.
			$gs_quarter.'<small> Subject :</small> '.
			$gs_subject.'</h6>';
			$output.='<button class="btn btn-default delete_selected_grade pull-right">';
			$output.='<button class="btn btn-default delete_selected pull-right">
			<span class="text-warning"><i class="fas fa-trash"></i> Delete '.$gs_subject.'</span> </button>';
			
			$output.='<div class="table-responsive">
    		<table class="table table-borderedr table-hover" style="width:100%;">
    		<tr> <th rowspan="2" class="text-center">Student Name</th> 
        	<th rowspan="2" class="text-center">Student ID</th>';
        	foreach ($markname_query->result_array() as $mark_name) {
        		$output.='<th>' .$mark_name['markname'].'
        		<div class="table-links"> 
					<a href="#" value="'.$mark_name['markname'].'" 
					class="gs_delete_markname"> 
					<span class="text-danger">
					<small> <i class="fas fa-trash"></i> </small> </span>
					</a>
			    </div> </th>';
        	}
        	$output.=' </tr><tr>';
			foreach ($markname_query->result_array() as $mark_name) 
			{
        		$output.='<td><small>'.$mark_name['outof'].'</small></td>';
        	}
        	$output.='</tr>';
        	$output.='<input type="hidden" class="jo_gradesec" value="'.$gs_gradesec.'">
			<input type="hidden" class="jo_subject" value="'.$gs_subject.'">
			<input type="hidden" class="jo_quarter" value="'.$gs_quarter.'">
			<input type="hidden" class="jo_branch" value="'.$gs_branches.'">
			<input type="hidden" class="jo_year" value="'.$max_year.'">';
			foreach ($query->result_array() as $row) 
			{ 
        		$id=$row['id'];
        		$output.='<tr> <td> '.$row['fname'].' '.$row['mname'].' '.$row['lname'].'
				<div class="table-links"> 
					<a href="#" value="'.$id.'" class="lock_me">
						<span class="text-info">
						Lock /Unlock</span>
					</a>
			    </div> </td><td>'.$row['username'].'</td>';
        		foreach ($markname_query->result_array() as $mark_name)
        		{
        			$Evaid=$mark_name['evaid'];
        			$outOFF=$mark_name['outof'];
        			$markname=$mark_name['markname'];
        			$query_value = $this->db->query("select lockmark,value,outof,mid, markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where markname='$markname' and stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' ");
        			if($query_value->num_rows()>0)
        			{
        				$mark_value=$query_value->row_array();
    					$outof=$mark_value['outof'];
    					$value=$mark_value['value'];
    					$lockmark=$mark_value['lockmark'];
						if($outof >= $value){
							$output.='<td class="jossMark'.$mark_value['mid'].'">'.$mark_value['value'].'';
							if($lockmark==='0'){
								$output.='<div class="table-links"> <a href="#" value="'.$mark_value['mid'].'" class="edit_mark_gs" data-toggle="modal"
								data-target="#editmark">
								<span class="text-success">
								<i class="far fa-edit"> </i></span></a>
								   </div>';
                         	}else{
                         		$output.='<div  class="table-links"> 
                         			<span class="text-warning"><i class="fas fa-lock"> </i> </span>
								   </div>';
                         	}
							$output.='</td>';
						}else{
							$output.='<td><span class="text-danger"> NG
								<div class="table-links"> 
								<a href="#" value="'.$mark_value['mid'].'" class="edit_mark_gs" data-toggle="modal" 
								data-target="#editmark"><span class="text-info"> Edit 
								</span></a>
							</div>
							</span></td>';
						}
        				
        			}else{
						$output.='<td class="JoMark'.$id.$markname.'">
						<input type="hidden" value="" class="my_ID">
						<span class="text-danger"> NG</span>
						<div class="table-links"> 
							<a href="#" title="'.$id.'" id="'.$outOFF.'" name="'.$markname.'" value="'.$Evaid.'" class="edit_NGmark_gs" data-toggle="modal" 
							data-target="#editngmark"><span class="text-info"> 
							<i class="fas fa-plus"></i> 
							</span></a>
						</div>
						</td>';
					}
        		}
			}
			$output.='</tr></table></div>';
		}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> Data not Found.
            </div></div>';
		}
		return $output;
	}*/
	function FetchUpdatedMark($mid,$quarter,$gradesec,$year,$branch){
		$this->db->where('mid',$mid);
		$query=$this->db->get('mark'.$branch.$gradesec.$quarter.$year);
		$output='';
		foreach ($query->result() as $keyvalue) {
			$output.=''.$keyvalue->value.'';
		}
		return $output;
	}
	function fetch_my_markresult($gs_subject,$gs_quarter,$max_year,$id,$gs_gradesec,$gs_branches)
	{
		$output='';
		$this->db->where(array('users.academicyear'=>$max_year));
			$this->db->where(array('users.gradesec'=>$gs_gradesec));
			$this->db->where(array('users.branch'=>$gs_branches));
			$this->db->where(array('users.id'=>$id));
			$this->db->order_by('users.fname,users.mname,users.lname');
			$query=$this->db->get('users');
			$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
					$output.='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';
			if($query->num_rows()>0)
			{
				$markname_query=$this->db->query("select ma.markname,ma.value,ma.outof,sum(outof) as total_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
				as ma cross join users as us where us.id=ma.stuid and ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ma.markname order by ma.mid ASC ");

				$evalname_query=$this->db->query("select ev.evname,ev.eid,ev.percent,sum(ev.percent) as summ_percent from evaluation as ev cross join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");
				$output .='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;height:92%;page-break-inside:avoid;">
        		<thead>
        		<tr>
            	<th>Name</th><th>Student ID</th>';
            	foreach ($markname_query->result() as $mark_name) {
            		$output .='<th>'.$mark_name->markname.'</th>';
            	}
            	foreach ($evalname_query->result() as $evalua_name) {
            		$output .='<th>Tot '.$evalua_name->evname.'</th>';
            		$output .='<th><B>Conv '.$evalua_name->evname.'</B></th>';
            	}
            	$output .='<th><B>Total</B></th>
        		</tr>
        		</thead>';
        		$output .='<tr><td></td> <td></td>';
				foreach ($markname_query->result() as $mark_name) 
				{
            		$output .='<td><small>'.$mark_name->outof.'</small></td>';
            	}
            	$average=0;
            	foreach ($evalname_query->result() as $evalua_name) 
            	{
            		$average=$evalua_name->summ_percent;
            		$eid = $evalua_name->eid;
        		    $query_outof_sum = $this->db->query("select m.value,sum(outof) as sum_outof, m.outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
        		    as m cross join users as us where us.id=m.stuid and us.gradesec='$gs_gradesec' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$eid' group by stuid order by mid");
        		    $sum_outof=0;
        		    foreach ($query_outof_sum->result() as $keyvalue) 
        		    {
        		    	$sum_outof= $keyvalue->sum_outof;
        		    }
        		    $output .='<td>'.$sum_outof.'</td>';
        		    $output .='<td><B>'.$evalua_name->percent.'</B></td>';
            	}
            	$output .='<td><B>100</B></td>';
            	$output .='</tr>';
				foreach ($query->result() as $row) { 
            		$id=$row->id;
            		$output .='<tr>
						<td>'.$row->fname.' '.$row->mname.'</td><td>'.$row->username.'</td>';
            		foreach ($markname_query->result() as $mark_name)
            		{
            			$mname_gs=$mark_name->markname;
	            		$query_value = $this->db->query("select value from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
	            		where  stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and markname='$mname_gs' order by mid ASC");
						if($query_value->num_rows()>0){
							foreach ($query_value->result() as $mark_value)
							{
		            			$output .='<td>'.$mark_value->value.'</td>';
		            		}
		            	}else{
		            		$output .='<td><span class="text-danger">NG</span></td>';
		            	}
	            	}
            		$average=0;
            		foreach ($evalname_query->result() as $evalua_name) 
            		{
            			$evaid= $evalua_name->eid;
                		$percent= $evalua_name->percent;
                		$query_sum = $this->db->query("select sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
                		where  stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$evaid' order by mid ASC");
                		foreach ($query_sum->result() as $sum_value)
                		{
                				if($sum_value->outof != 0){
                        			$conver= ($sum_value->total *$percent )/$sum_value->outof;
                    			}
                    		if($sum_value->total!=0){
                    			$output .='<td>'.$sum_value->total.'</td>';
                    		}else{
                    			$output .='<td>-</td>';
                    		}
                		
                			if($sum_value->outof == 0){
                				$output .='<td>-</td>';
                			}else{
                				$output .='<td><B>'.number_format((float)$conver,2,'.','').'</B></td>';
                				$average =$conver + $average;
                			}
                		}
            		}$output .='<td><B>'.number_format((float)$average,2,'.','').'</B></td>';
					$output .='</tr>';
				}
				$output .='</table></div>';
				$output.='<p class="text-center">'.$school_slogan.'!</p>';
			}else{
	    		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		return $output;
	}
	function fetch_my_markresultApproved($gs_subject,$gs_quarter,$max_year,$id,$gs_gradesec,$gs_branches)
	{
		$output='';
		$this->db->where(array('users.academicyear'=>$max_year));
			$this->db->where(array('users.gradesec'=>$gs_gradesec));
			$this->db->where(array('users.branch'=>$gs_branches));
			$this->db->where(array('users.id'=>$id));
			$this->db->order_by('users.fname');
			$this->db->order_by('users.mname');
			$this->db->order_by('users.lname');
			$query=$this->db->get('users');
			$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
					$output.='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';
			if($query->num_rows()>0)
			{
				$markname_query=$this->db->query("select ma.markname,ma.value,ma.outof,sum(outof) as total_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
				as ma cross join users as us where us.id=ma.stuid and ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and approved='1' group by ma.markname order by ma.mid ASC ");

				$evalname_query=$this->db->query("select ev.evname,ev.eid,ev.percent,sum(ev.percent) as summ_percent from evaluation as ev cross join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");
				$output .='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;height:92%;page-break-inside:avoid;">
        		<thead>
        		<tr>
            	<th>Name</th><th>Student ID</th>';
            	foreach ($markname_query->result() as $mark_name) {
            		$output .='<th>'.$mark_name->markname.'</th>';
            	}
            	foreach ($evalname_query->result() as $evalua_name) {
            		$output .='<th>Tot '.$evalua_name->evname.'</th>';
            		$output .='<th><B>Conv '.$evalua_name->evname.'</B></th>';
            	}
            	$output .='<th><B>Total</B></th>
        		</tr>
        		</thead>';
        		$output .='<tr><td></td> <td></td>';
				foreach ($markname_query->result() as $mark_name) 
				{
            		$output .='<td><small>'.$mark_name->outof.'</small></td>';
            	}
            	$average=0;
            	foreach ($evalname_query->result() as $evalua_name) 
            	{
            		$average=$evalua_name->summ_percent;
            		$eid = $evalua_name->eid;
        		    $query_outof_sum = $this->db->query("select m.value,sum(outof) as sum_outof, m.outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
        		    as m cross join users as us where us.id=m.stuid and us.gradesec='$gs_gradesec' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$eid' and approved='1' group by stuid order by mid");
        		    $sum_outof=0;
        		    foreach ($query_outof_sum->result() as $keyvalue) 
        		    {
        		    	$sum_outof= $keyvalue->sum_outof;
        		    }
        		    $output .='<td>'.$sum_outof.'</td>';
        		    $output .='<td><B>'.$evalua_name->percent.'</B></td>';
            	}
            	$output .='<td><B>100</B></td>';
            	$output .='</tr>';
				foreach ($query->result() as $row) { 
            		$id=$row->id;
            		$output .='<tr>
						<td>'.$row->fname.' '.$row->mname.'</td><td>'.$row->username.'</td>';
            		foreach ($markname_query->result() as $mark_name)
            		{
            			$mname_gs=$mark_name->markname;
	            		$query_value = $this->db->query("select value from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
	            		where  stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and markname='$mname_gs' and approved='1' order by mid ASC");
						if($query_value->num_rows()>0){
							foreach ($query_value->result() as $mark_value)
							{
		            			$output .='<td>'.$mark_value->value.'</td>';
		            		}
		            	}else{
		            		$output .='<td><span class="text-danger">NG</span></td>';
		            	}
	            	}
            		$average=0;
            		foreach ($evalname_query->result() as $evalua_name) 
            		{
            			$evaid= $evalua_name->eid;
                		$percent= $evalua_name->percent;
                		$query_sum = $this->db->query("select sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."
                		where  stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$evaid' and approved='1' order by mid ASC");
                		foreach ($query_sum->result() as $sum_value)
                		{
                				if($sum_value->outof != 0){
                        			$conver= ($sum_value->total *$percent )/$sum_value->outof;
                    			}
                    		if($sum_value->total!=0){
                    			$output .='<td>'.$sum_value->total.'</td>';
                    		}else{
                    			$output .='<td>-</td>';
                    		}
                		
                			if($sum_value->outof == 0){
                				$output .='<td>-</td>';
                			}else{
                				$output .='<td><B>'.number_format((float)$conver,2,'.','').'</B></td>';
                				$average =$conver + $average;
                			}
                		}
            		}$output .='<td><B>'.number_format((float)$average,2,'.','').'</B></td>';
					$output .='</tr>';
				}
				$output .='</table></div>';
				$output.='<p class="text-center">'.$school_slogan.'!</p>';
			}else{
	    		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		return $output;
	}
	function fetchDashboardMarkResultApproved($grade,$gs_quarter,$max_year,$id,$gs_gradesec,$gs_branches)
	{
		$output='';
		$querySubject=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' group by Subj_name order by suborder ");
		if($querySubject->num_rows()>0){
			$output.='<span class="StudentViewTextInfo">Season :'.$gs_quarter.'</span>';
			foreach($querySubject->result() as $stuSubject){
				$gs_subject=$stuSubject->Subj_name;
				$markname_query=$this->db->query("select ma.markname,ma.value,ma.outof,sum(outof) as total_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." as ma cross join users as us where us.id=ma.stuid and ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and approved='1' group by ma.markname order by ma.mid ASC ");
				foreach ($markname_query->result() as $mark_name)
        		{
        			$mname_gs=$mark_name->markname;
            		$query_value = $this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and markname='$mname_gs' and approved='1' order by mid ASC");
					if($query_value->num_rows()>0){
						foreach ($query_value->result() as $mark_value)
						{
	            			$output .='<p>'.$mark_value->subname.'=>'.$mark_value->markname.'=><span class="badge badge-info">'.$mark_value->value.'/'.$mark_value->outof.'</span></p>';
	            		}
	            	}else{
	            		$output .='<p class="text-danger">NG</p>';
	            	}
            	}
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Subject not found.
            	</div></div>';
		}
		return $output;
	}
	function fetchDashboardMarkResult($grade,$gs_quarter,$max_year,$id,$gs_gradesec,$gs_branches)
	{
		$output='';
		$querySubject=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' group by Subj_name order by suborder ");
		if($querySubject->num_rows()>0){
			$output.='<span class="StudentViewTextInfo">Season :'.$gs_quarter.'</span>';
			foreach($querySubject->result() as $stuSubject){
				$gs_subject=$stuSubject->Subj_name;
				$markname_query=$this->db->query("select ma.markname,ma.value,ma.outof,sum(outof) as total_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." as ma cross join users as us where us.id=ma.stuid and ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ma.markname order by ma.mid ASC ");
				foreach ($markname_query->result() as $mark_name)
        		{
        			$mname_gs=$mark_name->markname;
            		$query_value = $this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and markname='$mname_gs' order by mid ASC");
					if($query_value->num_rows()>0){
						foreach ($query_value->result() as $mark_value)
						{
	            			$output .='<p>'.$mark_value->subname.'=>'.$mark_value->markname.'=><span class="badge badge-info">'.$mark_value->value.'/'.$mark_value->outof.'</span></p>';
	            		}
	            	}else{
	            		$output .='<p class="text-danger">NG</p>';
	            	}
            	}
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Subject not found.
            	</div></div>';
		}
		return $output;
	}
	function fetch_grade_markresultAdmin($gs_branches,$gs_gradesec,$gs_subjects,$gs_quarter,$max_year)
	{
		$output='';
		/*if($gs_subject===trim('All'))
		{
			$queryFetchMark=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp; Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp; Subject :<B><u>'.$subject.'</u></B></div></br></h6>';
					
					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) 
        			{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center"><B>Total</B></th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result() as $mark_name)
		            	{
		            		$output.='<td class="text-center">'.$mark_name->markname.'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"> <B>100</B> </td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
	        			$grade=$evalua_name['grade'];

	            		$queryMvalue1 = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC",FALSE);
		            	$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
            			$sumOutOf=0;
	            		foreach ($queryMvalue->result_array() as $mark_name) {
	            			$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            			$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            		}
	        			$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}

					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p>';
        		}
        		$output.='</div>';
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		else{*/
			$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."' ");
			if ($queryCheck->num_rows()>0)
			{
			foreach($gs_subjects as $gs_subject){
				$querySingleSubject=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' ");
				if($querySingleSubject->num_rows()>0)
				{
					$query_name = $this->db->query("select * from school");
					$row_name = $query_name->row_array();
					$school_name=$row_name['name'];
					$school_slogan=$row_name['slogan'];

					$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
					    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
					    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
					    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
	        		<thead>
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
	            	
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center">Total</th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$output.='<td class="text-center">'.$mark_name['markname'].'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"><B>100</B></td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {

	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
	        			$grade=$evalua_name['grade'];
	            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$sumOutOf=0;
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$sumOutOf=$mark_name['outof'] + $sumOutOf;
		            		$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
		            	}
		        		$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
		        		$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
					foreach ($queryStudent->result_array() as $row) { 
	            		$id=$row['id'];
	            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
	            		$output.='<td class="text-center">'.$row['username'].' </td>';
	            		$average=0;
	            		foreach ($evalname_query->result_array() as $mark_name)
	            		{

	            			$evName=$mark_name['evname'];
	            			$grade=$mark_name['grade'];
	            			$mname_gs=$mark_name['eid'];
	            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
			            	if($queryCheckPercentage->num_rows()>0){
			            		$rowPercent=$queryCheckPercentage->row();
			            		$percent=$rowPercent->custompercent;
			            	}else{
			            		$percent= $mark_name['percent'];
			            	}
		            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
							if($query_value->num_rows()>0){
								$totalMark=0;$outofTot=0;
								foreach ($query_value->result_array() as $value) {
									$markNameStu=$value['markname'];
									$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
									
									if($queryStuValue->num_rows()>0){
										foreach ($queryStuValue->result_array() as $kevalue) {
											$outofTot=$outofTot+$kevalue['outof'];
											$totalMark=$totalMark+$kevalue['value'];
											$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
										}
									}else{
										$output.='<td class="text-danger" style="text-align:center;">NG</td>';
									}
									$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
					            		$sumOutOf=0;
						            foreach ($queryMvalue->result_array() as $mark_name) {
						            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
						            }
			            		}
			            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
		            			{
		                    		$conver= ($totalMark *$percent )/$sumOutOf;
		                    		if($totalMark>0){
		                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
		                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
		                    		}else{
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    		}
		            					$average =$conver + $average;
		                		}else{
		                			$output.='<td style="text-align:center;">-</td>';
		                			$output.='<td style="text-align:center;">-</td>';
		                		}
			            	}else{
			            		$output.='<td style="text-align:center;">-</td>';
			            		$output.='<td style="text-align:center;">-</td>';
			            	}
		            	}
		            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
	            		$average=0;
	            		$output.='<td style="text-align:center;"></td>';
						$stuNO++;
					}
					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p></div>';
				}else{
		    		$output.='<div class="alert alert-warning alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                	<i class="fas fa-check-circle"> </i> Data Not Found.
	            	</div></div>';
				}
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
            	<i class="fas fa-check-circle"> </i> Data not found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_grade_markresultAdminApproved($gs_branches,$gs_gradesec,$gs_subjects,$gs_quarter,$max_year)
	{
		$output='';
		/*if($gs_subject===trim('All'))
		{
			$queryFetchMark=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp; Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp; Subject :<B><u>'.$subject.'</u></B></div></br></h6>';
					
					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) 
        			{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center"><B>Total</B></th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result() as $mark_name)
		            	{
		            		$output.='<td class="text-center">'.$mark_name->markname.'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"> <B>100</B> </td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
	        			$grade=$evalua_name['grade'];

	            		$queryMvalue1 = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC",FALSE);
		            	$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
            			$sumOutOf=0;
	            		foreach ($queryMvalue->result_array() as $mark_name) {
	            			$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            			$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            		}
	        			$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';

	        			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' and approved='1'group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}

					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p>';
        		}
        		$output.='</div>';
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		else{*/
		foreach($gs_subjects as $gs_subject){
			$querySingleSubject=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' ");
			if($querySingleSubject->num_rows()>0)
			{
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];

				$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

				$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");

				$output.='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
        		<thead>
        		<tr>
        		<th rowspan="3">No.</th>
            	<th rowspan="3">Student Name</th>
            	<th rowspan="3" class="text-center">Student ID</th>';
            	
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
            		$colSpan=$queryMvalue->num_rows() +2;
            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
            	}
            	$output.='<th class="text-center">Total</th><th rowspan="3" class="text-center">Sig.</th><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$output.='<td class="text-center">'.$mark_name['markname'].'</td>';
	            	}
	            	$output.='<td class="text-center"><b>Tot</b></td>';
	            	$output.='<td class="text-center"><b>Conv</b></td>';
	            }
	            $output.='<td rowspan="2" class="text-center"><B>100</B></td>';
            	$output.='</tr><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$percent=$evalua_name['percent'];
            		$evName=$evalua_name['evname'];
        			$grade=$evalua_name['grade'];

            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
            		$sumOutOf=0;
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            		$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            	}
	        		$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        		$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
	            	if($queryCheckPercentage->num_rows()>0){
	            		$rowPercent=$queryCheckPercentage->row();
	            		$customPercent=$rowPercent->custompercent;
	            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
	            	}else{
	            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
	            	}
	            }
            	$output.='</tr>';
            	$stuNO=1;
            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}

	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' and approved='1' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}
				$output.='</table></div>';
				$output.='<p class="text-center">'.$school_slogan.'!</p></div>';
			}else{
	    		$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		return $output;
	}
	function fetch_grade_marksheet($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year,$includeComment)
	{
		$output='';
		if($gs_subject===trim('All'))
		{
			$queryFetchMark=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$gs_subject=$mark_name['subname'];
					$output.='<div style="page-break-inside:avoid;page-break-after: always;">
					<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
					    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
					    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
					    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<thead>
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
	            	
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center">Total</th><th rowspan="3" class="text-center">Grade.</th>
	            	<th rowspan="3" class="text-center">Comment.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$output.='<td class="text-center">'.$mark_name['markname'].'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"><B>100</B></td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
	            		$grade=$evalua_name['grade'];
	            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$sumOutOf=0;
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$sumOutOf=$mark_name['outof'] + $sumOutOf;
		            		$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
		            	}
		            	$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
		            	$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}	        		
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
					foreach ($queryStudent->result_array() as $row) { 
	            		$id=$row['id'];
	            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
	            		$output.='<td class="text-center">'.$row['username'].' </td>';
	            		$average=0;
	            		foreach ($evalname_query->result_array() as $mark_name)
	            		{
	            			$evName=$mark_name['evname'];
	            			$grade=$mark_name['grade'];
	            			$mname_gs=$mark_name['eid'];
	            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
			            	if($queryCheckPercentage->num_rows()>0){
			            		$rowPercent=$queryCheckPercentage->row();
			            		$percent=$rowPercent->custompercent;
			            	}else{
			            		$percent= $mark_name['percent'];
			            	}
		            		$query_value = $this->db->query("select markname,sum(value) as total from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
							if($query_value->num_rows()>0){
								$totalMark=0;$outofTot=0;
								foreach ($query_value->result_array() as $value) {
									$markNameStu=$value['markname'];
									$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
									
									if($queryStuValue->num_rows()>0){
										foreach ($queryStuValue->result_array() as $kevalue) {
											$outofTot=$outofTot+$kevalue['outof'];
											$totalMark=$totalMark+$kevalue['value'];
											$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
										}
									}else{
										$output.='<td class="text-danger" style="text-align:center;">NG</td>';
									}
									$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
					            		$sumOutOf=0;
						            foreach ($queryMvalue->result_array() as $mark_name) {
						            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
						            }
			            		}
			            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
		            			{
		                    		$conver= ($totalMark *$percent )/$sumOutOf;
		                    		if($totalMark>0){
		                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
		                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
		                    		}else{
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    		}
		            					$average =$conver + $average;
		                		}else{
		                			$output.='<td style="text-align:center;">-</td>';
		                			$output.='<td style="text-align:center;">-</td>';
		                		}
			            	}else{
			            		$output.='<td style="text-align:center;">-</td>';
			            		$output.='<td style="text-align:center;">-</td>';
			            	}
		            	}
		            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
		            	$queryRange=$this->db->query("select letterVal from letterange as lr cross join users as us where lr.grade=us.grade and $average between minValue and maxiValue and lr.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");
	                    if($queryRange->num_rows()>0){
	                    	foreach ($queryRange->result() as $letterValue) {
	                      		$letterVal=$letterValue->letterVal;
	                      		$output.= "<td class='text-center'>".$letterVal."</td>";
	                    	}
	                    }else{
	                       $output.= "<td class='text-center'> -</td>";
	                    }
	                    $reportCardComments=$this->db->query("select commentvalue from reportcardcomments as rc cross join users as us where rc.grade=us.grade and $average between mingradevalue and maxgradevalue and rc.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");

	                    if($reportCardComments->num_rows()>0){
	                      foreach($reportCardComments->result() as $commentValue){
	                        $output .= "<td class='text-center'>".$commentValue->commentvalue."</td>";
	                      }
	                      
	                    }else{
	                      $output.= "<td class='text-center'> -</td>";
	                    }
	            		$average=0;
						$stuNO++;
					}
					$output.='</table></div>';
					$output.='<div class="row">
					<div class="col-md-4 col-4">
					Teacher’s Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Principals Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Academic Co-ordinator Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-12 col-12">
					<p class="text-center">'.$school_slogan.'!</p></div>
					</div></div>';
				}
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data not found.
            	</div></div>';
			}
		}
		else{
			$querySingleSubject=$this->db->query("select * from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' ");
			if($querySingleSubject->num_rows()>0)
			{
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];

				$output.='<div style="page-break-inside:avoid;page-break-after: always;">
					<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
					    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
					    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
					    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<thead>
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
	            	
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center">Total</th><th rowspan="3" class="text-center">Grade.</th>
	            	<th rowspan="3" class="text-center">Comment.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$output.='<td class="text-center">'.$mark_name['markname'].'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"><B>100</B></td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
	            		$grade=$evalua_name['grade'];
	            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$sumOutOf=0;
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$sumOutOf=$mark_name['outof'] + $sumOutOf;
		            		$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
		            	}
		            	$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
		            	$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}	        		
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
					foreach ($queryStudent->result_array() as $row) { 
	            		$id=$row['id'];
	            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
	            		$output.='<td class="text-center">'.$row['username'].' </td>';
	            		$average=0;
	            		foreach ($evalname_query->result_array() as $mark_name)
	            		{
	            			$evName=$mark_name['evname'];
	            			$grade=$mark_name['grade'];
	            			$mname_gs=$mark_name['eid'];
	            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
			            	if($queryCheckPercentage->num_rows()>0){
			            		$rowPercent=$queryCheckPercentage->row();
			            		$percent=$rowPercent->custompercent;
			            	}else{
			            		$percent= $mark_name['percent'];
			            	}
		            		$query_value = $this->db->query("select markname,sum(value) as total from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
							if($query_value->num_rows()>0){
								$totalMark=0;$outofTot=0;
								foreach ($query_value->result_array() as $value) {
									$markNameStu=$value['markname'];
									$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
									
									if($queryStuValue->num_rows()>0){
										foreach ($queryStuValue->result_array() as $kevalue) {
											$outofTot=$outofTot+$kevalue['outof'];
											$totalMark=$totalMark+$kevalue['value'];
											$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
										}
									}else{
										$output.='<td class="text-danger" style="text-align:center;">NG</td>';
									}
									$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
					            		$sumOutOf=0;
						            foreach ($queryMvalue->result_array() as $mark_name) {
						            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
						            }
			            		}
			            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
		            			{
		                    		$conver= ($totalMark *$percent )/$sumOutOf;
		                    		if($totalMark>0){
		                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
		                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
		                    		}else{
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    		}
		            					$average =$conver + $average;
		                		}else{
		                			$output.='<td style="text-align:center;">-</td>';
		                			$output.='<td style="text-align:center;">-</td>';
		                		}
			            	}else{
			            		$output.='<td style="text-align:center;">-</td>';
			            		$output.='<td style="text-align:center;">-</td>';
			            	}
		            	}
		            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
		            	$queryRange=$this->db->query("select letterVal from letterange as lr cross join users as us where lr.grade=us.grade and $average between minValue and maxiValue and lr.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");
	                    if($queryRange->num_rows()>0){
	                    	foreach ($queryRange->result() as $letterValue) {
	                      		$letterVal=$letterValue->letterVal;
	                      		$output.= "<td class='text-center'>".$letterVal."</td>";
	                    	}
	                    }else{
	                       $output.= "<td class='text-center'> -</td>";
	                    }
	                    $reportCardComments=$this->db->query("select commentvalue from reportcardcomments as rc cross join users as us where rc.grade=us.grade and $average between mingradevalue and maxgradevalue and rc.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");

	                    if($reportCardComments->num_rows()>0){
	                      foreach($reportCardComments->result() as $commentValue){
	                        $output .= "<td class='text-center'>".$commentValue->commentvalue."</td>";
	                      }
	                      
	                    }else{
	                      $output.= "<td class='text-center'> -</td>";
	                    }
	            		$average=0;
						$stuNO++;
					}
					$output.='</table></div>';
					$output.='<div class="row">
					<div class="col-md-4 col-4">
					Teacher’s Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Principals Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Academic Co-ordinator Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-12 col-12">
					<p class="text-center">'.$school_slogan.'!</p></div>
					</div>';
			}else{
	    		$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		return $output;
	}
	function fetch_grade_marksheetApproved($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year)
	{
		$output='';
		if($gs_subject===trim('All'))
		{
			$queryFetchMark=$this->db->query("select * from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp; Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp; Subject :<B><u>'.$subject.'</u></B></div></br></h6>';
					
					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) 
        			{
	            		$mname_gs=$evalua_name['eid'];
	            		
	            		$output.='<th class="text-center"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center" style="background-color:#e3e3e3"><B>Total</B></th>
	            	<th rowspan="3" class="text-center">Grade</th>
	            	<th rowspan="3" class="text-center">Comment</th><tr>';
	            	$output.='<tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            			            		
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$grade=$evalua_name['grade'];
	            		$evName=$evalua_name['evname'];
	            		$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}
		            }
		            $output.='<td style="text-align:center; background-color:#e3e3e3"><B>100(Pts)</B></td>';
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where  subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where stuid='$id' and subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' and approved='1' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										
									}
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;"></td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center; background-color:#e3e3e3"><B>'.number_format((float)$average,2,'.','').'</B></td>';
	            	$queryRange=$this->db->query("select letterVal from letterange as lr cross join users as us where lr.grade=us.grade and $average between minValue and maxiValue and lr.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");
                    if($queryRange->num_rows()>0){
                    	foreach ($queryRange->result() as $letterValue) {
                      		$letterVal=$letterValue->letterVal;
                      		$output.= "<td class='text-center'>".$letterVal."</td>";
                    	}
                    }else{
                       $output.= "<td class='text-center'> -</td>";
                    }
                    $reportCardComments=$this->db->query("select commentvalue from reportcardcomments as rc cross join users as us where rc.grade=us.grade and $average between mingradevalue and maxgradevalue and rc.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");

                    if($reportCardComments->num_rows()>0){
                      foreach($reportCardComments->result() as $commentValue){
                        $output .= "<td class='text-center'>".$commentValue->commentvalue."</td>";
                      }
                      
                    }else{
                      $output.= "<td class='text-center'> -</td>";
                    }

            		$average=0;
					$stuNO++;
				}

					$output.='</table></div>';
					$output.='<div class="row">
					<div class="col-md-4 col-4">
					Teacher’s Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Principals Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Academic Co-ordinator Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-12 col-12">
					<p class="text-center">'.$school_slogan.'!</p></div>
					</div>';
        		}
        		$output.='</div>';
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data not found.
            	</div></div>';
			}
		}
		else{
			$querySingleSubject=$this->db->query("select * from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' ");
			if($querySingleSubject->num_rows()>0)
			{
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];

				$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

				$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");

				$output.='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
        		<thead>
        		<tr>
        		<th rowspan="3">No.</th>
            	<th rowspan="3">Student Name</th>
            	<th rowspan="3" class="text-center">Student ID</th>';
            	
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		
            		$output.='<th class="text-center"><b>'.$evalua_name['evname'].'</b></th>';
            	}
            	$output.='<th class="text-center" style="background-color:#e3e3e3">Total</th>
            	<th rowspan="3" class="text-center">Grade</th>
            	<th rowspan="3" class="text-center">Comment</th><tr>';
            
            	$output.='<tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$percent=$evalua_name['percent'];
            		$evName=$evalua_name['evname'];
            		$grade=$evalua_name['grade'];

            		$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
	            	if($queryCheckPercentage->num_rows()>0){
	            		$rowPercent=$queryCheckPercentage->row();
	            		$customPercent=$rowPercent->custompercent;
	            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
	            	}else{
	            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
	            	}
	            }
            	$output.='<td class="text-center" style="background-color:#e3e3e3"><B>100(Pts)</B></td></tr>';
            	$stuNO=1;
            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            		
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' and approved='1' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										
									}
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center; background-color:#e3e3e3"><B>'.number_format((float)$average,2,'.','').'</B></td>';
	            	$queryRange=$this->db->query("select letterVal from letterange as lr cross join users as us where lr.grade=us.grade and $average between minValue and maxiValue and lr.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");
                    if($queryRange->num_rows()>0){
                    	foreach ($queryRange->result() as $letterValue) {
                      		$letterVal=$letterValue->letterVal;
                      		$output.= "<td class='text-center'>".$letterVal."</td>";
                    	}
                    }else{
                       $output.= "<td class='text-center'> -</td>";
                    }
                    $reportCardComments=$this->db->query("select commentvalue from reportcardcomments as rc cross join users as us where rc.grade=us.grade and $average between mingradevalue and maxgradevalue and rc.academicYear='$max_year' and us.id='$id' and us.gradesec='$gs_gradesec' and us.academicyear='$max_year' ");

                    if($reportCardComments->num_rows()>0){
                      foreach($reportCardComments->result() as $commentValue){
                        $output .= "<td class='text-center'>".$commentValue->commentvalue."</td>";
                      }
                      
                    }else{
                      $output.= "<td class='text-center'> -</td>";
                    }
            		$average=0;
					$stuNO++;
				}
				$output.='</table></div>';
					$output.='<div class="row">
					<div class="col-md-4 col-4">
					Teacher’s Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Principals Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Academic Co-ordinator Name & Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date Sign_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-4 col-4">
					Date_____________.
					</div>
					<div class="col-md-12 col-12">
					<p class="text-center">'.$school_slogan.'!</p></div>
					</div>';
			}else{
	    		$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		return $output;
	}
	function save_this_grade_teacher_comment($id,$academicyear,$subject,$quarter){
		$this->db->where(array('stuid'=>$id));
		$this->db->where(array('subject'=>$subject));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('academicyear'=>$academicyear));
		$querystu=$this->db->get('manualreportcardcomments');
		if($querystu->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function fetch_grade_markresult_comment($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year)
	{
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."' ");
		if ($queryCheck->num_rows()>0)
		{
			$querySingleSubject=$this->db->query("select * from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' ");
			/*if($querySingleSubject->num_rows()>0)
			{*/

				$output.='<div style="page-break-inside:avoid;page-break-after: always;">
				<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

				$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");
            	$stuNO=1;
            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade,u.gradesec,u.profile from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,lname ASC ");
            	$output.='<input type="hidden" id="academicyearTcomment" value="'.$max_year.'"> ';
		        $output.='<input type="hidden" id="subjectTcomment" value="'.$gs_subject.'"> ';
		        $output.='<input type="hidden" id="quarterTcomment" value="'.$gs_quarter.'"> ';
		        $output.='<input type="hidden" id="markGradeSecTcomment" value="'.$gs_gradesec.'"> ';
		        $output.='<input type="hidden" id="markGradeSecBranchTcomment" value="'.$gs_branches.'"> ';
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$average=0;
            		$output.='<input type="hidden" id="markGradeStuidTcomment" name="markGradeStuidTcomment" value="'.$id.'"> ';
            		$output.='<div class="col-md-12 col-lg-12 col-xl-12">
	                <div class="support-ticket">';
                  	/*if($row['profile']!=''){ 
                    	$output.='<img alt="image" src="'.base_url().'/profile/'.$row['profile'] .'" class="user-img mr-2">';
                    } else { 
                     	$output.='<img alt="image" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
                  	}*/ 
                  	$output.='<span class="font-weight-bold">'.$row['fname'].' ' .$row['mname'].' '.$row['lname']. '</span> ';
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
									}
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		$average =$conver + $average;
	                		}
		            	}
	            	}
	            	$output.='<span class="badge badge-light pull-right">Total<small>(100%)</small> - '.number_format((float)$average,2,'.','').'</span>';
            		$average=0;
            		$queryComment=$this->db->query("select * from manualreportcardcomments where academicyear='$max_year' and quarter='$gs_quarter' and subject='$gs_subject' and stuid='$id' ");
            		if($queryComment->num_rows()>0){
            			$commentRow=$queryComment->row();
            			$commentValue=$commentRow->resultcomment;            			
            			$output.='<textarea class="form-co4ntrol" rows="4" cols="50" wrap="physical" name="teacher_comment_gs" id="teacher_comment_gs" placeholder="Add Comment" style="width:100%; height:100px;"> '.$commentValue.'</textarea>';          			
            		}else{
            			$output.='<textarea class="form-cont4rol" rows="4" cols="50" wrap="physical" name="teacher_comment_gs" id="teacher_comment_gs" placeholder="Add Comment" style="width:100%; height:100px;"> </textarea>';
            		}
            		$output.='</div>
	                </div>
	                <div class="dropdown-divider"></div>';
				}
				$output.='<button class="btn btn-info btn-block" type="submit" name="submitTeacherComment" id="submitTeacherComment">Save Changes</button> </div>
				<p class="infoTeacherComment"></p>';
			/*}else{
	    		$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data not found for '.$gs_subject.'.
            	</div></div>';
			}*/
			
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
            	<i class="fas fa-check-circle"> </i> Table not found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_grade_markresult($gs_branches,$gs_gradesec,$gs_subjects,$gs_quarter,$max_year)
	{
		$output='';
		/*if($gs_subject=='All')
		{
			$queryFetchMark=$this->db->query("select subname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select name,slogan from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp; Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp; Subject :<B><u>'.$subject.'</u></B></div></br></h6>';

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) 
        			{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and academicyear='$max_year' and quarter='$gs_quarter' and mbranch='$gs_branches' and evaid='$mname_gs' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center"><B>Total</B></th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and mbranch='$gs_branches' and evaid='$mname_gs' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result() as $mark_name)
		            	{
		            		$output.='<td class="text-center">'.$mark_name->markname.'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"> <B>100</B> </td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$grade=$evalua_name['grade'];
	            		$evName=$evalua_name['evname'];
		            	$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and evaid='$mname_gs' group by markname order by mid ASC");
            			$sumOutOf=0;
	            		foreach ($queryMvalue->result_array() as $mark_name) {
	            			$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            			$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            		}
	        			$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and mbranch='$gs_branches' and evaid='$mname_gs' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and stuid='$id' and quarter='$gs_quarter' and mbranch='$gs_branches' and evaid='$mname_gs' and markname='$markNameStu' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and evaid='$mname_gs' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}

					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p>';
        		}
        		$output.='</div>';
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		else{*/
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."' ");
		if ($queryCheck->num_rows()>0)
		{
			foreach($gs_subjects as $gs_subject){
				$querySingleSubject=$this->db->query("select * from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' ");
				if($querySingleSubject->num_rows()>0)
				{

					$output.='<div style="page-break-inside:avoid;page-break-after: always;">
					<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
					    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
					    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
					    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<thead>
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
	            	
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center">Total</th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$output.='<td class="text-center">'.$mark_name['markname'].'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"><B>100</B></td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
	            		$grade=$evalua_name['grade'];
	            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$sumOutOf=0;
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$sumOutOf=$mark_name['outof'] + $sumOutOf;
		            		$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
		            	}
		            	$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
		            	$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}	        		
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
					foreach ($queryStudent->result_array() as $row) { 
	            		$id=$row['id'];
	            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
	            		$output.='<td class="text-center">'.$row['username'].' </td>';
	            		$average=0;
	            		foreach ($evalname_query->result_array() as $mark_name)
	            		{
	            			$evName=$mark_name['evname'];
	            			$grade=$mark_name['grade'];
	            			$mname_gs=$mark_name['eid'];
	            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
			            	if($queryCheckPercentage->num_rows()>0){
			            		$rowPercent=$queryCheckPercentage->row();
			            		$percent=$rowPercent->custompercent;
			            	}else{
			            		$percent= $mark_name['percent'];
			            	}
		            		$query_value = $this->db->query("select markname,sum(value) as total from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
							if($query_value->num_rows()>0){
								$totalMark=0;$outofTot=0;
								foreach ($query_value->result_array() as $value) {
									$markNameStu=$value['markname'];
									$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
									
									if($queryStuValue->num_rows()>0){
										foreach ($queryStuValue->result_array() as $kevalue) {
											$outofTot=$outofTot+$kevalue['outof'];
											$totalMark=$totalMark+$kevalue['value'];
											$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
										}
									}else{
										$output.='<td class="text-danger" style="text-align:center;">NG</td>';
									}
									$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from `mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year."` where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
					            		$sumOutOf=0;
						            foreach ($queryMvalue->result_array() as $mark_name) {
						            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
						            }
			            		}
			            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
		            			{
		                    		$conver= ($totalMark *$percent )/$sumOutOf;
		                    		if($totalMark>0){
		                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
		                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
		                    		}else{
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
		                    		}
		            					$average =$conver + $average;
		                		}else{
		                			$output.='<td style="text-align:center;">-</td>';
		                			$output.='<td style="text-align:center;">-</td>';
		                		}
			            	}else{
			            		$output.='<td style="text-align:center;">-</td>';
			            		$output.='<td style="text-align:center;">-</td>';
			            	}
		            	}
		            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
	            		$average=0;
	            		$output.='<td style="text-align:center;"></td>';
						$stuNO++;
					}
					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p></div>';
				}else{
		    		$output.='<div class="alert alert-warning alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                	<i class="fas fa-check-circle"> </i> Data not found for '.$gs_subject.'.
	            	</div></div>';
				}
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
            	<i class="fas fa-check-circle"> </i> Table not found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_grade_markresultApproved($gs_branches,$gs_gradesec,$gs_subjects,$gs_quarter,$max_year)
	{
		$output='';
		/*if($gs_subject===trim('All'))
		{
			$queryFetchMark=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp; Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp; Subject :<B><u>'.$subject.'</u></B></div></br></h6>';
					
					$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) 
        			{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() +2;
	            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center"><B>Total</B></th><th rowspan="3" class="text-center">Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result() as $mark_name)
		            	{
		            		$output.='<td class="text-center">'.$mark_name->markname.'</td>';
		            	}
		            	$output.='<td class="text-center"><b>Tot</b></td>';
		            	$output.='<td class="text-center"><b>Conv</b></td>';
		            }
		            $output.='<td rowspan="2" class="text-center"> <B>100</B> </td>';
	            	$output.='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$evName=$evalua_name['evname'];
            			$grade=$evalua_name['grade'];

	            		$queryMvalue1 = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC",FALSE);
		            	$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
            			$sumOutOf=0;
	            		foreach ($queryMvalue->result_array() as $mark_name) {
	            			$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            			$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            		}
	        			$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$customPercent=$rowPercent->custompercent;
		            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
		            	}else{
		            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
		            	}
		            }
	            	$output.='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' and markname='$markNameStu' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}

					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p>';
        		}
        		$output.='</div>';
			}else{
				$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		else{*/
		foreach($gs_subjects as $gs_subject){
			$querySingleSubject=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' ");
			if($querySingleSubject->num_rows()>0)
			{
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];

				$output.='<div style="height:92%;page-break-inside:avoid;"><h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

				$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

				$output.='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
        		<thead>
        		<tr>
        		<th rowspan="3">No.</th>
            	<th rowspan="3">Student Name</th>
            	<th rowspan="3" class="text-center">Student ID</th>';
            	
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
            		$colSpan=$queryMvalue->num_rows() +2;
            		$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
            	}
            	$output.='<th class="text-center">Total</th><th rowspan="3" class="text-center">Sig.</th><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$output.='<td class="text-center">'.$mark_name['markname'].'</td>';
	            	}
	            	$output.='<td class="text-center"><b>Tot</b></td>';
	            	$output.='<td class="text-center"><b>Conv</b></td>';
	            }
	            $output.='<td rowspan="2" class="text-center"><B>100</B></td>';
            	$output.='</tr><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$percent=$evalua_name['percent'];
            		$evName=$evalua_name['evname'];
        			$grade=$evalua_name['grade'];
            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
            		$sumOutOf=0;
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$sumOutOf=$mark_name['outof'] + $sumOutOf;
	            		$output.='<td class="text-center">'.$mark_name['outof'].'</td>';
	            	}
	        		$output.='<td style="text-align:center;"><B>'.$sumOutOf.'</B></td>';
	        		$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
	            	if($queryCheckPercentage->num_rows()>0){
	            		$rowPercent=$queryCheckPercentage->row();
	            		$customPercent=$rowPercent->custompercent;
	            		$output.='<td style="text-align:center;"><B>'.$customPercent.'</B></td>';
	            	}else{
	            		$output.='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
	            	}
	            }
            	$output.='</tr>';
            	$stuNO=1;
            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output.='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			
            			$evName=$mark_name['evname'];
            			$grade=$mark_name['grade'];
            			$mname_gs=$mark_name['eid'];
            			$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$gs_quarter' ");
		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent= $mark_name['percent'];
		            	}
	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							$totalMark=0;$outofTot=0;
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' and approved='1' group by markname order by mid ASC");
								
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$outofTot=$outofTot+$kevalue['outof'];
										$totalMark=$totalMark+$kevalue['value'];
										$output.='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output.='<td class="text-danger" style="text-align:center;">NG</td>';
								}
								$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' and approved='1' group by markname order by mid ASC");
				            		$sumOutOf=0;
					            foreach ($queryMvalue->result_array() as $mark_name) {
					            	$sumOutOf=$mark_name['outof'] + $sumOutOf;	
					            }
		            		}
		            		if($sumOutOf != 0 || $sumOutOf > 0 ||$sumOutOf !='')
	            			{
	                    		$conver= ($totalMark *$percent )/$sumOutOf;
	                    		if($totalMark>0){
	                    			$output.='<td style="text-align:center;">'.$totalMark.'</td>';
	                    			$output.='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
	                    		}else{
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    			$output.='<td class="text-danger" style="text-align:center;">NG</td>';
	                    		}
	            					$average =$conver + $average;
	                		}else{
	                			$output.='<td style="text-align:center;">-</td>';
	                			$output.='<td style="text-align:center;">-</td>';
	                		}
		            	}else{
		            		$output.='<td style="text-align:center;">-</td>';
		            		$output.='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
            		$average=0;
            		$output.='<td style="text-align:center;"></td>';
					$stuNO++;
				}
				$output.='</table></div>';
				$output.='<p class="text-center">'.$school_slogan.'!</p></div>';
			}else{
	    		$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		return $output;
	}
	function fetch_grade_teachermarkresult($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year)
	{
		$output=array();
		$querySingleSubject=$this->db->query("select * from mark".$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' ");
		if($querySingleSubject->num_rows()>0)
		{
			$query_name = $this->db->query("select * from school");
			$row_name = $query_name->row_array();
			$school_name=$row_name['name'];
			$school_slogan=$row_name['slogan'];
			$output[]='<h4 class="text-center"><B>'.$school_name.'</B>('.$gs_branches.'<small class="time">(Academic Year: '.$max_year.')</small>)</h4>';
			$output[]='<div class="row"><div class="col-md-1"></div>
			<div class="col-md-3"> Grade :<B>'.
			$gs_gradesec.'</B></div> <div class="col-md-3">Season :<B>'.
			$gs_quarter.'</B> </div> <div class="col-md-3">Subject : <B>'.
			$gs_subject.'</B></div><div class="col-md-1"></div></div>';	
			$evalname_query=$this->db->query("select us.id, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

			$output[]='<div class="table-responsive">
    		<table class="table table-bordered table-hover" style="width:100%;height:92%">
    		<thead>
    		<tr>
    		<th rowspan="3">No.</th>
        	<th rowspan="3">Student Name</th>
        	<th rowspan="3">Student ID</th>';
        	
        	foreach ($evalname_query->result_array() as $evalua_name) {
        		$mname_gs=$evalua_name['eid'];
        		$queryMvalue = $this->db->query("select markname from mark".$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
        		$colSpan=$queryMvalue->num_rows() +2;
        		$output[]='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
        	}
        	$output[]='<th>Total</th><th rowspan="3">Sig.</th><tr>';
        	foreach ($evalname_query->result_array() as $evalua_name) {
        		$mname_gs=$evalua_name['eid'];
        		$queryMvalue = $this->db->query("select markname from mark".$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
            	foreach ($queryMvalue->result_array() as $mark_name) {
            		$output[]='<td class="text-center">'.$mark_name['markname'].'</td>';
            	}
            	$output[]='<td class="text-center"><b>Tot</b></td>';
            	$output[]='<td class="text-center"><b>Conv</b></td>';
            }
            $output[]='<td rowspan="2" class="text-center"><B>100</B></td>';
        	$output[]='</tr><tr>';
        	foreach ($evalname_query->result_array() as $evalua_name) {
        		$mname_gs=$evalua_name['eid'];
        		$percent=$evalua_name['percent'];
        		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
            	foreach ($queryMvalue->result_array() as $mark_name) {
            		$output[]='<td class="text-center">'.$mark_name['outof'].'</td>';
            	}
        		$sum_outof = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by stuid order by mid ASC");
    		    $keyvalue=$sum_outof->row_array();
    		    $sum_outof= $keyvalue['sum_outof'];
    		    $output[]='<td style="text-align:center;"><B>'.$sum_outof.'</B></td>';
    		    $output[]='<td style="text-align:center;"><B>'.$evalua_name['percent'].'</B></td>';
            }
        	$output[]='</tr>';
        	$stuNO=1;
        	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
			foreach ($queryStudent->result_array() as $row) { 
        		$id=$row['id'];
        		$output[]='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
        		$output[]='<td>'.$row['username'].' </td>';
        		$average=0;
        		foreach ($evalname_query->result_array() as $mark_name)
        		{
        			$percent= $mark_name['percent'];
        			$mname_gs=$mark_name['eid'];
            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_gradesec.$gs_quarter.$max_year." where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
					if($query_value->num_rows()>0){
						foreach ($query_value->result_array() as $value) {
							$markNameStu=$value['markname'];
							$queryStuValue = $this->db->query("select value,sum(value) as total from mark".$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
							if($queryStuValue->num_rows()>0){
								foreach ($queryStuValue->result_array() as $kevalue) {
									$output[]='<td style="text-align:center;">'.$kevalue['value'].'</td>';
								}
							}else{
								$output[]='<td style="text-align:center;">-</td>';
							}
	            		}
	            	}else{
	            		$output[]='<td style="text-align:center;">-</td>';
	            	}
	            	/*query Total*/
	            	$sum_outof = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by stuid order by mid ASC");
    		    	$keyvalue=$sum_outof->row_array();
    		    	$sumu_otof= $keyvalue['sum_outof'];
	            	$query_value = $this->db->query("select sum(value) as total,sum(outof) as outof from mark".$gs_gradesec.$gs_quarter.$max_year." where  stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' order by mid ASC");
					if($query_value->num_rows()>0){
						foreach ($query_value->result_array() as $value) {
							if($value['outof'] != 0 || $value['outof'] > 0 ||$sumu_otof !='')
            				{
                    			$conver= ($value['total'] *$percent )/$sumu_otof;
                    			$output[]='<td style="text-align:center;">'.$value['total'].'</td>';
                    			$output[]='<td style="text-align:center;"><B>'.number_format((float)$conver,2,'.','').'</B></td>';
            					$average =$conver + $average;
                			}else{
                				$output[]='<td style="text-align:center;">-</td>';
                			}
            			}
	            	}else{
	            		$output[]='<td style="text-align:center;">-</td>';
	            	}
            	}
            	$output[]='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
        		$average=0;
        		$output[]='<td style="text-align:center;"></td>';
				$stuNO++;
			}
			$output[]='</table></div>';
			$output[]='<p class="text-center">'.$school_slogan.'!</p><br>';
		}else{
    		$output[]='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
            	<i class="fas fa-check-circle"> </i> Data Not Found.
        	</div></div>';
		}
		
		return implode("\r\n",$output);
	}
	function fetchRowmarkresult($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year)
	{
		$output=array();
		if($gs_subject===trim('All'))
		{
			$queryFetchMark=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and quarter='$gs_quarter' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				
        		foreach ($queryFetchMark->result_array() as $mark_name) {
        			$subject=$mark_name['subname'];
					$output[]='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output[]='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$subject.'</u></B></div></br></h6>';
					
					$evalname_query=$this->db->query("select us.id, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

					$output[]='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
	        		<thead>
	        		<tr>
	        		<th rowspan="3">No.</th>
	            	<th rowspan="3">Student Name</th>
	            	<th rowspan="3" class="text-center">Student ID</th>';
        			foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
	            		$colSpan=$queryMvalue->num_rows() ;
	            		$output[]='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output[]='<th rowspan="3" class="text-center"> Sig.</th><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result_array() as $mark_name) {
		            		$output[]='<td class="text-center">'.$mark_name['markname'].'</td>';
		            	}
		            }
	            	$output[]='</tr><tr>';
	            	foreach ($evalname_query->result_array() as $evalua_name) {
	            		$mname_gs=$evalua_name['eid'];
	            		$percent=$evalua_name['percent'];
	            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
		            	foreach ($queryMvalue->result_array() as $mark_name)
		            	{
		            		$output[]='<td class="text-center">'.$mark_name['outof'].'</td>';
		            	}
		            }
	            	$output[]='</tr>';
	            	$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
					foreach ($queryStudent->result_array() as $row) { 
	            		$id=$row['id'];
	            		$output[]='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
	            		$output[]='<td class="text-center">'.$row['username'].' </td>';
	            		$average=0;
	            		foreach ($evalname_query->result_array() as $mark_name)
	            		{
	            			$percent= $mark_name['percent'];
	            			$mname_gs=$mark_name['eid'];
		            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
							if($query_value->num_rows()>0){
								foreach ($query_value->result_array() as $value) {
									$markNameStu=$value['markname'];
									$queryStuValue = $this->db->query("select value,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
									if($queryStuValue->num_rows()>0){
										foreach ($queryStuValue->result_array() as $kevalue) {
											$output[]='<td style="text-align:center;">'.$kevalue['value'].'</td>';
										}
									}else{
										$output[]='<td class="text-danger" style="text-align:center;">NG</td>';
									}
			            		}
			            	}else{
			            		$output[]='<td style="text-align:center;">-</td>';
			            	}
		            	}
	            		$output[]='<td style="text-align:center;"></td>';
						$stuNO++;
					}
					$output[]='</table></div>';
					$output[]='<p class="text-center">'.$school_slogan.'!</p>';
        		}
			}else{
				$output[]='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		else{
			$querySingleSubject=$this->db->query("select * from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where academicyear='$max_year' and subname='$gs_subject' and mgrade='$gs_gradesec' and mbranch='$gs_branches' ");
			if($querySingleSubject->num_rows()>0)
			{
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];

				$output[]='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
				    $output[]='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
				    &nbsp;&nbsp;	Season :<B><u>'. $gs_quarter.'</u></B> 
				    &nbsp;&nbsp;	Subject :<B><u>'.$gs_subject.'</u></B></div></br></h6>';

				$evalname_query=$this->db->query("select us.id, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarter' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");

				$output[]='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;height:85%">
        		<thead>
        		<tr>
        		<th rowspan="3">No.</th>
            	<th rowspan="3">Student Name</th>
            	<th rowspan="3" class="text-center">Student ID</th>';
            	
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
            		$colSpan=$queryMvalue->num_rows() ;
            		$output[]='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
            	}
            	$output[]='<th rowspan="3" class="text-center">Sig.</th><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$queryMvalue = $this->db->query("select markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$output[]='<td class="text-center">'.$mark_name['markname'].'</td>';
	            	}
	            }
            	$output[]='</tr><tr>';
            	foreach ($evalname_query->result_array() as $evalua_name) {
            		$mname_gs=$evalua_name['eid'];
            		$percent=$evalua_name['percent'];
            		$queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by markname order by mid ASC");
	            	foreach ($queryMvalue->result_array() as $mark_name) {
	            		$output[]='<td class="text-center">'.$mark_name['outof'].'</td>';
	            	}
	            }
            	$output[]='</tr>';
            	$stuNO=1;
            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
				foreach ($queryStudent->result_array() as $row) { 
            		$id=$row['id'];
            		$output[]='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
            		$output[]='<td class="text-center">'.$row['username'].' </td>';
            		$average=0;
            		foreach ($evalname_query->result_array() as $mark_name)
            		{
            			$percent= $mark_name['percent'];
            			$mname_gs=$mark_name['eid'];
	            		$query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where  subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' group by markname order by mid ASC");
						if($query_value->num_rows()>0){
							foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$queryStuValue = $this->db->query("select value,sum(value) as total from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' and evaid='$mname_gs' and mbranch='$gs_branches' and markname='$markNameStu' group by markname order by mid ASC");
								if($queryStuValue->num_rows()>0){
									foreach ($queryStuValue->result_array() as $kevalue) {
										$output[]='<td style="text-align:center;">'.$kevalue['value'].'</td>';
									}
								}else{
									$output[]='<td class="text-danger" style="text-align:center;"> NG</td>';
								}
		            		}
		            	}else{
		            		$output[]='<td style="text-align:center;">-</td>';
		            	}
	            	}
	            	$output[]='<td style="text-align:center;"></td>';
					$stuNO++;
				}
				$output[]='</table></div>';
				$output[]='<p class="text-center">'.$school_slogan.'!</p>';
			}else{
	    		$output[]='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                	<i class="fas fa-check-circle"> </i> Data Not Found.
            	</div></div>';
			}
		}
		return implode("\r\n",$output);
	}
	function fetch_subject_from_subject($gradesec,$max_year){
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output ='<option value="All"> All </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
			}
			return $output;
	}
	function fetch_subject_from_subjectAdmin($gradesec,$max_year){
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output ='<option value="All"> All </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
			}
			return $output;
	}
	function fetch_subject_from_subjectNonAdmin($gradesec,$max_year,$branch){
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output ='<option value="All"> All </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
			}
			return $output;
	}
	function fetch_subject_from_gradeSecFilter($gradesec,$max_year){
		$output='';
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output.='<div class="col-md-6 col-12">
	            <div class="pretty p-bigger">
	              <input type="checkbox" name="subject_statisticsGrade" value="'.$row->Subj_name.'" id="customCheck1 subject_statisticsGrade">
	              <div class="state p-success">
	                <i class="icon material-icons"></i>
	                <label></label>'.$row->Subj_name.'
	              </div>
	          	</div>
	        </div>';
		}
		$output.='</div>';
		return $output;
	}
	function fetch_subject_from_gradeSecFilter_Admin_gs($gradesec,$max_year){
		$output='';
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output.='<div class="col-md-6 col-12">
	            <div class="pretty p-bigger">
	              <input type="checkbox" name="subject_statisticsGrade" value="'.$row->Subj_name.'" id="customCheck1 subject_statisticsGrade">
	              <div class="state p-success">
	                <i class="icon material-icons"></i>
	                <label></label>'.$row->Subj_name.'
	              </div>
	          	</div>
	        </div>';
		}
		$output.='</div>';
		return $output;
	}
	function fetch_subject_from_gradeSecFilter_Admin_gsS($gradesec,$max_year){
		$output='';
		$this->db->where('subject.Grade',$gradesec);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$query=$this->db->get('subject');
		$output.='<div class="row">';
		foreach ($query->result() as $row) { 
			$output.='<div class="col-md-6 col-12">
	            <div class="pretty p-bigger">
	              <input type="checkbox" name="subject_statisticsGradeS" value="'.$row->Subj_name.'" id="customCheck1 subject_statisticsGradeS">
	              <div class="state p-success">
	                <i class="icon material-icons"></i>
	                <label></label>'.$row->Subj_name.'
	              </div>
	          	</div>
	        </div>';
		}
		$output.='</div>';
		return $output;
	}
	function filterGradesecfromBranchS($academicyear){
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->order_by('name','ASC');
		$this->db->group_by('name');
		$query=$this->db->get('branch');
		$output ='';
		$output.='<option>--Select Branch--</option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->name.'">'.$row->name.'</option>';
		}
	    return $output;
	}
	function fetchOnlyGradeFromBranch_gs_statisticsS($branch,$max_year){
		$this->db->where('users.branch',$branch);
		$this->db->where(array('users.academicyear'=>$max_year));
		$this->db->order_by('users.grade','ASC');
		$this->db->group_by('users.grade');
		$query=$this->db->get('users');
		$output .='<option></option>';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
	    return $output;
	}
	function filter_quarter_fromyear_markanalysisS($max_year){
		$output='';
		$this->db->where('Academic_year',$max_year);
		$this->db->group_by('term');
		$this->db->order_by('term','ASC');
		$query=$this->db->get('quarter');
		$output .='<div class="row">';
		foreach ($query->result() as $fetch_terms) { 
			$output .=' <div class="col-md-6 col-12">
                <div class="pretty p-icon p-jelly p-round p-bigger">
                  <input type="checkbox" name="quarter_statisticsGradeS[ ]" value="'.$fetch_terms->term.'" id="customCheck1 quarter_statisticsGradeS">
                  <div class="state p-info">
                    <i class="icon material-icons"></i>
                    <label></label>'.$fetch_terms->term.'
                  </div>
                </div>
            </div>';
		}
		$output .='</div>';
	    return $output;
	}
	function gradeMarkStatisticsS($max_year,$gs_branches,$gs_grade,$gs_subject,$countSubject,$gs_quarters,$countQuarter)
	{
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$data=array();
		$queryUserNum=$this->db->query("select gradesec from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.grade='$gs_grade' and u.usertype='Student' and status='Active' and isapproved='1' group by u.id ");
		if($queryUserNum->num_rows()>0){
			$totalStudent=$queryUserNum->num_rows();
		}else{
			$totalStudent='1';
		}
		$totalPercentage=$totalStudent * 100;
		$queryUserGradesec=$this->db->query("select gradesec from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.grade='$gs_grade' and u.gradesec!='' and u.usertype='Student' group by u.gradesec ");
		if($queryUserGradesec->num_rows()>0){
			foreach($gs_subject as $subject){
				$lastvalMe=0;$finalresultGS=0;$finalresultGSS=0;$final_Value=0;
				foreach($queryUserGradesec->result() as $evUser){
					$gradesec=$evUser->gradesec;
					foreach($gs_quarters as $quarter){
						$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gradesec.$quarter.$max_year."' ");
					if ($queryCheck->num_rows()>0)
					{
						$queryUser=$this->db->query("select id,fname,mname,username,grade from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.gradesec='$gradesec' and u.status='Active' and u.isapproved='1' and u.usertype='Student' group by u.id ");
						if($queryUser->num_rows()>0){	
							foreach($queryUser->result() as $User){
								$grade=$User->grade;
								$stuid=$User->id;
								$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and academicyear='$max_year' and grade='$grade' ");
								if($queryEvaluation->num_rows()>0){
									foreach ($queryEvaluation->result() as $evavalue) {
										$evName=$evavalue->evname;
										$evaluation=$evavalue->eid;
										$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname order by mid ASC");
										if($queryMarkOutof->num_rows()>0){
											$totaloutof=0;
											foreach ($queryMarkOutof->result() as $keyvalue) {
					    						$totaloutof=$keyvalue->outof +$totaloutof;
											}
											$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
								            if($queryCheckPercentage->num_rows()>0){
								            	$rowPercent=$queryCheckPercentage->row();
								            	$percent=$rowPercent->custompercent;
								            }else{
								            	$percent= $evavalue->percent;
								            }										
											$queryMark = $this->db->query("select sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by stuid order by mid ASC");
											if($queryMark->num_rows()>0){
												foreach ($queryMark->result() as $mvalue) {
													$totalmark=$mvalue->total;
													$finalresult=($percent*$totalmark)/$totaloutof;
													$finalValue=number_format((float)$finalresult,1,'.','');
												}
												$lastvalMe=$lastvalMe + $finalValue;
											}	
										}
									}
								}
								$finalresultGS=$finalresultGS + $lastvalMe;
							}
						}
						$final_Value=(($lastvalMe * 100)/$totalPercentage)/$countQuarter;
						$finalresultGSS=number_format((float)$final_Value,1,'.','');              
		            }
		        }
	            }
	            $data[]=array(
		        	/*'stuid'=>'',*/
		        	'subject'=>$subject,
		        	/*'grade'=>$gs_grade,*/
		        	/*'quarter'=>$quarter,*/
		        	'total'=>$finalresultGSS,
		        	/*'totalStudent'=>$totalStudent,*/
		        	/*'shbranch'=>$gs_branches,
		        	'academicyear'=>$max_year*/
		        );
			}
		}

		/*if(!empty($data)){
			$queryInsert=$this->db->insert_batch('reportvaluestatistics',$data);
		}*/
		$no=1;		
		$output.='<div class="table-responsive">
		<table class="tabler table-bordered table-hover" style="width:100%;">
		<thead><tr>';
		if(!empty($data)){
			$output.='<h4 class="text-center"><u><B>'.$school_name.'</B><small class="time">( '.$gs_branches.')</small> mark record in ' .$max_year.' Academic Year for Grade '.$gs_grade.' in ';
			foreach($gs_quarters as $quarter){
				$output.=''.$quarter.',';
			} 
			$output.='<th>No.</th>
			<th>Subject</th>
			<th>Average</th>';
			foreach($data as $datas){
				$output.='<tr>';
				$output.='<td class="text-center">'.$no.'</td>';
				foreach ($datas as $names => $surnames){
			        $output.='<td class="">'.$surnames.'</td>';

			    }
			    $no++;
			    $output.='</tr>';
			}
		}
		$output.='</table></div>';
		$output.='<p class="text-center">'.$school_slogan.'!</p>';
    	return $output;
	}
	function fetch_subject_from_gradeFilter($grade,$max_year){
		$output ='<hr><div class="row">';
		foreach($grade as $gradesec){
			$this->db->where('users.academicyear',$max_year);
			$this->db->where('users.grade',$gradesec);
			$this->db->where(array('subject.Academic_Year'=>$max_year));
			$this->db->order_by('subject.Subj_name','ASC');
			$this->db->group_by('subject.Subj_name');
			$this->db->select('*');
			$this->db->from('subject');
			$this->db->join('users',
			'users.grade = subject.Grade');
			$query=$this->db->get();
			foreach ($query->result() as $row) { 
				$output.='<div class="col-md-6 col-6">
				<div class="form-group">
	            <div class="pretty p-icon p-jelly p-round p-bigger">
	              <input type="checkbox" name="subject_statistics" value="'.$row->Subj_name.'" id="customCheck1 subject_statistics">
	              <div class="state p-info">
	                <i class="icon material-icons"></i>
	                <label></label>
	              </div>
	            </div>'.$row->Subj_name.'
	          </div></div>';
			}
		}
		$output.='</div>';
		return $output;
	}
	function fetch_subject_from_gradeFilterDirector($gradesecs,$max_year){
		foreach($gradesecs as $gradesec){
			$this->db->where('users.academicyear',$max_year);
			$this->db->where('users.gradesec',$gradesec);
			$this->db->where(array('subject.Academic_Year'=>$max_year));
			$this->db->order_by('subject.Subj_name','ASC');
			$this->db->group_by('subject.Subj_name');
			$this->db->select('*');
			$this->db->from('subject');
			$this->db->join('users',
			'users.grade = subject.Grade');
			$query=$this->db->get();
			$output ='<div class="row">';
			foreach ($query->result() as $row) { 
				$output.='<div class="col-md-6 col-6">
				<div class="form-group">
	            <div class="pretty p-icon p-jelly p-round p-bigger">
	              <input type="checkbox" name="subject_statisticsDirector" value="'.$row->Subj_name.'" id="customCheck1 subject_statisticsDirector">
	              <div class="state p-info">
	                <i class="icon material-icons"></i>
	                <label></label>
	              </div>
	            </div>'.$row->Subj_name.'
	          </div></div>';
				
			}
			$output.='</div>';
		}
		return $output;
	}
	function fetch_subject_from_subject4MardEdit($gradesec,$max_year){
		$output='';
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
			}
			return $output;
	}
	function fetch_mymark_result($academicyear,$gradesec,$subject,$quarter,$id){
		$this->db->where(array('mark.academicyear'=>$academicyear));
		$this->db->where(array('mark.subname'=>$subject));
		$this->db->where(array('mark.quarter'=>$quarter));
		$this->db->where(array('mark.stuid'=>$id));
		$this->db->where(array('users.gradesec'=>$gradesec));
		$this->db->group_by('mark.stuid');
		$this->db->order_by('mark.mid');
		$this->db->select('*');
		$this->db->from('mark');
		$this->db->join('users',
		'users.id = mark.stuid');
		$query=$this->db->get();
		return $query->result();
	}
	function fetch_average($max_year,$id,$max_quarter){
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('quarter'=>$max_quarter));
		$this->db->where(array('stuid'=>$id));
		$this->db->group_by('quarter');
		$this->db->group_by('subject');
		$query=$this->db->get('reportcard');
		return $query->result();
	}
	function fetch_evaluation_fornewexam($max_year){
		$this->db->order_by('eid','ASC');
		$this->db->group_by('evname');
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('evaluation');
		return $query->result();
	}
	function fetch_thisgrade_students_fornewexam($academicyear,$gradesec,$subject,$evaluation,$quarter,$assesname,$percentage,$branch,$max_year){
		$output='';
		$query = $this->db->query(" Select * from users where academicyear='$max_year' and status='Active' and isapproved='1' and usertype ='Student' and gradesec='$gradesec' and branch='$branch' order by fname,mname,lname ASC ");
		$output .='<div class="table-responsive">
        	<table class="table table-bordered table-hover" style="width:100%;">
        		<thead>
        		<tr>
        			<th>No.</th>
        		    <th>Result</th>
            		<th>Name</th>
            		<th>Grade</th>
            		<th>Branch</th>
            		<th>Subject</th>
           	 		<th>Quarter</th>
            		<th>Assesment Name</th>
            		<th>Percentage</th>
        		</tr>
        	</thead>';
        $output.='<input type="hidden" id="academicyear" value="'.$academicyear.'"> ';
        $output.='<input type="hidden" id="subject" value="'.$subject.'"> ';
        $output.='<input type="hidden" id="evaluation" value="'.$evaluation.'"> ';
        $output.='<input type="hidden" id="quarter" value="'.$quarter.'"> ';
        $output.='<input type="hidden" id="percentage" value="'.$percentage.'"> ';
        $output.='<input type="hidden" id="assesname" value="'.$assesname.'"> ';
        $output.='<input type="hidden" id="markGradeSec" value="'.$gradesec.'"> ';
        $output.='<input type="hidden" id="markGradeSecBranch" value="'.$branch.'"> ';
        $no=1;
		foreach ($query->result() as $fetch_student) {
			$output.='<input type="hidden" id="stuid" 
			name="stuid_result" value="'.$fetch_student->id.'"> ';
			$output.='<tr class="'.$fetch_student->id.'">
			<td>'.$no.'.</td>
			<td><input type="text" onkeyup="chkMarkValue()" name="markvalue_result" id="resultvalue" class="form-control markvalue_result">
			 </td>';
			$output.='<td>'.$fetch_student->fname.' '.$fetch_student->mname.' '.$fetch_student->lname.'</td>';
			$output.='<td>'.$gradesec.'</td>';
			$output.='<td>'.$branch.'</td>';
			$output.='<td>'.$subject.'</td>';
			$output.='<td>'.$quarter.'</td>';
			$output.='<td>'.$assesname.'</td>';
			$output.='<td>'.$percentage.'</td></tr>';
			$no++;
		}
		$output .='</table></div>';
		$output .='<button type="submit" id="SaveResult" class="btn btn-primary btn-block">Submit Result </button>';
		return $output;
	}
	function fetch_thisgrade_mystudents_fornewexam($gradesec,$max_year,$branch){
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('gradesec'=>$gradesec));
		$this->db->where(array('branch'=>$branch));
		$this->db->order_by('fname','ASC');
		$query=$this->db->get('users');
		return $query->result();
	}
	function save_thisgrade_exam($academicyear,$subject,$quarter,$assesname,$markGradeSec,$markGradeSecBranch){
		$this->db->where(array('mgrade'=>$markGradeSec));
		$this->db->where(array('subname'=>$subject));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('markname'=>$assesname));
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('mbranch'=>$markGradeSecBranch));
		$querystu=$this->db->get('mark'.$markGradeSecBranch.$markGradeSec.$quarter.$academicyear);
		$output='';
		if($querystu->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function insert_bs_name($bsname,$grades,$max_year,$name_quarter){
		$this->db->where(array('bsname'=>$bsname));
		$this->db->where(array('grade'=>$grades));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('season'=>$name_quarter));
		$query=$this->db->get('basicskill');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function insert_bs_name_check($bsname,$grades,$max_year,$name_quarter){
		$this->db->where(array('bsname'=>$bsname));
		$this->db->where(array('grade'=>$grades));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('season'=>$name_quarter));
		$query=$this->db->get('basicskill');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function insert_s_name($category_term_sub,$bsname,$grades,$max_year,$weekName,$data){
		$this->db->where('academicyear',$max_year);
      	$this->db->where('enable_status','1');
      	$query=$this->db->get('kg_chibt_week_category');
      	if($query->num_rows()>0){
      		$this->db->where(array('week'=>$weekName));
			$this->db->where(array('sname'=>$bsname));
			$this->db->where(array('sgrade'=>$grades));
			$this->db->where(array('sterm'=>$category_term_sub));
			$this->db->where(array('academicyear'=>$max_year));
			$query=$this->db->get('kg_subject_list_name');
		}else{
			$this->db->where(array('sname'=>$bsname));
			$this->db->where(array('sgrade'=>$grades));
			$this->db->where(array('sterm'=>$category_term_sub));
			$this->db->where(array('academicyear'=>$max_year));
			$query=$this->db->get('kg_subject_list_name');
		}
		if($query->num_rows()>0){
			return false;
		}else{
			$this->db->insert('kg_subject_list_name',$data);
		}
	}
	function fetchBsCategory($max_year,$max_quarter,$min_quarter,$minYear){
		$query=$this->db->query("select *, GROUP_CONCAT(bcgrade) as grade_bsname from bscategory where academicyear='$max_year' and season='$max_quarter' group by bscategory order by bscategory ASC ");
		$output='';
		if($query->num_rows()>0){
			$allbS=$query->num_rows();
			$output='<div class="card">
			<div class="table-responsive">
	        <table class="table table-stripped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Basic Skill Category</th>
	                    <th>Grade</th>
	                    <th>Order</th>
	                    <th>Left Row</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="deleteCAT'.$bsnames->bscategory.'">
	                <td>'.$no.'.</td>
	                <td>'.$bsnames->bscategory.'
	                <div class="table-links"> <a href="#" 
	                class="deleteCAT" value="'.$bsnames->bscategory.'" name="'.$max_quarter.'">
	                 <span class="text-danger">Delete</span> 
	                 </a> <div class="bullet"></div>
	                <a href="#" class="editCAT" value="'.$bsnames->bscategory.'" name="'.$max_quarter.'">
	                 <span class="text-success">Edit</span> 
	                 </a>
	                 </div> </td>
	                <td>'.$bsnames->grade_bsname.'</td>';
	                $output.='<td><select class="form-control bssubOrderJo" required="required" name="kgsubOrder" id="bssubOrder">';
 						for ($i=1; $i <=$allbS ; $i++) { 
 							if($i==$bsnames->bcorder){
 								$output.='<option selected="selected" class="bsJoss" id="'.$bsnames->bscategory.'" value="'.$i.'">'.$i.'</option>';
 							}else{
 								$output.='<option class="bsJoss" id="'.$bsnames->bscategory.'" value="'.$i.'">'.$i.'</option>';
 							}
 						}
 						$output.='</select></td>';
 						if($bsnames->bcsubjectrow=='1'){
 							$output.='<td><div class="pretty p-switch p-fill">
			                  <input type="checkbox" name="putbsCatLeftRow" class="putbsCatLeftRow" checked="checked" id="'.$bsnames->bscategory.'" value="'.$bsnames->bscategory.'" >
			                  <div class="state p-success">
			                    <label></label>
			                  </div>
			                </div></td>';
 						}else{
 							$output.='<td><div class="pretty p-switch p-fill">
			                  <input type="checkbox" name="putbsCatLeftRow" class="putbsCatLeftRow" id="'.$bsnames->bscategory.'" value="'.$bsnames->bscategory.'" >
			                  <div class="state p-success">
			                    <label></label>
			                  </div>
			                </div></td>';
 						}
	                $output.='<td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->datecreated.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div></div>';
		}else{
			$queryMIn=$this->db->query("select *, GROUP_CONCAT(bcgrade) as grade_bsname from bscategory where academicyear='$max_year' and season='$min_quarter' group by bscategory order by bscategory ASC ");
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No record found for '.$max_quarter.'.
                </div>
              </div>';
            if($queryMIn->num_rows()>0){
                $output.='<span class="text-info">You can move previous Season BS details </span><button type="submit" id="moveBSDetails" class="btn btn-outline-success text-center"> Move Basic Skill Details</button>';
            }else{
            	$queryLastYear=$this->db->query("select *, GROUP_CONCAT(bcgrade) as grade_bsname from bscategory where academicyear='$minYear' and season='$min_quarter' group by bscategory order by bscategory ASC ");
            	if($queryLastYear->num_rows()>0){
            		$output.='<span class="text-info">You can move last year BS details </span><button type="submit" id="moveBSDetailsLastYear" class="btn btn-outline-success text-center"> Move Basic Skill Details</button>';
            	}
            }
		}
		return $output;
	}
	function fetchBsCategory_teacher($max_year,$max_quarter,$min_quarter,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join hoomroomplacement as dp ON dp.roomgrade=u.gradesec where dp.teacher='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){
			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("select * from bscategory where academicyear='$max_year' and season='$max_quarter' and bcgrade='$grade' group by bscategory order by bscategory ASC ");
				if($query->num_rows()>0){
					$allbS=$query->num_rows();
					$output.='<div class="card">
					<div class="table-responsive">
			        <table class="table table-stripped table-hover" style="width:100%;">
			            <thead>
			                <tr>
			                    <th>No.</th>
			                    <th>Basic Skill Category</th>
			                    <th>Grade</th>
			                    <th>Order</th>
			                    <th>Left Row</th>
			                    <th>Academic Year</th>
			                    <th>Date Created</th>
			                </tr>
			            </thead>';
			        $no=1;
					foreach ($query->result() as $bsnames) {
						$output.='<tr class="deleteCAT'.$bsnames->bscategory.'">
			                <td>'.$no.'.</td>
			                <td>'.$bsnames->bscategory.'
			                <div class="table-linfks">
			                <a href="#" class="editCATTeacher" value="'.$bsnames->bscategory.'" name="'.$max_quarter.'">
			                 <span class="text-success">Edit</span> 
			                 </a>
			                 </div> </td>
			                <td>'.$bsnames->bcgrade.'</td>';
			                $output.='<td><select class="form-control bssubOrderJo" required="required" name="kgsubOrder" id="bssubOrder">';
		 						for ($i=1; $i <=$allbS ; $i++) { 
		 							if($i==$bsnames->bcorder){
		 								$output.='<option selected="selected" class="bsJoss" id="'.$bsnames->bscategory.'" value="'.$i.'">'.$i.'</option>';
		 							}else{
		 								$output.='<option class="bsJoss" id="'.$bsnames->bscategory.'" value="'.$i.'">'.$i.'</option>';
		 							}
		 						}
		 						$output.='</select></td>';
		 						if($bsnames->bcsubjectrow=='1'){
		 							$output.='<td><div class="pretty p-switch p-fill">
					                  <input type="checkbox" name="putbsCatLeftRow" class="putbsCatLeftRow" checked="checked" id="'.$bsnames->bscategory.'" value="'.$bsnames->bscategory.'" >
					                  <div class="state p-success">
					                    <label></label>
					                  </div>
					                </div></td>';
		 						}else{
		 							$output.='<td><div class="pretty p-switch p-fill">
					                  <input type="checkbox" name="putbsCatLeftRow" class="putbsCatLeftRow" id="'.$bsnames->bscategory.'" value="'.$bsnames->bscategory.'" >
					                  <div class="state p-success">
					                    <label></label>
					                  </div>
					                </div></td>';
		 						}
			                $output.='<td>'.$bsnames->academicyear.'</td>
			                <td>'.$bsnames->datecreated.'</td>
			            </tr>';
			            $no++;
					}
					$output.='</table></div></div>';
				}else{
					$output.='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close" data-dismiss="alert">
		                      <span>&times;</span>
		                    </button><i class="fas fa-exclamation-triangle "></i> No record found for '.$max_quarter.'.
		                </div>
		              </div>';
				}
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No record found for '.$max_quarter.'.
                </div>
              </div>';
		}
		return $output;
	}
	function fetchBsCategory_director($max_year,$max_quarter,$min_quarter,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join directorplacement as dp ON dp.grade=u.gradesec where dp.staff='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){
			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("select * from bscategory where academicyear='$max_year' and season='$max_quarter' and bcgrade='$grade' group by bscategory order by bscategory ASC ");
				if($query->num_rows()>0){
					$allbS=$query->num_rows();
					$output.='<div class="card">
					<div class="table-responsive">
			        <table class="table table-stripped table-hover" style="width:100%;">
			            <thead>
			                <tr>
			                    <th>No.</th>
			                    <th>Basic Skill Category</th>
			                    <th>Grade</th>
			                    <th>Order</th>
			                    <th>Left Row</th>
			                    <th>Academic Year</th>
			                    <th>Date Created</th>
			                </tr>
			            </thead>';
			        $no=1;
					foreach ($query->result() as $bsnames) {
						$output.='<tr class="deleteCAT'.$bsnames->bscategory.'">
			                <td>'.$no.'.</td>
			                <td>'.$bsnames->bscategory.'
			                <div class="table-linfks">
			                <a href="#" class="editCATDirector" value="'.$bsnames->bscategory.'" name="'.$max_quarter.'">
			                 <span class="text-success">Edit</span> 
			                 </a>
			                 </div> </td>
			                <td>'.$bsnames->bcgrade.'</td>';
			                $output.='<td><select class="form-control bssubOrderJo" required="required" name="kgsubOrder" id="bssubOrder">';
		 						for ($i=1; $i <=$allbS ; $i++) { 
		 							if($i==$bsnames->bcorder){
		 								$output.='<option selected="selected" class="bsJoss" id="'.$bsnames->bscategory.'" value="'.$i.'">'.$i.'</option>';
		 							}else{
		 								$output.='<option class="bsJoss" id="'.$bsnames->bscategory.'" value="'.$i.'">'.$i.'</option>';
		 							}
		 						}
		 						$output.='</select></td>';
		 						if($bsnames->bcsubjectrow=='1'){
		 							$output.='<td><div class="pretty p-switch p-fill">
					                  <input type="checkbox" name="putbsCatLeftRow" class="putbsCatLeftRow" checked="checked" id="'.$bsnames->bscategory.'" value="'.$bsnames->bscategory.'" >
					                  <div class="state p-success">
					                    <label></label>
					                  </div>
					                </div></td>';
		 						}else{
		 							$output.='<td><div class="pretty p-switch p-fill">
					                  <input type="checkbox" name="putbsCatLeftRow" class="putbsCatLeftRow" id="'.$bsnames->bscategory.'" value="'.$bsnames->bscategory.'" >
					                  <div class="state p-success">
					                    <label></label>
					                  </div>
					                </div></td>';
		 						}
			                $output.='<td>'.$bsnames->academicyear.'</td>
			                <td>'.$bsnames->datecreated.'</td>
			            </tr>';
			            $no++;
					}
					$output.='</table></div></div>';
				}else{
					$output.='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close" data-dismiss="alert">
		                      <span>&times;</span>
		                    </button><i class="fas fa-exclamation-triangle "></i> No record found for '.$max_quarter.'.
		                </div>
		              </div>';
				}
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No record found for '.$max_quarter.'.
                </div>
              </div>';
		}
		return $output;
	}
	function fethchBsCategoryToEditDirector($category,$quarter,$max_year,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join directorplacement as dp ON dp.grade=u.gradesec where dp.staff='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){

			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("select * from bscategory where academicyear='$max_year' and bscategory='$category' and season='$quarter' and bcgrade='$grade' group by bscategory order by bscategory ASC ");
				$queryGrade=$this->db->query("select * from bscategory where academicyear='$max_year' and bscategory='$category' and season='$quarter' and bcgrade='$grade' group by bcgrade order by bcgrade ASC ");
				if($query->num_rows()>0){
					$output.='<div class="dropdown-divider"></div><div class="row"> ';
					foreach ($queryGrade->result() as $bsGrades) {
						$output .='<div class="col-lg-2 col-4"> 
						<div class="StudentViewTextInfo"> 
						<button class="btn btn-danger btn-sm" id="deleteThisGradeCategory" value="'.$bsGrades->bcgrade.'" name="'.$quarter.'" title="'.$bsGrades->bscategory.'">Delete Gr. '.$bsGrades->bcgrade.'</button>
						<div class="pretty p-icon p-smooth">
							<input type="checkbox" id="'.$bsGrades->bcgrade.'" class="'.$bsGrades->bscategory.'" name="changeBSCateForGrade" value="'.$bsGrades->bcgrade.'" checked="checked">
		          	  		<div class="state p-success">
		                		<i class="icon fa fa-check"></i>
		                		<label></label>'.$bsGrades->bcgrade.'
		              		</div>
		      			</div>
		      			</div>
		      			</div>' ;
					}
					$output.='</div> <div class="row">';
					foreach ($query->result() as $bsnames) {
						$output.='<input type="hidden" class="form-control oldbsCategoryInfo" name="oldbsCategoryInfo" value="'.$bsnames->bscategory.'"> ';
						$output.='<input type="hidden" class="form-control oldbstCategoryInfo" name="oldbstCategoryInfo" value="'.$bsnames->season.'">';
						$output.='<div class="col-lg-7 col-12"> ';
						$output.='<input type="text" class="form-control" id="bsCategoryInfo" name="bsCategoryInfo" value="'.$bsnames->bscategory.'" required="required"> </div><div class="col-lg-3 col-6">';
						$output.='<input type="text" class="form-control" id="bstCategoryQuarterInfo" name="bstCategoryQuarterInfo" value="'.$bsnames->season.'" required="required"></div> <div class="col-lg-2 col-6">';
						$output.='<button class="btn btn-info btn-block" id="saveBsCategory" name="'.$quarter.'" value="'.$category.'">Save Changes</button> ';
					}
					$output.='</div> ';
				}else{
					$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No record found.
		        	</div></div>';
				}
			}
		}
		return $output;
	}
	function fethchBsCategoryToEditTeacher($category,$quarter,$max_year,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join hoomroomplacement as dp ON dp.roomgrade=u.gradesec where dp.teacher='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){

			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("select * from bscategory where academicyear='$max_year' and bscategory='$category' and season='$quarter' and bcgrade='$grade' group by bscategory order by bscategory ASC ");
				$queryGrade=$this->db->query("select * from bscategory where academicyear='$max_year' and bscategory='$category' and season='$quarter' and bcgrade='$grade' group by bcgrade order by bcgrade ASC ");
				if($query->num_rows()>0){
					$output.='<div class="dropdown-divider"></div><div class="row"> ';
					foreach ($queryGrade->result() as $bsGrades) {
						$output .='<div class="col-lg-2 col-4"> 
						<div class="StudentViewTextInfo"> 
						<button class="btn btn-danger btn-sm" id="deleteThisGradeCategory" value="'.$bsGrades->bcgrade.'" name="'.$quarter.'" title="'.$bsGrades->bscategory.'">Delete Gr. '.$bsGrades->bcgrade.'</button>
						<div class="pretty p-icon p-smooth">
							<input type="checkbox" id="'.$bsGrades->bcgrade.'" class="'.$bsGrades->bscategory.'" name="changeBSCateForGrade" value="'.$bsGrades->bcgrade.'" checked="checked">
		          	  		<div class="state p-success">
		                		<i class="icon fa fa-check"></i>
		                		<label></label>'.$bsGrades->bcgrade.'
		              		</div>
		      			</div>
		      			</div>
		      			</div>' ;
					}
					$output.='</div> <div class="row">';
					foreach ($query->result() as $bsnames) {
						$output.='<input type="hidden" class="form-control oldbsCategoryInfo" name="oldbsCategoryInfo" value="'.$bsnames->bscategory.'"> ';
						$output.='<input type="hidden" class="form-control oldbstCategoryInfo" name="oldbstCategoryInfo" value="'.$bsnames->season.'">';
						$output.='<div class="col-lg-7 col-12"> ';
						$output.='<input type="text" class="form-control" id="bsCategoryInfo" name="bsCategoryInfo" value="'.$bsnames->bscategory.'" required="required"> </div><div class="col-lg-3 col-6">';
						$output.='<input type="text" class="form-control" id="bstCategoryQuarterInfo" name="bstCategoryQuarterInfo" value="'.$bsnames->season.'" required="required"></div> <div class="col-lg-2 col-6">';
						$output.='<button class="btn btn-info btn-block" id="saveBsCategory" name="'.$quarter.'" value="'.$category.'">Save Changes</button> ';
					}
					$output.='</div> ';
				}else{
					$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No record found.
		        	</div></div>';
				}
			}
		}
		return $output;
	}
	function fetch_kg_subject_list_Category($max_year,$max_quarter){
		$query=$this->db->query("select *, GROUP_CONCAT(cate_grade) as grade_bsname from kg_subject_list_category where academicyear='$max_year' group by category_name,cate_term order by category_name ASC ");
		$output='';
		if($query->num_rows()>0){
			$allbS=$query->num_rows();
			$output='
			<div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Header Name</th>
	                    <th>Grade</th>
	                    <th>Category</th>
	                    <th>Order</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="delete_sub_cat'.$bsnames->category_name.'">
	                <td>'.$no.'.</td>
	                <td>'.$bsnames->category_name.'
	                <div class="table-links"> <a href="#" class="delete_sub_cat" value="'.$bsnames->category_name.'">
	                 <span class="text-danger">Delete</span> 
	                 </a> </div> </td>
	                <td>'.$bsnames->grade_bsname.'</td>
	                <td>'.$bsnames->cate_term.'</td>';
	                $output.='<td><select class="form-control kg_subject_category_list" required="required" name="kg_subject_category_list" id="kg_subject_category_list">';
					for ($i=1; $i <=$allbS ; $i++) { 
						if($i==$bsnames->suborder){
							$output.='<option selected="selected" class="bsJoss" id="'.$bsnames->category_name.'" value="'.$i.'">'.$i.'</option>';
						}else{
							$output.='<option class="bsJoss" id="'.$bsnames->category_name.'" value="'.$i.'">'.$i.'</option>';
						}
					}
					$output.='</select></td>';
	                $output.='<td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->datecreated.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No category found.
        	</div></div>';
		}
		return $output;
	}
	function load_subject_main_category($max_year,$max_quarter){
		$query=$this->db->query("select *, GROUP_CONCAT(header_grade) as grade_bsname from kg_subject_header where academicyear='$max_year' group by sub_name order by sub_name ASC ");
		$output='';
		if($query->num_rows()>0){
			$allbS=$query->num_rows();
			$output='
			<div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Header Name</th>
	                    <th>Grade</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="delete_sub_header'.$bsnames->sub_name.'">
	                <td>'.$no.'.</td>
	                <td>'.$bsnames->sub_name.'
	                <div class="table-links"> <a href="#" class="delete_sub_header" value="'.$bsnames->sub_name.'">
	                 <span class="text-danger">Delete</span> 
	                 </a> </div> </td>
	                <td>'.$bsnames->grade_bsname.'</td>';
	                $output.='<td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->date_created.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No category found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_bscategory($max_year){
		$query=$this->db->query("select * from bscategory where academicyear='$max_year' group by bscategory order by bscategory ASC ");
		return $query->result();
	}
	function fetch_kg_s_category($max_year){
		$query=$this->db->query("select * from kg_subject_list_category where academicyear='$max_year' group by category_name order by category_name ASC ");
		return $query->result();
	}
	function fetch_bsname($max_year,$max_quarter){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(grade) as gradess from basicskill where academicyear ='$max_year' and season='$max_quarter' GROUP BY bscategory,bsname ORDER BY id DESC");
		$output='';
		if($query->num_rows()>0){
			$allbS=$query->num_rows();
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<div class="StudentViewTextInfo delete_bs'.$bsnames->bsname.'">
				<div class="support-ticket media">';
                    $output.='<div class="media-body">
                      <div class="badge badge-pill badge-light mb-1 float-left"> Category:-
                      '.$bsnames->bscategory.'
		                
	                </div><br>
                      
                  	<p class="my-1"> '.$no.'. '.$bsnames->bsname.'';
                  	$output.='<select class="form-contrlol bsNamessubOrderJo" required="required" name="bsNamessubOrderJo" id="bsNamessubOrderJo">';
						for ($i=1; $i <=$allbS ; $i++) { 
							if($i==$bsnames->bsorder){
								$output.='<option selected="selected" class="'.$bsnames->gradess.'" id="'.$bsnames->bsname.'" name="'.$max_quarter.'" value="'.$i.'">'.$i.'</option>';
							}else{
								$output.='<option class="'.$bsnames->gradess.'" id="'.$bsnames->bsname.'" name="'.$max_quarter.'" value="'.$i.'">'.$i.'</option>';
							}
						}
					$output.='</select>';
                    $output.='<small class="text-muted"><span><a href="#" class="deletebaskill" value="'.$bsnames->bsname.'" name="'.$max_quarter.'"> 
		                <span class="text-danger">Delete</span> &nbsp;&nbsp;
		                </a> <i class="fas fa-circle"></i>&nbsp;&nbsp;
		                <a href="#" class="editbaskill" value="'.$bsnames->bsname.'" name="'.$max_quarter.'" title="'.$bsnames->bscategory.'"> 
		                <span class="text-info">Edit</span> 
		                </a>
		                <span class="font-weight-bold">&nbsp; &nbsp;Grade '.$bsnames->gradess.' &nbsp;</span> </span>';
                    $output.='&nbsp;&nbsp; Created at '.$bsnames->datecreated.' for '.$bsnames->academicyear.' Academic year</small></p>
                    </div>
                  </div>
                </div>';
	            $no++;
			}
		}else{
			
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No basic skill found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_bsname_director($max_year,$max_quarter,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join directorplacement as dp ON dp.grade=u.gradesec where dp.staff='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){
			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("SELECT * from basicskill where academicyear ='$max_year' and season='$max_quarter' and grade='$grade' GROUP BY bscategory,bsname ORDER BY id DESC");
				if($query->num_rows()>0){
					$allbS=$query->num_rows();
			        $no=1;
					foreach ($query->result() as $bsnames) {
						$output.='<div class="delete_bs'.$bsnames->bsname.'">
						<div class="support-ticket media">';
		                    $output.='<div class="media-body">
		                      <div class="badge badge-pill badge-light mb-1 float-left"> '.$no.'.  Category:-
		                      '.$bsnames->bscategory.'
				                
			                </div><br>
		                      
		                  	<p class="my-1"> '.$bsnames->bsname.'';
		                    $output.='<small class="text-muted"><span>
				                <a href="#" class="editbaskillDirector" value="'.$bsnames->bsname.'" name="'.$max_quarter.'" title="'.$bsnames->bscategory.'"> 
				                <span class="text-info">Edit</span> 
				                </a>
				                <span class="font-weight-bold">&nbsp; &nbsp;Grade '.$bsnames->grade.' &nbsp;';
		                    $output.='</span> </span>
		                        &nbsp;&nbsp; Created at '.$bsnames->datecreated.' for '.$bsnames->academicyear.' Academic year</small></p>
		                    </div>
		                  </div>
		                </div><div class="dropdown-divider"></div>';
			            $no++;
					}
				}else{
					$output.='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No basic skill found.
		        	</div></div>';
				}
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No basic skill found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_bsname_teacher($max_year,$max_quarter,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join hoomroomplacement as dp ON dp.roomgrade=u.gradesec where dp.teacher='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){
			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("SELECT * from basicskill where academicyear ='$max_year' and season='$max_quarter' and grade='$grade' GROUP BY bscategory,bsname ORDER BY id DESC");
				if($query->num_rows()>0){
					$allbS=$query->num_rows();
			        $no=1;
					foreach ($query->result() as $bsnames) {
						$output.='<div class="delete_bs'.$bsnames->bsname.'">
						<div class="support-ticket media">';
		                    $output.='<div class="media-body">
		                      <div class="badge badge-pill badge-light mb-1 float-left"> '.$no.'. Category:-
		                      '.$bsnames->bscategory.'
				                
			                </div><br>
		                      
		                  	<p class="my-1"> '.$bsnames->bsname.'';
		                    $output.='<small class="text-muted"><span>
				                <a href="#" class="editbaskillTeacher" value="'.$bsnames->bsname.'" name="'.$max_quarter.'" title="'.$bsnames->bscategory.'"> 
				                <span class="text-info">Edit</span> 
				                </a>
				                <span class="font-weight-bold">&nbsp; &nbsp;Grade '.$bsnames->grade.' &nbsp;';
		                    $output.='</span> </span>
		                        &nbsp;&nbsp; Created at '.$bsnames->datecreated.' for '.$bsnames->academicyear.' Academic year</small></p>
		                    </div>
		                  </div>
		                </div><div class="dropdown-divider"></div>';
			            $no++;
					}
				}else{
					$output.='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No basic skill found.
		        	</div></div>';
				}
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No basic skill found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_kg_subject_list_name($max_year){
		$this->db->select('*');
		$this->db->from('kg_subject_list_name');
		$this->db->where('academicyear', $max_year);
		$this->db->where('week', NULL); // NULL is used for the 'Null' value, not a string.
		$this->db->group_by('nid');
		$this->db->order_by('sname', 'ASC');
		$query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>List Name</th>
	                    <th>Grade</th>
	                    <th>Category</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="delete_bs'.$bsnames->sname.'">
	                <td>'.$no.'.</td>
	                <td>'.$bsnames->sname.'
	                <div class="table-links"> 
	                <a href="#" class="deletes_list_name" data-nid="'.$bsnames->nid.'" data-sgrade="'.$bsnames->sgrade.'"> 
	                <span class="text-danger">Delete</span> 
	                </a> <div class="bullet"></div>
	                <a href="#" class="edits_list_name" value="'.$bsnames->sname.'" id="'.$bsnames->sgrade.'"> 
	                <span class="text-info">Edit</span> 
	                </a>
	                </div> </td>
	                <td>'.$bsnames->sgrade.'</td><td>'.$bsnames->scategory.'</td>';
	                $output.='<td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->datecreated.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_kg_subject_list_name_week($max_year){
		$this->db->select('*');
		$this->db->from('kg_subject_list_name');
		$this->db->where('academicyear', $max_year);
		$this->db->where('week !=', ''); // To ensure `week` is not empty.
		$this->db->group_by('nid');
		$this->db->order_by('sname', 'ASC');
		$query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>List Name</th>
	                    <th>Grade</th>
	                    <th>Category</th>
	                    <th>Week</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="delete_bs'.$bsnames->sname.'">
	                <td>'.$no.'.</td>
	                <td>'.$bsnames->sname.'
	                <div class="table-links"> 
	                <a href="#" class="deletes_list_name" data-nid="'.$bsnames->nid.'" data-sgrade="'.$bsnames->sgrade.'"> 
	                <span class="text-danger">Delete</span> 
	                </a> <div class="bullet"></div>
	                <a href="#" class="edits_list_name" value="'.$bsnames->sname.'" id="'.$bsnames->sgrade.'"> 
	                <span class="text-info">Edit</span> 
	                </a>
	                </div> </td>
	                <td>'.$bsnames->sgrade.'</td><td>'.$bsnames->scategory.'</td>';
	                $output.='<td>'.$bsnames->week.'</td>
	                <td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->datecreated.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function delete_bsname($id,$max_year,$quarter){
		$this->db->where(array('bsname'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('season'=>$quarter));
		$this->db->delete('basicskill');
	}
	function delete_kg_subject_list_name($id,$max_year,$grade){
		$this->db->where('academicyear',$max_year);
        $this->db->where('enable_status','1');
        $query=$this->db->get('kg_chibt_week_category');
        if($query->num_rows()>0){
        	$this->db->where('week !=','');
			$this->db->where('nid', $id);
			$this->db->where(array('sgrade'=>$grade));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->delete('kg_subject_list_name');
		}else{
			$this->db->where('week =',NULL);
			$this->db->where('nid', $id);
			$this->db->where(array('sgrade'=>$grade));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->delete('kg_subject_list_name');
		}
	}
	function export_student_bs_formate($gradesec,$max_year,$branch1){
		$this->db->where('basicskill.academicyear',$max_year);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch1);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('basicskill.bsname','ASC');
		$this->db->order_by('users.fname','ASC');
		$this->db->order_by('users.mname','ASC');
		$this->db->group_by('users.id');
		$this->db->select('*');
		$this->db->from('basicskill');
		$this->db->join('users', 
            'users.grade = basicskill.grade');
		$query = $this->db->get();
        return $query->result();
	}
	function export_mystudent_bs_formate($gradesec,$max_year,$branch){
		$this->db->where('basicskill.academicyear',$max_year);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('basicskill.bsname','ASC');
		$this->db->order_by('users.fname','ASC');
		$this->db->order_by('users.mname','ASC');
		$this->db->group_by('users.id');
		$this->db->select('*');
		$this->db->from('basicskill');
		$this->db->join('users', 
            'users.grade = basicskill.grade');
		$query = $this->db->get();
        return $query->result();
	}
	function export_this_grade_bsname($gradesec,$max_year,$branch1){
		$this->db->where('basicskill.academicyear',$max_year);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch1);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('basicskill.bsname','ASC');
		$this->db->group_by('basicskill.bsname');
		$this->db->select('*');
		$this->db->from('basicskill');
		$this->db->join('users', 
            'users.grade = basicskill.grade');
		$query = $this->db->get();
        return $query->result();
	}
	function export_mythis_grade_bsname($gradesec,$max_year,$branch){
		$this->db->where('basicskill.academicyear',$max_year);
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$branch);
		$this->db->where('users.status','Active');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.academicyear',$max_year);
		$this->db->order_by('basicskill.bsname','ASC');
		$this->db->group_by('basicskill.bsname');
		$this->db->select('*');
		$this->db->from('basicskill');
		$this->db->join('users', 
            'users.grade = basicskill.grade');
		$query = $this->db->get();
        return $query->result();
	}
	function import_bs($gradesec,$quarter,$max_year,$branch){
		$this->db->where('academicyear',$max_year);
		$this->db->where('bsgrade',$gradesec);
		$this->db->where('quarter',$quarter);
		$this->db->where('bsbranch',$branch);
		$query=$this->db->get('basicskillvalue'.$gradesec.$max_year);

		/*$queryBsType=$this->db->query("select * from bstype where bstype='$value' and  academicyear='$max_year' group by bstid ");
		if($queryBsType->num_rows() > 0){*/
			if($query->num_rows() > 0){
				
				$this->db->where('academicyear',$max_year);
				$this->db->where('bsgrade',$gradesec);
				$this->db->where('quarter',$quarter);
				$this->db->where('bsbranch',$branch);
				$queryy=$this->db->delete('basicskillvalue'.$gradesec.$max_year);
				return TRUE;
			}else{
				return TRUE;
				/*$queryy=$this->db->insert('basicskillvalue',$data);*/
			}
			/*if($queryy){
				return true;
			}else{
				return false;
			} */
		/*}*/
	}
	function fetch_exam($max_year){
		$query = $this->db->query("
			select us.profile, us.fname,us.mname ,ex.eid, ex.examname, ex.datecreated, ex.teacher, ex.subject,ex.grade from users as us cross join exam as ex where ex.academicyear='$max_year' and us.academicyear='$max_year' and  us.username=ex.teacher group by ex.examname,ex.subject,ex.grade order by ex.eid DESC ");
        return $query->result();
	}
	function insert_usertrial($sid,$id,$subject,$max_year,$datetried){
		$this->db->where('triedexam',$id);
		$this->db->where('stuid',$sid);
		$this->db->where('triedsubject',$subject);
		$this->db->where('academicyear',$max_year);
		$query = $this->db->get('examtried');
        if($query->num_rows()>0){
        	return false;
        }else{
        	return true;
		}
	}
	function delete_exam($id,$subject,$grade){
		$this->db->where('examname',$id);
		$this->db->where('subject',$subject);
		$this->db->where('grade',$grade);
		$this->db->delete('exam');
	}
	function view_students_examresult($examname,$subject,$grade,$max_year){
		$this->db->select(' us.gradesec,us.id,us.fname, us.mname,us.lname,us.branch, ex.academicyear, ex.answer, ex.eid, ex.question, ex.examGroup, ex.question_weight, ex.subject, ex.examname,ex.grade');
		$this->db->where('ex.examname',$examname);
		$this->db->where('ex.grade',$grade);
		$this->db->where('us.grade',$grade);
		$this->db->where('ex.subject',$subject);
		$this->db->where('ex.academicyear',$max_year);
		$this->db->where('us.academicyear',$max_year);
		$this->db->where('us.status','Active');
		$this->db->where('us.isapproved','1');
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->group_by('us.id');
		$this->db->from('exam ex');
		$this->db->join('users us', 
            'us.grade = ex.grade');
		$query = $this->db->get();
        return $query->result();
	}
	function outof_error($gs_branches,$gs_gradesecs,$gs_subjects,$max_quarter,$max_year){
		
		$output='';
		$query_name = $this->db->query("select * from school");
        	$row_name = $query_name->row();
        	$school_name=$row_name->name;
			$output .='<h4 class="text-center"> <u>'.$school_name.'('.$gs_branches.')  NG/Zero Mark Report on '.$max_quarter.'</u></h4>';
			$output .='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;">
        		<thead>
        		<tr><th>No.</th>
            		<th>Student Name</th>
            		<th>Student ID</th>
            		<th>Grade</th>
            		<th>Subject</th>
            		<th>Assesment Name</th>
            		<th>Status</th>
            		<th>Value</th>
        		</tr>
		    </thead>';
		    $no=1;
		foreach($gs_gradesecs as $gs_gradesec){
			$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$gs_branches.$gs_gradesec.$max_quarter.$max_year."' ");
			if ($queryCheck->num_rows()>0)
			{
				foreach($gs_subjects as $gs_subject){
					$markname_query=$this->db->query("select ma.evaid, ma.markname, ma.mid, ma.value, ma.outof,sum(outof) as total_outof from `mark".$gs_branches.$gs_gradesec.$max_quarter.$max_year."` as ma where ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$max_quarter' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.markname order by ma.mid ASC ");
					foreach ($markname_query->result() as $markValue) {
						$markname=$markValue->markname;
						$queryStudent2=$this->db->query("select lname,username, fname, mname, branch, ma.subname,ma.markname, ma.quarter,ma.value, ma.outof, ma.zeromarkinfo, gradesec,id from users as us cross join `mark".$gs_branches.$gs_gradesec.$max_quarter.$max_year."` as ma where us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$gs_branches' and us.gradesec='$gs_gradesec' and ma.markname='$markname' and  ma.subname='$gs_subject' and ma.quarter='$max_quarter' and us.id not in(select stuid from `mark".$gs_branches.$gs_gradesec.$max_quarter.$max_year."` where markname='$markname' and  subname='$gs_subject' and quarter='$max_quarter' group by markname ) or us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$gs_branches' and us.gradesec='$gs_gradesec' and ma.markname='$markname' and  ma.subname='$gs_subject' and ma.quarter='$max_quarter' and ma.value='0' and us.id=ma.stuid  group by id");
					
						foreach ($queryStudent2->result() as $gradeValue) {
							$gradesec=$gradeValue->gradesec;
							$stuid=$gradeValue->id;
							$output .='<tr><td>'.$no.'.</td>
							<td>'.$gradeValue->fname.' '.$gradeValue->mname.' '.$gradeValue->lname.'</td>';
							$output .='<td>'.$gradeValue->username.'</td>';
							$output .='<td>'.$gradeValue->gradesec.'</td>';
							$output .='<td>'.$gradeValue->subname.'</td>';
							$output .='<td>'.$gradeValue->markname.'</td>';
							$output .='<td class="text-warning">NG(-)</td>';
							$output .='<td><span class="text-danger"><h4>-</h4></span></td></tr>';	
							$no++;
						}
					}
				}
			}
		}
		$output .='<table></div>';
		return $output;
	}
	function outof_error_Summer($gs_branches,$gs_gradesec,$gs_subject,$max_year){
		
		$output='';
		$query_name = $this->db->query("select * from school");
        	$row_name = $query_name->row();
        	$school_name=$row_name->name;
			$output .='<h4 class="text-center"> <u>'.$school_name.'('.$gs_branches.')  NG/Zero Mark Report </u></h4>';
			$output .='<div class="table-responsive">
        		<table class="tabler table-borderedr table-hover" style="width:100%;">
        		<thead>
        		<tr><th>No.</th>
            		<th>Student Name</th>
            		<th>Student ID</th>
            		<th>Grade</th>
            		<th>Subject</th>
            		<th>Assesment Name</th>
            		<th>Status</th>
            		<th>Value</th>
        		</tr>
		    </thead>';
		    $no=1;
		if($gs_subject===trim('All')){
			$queryFetchMark=$this->db->query("select * from summermark where academicyear='$max_year'  and mgrade='$gs_gradesec' and mbranch='$gs_branches' group by subname order by subname ASC ");
			if($queryFetchMark->num_rows()>0){
				foreach($queryFetchMark->result() as $subjectName){
					$gs_subjectName=$subjectName->subname;
					$markname_query=$this->db->query("select ma.evaid, ma.markname, ma.mid, ma.value, ma.outof,sum(outof) as total_outof from summermark as ma where ma.academicyear='$max_year' and ma.subname='$gs_subjectName' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.markname order by ma.mid ASC ");
					foreach ($markname_query->result() as $markValue) {
						$markname=$markValue->markname;
						$queryStudent2=$this->db->query("select lname,username, fname, mname, branch, ma.subname,ma.markname, ma.quarter,ma.value, ma.outof, ma.zeromarkinfo, gradesec,id from summerstudent as us cross join summermark as ma where us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$gs_branches' and us.gradesec='$gs_gradesec' and ma.markname='$markname' and  ma.subname='$gs_subjectName' and us.id not in(select stuid from summermark where markname='$markname' and  subname='$gs_subjectName' group by markname ) or us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$gs_branches' and us.gradesec='$gs_gradesec' and ma.markname='$markname' and  ma.subname='$gs_subjectName' and ma.value='0' and us.id=ma.stuid  group by id");
					
						foreach ($queryStudent2->result() as $gradeValue) {
							$gradesec=$gradeValue->gradesec;
							$stuid=$gradeValue->id;
							$output .='<tr><td>'.$no.'.</td>
							<td>'.$gradeValue->fname.' '.$gradeValue->mname.' '.$gradeValue->lname.'</td>';
							$output .='<td>'.$gradeValue->username.'</td>';
							$output .='<td>'.$gradeValue->gradesec.'</td>';
							$output .='<td>'.$gradeValue->subname.'</td>';
							$output .='<td>'.$gradeValue->markname.'</td>';
							$output .='<td class="text-warning">NG(-)</td>';
							$output .='<td><span class="text-danger"><h4>-</h4></span></td></tr>';	
							$no++;
						}
					}
				}
			}
		}else{
			$markname_query=$this->db->query("select ma.evaid, ma.markname, ma.mid, ma.value, ma.outof,sum(outof) as total_outof from summermark as ma where ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' group by ma.markname order by ma.mid ASC ");
			foreach ($markname_query->result() as $markValue) {
				$markname=$markValue->markname;
				$queryStudent2=$this->db->query("select lname,username, fname, mname, branch, ma.subname,ma.markname, ma.quarter,ma.value, ma.outof, ma.zeromarkinfo, gradesec,id from summerstudent as us cross join summermark as ma where us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$gs_branches' and us.gradesec='$gs_gradesec' and ma.markname='$markname' and  ma.subname='$gs_subject' and us.id not in(select stuid from summermark where markname='$markname' and  subname='$gs_subject' group by markname ) or us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$gs_branches' and us.gradesec='$gs_gradesec' and ma.markname='$markname' and  ma.subname='$gs_subject' and ma.value='0' and us.id=ma.stuid  group by id");
			
				foreach ($queryStudent2->result() as $gradeValue) {
					$gradesec=$gradeValue->gradesec;
					$stuid=$gradeValue->id;
					$output .='<tr><td>'.$no.'.</td>
					<td>'.$gradeValue->fname.' '.$gradeValue->mname.' '.$gradeValue->lname.'</td>';
					$output .='<td>'.$gradeValue->username.'</td>';
					$output .='<td>'.$gradeValue->gradesec.'</td>';
					$output .='<td>'.$gradeValue->subname.'</td>';
					$output .='<td>'.$gradeValue->markname.'</td>';
					$output .='<td class="text-warning">NG(-)</td>';
					$output .='<td><span class="text-danger"><h4>-</h4></span></td></tr>';	
					$no++;
				}
			}
		}
		$output .='<table></div>';
		return $output;
	}
	function fetch_phone($max_year,$gradesec,$branch)
	{
		$query_student=$this->db->query(" Select * from users where gradesec='$gradesec' and status='Active' and academicyear='$max_year' and branch='$branch' and isapproved='1' order by fname,mname ASC ");
		$output='';
		if($query_student->num_rows()>0){
			$query_name = $this->db->query("select * from school");
	        $row_name = $query_name->row();//school info
	        $school_name=$row_name->name;
	        $address=$row_name->address;
	        $phone=$row_name->phone;
	        $website=$row_name->website;
	        $email=$row_name->email;
	        $logo=$row_name->logo;
			$output .='<p class="text-center"><b><u>'.$school_name.' Phone List for Grade '.$gradesec.'</u></b></p>';
			$output .='<div class="table-responsive">
	      	<table class="table table-striped" id="tableExport" style="width:100%;">
	      	<tbody><tr>
	      	<td><B>No.</B></td>
	      	<td><B>Student Name</B></td>
	      	<td><B>Student ID</B></td>
	      	<td><B>Gender</B></td>
	      	<td><B>Grade</B></td>
	      	<td><B>Section</B></td>
	      	<td><B>Mother Mobile</B></td>
	      	<td><B>Father Mobile</B></td>
	      	<td><B>Branch</B></td></tr>';
	      	$no=1;
	    	foreach ($query_student->result() as $row) {
				$output .='<tr><td>'.$no.'.</td>';
	    		$output .='<td>'.$row->fname.' '.$row->mname.' '. $row->lname.'</td>';
	    		$output .='<td>'.$row->username.'</td>';
	    		$output .='<td>'.$row->gender.'</td>';
	    		$output .='<td>'.$row->grade.'</td>';
	    		$output .='<td>'.$row->gradesec.'</td>';
	    		$output .='<td>'.$row->mobile.'</td>';
	    		$output .='<td>'.$row->father_mobile.'</td>';
	    		$output .='<td>'.$row->branch.'</td>';
	      		$output .='</tr>'; 
	      		$no++;
	    	}
	    	$output .=' </tbody> </table> </div>';
	    }else{
	    	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
	    }
    	return $output;
	}
	function fetch_gradephone($max_year,$grade,$branch)
	{
		$query_student=$this->db->query(" Select fname,mname,lname,gender,grade,gradesec, branch,username,father_mobile,mobile from users where grade='$grade' and status='Active' and academicyear='$max_year' and branch='$branch' and isapproved='1' order by fname,mname ASC ");
		$output ='';
		if($query_student->num_rows()>0){
			$query_name = $this->db->query("select * from school");
	        $row_name = $query_name->row();//school info
	        $school_name=$row_name->name;
	        $address=$row_name->address;
	        $phone=$row_name->phone;
	        $website=$row_name->website;
	        $email=$row_name->email;
	        $logo=$row_name->logo;
			$output ='<p class="text-center"><b><u>'.$school_name.' Phone List for Grade '.$grade.'</u></b></p>';
			$output.='
	      	<div class="table-responsive">
	      	<table class="table table-striped" id="tableExport" style="width:100%;">
	      	<tbody>
	      	<tr><td><B>No.</B></td>
	      	<td><B>Student Name</B></td>
	      	<td><B>Student ID</B></td>
	      	<td><B>Gender</B></td>
	      	<td><B>Grade</B></td>
	      	<td><B>Section</B></td>
	      	<td><B>Mother Mobile</B></td>
	      	<td><B>Father Mobile</B></td>
	      	<td><B>Branch</B></td></tr>';
	      	$no=1;
	    	foreach ($query_student->result() as $row) {
				$output .='<tr><td>'.$no.'.</td>';
	    		$output .='<td>'.$row->fname.' '.$row->mname.' '. $row->lname.'</td>';
	    		$output .='<td>'.$row->username.'</td>';
	    		$output .='<td>'.$row->gender.'</td>';
	    		$output .='<td>'.$row->grade.'</td>';
	    		$output .='<td>'.$row->gradesec.'</td>';
	    		$output .='<td>'.$row->mobile.'</td>';
	    		$output .='<td>'.$row->father_mobile.'</td>';
	    		$output .='<td>'.$row->branch.'</td>';
	      		$output .='</tr>'; 
	      		$no++;
	    	}
	    	$output .=' </tbody> </table> </div>';
	    }else{
	    	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
	    }

    	return $output;
	}
	function gener_report($gradesec,$branch,$max_year){
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$max_year);
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$this->db->order_by('fname','ASC');
		$query = $this->db->get('users');
		$output =' <div class="table-responsive">
        <table class="table table-striped" id="tableExport" style="width:100%;"> 
         <tbody><tr><td><B>No.</B></td><td><B>Student Name</B></td><td><B>Student ID</B></td><td><B>Grade</B></td><td><B>Branch</B></td><td><B>Gender</B></td></tr>';
        $no=1;
		foreach ($query->result() as $row) {
			$output .='<tr>';
			$output .='<td>'.$no.'.</td>';
    		$output .='<td>'.$row->fname.' '.$row->mname.' 
    		'. $row->lname.'</td>';
    		$output .='<td>'.$row->username.'</td>';
    		$output .='<td>'.$row->gradesec.'</td>';
    		$output .='<td>'.$row->branch.'</td>';
    		$output .='<td>'.$row->gender.'</td>';
      		$output .='</tr>'; 
      		$no++;
		}
		$output .=' </tbody> </table> </div>';
		$query2 = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' then 1 else 0 end) AS femalecount FROM users where gradesec='$gradesec' and academicyear='$max_year' and branch='$branch' GROUP BY academicyear ORDER BY fname ASC");
		$output .='<div class="row"><div class="col-lg-4"> </div> <div class="col-lg-4"></div>
		<div class="col-lg-4">';
		foreach ($query2->result() as $value) {
			$output .='<p><B>Male: '.$value->malecount.'</B></p>';
    		$output .='<p><B> Female: '.$value->femalecount.'</B></p>';
    		$output .='<p><B>Total: '.$value->studentcount.' </B></p>'; 
		}
		$output .='</div></div>';
	    return $output;
	}
	function gener_report_bygrade($gradesec,$branch,$max_year){
		$this->db->where('grade',$gradesec);
		$this->db->where('branch',$branch);
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('fname,mname,lname','ASC');
		$query = $this->db->get('users');
		$no=1;
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();//school info
        $school_name=$row_name->name;
        $address=$row_name->address;
        $phone=$row_name->phone;
        $website=$row_name->website;
        $email=$row_name->email;
        $logo=$row_name->logo;
		$output ='<p class="text-center"><b><u>'.$school_name.' gender report for Grade '.$gradesec.'</u></b></p> <div class="table-responsive">
        <table class="table table-striped" style="width:100%;"> 
         <tbody><tr><th><B>No.</B></th><th><B>Name</B></th><th><B>Student ID</B></th><th><B>Grade</B></th><th><B>Branch</B></th><th><B>Gender</B></th></tr>';
		foreach ($query->result() as $row) {
			$output .='<tr>';
			$output .='<td>'.$no.'.</td>';
    		$output .='<td>'.$row->fname.' '.$row->mname.' 
    		'. $row->lname.'</td>';
    		$output .='<td>'.$row->username.'</td>';
    		$output .='<td>'.$row->gradesec.'</td>';
    		$output .='<td>'.$row->branch.'</td>';
    		$output .='<td>'.$row->gender.'</td>';
      		$output .='</tr>'; 
      		$no++;
		}
		$output .=' </tbody> </table> </div>';
		$query2 = $this->db->query("SELECT *, CONCAT('Grade') as Yearlevel, COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' then 1 else 0 end) AS femalecount FROM users where grade='$gradesec' and academicyear='$max_year' and branch='$branch' GROUP BY academicyear ORDER BY fname ASC");
		$output .='<div class="row"><div class="col-lg-4"> </div> <div class="col-lg-4"></div>
		<div class="col-lg-4">';
		foreach ($query2->result() as $value) {
			$output .='<p><B>Male: '.$value->malecount.'</B></p>';
    		$output .='<p><B> Female: '.$value->femalecount.'</B></p>';
    		$output .='<p><B>Total: '.$value->studentcount.' </B></p>'; 
		}
		$output .='</div></div>';
	    return $output;
	}
	function fetch_gradepayment_category($max_year,$gradesec){
		$query_student=$this->db->query(" Select * from paymentype where grade='$gradesec' and academicyear='$max_year' group by name,grade, month order by id DESC
			");
		$output ='
      <div class="table-responsive">
      <table class="table table-striped table-bordered" id="tableExport" style="width:100%;">
      <tbody><tr><th>Category Name</th><th>Grade</th> <th>Month</th><th>Amount</th><th>Academic Year</th><th>Date Created</th><th>Delete</th></tr>';
    foreach ($query_student->result() as $row) {
			$output .='<tr class="delete_mem'.$row->id.'">';
    	$output .='<td>'.$row->name.'</td>';
    	$output .='<td>'.$row->grade.'</td>';
    	$output .='<td>'.$row->month.'</td>';
    	$output .='<td>'.$row->amount.'</td>';
    	$output .='<td>'.$row->academicyear.'</td>';
    	$output .='<td>'.$row->date_created.'</td>';
    	$output .='<td><button class="btn btn-danger deleteecategory" id='.$row->id.'>Delete</button></td>';
      $output .='</tr>'; 
    }
    $output .=' </tbody> </table> </div>';
    return $output;
	}
	function fetch_payment_category($max_year){
		$this->db->order_by('id','DESC');
		$this->db->group_by('name');
		$query=$this->db->get('paymentype');
		return $query->result();
	}
	function get_staff_payroll($datefrom,$dateto,$payrollbranch,$max_year){
		$query_staffs=$this->db->query(" Select * from users where usertype!='Student' and status='Active' and isapproved='1' and branch='$payrollbranch' and academicyear='$max_year' order by fname,mname,lname ASC ");
		$query_name = $this->db->query("select * from school");
    	$row_name = $query_name->row();
    	$school_name=$row_name->name;
		$output='<h6>'.$school_name.' Staffs Payroll Sheet for Month of___________.</h6>
		<div class="table-responsive">
            <table class="table table-bordered table-hover" style="width:100%;">
                <thead>
                  <tr>
                    <th>No.</th>
                    <th>Name</th>
                    <th>Branch</th>
                    <th>Working Days</th>
                    <th>Basic Sallary</th>
                    <th>Quality Allowance</th>
                    <th>Transport Allowance</th>
                    <th>Position Allowance</th>
                    <th>Home Allowance</th>
                    <th>Gross Sallary</th>
                    <th>Taxable Income</th>
                    <th>Income Tax</th>
                    <th>Pension 7%</th>
                    <th>Pension 11%</th>
                    <th>Other</th>
                    <th>Total Deduction</th>
                    <th>Date From</th>
                    <th>Date To</th>
                    <th>Net Payment</th>
                    <th>Sign</th>
                  </tr>
                </thead>';
        $no=1; $total_deduc=0;$net_pay=0;$p=0;
		foreach ($query_staffs->result() as $getpayrolls) {
			$gsallary= $getpayrolls->gsallary;
            $nsallary= $getpayrolls->netsallary;
            $allowance= $getpayrolls->allowance;
            $total_deduction=$getpayrolls->income_tax + $getpayrolls->pension_7 + $getpayrolls->other;
            $stuid=$getpayrolls->id;
            $query=$this->db->query("select absentdate,stuid,absentype from attendance where stuid='$stuid' and absentype='Absent' and absentdate >= '$datefrom' and absentdate <= '$dateto' group by aid ");
            if($query->num_rows()>0){
            	$total_absence=0;
            	foreach ($query ->result() as $keyvalue) {
	                $total_absence=$total_absence + 1;
	            }
	            $total_absence=$total_absence;
            }else{
            	$total_absence=0;
            }
            if($total_absence>0){
            	$ns=$nsallary/30;
                $monsallary=$total_absence*$ns;
                $p=$nsallary-$monsallary;
            }else{
                $p=$nsallary;
            }
            $workingdays=30-$total_absence;
            $output.=' <tr>
                <td>'.$no.'</td>
                <td>'.$getpayrolls->fname.' '.$getpayrolls->mname.' '.$getpayrolls->lname.' </td>
                <td>'.$getpayrolls->branch.'</td>
                <td>'.$workingdays.'</td>
                <td>'.$gsallary.'</td>
                <td>'.$getpayrolls->quality_allowance.'</td>
                <td>'.$getpayrolls->allowance.'</td>
                <td>'.$getpayrolls->position_allowance.'</td>
                <td>'.$getpayrolls->home_allowance.'</td>
                <td>'.$getpayrolls->gross_sallary.'</td>
                <td>'.$getpayrolls->taxable_income.'</td>
                <td>'.ceil($getpayrolls->income_tax).'</td>
                <td>'.$getpayrolls->pension_7.'</td>
                <td>'.$getpayrolls->pension_11.'</td>
                <td>'.$getpayrolls->other.'</td>
                <td>'.ceil($total_deduction).'</td>
                <td>'.$this->input->post('datefrom').'</td>
                <td>'.$this->input->post('dateto').'</td>
                <td><B>'.floor($p).'</B></td>
                <td>______</td>
            </tr>';
            $no++; 
            $total_deduc=$total_deduc+$total_deduction;
            $net_pay=$net_pay + $p; 
        } 
        $output.=' <tr> <td></td>
                    <td><B>Total</B></td>
                    <td>-</td><td>-</td>';
        $query_sum_basicsallary=$this->db->query(" Select *,sum(gsallary) as basic_sallary,sum(quality_allowance) as quality_allowance,sum(allowance) as allowance,sum(position_allowance) as position_allowance,sum(home_allowance) as home_allowance,sum(gross_sallary) as gross_sallary,sum(taxable_income) as taxable_income,sum(income_tax) as income_tax ,sum(pension_7) as pension_7 ,sum(pension_11) as pension_11 ,sum(other) as other from users where usertype!='Student' and status='Active' and isapproved='1' and branch='$payrollbranch' and academicyear='$max_year' order by fname ASC ");
        $row_basicsallary = $query_sum_basicsallary->row();
    	$basicsallary_name=$row_basicsallary->basic_sallary;
    	$quality_allowance=$row_basicsallary->quality_allowance;
    	$allowance=$row_basicsallary->allowance;
    	$position_allowance=$row_basicsallary->position_allowance;
    	$home_allowance=$row_basicsallary->home_allowance;
    	$gross_sallary=$row_basicsallary->gross_sallary;
    	$taxable_income=$row_basicsallary->taxable_income;
    	$income_tax=$row_basicsallary->income_tax;
    	$pension_7=$row_basicsallary->pension_7;
    	$pension_11=$row_basicsallary->pension_11;
    	$other=$row_basicsallary->other;
        $output.='<td>'.$basicsallary_name.'</td>';
        $output.='<td>'.$quality_allowance.'</td>';
        $output.='<td>'.$allowance.'</td>';
        $output.='<td>'.$position_allowance.'</td>';
        $output.='<td>'.$home_allowance.'</td>';
        $output.='<td>'.$gross_sallary.'</td>';
        $output.='<td>'.$taxable_income.'</td>';
        $output.='<td>'.ceil($income_tax).'</td>';
        $output.='<td>'.$pension_7.'</td>';
        $output.='<td>'.$pension_11.'</td>';
        $output.='<td>'.$other.'</td>';
        $output.='<td>'.ceil($total_deduc).'</td>';
        $output.='<td>-</td>';
        $output.='<td>-</td>';
        $output.='<td><B>'.floor($net_pay).'</B></td>';

		$output .='</tr></table></div>';
		$output .='<div class="row">
		<div class="col-lg-4">
		<h6><u>Processed By</u><br>
		Name: ______________________.<br>
		Sign: _______________________.<br>
		Date: _______________________.</h6>
		</div>
		<div class="col-lg-4">
		<h6><u>Checked By</u><br>
		Name: ______________________.<br>
		Sign: _______________________.<br>
		Date: _______________________.
		</h6>
		</div>
		<div class="col-lg-4">
		<h6><u>Approved By</u><br>
		Name: ______________________.<br>
		Sign: _______________________.<br>
		Date: _______________________.
		</h6>
		</div>
		</div>';
		return $output;
	}
	function fetchSubjectExam($max_year){
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->group_by('Subj_name');
		$this->db->order_by('Subj_name','ASC');
		$query=$this->db->get('subject');
		return $query->result();
	}
	function fetchSubjectOfThiGrade($selectedSub,$max_year){
		$this->db->where(array('subject.Subj_name'=>$selectedSub));
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->where(array('users.usertype'=>'Student'));
		$this->db->group_by('users.gradesec');
		$this->db->from('subject');
		$this->db->join('users', 
	            'users.grade = subject.Grade');
		$query=$this->db->get();
		return $query->result();
	}
	function checkExamSchedule($selectedSub,$grade,$max_year){
		$this->db->where(array('subinfo'=>$selectedSub));
		$this->db->where(array('gradesecinfo'=>$grade));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('examschedule');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function checkSubjectPerDay($selectedDay,$noExams,$grade,$max_year){
		$this->db->where(array('dayinfo'=>$selectedDay));
		$this->db->where(array('gradesecinfo'=>$grade));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('examschedule');
		$totalSubjectPerDay=$query->num_rows();
		if($totalSubjectPerDay<$noExams){
			return true;
		}else{
			return false;
		}
	}
	function checkExaminerteacher($grade,$max_year){
		$query=$this->db->query("select us.fname,us.lname,us.mname,st.staff,st.grade,us.gradesec from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and us.academicyear='$max_year' GROUP BY st.staff ORDER BY RAND()");
		return $query->result();
	}
	function checTeacherSchedule($selectedDay,$teacher,$periodInfo,$max_year){
		$this->db->where(array('dayinfo'=>$selectedDay));
		$this->db->where(array('teacherinfo'=>$teacher));
		$this->db->where(array('periodinfo'=>$periodInfo));
		$this->db->where(array('academicyear'=>$max_year));
		$query=$this->db->get('examschedule');
		return $query;
	}
	function viewTeacherExamSchedule($max_year){
		$query=$this->db->query("select * from examschedule where academicyear='$max_year' group by subinfo order by periodinfo  ASC");
		$output='';
		$dayinfoOrder=array('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday');
		if($query->num_rows()>0){
			$output.='<h5 class="header-title text-center"><u>Exam Schedule Summary</u> </h5>';
			$output.='<div class="table-responsive">
            <table class="table table-bordered table-hover" style="width:100%;">
                <thead><tr><th></th>';
                $nofexams=$query->row();
                $querynofexams=$nofexams->nofexam;
                for($i=1;$i<=$querynofexams;$i++){
                	$output.='<th>'.$i.'</th>';
                }
            $output.='</tr></thead>';
            $no=1;
            foreach($dayinfoOrder as $dayinfoOrders){
            	$queryFetchTeacherCh=$this->db->query("select * from examschedule where academicyear='$max_year' and dayinfo ='$dayinfoOrders' order by teacherinfo ASC ");
			    if($queryFetchTeacherCh->num_rows()>0){
            	$output.='<tr><th>'.$dayinfoOrders.'</th>';
            	for($i=1;$i<=$querynofexams;$i++){
			        $queryFetchTeacher=$this->db->query("select * from examschedule where academicyear='$max_year' and dayinfo ='$dayinfoOrders' and periodinfo='$i' order by teacherinfo ASC ");
			            $output.='<td>';
						foreach($queryFetchTeacher->result() as $fetchTeacher){
							$periodOrder=$fetchTeacher->nofexam;
							$periodInfo=$fetchTeacher->periodinfo;
							$output.='';
							$output.='<h5 class="text-bold">'.$fetchTeacher->teacherinfo.'</span> ';
							$output.='<span class="text-info">'.$fetchTeacher->subinfo.'</span>';
							$output.=' <span class="badge badge-success">'.$fetchTeacher->gradesecinfo.'</span>';
							$output.='';
						}
						$output.='</td>';
					}
				}
				$output.='</tr>';
			}
			$output.='</table></div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                   <i class="fas fa-exclamation-circle"> </i> Record not found.
            </div></div>';
		}
		return $output;
	}
	function top_rank($max_year,$quarter,$gradesec,$branch,$top,$NoOfquarter){
		$i=1; 
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
	    if(trim($gradesec)===trim('All')){
	    	$query_student=$this->db->query("select * from users as us where us.status='Active' and us.usertype='Student' and us.academicyear='$max_year' and us.isapproved='1' and us.branch='$branch' group by gradesec ");
	    	$output='';
	    	if($query_student->num_rows()>0){
		    	foreach ($query_student->result() as $keResult) {
		    		$gradesec_each=$keResult->gradesec;
		    		$output='<div class="table-responsive"> 
			        <table class="table table-bordered table-hover" style="width:100%;">
			        <thead><tr><th class="text-center" colspan="6">'.$school_name.' rank report in '.$max_year.' Academic Year</th></tr> <tr> <td>Student Name</td> <td>Student ID</td> <td>Grade</td>
			        <td>Quarter</td><td>Average</td> <td>Rank</td> </tr> </thead>';
			        if(trim($top)===trim('All')){
				        $query_rank=$this->db->query("select s.username,s.profile,s.lname, s.fname,s.mname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec_each' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.quarter= '$quarter' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec_each' and rc.rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC ");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec_each' and rc.rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}else{
						$query_rank=$this->db->query("select s.lname, s.username, s.profile,s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec_each' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.quarter= '$quarter' and rc.academicyear='$max_year' and rc.rpbranch='$branch' and s.branch='$branch' and rc.grade='$gradesec_each' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC limit $top");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec_each' and rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.''.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}
			        $output.='</table></div>';
		    	}
	    	}
	    }else{
	    	$output='<div class="table-responsive"> 
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead><tr><th class="text-center" colspan="6">'.$school_name.' rank report in '.$max_year.' Academic Year</th></tr> <tr> <td>Student Name</td> <td>Student ID</td> <td>Grade</td>
	        <td>Quarter</td><td>Average</td> <td>Rank</td> </tr> </thead>';
		    if(trim($top)===trim('All')){
		    	if($quarter==trim('All')){
		    		$query_rank=$this->db->query("select s.lname, s.profile, s.username, s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)($rankValue->Average/$total_subject)/$NoOfquarter,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
		    	}else{


					$query_rank=$this->db->query("select s.lname, s.profile, s.username, s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.quarter= '$quarter' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC");
					$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
					$total_subject=$count_subject->num_rows();
					foreach ($query_rank->result() as $rankValue) {
						$output.='<tr>
						  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
						  </td>
						  <td>'.$rankValue->username.'</td>
						  <td>'.$rankValue->gradesec.'</td>
						  <td>'.$quarter.'</td>
						  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
						  <td>'.$rankValue->stuRank.'</td>
			      		</tr>';	
				    }
				}
			}else{
				if($quarter==trim('All')){
					if(trim($top)===trim('All')){
						$query_rank=$this->db->query("select s.lname, s.profile, s.username, s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and letter!='A' and onreportcard='1' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)($rankValue->Average/$total_subject)/$NoOfquarter,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}else{
						$query_rank=$this->db->query("select s.lname, s.username, s.profile,s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC limit $top");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$gsRank=($rankValue->Average/$total_subject)/$NoOfquarter;
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$gsRank,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}

				}else{
					$query_rank=$this->db->query("select s.lname, s.username, s.profile,s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.quarter= '$quarter' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC limit $top");
					$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and letter!='A' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
					$total_subject=$count_subject->num_rows();
					foreach ($query_rank->result() as $rankValue) {
						$output.='<tr>
						  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
						  </td>
						  <td>'.$rankValue->username.'</td>
						  <td>'.$rankValue->gradesec.'</td>
						  <td>'.$quarter.'</td>
						  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
						  <td>'.$rankValue->stuRank.'</td>
			      		</tr>';	
				    }
				}
			}
		}
		return $output;
	}
	function top_rankKG($max_year,$quarter,$gradesec,$branch,$top,$NoOfquarter){
		$i=1; 
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
	    if(trim($gradesec)===trim('All')){
	    	$query_student=$this->db->query("select * from users as us where us.status='Active' and us.usertype='Student' and us.academicyear='$max_year' and us.isapproved='1' and us.branch='$branch' group by gradesec ");
	    	$output='';
	    	if($query_student->num_rows()>0){
		    	foreach ($query_student->result() as $keResult) {
		    		$gradesec_each=$keResult->gradesec;
		    		$output='<div class="table-responsive"> 
			        <table class="table table-bordered table-hover" style="width:100%;">
			        <thead><tr><th class="text-center" colspan="6">'.$school_name.' rank report in '.$max_year.' Academic Year</th></tr> <tr> <td>Student Name</td> <td>Student ID</td> <td>Grade</td>
			        <td>Quarter</td><td>Average</td> <td>Rank</td> </tr> </thead>';
			        if(trim($top)===trim('All')){
				        $query_rank=$this->db->query("select s.username,s.profile,s.lname, s.fname,s.mname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec_each' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.quarter= '$quarter' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec_each' and rc.rpbranch='$branch' and  onreportcard='1' and mergedname='' group by stuid order by stuRank ASC ");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec_each' and rc.rpbranch='$branch' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}else{
						$query_rank=$this->db->query("select s.lname, s.username, s.profile,s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec_each' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.quarter= '$quarter' and rc.academicyear='$max_year' and rc.rpbranch='$branch' and s.branch='$branch' and rc.grade='$gradesec_each' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC limit $top");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec_each' and rpbranch='$branch' and onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.''.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}
			        $output.='</table></div>';
		    	}
	    	}
	    }else{
	    	$output='<div class="table-responsive"> 
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead><tr><th class="text-center" colspan="6">'.$school_name.' rank report in '.$max_year.' Academic Year</th></tr> <tr> <td>Student Name</td> <td>Student ID</td> <td>Grade</td>
	        <td>Quarter</td><td>Average</td> <td>Rank</td> </tr> </thead>';
		    if(trim($top)===trim('All')){
		    	if($quarter==trim('All')){
		    		$query_rank=$this->db->query("select s.lname, s.profile, s.username, s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and  onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)($rankValue->Average/$total_subject)/$NoOfquarter,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
		    	}else{
					$query_rank=$this->db->query("select s.lname, s.profile, s.username, s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.quarter= '$quarter' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC");
					$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and  onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
					$total_subject=$count_subject->num_rows();
					foreach ($query_rank->result() as $rankValue) {
						$output.='<tr>
						  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
						  </td>
						  <td>'.$rankValue->username.'</td>
						  <td>'.$rankValue->gradesec.'</td>
						  <td>'.$quarter.'</td>
						  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
						  <td>'.$rankValue->stuRank.'</td>
			      		</tr>';	
				    }
				}
			}else{
				if($quarter==trim('All')){
					if(trim($top)===trim('All')){
						$query_rank=$this->db->query("select s.lname, s.profile, s.username, s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and  onreportcard='1' and mergedname='' and academicyear='$max_year' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)($rankValue->Average/$total_subject)/$NoOfquarter,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}else{
						$query_rank=$this->db->query("select s.lname, s.username, s.profile,s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch'  and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC limit $top");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and  onreportcard='1' and academicyear='$max_year'  and mergedname='' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$gsRank=($rankValue->Average/$total_subject)/$NoOfquarter;
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$gsRank,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}

				}else{
					$query_rank=$this->db->query("select s.lname, s.username, s.profile,s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.rpbranch='$branch' and rc.quarter= '$quarter' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.rpbranch='$branch' and rc.quarter= '$quarter' and rc.academicyear='$max_year' and s.branch='$branch' and rc.grade='$gradesec' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC limit $top");
					$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and rpbranch='$branch' and  onreportcard='1'  and academicyear='$max_year'  and mergedname='' group by subject ");
					$total_subject=$count_subject->num_rows();
					foreach ($query_rank->result() as $rankValue) {
						$output.='<tr>
						  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname. '
						  </td>
						  <td>'.$rankValue->username.'</td>
						  <td>'.$rankValue->gradesec.'</td>
						  <td>'.$quarter.'</td>
						  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
						  <td>'.$rankValue->stuRank.'</td>
			      		</tr>';	
				    }
				}
			}
		}
		return $output;
	}
	function topGradeTopRank($max_year,$quarters,$gradesec,$branch,$top,$countQuarter){
		$i=1; 
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$queryStudent=$this->db->query("select gradesec from users where academicyear='$max_year' and status='Active' and isapproved='1' and branch='$branch' and grade='$gradesec' group by gradesec ");
		if($queryStudent->num_rows()>0){
			$output.='<h3 class ="text-center"><u>'.$school_name.' Rank report for Grade '.$gradesec.' in '.$max_year.' Academic Year</u></h3>';
	    
	    	$output.='<div class="table-responsive"> 
	        <table class="table table-bordered table-hover" style="width:100%;">
	        <thead> <tr> <th>Student Name</th> <th>Student ID</th> <th>Grade</th>
	        <th>Quarter</th><th>Average</th> <th>Rank</th> </tr> </thead>';
			foreach ($queryStudent->result() as $gValue) {
				$gradesecc=$gValue->gradesec;
				$this->db->where('grade',$gradesecc);
				$this->db->where('academicyear',$max_year);
				$this->db->delete('rankreportvaluestatistics');
				$queryCheck = $this->db->query("SHOW TABLES LIKE 'reportcard".$gradesecc.$max_year."' ");
				if ($queryCheck->num_rows()>0)
				{
					$total=0;
					foreach($quarters as $quarter){
						$querySubject=$this->db->query("select *, sum(total) as sumTotal from reportcard".$gradesecc.$max_year." where grade='$gradesecc' and academicyear='$max_year' and rpbranch='$branch' and onreportcard='1' and letter='#' and mergedname='' and quarter='$quarter' group by stuid,subject order by subjorder ASC");
				        if($querySubject->num_rows()>0){
				            foreach ($querySubject->result() as $fetchSubject) {
				            	if($fetchSubject->total >0){
					            	$data[]=array(
					            		'stuid'=>$fetchSubject->stuid,
					            		'grade'=>$fetchSubject->grade,
					            		'quarter'=>$fetchSubject->quarter,
					            		'subject'=>$fetchSubject->subject,
					            		'total'=>$fetchSubject->total,
					            		'shbranch'=>$fetchSubject->rpbranch,
					            		'academicyear'=>$fetchSubject->academicyear
					            	);
					        	}
				            }
				        }
				    }
			    }
			}
			if(!empty($data)){
	        	$queryInsert=$this->db->insert_batch('rankreportvaluestatistics',$data);
	        }
	       if(trim($top)===trim('All')){
		       	$query_rank=$this->db->query("select s.username, s.profile, s.fname,s.lname, s.mname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and s.grade='$gradesec' and rc.shbranch='$branch' and rc.academicyear='$max_year' group by stuid order by `rank` ASC) sm)) as stuRank from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and rc.shbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and s.grade='$gradesec'  group by stuid order by stuRank ASC");
		       		$count_subject=$this->db->query("select * from rankreportvaluestatistics as rc cross join users as us where us.grade='$gradesec' and rc.shbranch='$branch' and us.gradesec=rc.grade  and rc.academicyear='$max_year' group by subject ");
				$total_subject=$count_subject->num_rows();
				foreach ($query_rank->result() as $rankValue) {
					$finalAverage=$rankValue->Average/$total_subject;
					$output.='<tr><td><div class="activity-icon support-ticket">';
					if($rankValue->profile!=''){
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/'.$rankValue->profile.'" width="120" height="40">';
	                }else{
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="120">';
	                }
					$output.=' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname.'</div> </td>
					  <td>'.$rankValue->username.'</td>
					  <td>'.$rankValue->gradesec.'</td>
					  <td>'.$quarter.'</td>
					  <td><B>'.number_format((float)$finalAverage/$countQuarter,2,'.','').'</B></td>
					  <td>'.$rankValue->stuRank.'</td>
		      		</tr>';	
			    }
	       }else{
		       	$query_rank=$this->db->query("select s.username, s.profile, s.fname,s.lname, s.mname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(rankss order by rankss DESC )from (select sum(total) as rankss from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and s.grade='$gradesec' and rc.shbranch='$branch' and rc.academicyear='$max_year' group by stuid order by rankss ASC) sm)) as stuRank from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and rc.shbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and s.grade='$gradesec'  group by stuid order by stuRank ASC limit $top");

		       		$count_subject=$this->db->query("select * from rankreportvaluestatistics as rc cross join users as us where us.grade='$gradesec' and rc.shbranch='$branch' and us.gradesec=rc.grade  and rc.academicyear='$max_year' group by subject ");
				$total_subject=$count_subject->num_rows();
				foreach ($query_rank->result() as $rankValue) {
					$finalAverage=($rankValue->Average)/$total_subject;
					$output.='<tr><td><div class="activity-icon support-ticket">';
					if($rankValue->profile!=''){
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/'.$rankValue->profile.'" width="120" height="40">';
	                }else{
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="120">';
	                }
					$output.=' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname.'</div> </td>
					  <td>'.$rankValue->username.'</td>
					  <td>'.$rankValue->gradesec.'</td>
					  <td>'.$quarter.'</td>
					  <td><B>'.number_format((float)$finalAverage/$countQuarter,2,'.','').'</B></td>
					  <td>'.$rankValue->stuRank.'</td>
		      		</tr>';	
			    }
	       }
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
    	return $output;
	}
	function top_rank_gradebysection($max_year,$quarters,$gradesec,$branch,$top,$countQuarter){
		$i=1; 
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$output.='<h3 class ="text-center"><u>'.$school_name.' Rank report for Grade ( ';
		foreach($gradesec as $gradesecc){
			$output.=''.$gradesecc.',';
	    }
	    $output.=' ) in '.$max_year.' Academic Year Quarter(';
	    foreach($quarters as $quarter){
	    	$output.=''.$quarter.',';
	    }
	    $output.=' ) </u></h3>';
	    	$output.='<div class="table-responsive">
          	<table class="table table-striped">
	        <tr> <th>Student Name</th> <th>Student ID</th> <th>Grade</th>
	        <th>Average</th> <th>Rank</th> </tr>';
	        foreach($gradesec as $gradesecc){
				$this->db->where('academicyear',$max_year);
				$this->db->where('grade',$gradesecc);
				$this->db->delete('rankreportvaluestatistics');
				$queryCheck = $this->db->query("SHOW TABLES LIKE 'reportcard".$gradesecc.$max_year."' ");
				if ($queryCheck->num_rows()>0)
				{
					$total=0;
					foreach($quarters as $quarter){
						$querySubject=$this->db->query("select *, sum(total) as sumTotal from reportcard".$gradesecc.$max_year." where grade='$gradesecc' and academicyear='$max_year' and rpbranch='$branch' and onreportcard='1' and letter!='A' and mergedname='' and quarter='$quarter' group by stuid,subject order by subjorder ASC");
				        if($querySubject->num_rows()>0){
				            foreach ($querySubject->result() as $fetchSubject) {
				            	if($fetchSubject->total >0){
					            	$data[]=array(
					            		'stuid'=>$fetchSubject->stuid,
					            		'grade'=>$fetchSubject->grade,
					            		'quarter'=>$fetchSubject->quarter,
					            		'subject'=>$fetchSubject->subject,
					            		'total'=>$fetchSubject->total,
					            		'shbranch'=>$fetchSubject->rpbranch,
					            		'academicyear'=>$fetchSubject->academicyear
					            	);
					        	}
				            }
				        }
				    }
			    }
			}
			
			if(!empty($data)){
	        	$queryInsert=$this->db->insert_batch('rankreportvaluestatistics',$data);
	        }
	        foreach($gradesec as $gradesecc){
	       if(trim($top)===trim('All')){
		       	$query_rank=$this->db->query("select s.username, s.profile, s.fname,s.lname, s.mname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(rank order by rank DESC )from (select sum(total) as rank from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and s.gradesec='$gradesecc' and rc.shbranch='$branch' group by stuid order by rank ASC) sm)) as stuRank from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and rc.shbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and s.gradesec='$gradesecc'  group by stuid order by stuRank ASC");
		       	$count_subject=$this->db->query("select * from rankreportvaluestatistics as rc cross join users as us where us.gradesec='$gradesecc' and rc.shbranch='$branch' and us.gradesec=rc.grade  and rc.academicyear='$max_year' group by subject ");
				$total_subject=$count_subject->num_rows();
				foreach ($query_rank->result() as $rankValue) {
					$finalAverage=$rankValue->Average/$total_subject;
					$output.='<tr><td><div class="activity-icon support-ticket">';
					if($rankValue->profile!=''){
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/'.$rankValue->profile.'" width="120" height="40">';
	                }else{
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="120">';
	                }
					$output.=' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname.'</div> </td>
					  <td>'.$rankValue->username.'</td>
					  <td>'.$rankValue->gradesec.'</td>
					  <td><B>'.number_format((float)$finalAverage/$countQuarter,2,'.','').'</B></td>
					  <td>'.$rankValue->stuRank.'</td>
		      		</tr>';	
			    }
	       }else{
		       	$query_rank=$this->db->query("select s.username, s.profile, s.fname,s.lname, s.mname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(rank order by rank DESC )from (select sum(total) as rank from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and s.gradesec='$gradesecc' and rc.shbranch='$branch' group by stuid order by rank ASC) sm)) as stuRank from rankreportvaluestatistics as rc cross join users as s where s.id=rc.stuid and rc.shbranch='$branch' and rc.academicyear='$max_year' and s.branch='$branch' and s.gradesec='$gradesecc'  group by stuid order by stuRank ASC limit $top");
		       	$count_subject=$this->db->query("select * from rankreportvaluestatistics as rc cross join users as us where us.gradesec='$gradesecc' and rc.shbranch='$branch' and us.gradesec=rc.grade  and rc.academicyear='$max_year' group by subject ");
				$total_subject=$count_subject->num_rows();
				foreach ($query_rank->result() as $rankValue) {
					$finalAverage=$rankValue->Average/$total_subject;
					$output.='<tr><td><div class="activity-icon support-ticket">';
					if($rankValue->profile!=''){
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/'.$rankValue->profile.'" width="120" height="40">';
	                }else{
	                    $output.='<img class="user-img mr-2" src="'.base_url().'profile/defaultProfile.png" width="120">';
	                }
					$output.=' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname.'</div> </td>
					  <td>'.$rankValue->username.'</td>
					  <td>'.$rankValue->gradesec.'</td>
					  <td><B>'.number_format((float)$finalAverage/$countQuarter,2,'.','').'</B></td>
					  <td>'.$rankValue->stuRank.'</td>
		      		</tr>';	
			    }
	       }
		}
    	return $output;
	}
	function topDivTopRank($max_year,$quarter,$gradesec,$top){
		$i=1; 
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
	    	$query_student=$this->db->query("select * from users as us where us.status='Active' and us.usertype='Student' and us.academicyear='$max_year' and us.isapproved='1' and us.gradesec='$gradesec' group by gradesec ");
	    	if($query_student->num_rows()>0){
	    		$output.='<h3 class ="text-center"><u>'.$school_name.' Rank report for Grade '.$gradesec.' in '.$max_year.' Academic Year</u></h3>';
		    	foreach ($query_student->result() as $keResult) {
		    		//$gradesec_each=$keResult->gradesec;
		    		$output.='<div class="table-responsive"> 
			        <table class="table table-bordered table-hover" style="width:100%;">
			        <thead> <tr> <th>Student Name</th> <th>Student ID</th> <th>Branch</th> <th>Grade</th>
			        <th>Quarter</th><th>Average</th> <th>Rank</th> </tr> </thead>';
			        if(trim($top)===trim('All')){
				        $query_rank=$this->db->query("select s.branch,s.username, s.profile, s.fname,s.mname,s.lname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.quarter= '$quarter' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.quarter= '$quarter' and rc.academicyear='$max_year'  and rc.grade='$gradesec' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC ");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and letter!='A' and onreportcard='1' and academicyear='$max_year' and mergedname='' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname.'
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->branch.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}else{
						$query_rank=$this->db->query("select s.username, s.branch, s.profile, s.fname,s.mname,s.lname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(`rank` order by `rank` DESC )from (select sum(total) as `rank` from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.quarter= '$quarter' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by `rank` ASC) sm)) as stuRank from reportcard".$gradesec.$max_year." as rc cross join users as s where s.id=rc.stuid and rc.quarter= '$quarter' and rc.academicyear='$max_year' and rc.grade='$gradesec' and letter!='A' and onreportcard='1' and mergedname='' group by stuid order by stuRank ASC limit $top");
						$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and letter!='A' and onreportcard='1' and academicyear='$max_year' and mergedname='' group by subject ");
						$total_subject=$count_subject->num_rows();
						foreach ($query_rank->result() as $rankValue) {
							$output.='<tr>
							  <td><img src="'.base_url().'/profile/'.$rankValue->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$rankValue->fname.' '.$rankValue->mname.' '.$rankValue->lname.'
							  </td>
							  <td>'.$rankValue->username.'</td>
							  <td>'.$rankValue->branch.'</td>
							  <td>'.$rankValue->gradesec.'</td>
							  <td>'.$quarter.'</td>
							  <td><B>'.number_format((float)$rankValue->Average/$total_subject,2,'.','').'</B></td>
							  <td>'.$rankValue->stuRank.'</td>
				      		</tr>';	
					    }
					}
			        $output.='</table></div>';
		    	}
	    	}
	    
    	return $output;
	}
	function markStatisticsDirector($max_year,$gs_branches,$gs_gradesec,$subjects,$gs_quarters,$less_than,$greater_than)
	{
		$output='';
			$query_name = $this->db->query("select * from school");
			$row_name = $query_name->row_array();
			$school_name=$row_name['name'];
			$school_slogan=$row_name['slogan'];
			$output.='<h6 class="text-center"><div class="pull-left"><B>'.$school_name.'</B> Academic Year: ' .$max_year.'<small class="time">( '.$gs_branches.')</small></div>';
			    $output.='<div class="pull-right">Grade :<B><u>'.$gs_gradesec.'</u></B>
			    &nbsp;&nbsp;	Season : '.$gs_quarters.'';
		    $output.='<B><u>'. $gs_quarters.' </u>,</B> ';
		    	
			$output.='&nbsp;&nbsp;	Subject :<B><u>'.$subjects.'</u></B></div></br></h6>';
			$output.='<div class="table-responsive">
			<table class="tabler table-borderedr table-hover" style="width:100%;">
			<tr>
			<th>No.</th>
	    	<th>Student Name</th>
	    	<th>Student ID</th>
	    	<th>Gender</th>
	    	<th class="text-center">Total</th></tr>';
	    	$stuNO=1;
	    	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec,u.gender from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
	    	$m=0;$f=0;
			foreach ($queryStudent->result() as $row) { 
	    		$id=$row->id;
	    		$average=0;
	    		/*foreach($gs_quarter as $gs_quarters){*/
					$evalname_query=$this->db->query("select us.id, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$gs_quarters' and us.gradesec='$gs_gradesec' and us.branch='$gs_branches' group by ev.evname order by ev.eid ASC");
		    		foreach ($evalname_query->result_array() as $mark_name)
		    		{
		    			$outofTot=0;$totalMark=0;
		    			$percent= $mark_name['percent'];
		    			$mname_gs=$mark_name['eid'];
		        		$query_value = $this->db->query("select value,markname,sum(value) as total,sum(outof) as outof from mark".$gs_branches.$gs_gradesec.$gs_quarters.$max_year." where quarter='$gs_quarters' and evaid='$mname_gs' and stuid='$id' and mbranch='$gs_branches' and subname='$subjects' group by markname order by mid ASC");
						$sumOutOf=0;
						foreach ($query_value->result_array() as $value) {
							$markNameStu=$value['markname'];
							$outofTot=$outofTot+$value['outof'];
							$totalMark=$totalMark+$value['value'];
				            $sumOutOf=$value['outof'] + $sumOutOf;	
		        		}
		        		if($sumOutOf>0){
		        			$conver= ($totalMark *$percent )/$sumOutOf;
		    				$average =($conver + $average);
		        		}
		        	}
		        /*}*/
	        	if($average <=$less_than and $average >=$greater_than){
	        		if($row->gender=='Male' || $row->gender=='M' || $row->gender=='male' ){
	        			$m=$m+1;
	        		}else{
	        			$f=$f+1;
	        		}
	        		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row->fname.' '.$row->mname.' '.$row->lname. '</td>';
	    			$output.='<td>'.$row->username.' </td>';
	    			$output.='<td>'.$row->gender.' </td>';
	        		$output.='<td style="text-align:center;"><B>'.number_format((float)$average,2,'.','').'</B></td>';
	        	}
	    		$average=0;
				$stuNO++;
			}
			$totalGender=$f+$m;
			$output.='</table></div>';
			$output.='<h5 class="card-title text-center">Male: '.$m.' </h5> <h5 class="card-title text-center">Female: '.$f.'</h5><h5 class="card-title text-center">Total: <b>'.$totalGender.'</b></h5>';
			$output.='<p class="text-center">'.$school_slogan.'!</p>';
    	return $output;
    	/*
		$output='';
		$query=$this->db->query("select us.fname, us.mname,us.lname, us.profile, us.gradesec,us.username, rc.total, rc.subject, rc.quarter,rc.total from reportcard".$grade.$max_year." as rc cross join  users as us where us.id=rc.stuid and rc.quarter='$quarter' and rc.academicyear='$max_year' and us.branch='$branch' and us.gradesec ='$grade' and rc.total <='$less_than' and rc.total >='$greater_than' order by rc.total DESC ");
		if($query->num_rows()>0){
			$query_name = $this->db->query("select * from school");
     		$row_name = $query_name->row();
      		$school_name=$row_name->name;
			$output .='<div class="table-responsive"> 
            <table class="table table-bordered table-hover" style="width:100%;">
            <thead><tr> <th class="text-center" colspan="6">'.$school_name.' Mark statistics for Grade:'.$grade.' Season:'.$quarter.'  </th></tr>
             <tr> <td>No.</td><td>Student Name</td> 
            <td>Student ID</td><td>Grade</td><td>Subject</td> <td>Average</td> 
            </tr> </thead>';
            $no=1;
    		foreach ($query->result() as $toprank) {
				$output.='<tr><td>'.$no.'.</td>
			  	<td><img src="'.base_url().'/profile/'.$toprank->profile.'"style="width: 33px;height: 33px;border-radius: 3em;">'.' '.$toprank->fname.' '.$toprank->mname.' '.$toprank->lname.'
			  	</td>
			  	<td>'.$toprank->username.'</td>
			  	<td>'.$toprank->gradesec.'</td>
			  	<td>'.$toprank->subject.'</td>
			  	<td>'.$toprank->total.'</td>
      			</tr>';
      			$no++;
    		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No data found at this range.
            </div></div>';
		}
    	return $output;*/
	}
	function gradeMarkStatisticswithName($max_year,$gs_branches,$gs_gradesec,$gs_subject,$gs_quarters,$countQuarter,$countSubject){
		$output='';
			$query_name = $this->db->query("select * from school");
			$row_name = $query_name->row_array();
			$school_name=$row_name['name'];
			$school_slogan=$row_name['slogan'];
			$queryFetch=$this->db->query("select * from reportstatistics ");
			if($queryFetch->num_rows()>0){
				$totalColumn=($countSubject + 4);
			}else{
				$totalColumn=4;
			}
			$queryUserEvaluation=$this->db->query("select * from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.gradesec='$gs_gradesec' and status='Active' and isapproved='1' group by u.id  ");
				if($queryUserEvaluation->num_rows()>0){
					foreach($queryUserEvaluation->result() as $evUser){
						$gradesec=$evUser->gradesec;
						$grade=$evUser->grade;
						$stuid=$evUser->id;
						foreach($gs_subject as $subject){
							$lastvalMe=0;
							$querySubject=$this->db->query("select Merged_percent from subject where Academic_Year='$max_year' and Grade='$grade' and Subj_name='$subject' group by Subj_name order by suborder ASC ");
							$rowQuery=$querySubject->row();
							$subjectPercent=$rowQuery->Merged_percent;
							foreach($gs_quarters as $quarter){
								$queryCheck=$this->db->query("select * from subject_custom_percentage where academicyear='$max_year' and grade='$grade' and quarter='$quarter' and subject='$subject' ");
	              				if($queryCheck->num_rows()>0){
					                $rowPercent=$queryCheck->row();
					                $mergedPercent=$rowPercent->percentage;
					            }else{
					                $mergedPercent=$subjectPercent;
					            }
								$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and academicyear='$max_year' and grade='$grade' ");
								if($queryEvaluation->num_rows()>0){
									foreach ($queryEvaluation->result() as $evavalue) {
										$evName=$evavalue->evname;
										$evaluation=$evavalue->eid;
										$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname order by mid ASC");
										if($queryMarkOutof->num_rows()>0){
											$totaloutof=0;
											foreach ($queryMarkOutof->result() as $keyvalue) {
					    						$totaloutof=$keyvalue->outof +$totaloutof;
											}
											$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
								            if($queryCheckPercentage->num_rows()>0){
								            	$rowPercent=$queryCheckPercentage->row();
								            	$percent=$rowPercent->custompercent;
								            }else{
								            	$percent= $evavalue->percent;
								            }	
								           $query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gradesec.$quarter.$max_year." where  subname='$subject' and quarter='$quarter' and evaid='$evaluation' and mbranch='$gs_branches' group by markname order by mid ASC");					
								           foreach ($query_value->result_array() as $value) {
                   							 	$markNameStu=$value['markname'];				
												$queryMark = $this->db->query("select value as total,sum(outof) as outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' and markname='$markNameStu' group by markname order by mid ASC");
												if($queryMark->num_rows()>0){
													foreach ($queryMark->result() as $mvalue) {
														$totalmark=$mvalue->total;
														$finalresult=($percent*$totalmark)/$totaloutof;
														$finalValue=number_format((float)$finalresult,2,'.','');
													}
													$lastvalMe=$lastvalMe + $finalValue;
												}
											}	
										}
									}
								}
							}
							foreach($queryFetch->result() as $staName){
							    $less_than=$staName->maxvaluerange;
							    $greater_than=$staName->minvaluerange;
							    $average1 =($lastvalMe * $mergedPercent)/100;
							    $finalresultGS=number_format((float)$average1/$countQuarter,2,'.','');
							    if($finalresultGS >= 100){
							    	$finalresultGS=number_format((float)$average1/$countQuarter,0,'.','');
							    }else{
							    	$finalresultGS=number_format((float)$average1/$countQuarter,2,'.','');
							    }
							    
				                if($finalresultGS <=$less_than and $finalresultGS >=$greater_than)
				                {
				                	$data[]=array(
							        	'stuid'=>$stuid,
							        	'grade'=>$gradesec,
							        	'quarter'=>$quarter,
							        	'total'=>$finalresultGS,
							        	'subject'=>$subject,
							        	'shbranch'=>$gs_branches,
							        	'academicyear'=>$max_year
							        );
					        	}
		                	}
		                }
					}
				}
			
			if(!empty($data)){
				$queryInsert=$this->db->insert_batch('reportvaluestatistics',$data);
			}
			$no=1;
			$output.='<h4 class="text-center"><u><B>'.$school_name.'</B><small class="time">( '.$gs_branches.')</small> mark statistics in ' .$max_year.' Academic Year for Grade '.$gs_gradesec.' in ';
			foreach($gs_quarters as $quarter){
				$output.=''.$quarter.',';
			}
			$output.='</u></h4><u>የክፍል ደረጃ '.$gs_gradesec.'</u>';      			
			$output.='<div class="table-responsive">
			<table class="tabler table-bordered table-hover" style="width:100%;">
			<thead>
			<tr>	    	
			<th colspan="'.$totalColumn.'" class="text-center" style="background-color:#e3e3e3">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr><tr>';
			$queryFetch=$this->db->query("select * from reportstatistics ");
			if($queryFetch->num_rows()>0){
				$output.='<th class="text-center">No.</th>
				<th class="text-center">Name</th>
				<th class="text-center">Grade</th>
				<th class="text-center">Gender</th>';
				$queryReport=$this->db->query(" select u.grade,u.gradesec,rp.subject from users as u cross join reportvaluestatistics as rp ON u.gradesec=rp.grade where u.academicyear='$max_year' and u.branch='$gs_branches' and rp.academicyear='$max_year' and rp.grade='$gs_gradesec' group by subject ");
				/*$queryReport=$this->db->query("select * from reportvaluestatistics where academicyear='$max_year' group by subject ");*/
				if($queryReport->num_rows()>0){
					foreach($queryReport->result() as $subjects){
					    $output.='<th class="text-center" > '.$subjects->subject.'</th> ';
					}
					$output.='</tr>';					
					$queryFetchStudent=$this->db->query(" select u.fname,u.mname, u.lname,u.id, u.grade, u.section,u.gradesec, u.gender from users as u cross join reportvaluestatistics as rp ON u.id=rp.stuid  where u.academicyear='$max_year' and u.branch='$gs_branches' and rp.academicyear='$max_year' and rp.grade='$gs_gradesec' group by stuid order by fname,mname,lname ASC ");
					if($queryFetchStudent->num_rows()>0){
						foreach($queryFetchStudent->result() as $stuName){
							$stuId=$stuName->id;
							$output.='<tr><td>'.$no.'</td><td>'.$stuName->fname.' '.$stuName->mname.' '.$stuName->lname.'</td><td class="text-center">'.$stuName->gradesec.'</td><td class="text-center">'.$stuName->gender.'</td>';
							foreach($queryReport->result() as $row){
								$subject=$row->subject;
								$queryReportSum=$this->db->query("select sum(total)  as total, subject from reportvaluestatistics where academicyear='$max_year' and stuid='$stuId' and subject='$subject' ");
								foreach($queryReportSum->result() as $sumRow){
									$totalFinal=($sumRow->total);
									if($totalFinal>0){
										$output.='<th class="text-center" > '.number_format((float)$totalFinal,2,'.','').'</th> ';
									}else{
										$output.='<th class="text-center" > -</th> ';
									}
									
								}
							
								
							}
							$no++;
						}
					}
				}
			}
			$output.='</table></div>';
			$output.='<p class="text-center">'.$school_slogan.'!</p>';
    	return $output;
	}
	function averageMarkStatisticsWithName($max_year,$gs_branches,$gs_gradesec,$gs_quarters,$countQuarter,$countSubject){
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$queryFetch=$this->db->query("select * from reportstatistics ");
		$totalColumn=5;
		$queryUserEvaluation=$this->db->query("select u.id,u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.gradesec='$gs_gradesec' and status='Active' and isapproved='1' group by u.id ");
		if($queryUserEvaluation->num_rows()>0){
			foreach($queryUserEvaluation->result() as $evUser){
				$gradesec=$evUser->gradesec;
				$grade=$evUser->grade;
				$stuid=$evUser->id;
				$querySubjectCount1 = $this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' and onreportcard='1' and letter='#' group by Subj_name order by Subj_name ASC");
				$totaSubject1=$querySubjectCount1->num_rows();
				$querySubjectCount2 = $this->db->query("select Merged_name from subject where Academic_Year='$max_year' and Grade='$grade' and onreportcard='0' and letter='#' and Merged_name!='' group by Merged_name order by Merged_name ASC");
				$totaSubject2=$querySubjectCount2->num_rows();
				$totaSubject=$totaSubject2 + $totaSubject1;
				
				$querySubject = $this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' and letter='#' group by Subj_name order by Subj_name ASC");
				if($querySubject->num_rows()>0){
					$lastvalMe=0;
					foreach($querySubject->result() as $subjects){
						$subject=$subjects->Subj_name;
						$mergedSubject=$subjects->Merged_name;
						
						$onreportcard=$subjects->onreportcard;
						foreach($gs_quarters as $quarter){
							$queryCheck=$this->db->query("select percentage from subject_custom_percentage where academicyear='$max_year' and grade='$grade' and quarter='$quarter' and subject='$subject' ");
				            if($queryCheck->num_rows()>0){
				                $rowPercent=$queryCheck->row();
				                $mergedPercent=$rowPercent->percentage;
				            }else{
				                $mergedPercent=$subjects->Merged_percent;
				            }
							$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and academicyear='$max_year' and grade='$grade' ");
							if($queryEvaluation->num_rows()>0){
								foreach ($queryEvaluation->result() as $evavalue) {
									$evName=$evavalue->evname;
									$evaluation=$evavalue->eid;
									$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname order by mid ASC");
									if($queryMarkOutof->num_rows()>0){
										$totaloutof=0;
										foreach ($queryMarkOutof->result() as $keyvalue) {
				    						$totaloutof=$keyvalue->outof +$totaloutof;
										}
										$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
							            if($queryCheckPercentage->num_rows()>0){
							            	$rowPercent=$queryCheckPercentage->row();
							            	$percent=$rowPercent->custompercent;
							            }else{
							            	$percent= $evavalue->percent;
							            }
							            $query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gradesec.$quarter.$max_year." where  subname='$subject' and quarter='$quarter' and evaid='$evaluation' and mbranch='$gs_branches' group by markname order by mid ASC");
							            foreach ($query_value->result_array() as $value) {
                    						$markNameStu=$value['markname'];									
											$queryMark = $this->db->query("select value as total,sum(outof) as outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' and markname='$markNameStu' group by markname order by mid ASC");
											if($queryMark->num_rows()>0){
												foreach ($queryMark->result() as $mvalue) {
													$totalmark=$mvalue->total;
													$finalresult=($percent*$totalmark)/$totaloutof;
													$finalValue=number_format((float)$finalresult,2,'.','');
												}
												$lastvalMe=$lastvalMe + $finalValue;
											}
										}	
									}
								}
							}
						}		                
					    $average1 =($lastvalMe * $mergedPercent)/100;
					    $finalresultGS=number_format((float)$average1,2,'.','');
		                if($finalresultGS >= 100){
		                	$finalresultGS=number_format((float)$average1,0,'.','');
		                }else{
		                	$finalresultGS=number_format((float)$average1,2,'.','');
		                }
	                	$data[]=array(
				        	'stuid'=>$stuid,
				        	'grade'=>$gradesec,
				        	'quarter'=>'',
				        	'total'=>$finalresultGS,
				        	'subject'=>$subject,
				        	'merged_name'=>$mergedSubject,
				        	'onreportcard'=>$onreportcard,
				        	'shbranch'=>$gs_branches,
				        	'academicyear'=>$max_year
				        );		            	
		            	$lastvalMe=0;
		            }
	            }
			}
		}
		if(!empty($data)){
			$queryInsert=$this->db->insert_batch('reportvaluestatistics',$data);
		}
		$sqlDelete=$this->db->query("select *, sum(total) as mergedTot from reportvaluestatistics where merged_name!='' and grade='$gs_gradesec' group by merged_name,stuid ");
        if($sqlDelete->num_rows()>0){
          foreach ($sqlDelete->result() as $mergedValue) {
            $mergedTotal=$mergedValue->mergedTot;
            $stuid=$mergedValue->stuid;
            $subject=$mergedValue->subject;
            $mergedSubject=$mergedValue->merged_name;
            $onreportcard=$mergedValue->onreportcard;
            $data1[]=array(
            	'stuid'=>$stuid,
	        	'grade'=>$gs_gradesec,
	        	'quarter'=>'',
	        	'total'=>number_format((float)$mergedTotal,2,'.',''),
	        	'subject'=>$mergedSubject,
	        	'merged_name'=>$mergedSubject,
	        	'onreportcard'=>'1',
	        	'shbranch'=>$gs_branches,
	        	'academicyear'=>$max_year
            );
          }
          $query_insert1=$this->db->insert_batch('reportvaluestatistics',$data1);
        }
		$no=1;
		$output.='<h4 class="text-center"><u><B>'.$school_name.'</B><small class="time">( '.$gs_branches.')</small> mark statistics in ' .$max_year.' Academic Year for Grade '.$gs_gradesec.' in ';
		foreach($gs_quarters as $quarter){
			$output.=''.$quarter.',';
		}
		$output.='</u></h4><u>የክፍል ደረጃ '.$gs_gradesec.'</u>';      			
		$output.='<div class="table-responsive">
		<table class="tabler table-bordered table-hover" style="width:100%;">
		<thead>
		<tr>	    	
		<th colspan="'.$totalColumn.'" class="text-center" style="background-color:#e3e3e3">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr><tr>';
		$queryFetch=$this->db->query("select * from reportstatistics ");
		if($queryFetch->num_rows()>0){
			$output.='<th class="text-center">No.</th>
			<th class="text-center">Name</th>
			<th class="text-center">Grade</th>
			<th class="text-center">Gender</th>
			<th class="text-center">Average</th>';
			$output.='</tr>';
			$queryUserEvaluation=$this->db->query("select u.fname,u.mname,u.lname, u.gender, u.id, u.gradesec, u.grade from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.gradesec='$gs_gradesec' and status='Active' and isapproved='1' group by u.id ");
			if($queryUserEvaluation->num_rows()>0){
				foreach($queryUserEvaluation->result() as $stuName){
					$stuid=$stuName->id;
					$queryReport=$this->db->query(" select sum(total) as total from reportvaluestatistics as rp where rp.academicyear='$max_year' and rp.grade='$gs_gradesec' and rp.onreportcard='1' and stuid='$stuid' group by stuid ");
					if($queryReport->num_rows()>0){
						$totalFinal=0;
						foreach($queryReport->result() as $row){
							$totalFinals=($row->total);
						}
						$finalAverage=($totalFinals/$countQuarter)/$totaSubject;
						$finalresultGS=number_format((float)$finalAverage,2,'.','');
						foreach($queryFetch->result() as $staName){
						    $less_than=$staName->maxvaluerange;
						    $greater_than=$staName->minvaluerange;
						    
			                if($finalresultGS <=$less_than and $finalresultGS >=$greater_than)
			                {
			                	$output.='<tr><td>'.$no.'</td><td>'.$stuName->fname.' '.$stuName->mname.' '.$stuName->lname.'</td><td class="text-center">'.$stuName->gradesec.'</td><td class="text-center">'.$stuName->gender.'</td>';
			                	$output.='<th class="text-center" > '.number_format((float)$finalAverage,2,'.','').'</th></tr> ';
			                	$no++;
				        	}
				        	$totalFinal=0;
				        	
				        }
					}

				}
			}
		}
		$output.='</table></div>';
		$output.='<p class="text-center">'.$school_slogan.'!</p>';
    	return $output;
	}
	function averageMarkStatistics($max_year,$gs_branches,$gs_gradesec,$gs_quarters,$countQuarter,$countSubject){
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$queryFetch=$this->db->query("select * from reportstatistics ");
		if($queryFetch->num_rows()>0){
			$totalColumn=($queryFetch->num_rows() * 4);
		}else{
			$totalColumn=4;
		}
		$queryUserEvaluation=$this->db->query("select u.id,u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.gradesec='$gs_gradesec' and status='Active' and isapproved='1' group by u.id ");
		if($queryUserEvaluation->num_rows()>0){
			foreach($queryUserEvaluation->result() as $evUser){
				$gradesec=$evUser->gradesec;
				$grade=$evUser->grade;
				$stuid=$evUser->id;
				$querySubjectCount1 = $this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' and onreportcard='1' and letter='#' group by Subj_name order by Subj_name ASC");
				$totaSubject1=$querySubjectCount1->num_rows();
				$querySubjectCount2 = $this->db->query("select Merged_name from subject where Academic_Year='$max_year' and Grade='$grade' and onreportcard='0' and letter='#' and Merged_name!='' group by Merged_name order by Merged_name ASC");
				$totaSubject2=$querySubjectCount2->num_rows();
				$totaSubject=$totaSubject2 + $totaSubject1;
				
				$querySubject = $this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' and letter='#' group by Subj_name order by Subj_name ASC");
				if($querySubject->num_rows()>0){
					$lastvalMe=0;
					foreach($querySubject->result() as $subjects){
						$subject=$subjects->Subj_name;
						$mergedSubject=$subjects->Merged_name;
						$mergedPercent=$subjects->Merged_percent;
						$onreportcard=$subjects->onreportcard;
						foreach($gs_quarters as $quarter){
							$queryCheck=$this->db->query("select * from subject_custom_percentage where academicyear='$max_year' and grade='$grade' and quarter='$quarter' and subject='$subject' ");
				            if($queryCheck->num_rows()>0){
				                $rowPercent=$queryCheck->row();
				                $mergedPercent=$rowPercent->percentage;
				            }else{
				                $mergedPercent=$subjects->Merged_percent;
				            }
							$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and academicyear='$max_year' and grade='$grade' ");
							if($queryEvaluation->num_rows()>0){
								foreach ($queryEvaluation->result() as $evavalue) {
									$evName=$evavalue->evname;
									$evaluation=$evavalue->eid;
									$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname order by mid ASC");
									if($queryMarkOutof->num_rows()>0){
										$totaloutof=0;
										foreach ($queryMarkOutof->result() as $keyvalue) {
				    						$totaloutof=$keyvalue->outof +$totaloutof;
										}
										$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
							            if($queryCheckPercentage->num_rows()>0){
							            	$rowPercent=$queryCheckPercentage->row();
							            	$percent=$rowPercent->custompercent;
							            }else{
							            	$percent= $evavalue->percent;
							            }
							            $query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gradesec.$quarter.$max_year." where  subname='$subject' and quarter='$quarter' and evaid='$evaluation' and mbranch='$gs_branches' group by markname order by mid ASC");					
							           foreach ($query_value->result_array() as $value) {
               							 $markNameStu=$value['markname'];										
											$queryMark = $this->db->query("select value as total,sum(outof) as outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' and markname='$markNameStu' group by stuid order by mid ASC");
											if($queryMark->num_rows()>0){
												foreach ($queryMark->result() as $mvalue) {
													$totalmark=$mvalue->total;
													$finalresult=($percent*$totalmark)/$totaloutof;
													$finalValue=number_format((float)$finalresult,2,'.','');
												}
												$lastvalMe=$lastvalMe + $finalValue;
											}	
										}
									}
								}
							}
						}
					    $average1 =($lastvalMe * $mergedPercent)/100;
					    $finalresultGS=number_format((float)$average1,2,'.','');
					    if($finalresultGS >= 100){
					    	$finalresultGS=number_format((float)$average1,0,'.','');
					    }else{
					    	$finalresultGS=number_format((float)$average1,2,'.','');
					    }
	                	$data[]=array(
				        	'stuid'=>$stuid,
				        	'grade'=>$gradesec,
				        	'quarter'=>'',
				        	'total'=>$finalresultGS,
				        	'subject'=>$subject,
				        	'merged_name'=>$mergedSubject,
				        	'onreportcard'=>$onreportcard,
				        	'shbranch'=>$gs_branches,
				        	'academicyear'=>$max_year
				        );
		            	$lastvalMe=0;
		            }
	            }
			}
		}
		if(!empty($data)){
			$queryInsert=$this->db->insert_batch('reportvaluestatistics',$data);
		}
		$sqlDelete=$this->db->query("select *, sum(total) as mergedTot from reportvaluestatistics where merged_name!='' and grade='$gs_gradesec' group by merged_name,stuid ");
        if($sqlDelete->num_rows()>0){
          foreach ($sqlDelete->result() as $mergedValue) {
            $mergedTotal=$mergedValue->mergedTot;
            $stuid=$mergedValue->stuid;
            $subject=$mergedValue->subject;
            $mergedSubject=$mergedValue->merged_name;
            $onreportcard=$mergedValue->onreportcard;
            $data1[]=array(
            	'stuid'=>$stuid,
	        	'grade'=>$gs_gradesec,
	        	'quarter'=>'',
	        	'total'=>number_format((float)$mergedTotal,2,'.',''),
	        	'subject'=>$mergedSubject,
	        	'merged_name'=>$mergedSubject,
	        	'onreportcard'=>'1',
	        	'shbranch'=>$gs_branches,
	        	'academicyear'=>$max_year
            );
          }
          $query_insert1=$this->db->insert_batch('reportvaluestatistics',$data1);
        }
		$no=1;
		$output.='<h4 class="text-center"><u><B>'.$school_name.'</B><small class="time">( '.$gs_branches.')</small> mark statistics in ' .$max_year.' Academic Year for Grade '.$gs_gradesec.' in ';
		foreach($gs_quarters as $quarter){
			$output.=''.$quarter.',';
		}
		$output.='</u></h4><u>የክፍል ደረጃ '.$gs_gradesec.'</u>';      			
		$output.='<div class="table-responsive">
			<table class="tabler table-bordered table-hover" style="width:100%;">
			<thead>
			<tr>	    	
			<th rowspan="3">Subject</th>
			<th colspan="'.$totalColumn.'" class="text-center" style="background-color:#e3e3e3">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr><tr>';
		$queryFetch=$this->db->query("select * from reportstatistics ");
		if($queryFetch->num_rows()>0){
			foreach($queryFetch->result() as $staName){
			    $less_than=$staName->maxvaluerange;
			    $greater_than=$staName->minvaluerange;
			    $output.='<th colspan="3" class="text-center" style="background-color:#e3e3e3"> Between '.$greater_than.' & '.$less_than.'</th> ';
			}
			$output.='</tr>';
			foreach($queryFetch->result() as $staName){
				$output.='<th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th> ';
			}
			$output.='</tr>';
		}
		if($queryFetch->num_rows()>0){
			$queryUserEvaluation=$this->db->query("select u.fname,u.mname,u.lname, u.gender, u.id, u.gradesec, u.grade from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.gradesec='$gs_gradesec' and status='Active' and isapproved='1' group by u.id ");
			if($queryUserEvaluation->num_rows()>0){
				$output.='<tr><th class="text-center"> All</th>';
				foreach($queryFetch->result() as $staName){
				    $less_than=$staName->maxvaluerange;
				    $greater_than=$staName->minvaluerange;

					$m=0;$f=0;$totalGender=0;$totalGenderm=0;$mm=0;$ff=0;
					
					foreach($queryUserEvaluation->result() as $stuName){
						$stuid=$stuName->id;
						$queryReport=$this->db->query(" select sum(total) as total from reportvaluestatistics as rp where rp.academicyear='$max_year' and rp.grade='$gs_gradesec' and rp.onreportcard='1' and stuid='$stuid' group by stuid ");
						if($queryReport->num_rows()>0){
							$totalFinal=0;
							foreach($queryReport->result() as $row){
								$totalFinals=($row->total);
							}
							$finalAverage=($totalFinals/$countQuarter)/$totaSubject;
							$finalresultGS=number_format((float)$finalAverage,2,'.','');
							/*foreach($queryFetch->result() as $staName){
							    $less_than=$staName->maxvaluerange;
							    $greater_than=$staName->minvaluerange;*/
							    
				                if($finalresultGS <=$less_than and $finalresultGS >=$greater_than)
				                {
				                	if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
					        			$m=$m+1;
					        		}else if($stuName->gender=='Female' || $stuName->gender=='F' || $stuName->gender=='female' || $stuName->gender=='FEMALE'){
					        			$f=$f+1;
					        		}
					        		$totalGender=$f+$m;
					        	}
					        	
					        /*}*/
						}
					}
					$output.='<th class="text-center" > '.$m.'</th> ';
					$output.='<th class="text-center" > '.$f.'</th> ';
					$output.='<th class="text-center" > '.$totalGender.'</th> ';
				}
			}
		}
		$output.='</table></div>';
		$output.='<p class="text-center">'.$school_slogan.'!</p>';
    	return $output;
	}
	function gradeMarkStatistics($max_year,$gs_branches,$gs_gradesec,$gs_subject,$gs_quarters,$countQuarter,$countSubject){
		$output='';
			$query_name = $this->db->query("select * from school");
			$row_name = $query_name->row_array();
			$school_name=$row_name['name'];
			$school_slogan=$row_name['slogan'];
			$queryFetch=$this->db->query("select * from reportstatistics ");
			if($queryFetch->num_rows()>0){
				$totalColumn=($queryFetch->num_rows() * 4);
			}else{
				$totalColumn=4;
			}
			$queryUserEvaluation=$this->db->query("select * from users as u where u.academicyear='$max_year' and u.branch='$gs_branches' and u.gradesec='$gs_gradesec' and status='Active' and isapproved='1' group by u.id  ");
			if($queryUserEvaluation->num_rows()>0){
				foreach($queryUserEvaluation->result() as $evUser){
					$gradesec=$evUser->gradesec;
					$grade=$evUser->grade;
					$stuid=$evUser->id;
					foreach($gs_subject as $subject){
						$lastvalMe=0;
						foreach($gs_quarters as $quarter){
							$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and academicyear='$max_year' and grade='$grade' ");
							if($queryEvaluation->num_rows()>0){
								foreach ($queryEvaluation->result() as $evavalue) {
									$evName=$evavalue->evname;
									$evaluation=$evavalue->eid;
									$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname order by mid ASC");
									if($queryMarkOutof->num_rows()>0){
										$totaloutof=0;
										foreach ($queryMarkOutof->result() as $keyvalue) {
				    						$totaloutof=$keyvalue->outof +$totaloutof;
										}
										$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
							            if($queryCheckPercentage->num_rows()>0){
							            	$rowPercent=$queryCheckPercentage->row();
							            	$percent=$rowPercent->custompercent;
							            }else{
							            	$percent= $evavalue->percent;
							            }
							            $query_value = $this->db->query("select markname,sum(value) as total from mark".$gs_branches.$gradesec.$quarter.$max_year." where  subname='$subject' and quarter='$quarter' and evaid='$evaluation' and mbranch='$gs_branches' group by markname order by mid ASC");
							            foreach ($query_value->result_array() as $value) {
                    						$markNameStu=$value['markname'];

											$queryMark = $this->db->query("select value as total,sum(outof) as outof from `mark".$gs_branches.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' and markname='$markNameStu' group by markname order by mid ASC");
											if($queryMark->num_rows()>0){
												foreach ($queryMark->result() as $mvalue) {
													$totalmark=$mvalue->total;
													$finalresult=($percent*$totalmark)/$totaloutof;
													$finalValue=number_format((float)$finalresult,2,'.','');
												}
												$lastvalMe=$lastvalMe + $finalValue;
											}
										}	
									}
								}
							}
						}
						foreach($queryFetch->result() as $staName){
						    $less_than=$staName->maxvaluerange;
						    $greater_than=$staName->minvaluerange;
						    $finalresultGS=number_format((float)$lastvalMe/$countQuarter,2,'.','');
						    if($finalresultGS >= 100){
						    	$finalresultGS=number_format((float)$lastvalMe/$countQuarter,0,'.','');
						    }else{
						    	$finalresultGS=number_format((float)$lastvalMe/$countQuarter,2,'.','');
						    }
			                if($finalresultGS <=$less_than and $finalresultGS >=$greater_than)
			                {
			                	$data[]=array(
						        	'stuid'=>$stuid,
						        	'grade'=>$gradesec,
						        	'quarter'=>$quarter,
						        	'total'=>$finalresultGS,
						        	'subject'=>$subject,
						        	'shbranch'=>$gs_branches,
						        	'academicyear'=>$max_year
						        );
				        	}
	                	}
	                }
				}
			}
			
			if(!empty($data)){
				$queryInsert=$this->db->insert_batch('reportvaluestatistics',$data);
			}
			$no=1;		
			$output.='<h4 class="text-center"><u><B>'.$school_name.'</B><small class="time">( '.$gs_branches.')</small> mark statistics in ' .$max_year.' Academic Year for Grade '.$gs_gradesec.' in ';
			foreach($gs_quarters as $quarter){
				$output.=''.$quarter.',';
			}	
			$output.='</u></h4><u>የክፍል ደረጃ '.$gs_gradesec.'</u>'; 
			$output.='<div class="table-responsive">
			<table class="tabler table-bordered table-hover" style="width:100%;">
			<thead>
			<tr>	    	
			<th rowspan="3">Subject</th>
			<th colspan="'.$totalColumn.'" class="text-center" style="background-color:#e3e3e3">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr><tr>';
			$queryFetch=$this->db->query("select * from reportstatistics ");
			if($queryFetch->num_rows()>0){
				foreach($queryFetch->result() as $staName){
				    $less_than=$staName->maxvaluerange;
				    $greater_than=$staName->minvaluerange;
				    $output.='<th colspan="3" class="text-center" style="background-color:#e3e3e3"> Between '.$greater_than.' & '.$less_than.'</th> ';
				}
				$output.='</tr>';
				foreach($queryFetch->result() as $staName){
					$output.='<th class="text-center">ወ</th>
					<th class="text-center">ሴ</th>
					<th class="text-center">ድ</th> ';
				}
				$output.='</tr>';
			}
			$queryFetch=$this->db->query("select * from reportstatistics ");
			if($queryFetch->num_rows()>0){
				$queryReport=$this->db->query(" select u.grade,u.gradesec,rp.subject from users as u cross join reportvaluestatistics as rp ON u.gradesec=rp.grade where u.academicyear='$max_year' and u.branch='$gs_branches' and rp.academicyear='$max_year' and rp.grade='$gs_gradesec' group by subject ");
				/*$queryReport=$this->db->query("select * from reportvaluestatistics where academicyear='$max_year' group by subject  order by subject");*/
				if($queryReport->num_rows()>0){

					foreach($queryReport->result() as $subjects){
						$m=0;$f=0;$totalGender=0;$totalGenderm=0;$mm=0;$ff=0;
						$subject=$subjects->subject;
					    $output.='<tr><th class="text-center"> '.$subjects->subject.'</th>';
						foreach($queryFetch->result() as $staName){
							$less_than=$staName->maxvaluerange;
		    				$greater_than=$staName->minvaluerange;		
							$queryFetchStudent=$this->db->query(" select u.fname,u.mname, u.lname,u.id, u.grade, u.section,u.gradesec, u.gender,sum(total)  as total, subject from users as u cross join reportvaluestatistics as rp ON u.id=rp.stuid  where u.academicyear='$max_year' and u.branch='$gs_branches' and rp.academicyear='$max_year' and rp.subject='$subject' and rp.grade='$gs_gradesec' group by stuid,subject order by fname,mname,lname ASC ");
							if($queryFetchStudent->num_rows()>0){
								foreach($queryFetchStudent->result() as $stuName){
									$stuId=$stuName->id;
									$tm=number_format((float)$stuName->total,2,'.','');
									$totalM=round($tm);								
									if($totalM <=$less_than and $totalM >=$greater_than){
										if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
						        			$m=$m+1;
						        		}else if($stuName->gender=='Female' || $stuName->gender=='F' || $stuName->gender=='female' || $stuName->gender=='FEMALE'){
						        			$f=$f+1;
						        		}
						        		$totalGender=$f+$m;
						        	}
						        }
								$output.='<th class="text-center" > '.$m.'</th> ';
								$output.='<th class="text-center" > '.$f.'</th> ';
								$output.='<th class="text-center" > '.$totalGender.'</th> ';
								$m=0;$f=0;$totalGender=0;$totalGenderm=0;$mm=0;$ff=0;
							}
						}
					}
				}
			}
			$output.='</table></div>';
			$output.='<p class="text-center">'.$school_slogan.'!</p>';
    	return $output;
	}
	function shuffleExamStudent($max_year,$gs_branches,$gs_gradesec,$gradeEvaluation,$gs_quarter){
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
        $this->db->where('academicyear',$max_year);
        $queryDelete=$this->db->delete('studentshufflereport');
		$queryClassName=$this->db->query("select * from studentexamlist group by classname ");
		if($queryClassName->num_rows()>0){
			$limitPage=0;
			$data=array();
			$querySubject=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$gs_gradesec' group by Subj_name order by suborder ");
			if($querySubject->num_rows()>0){
		    	$no=1;$totalAverageFinal=0;
				$queryStudentNum=$this->db->query(" Select fname,mname,lname,id,grade, section,gradesec,username, gender from users where grade='$gs_gradesec' and usertype='Student' and isapproved='1' and status='Active' and academicyear='$max_year' and branch='$gs_branches' group by id order by fname,mname,lname ASC ");
				foreach($queryStudentNum->result() as $stuName){
					$id=$stuName->id;
					$gradesec=$stuName->gradesec;
					$average1=0; $totalAverage=0;
					foreach($querySubject->result() as $subject){
						$average=0;$sumOutOf=0;
						$subjects=$subject->Subj_name;			    					    	
			    		foreach ($gradeEvaluation as $mark_name)
			    		{
			    			
			    			$evalID=$mark_name;
			        		$query_value = $this->db->query("select value,markname,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gradesec.$gs_quarter.$max_year."` where quarter='$gs_quarter' and evaid='$evalID' and stuid='$id' and mbranch='$gs_branches' and subname='$subjects' group by markname order by mid ASC");
							$sumOutOf=0; $outofTot=0;$totalMark=0;
							foreach ($query_value->result() as $value) {
								$markNameStu=$value->markname;
								$outofTot=$outofTot+ $value->outof;
								$totalMark=$totalMark + $value->value;
					            $sumOutOf=$value->outof + $sumOutOf;	
			        		}
			        		if($sumOutOf>0){
			    				$average =$totalMark + $average;
			        		}
			        	}
			        	$totalAverage= $average + $totalAverage;
			        }
			        $totalAverageFinal=number_format((float)$totalAverage,2,'.','');
			        $data[]=array(
			        	'stuid'=>$id,
			        	'grade'=>$gs_gradesec,
			        	'quarter'=>$gs_quarter,
			        	'total'=>$totalAverageFinal,
			        	'shbranch'=>$gs_branches,
			        	'academicyear'=>$max_year
			        );
	    		}
	    		if(!empty($data)){
					$queryInsert=$this->db->insert_batch('studentshufflereport',$data);
				}
		    }
			
		}
		$queryClassName=$this->db->query("select * from studentexamlist group by classname ");
		if($queryClassName->num_rows()>0){
			$limitPage=0;
			foreach($queryClassName->result() as $className){
				$classname=$className->classname;
				$noofstudent=$className->nostudent;
				$output.='<div class="table-responsive" style="height:92%;page-break-inside:avoid;">';
				$output.='<h4 class="text-center"><u><B>'.$school_name.'</B><small class="time">( '.$gs_branches.')</small> Student Placement for exam in ' .$max_year.' Academic Year for Grade '.$gs_gradesec.' in ';
				$output.='<B><u> '.$gs_quarter.' </u></B> </u></h4>';
				$output.='<u>የክፍል ደረጃ(Grade) '.$gs_gradesec.'ኛ</u>';
				$output.='<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th colspan="4" class="text-center" style="background-color:#e3e3e3">'.$classname.' ክፍል የተመደቡ የተማሪዎች ስም ዝርዝር</th></tr><tr>';
					$output.='<th class="text-center">No.</th>
					<th>Name</th>
					<th class="text-center">ID</th>
					<th>Regular Grade</th></tr>';
				$queryFetchData=$this->db->query(" Select * from studentshufflereport where grade='$gs_gradesec' and academicyear='$max_year' and shbranch='$gs_branches' group by stuid order by total DESC limit ".$limitPage." ,".$noofstudent." ");
				if($queryFetchData->num_rows()>0){
					$no=1;
					foreach($queryFetchData->result() as $dataStudent){  
						$stuid=$dataStudent->stuid;
						$queryStudentNum=$this->db->query(" Select fname,mname, lname,id,grade, section,gradesec,username, gender from users where id='$stuid' ");
						
						foreach($queryStudentNum->result() as $stuName){
							
							$id=$stuName->id;
							$gradesec=$stuName->gradesec;
							$output.='<tr><td>'.$no.'.</td><td>'.$stuName->fname.' '.$stuName->mname.' '.$stuName->lname.'</td>
							<td class="text-center">'.$stuName->username.'</td>';
							$output.='<td>'.$stuName->gradesec.'</td>';
							
							
						}
						$no++;
						
					}
					$limitPage=$noofstudent + $limitPage;
				}
				$output.='</table><p class="text-center">'.$school_slogan.'!</p></div>';
			}
		}
		
    	return $output;
	}
	function shuffleExamStudentWithResult($max_year,$gs_branches,$gs_gradesec,$gradeEvaluation,$gs_quarter){
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
        $this->db->where('academicyear',$max_year);
        $queryDelete=$this->db->delete('studentshufflereport');
		
		$queryClassName=$this->db->query("select * from studentexamlist group by classname ");
		if($queryClassName->num_rows()>0){
			$limitPage=0;
			$data=array();
			$querySubject=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$gs_gradesec' group by Subj_name order by suborder ");
			if($querySubject->num_rows()>0){
		    	$no=1;$totalAverageFinal=0;
				$queryStudentNum=$this->db->query(" Select fname,mname,lname,id,grade, section, gradesec,username, gender from users where grade='$gs_gradesec' and usertype='Student' and isapproved='1' and status='Active' and academicyear='$max_year' and branch='$gs_branches' group by id order by fname,mname,lname ASC ");
				foreach($queryStudentNum->result() as $stuName){
					$id=$stuName->id;
					$gradesec=$stuName->gradesec;
					$totalAverage=0;
					foreach($querySubject->result() as $subject){
						$average=0;$sumOutOf=0;
						$subjects=$subject->Subj_name;			    	
			    		foreach ($gradeEvaluation as $mark_name)
			    		{
			    			$evalID=$mark_name;
			        		$query_value = $this->db->query("select value,markname,sum(value) as total,sum(outof) as outof from `mark".$gs_branches.$gradesec.$gs_quarter.$max_year."` where quarter='$gs_quarter' and evaid='$evalID' and stuid='$id' and mbranch='$gs_branches' and subname='$subjects' group by markname order by mid ASC");
							$sumOutOf=0;$outofTot=0;$totalMark=0;
							foreach ($query_value->result() as $value) {
								$markNameStu=$value->markname;
								$outofTot=$outofTot + $value->outof;
								$totalMark=$totalMark + $value->value;
					            $sumOutOf=$value->outof + $sumOutOf;	
			        		}
			        		if($sumOutOf>0){
			    				$average =$totalMark + $average;
			        		}
			        	}
			        	$totalAverage= $average + $totalAverage;
			        }
			        $totalAverageFinal=number_format((float)$totalAverage,2,'.','');
			        $data[]=array(
			        	'stuid'=>$id,
			        	'grade'=>$gs_gradesec,
			        	'quarter'=>$gs_quarter,
			        	'total'=>$totalAverageFinal,
			        	'shbranch'=>$gs_branches,
			        	'academicyear'=>$max_year
			        );
	    		}
	    		if(!empty($data)){
					$queryInsert=$this->db->insert_batch('studentshufflereport',$data);
				}
		    }
		}		 
		$queryClassName=$this->db->query("select * from studentexamlist group by classname ");
		if($queryClassName->num_rows()>0){
			$limitPage=0;
			foreach($queryClassName->result() as $className){
				$classname=$className->classname;
				$noofstudent=$className->nostudent;
				$output.='<div class="table-responsive" style="height:92%;page-break-inside:avoid;">';
				$output.='<h4 class="text-center"><u><B>'.$school_name.'</B><small class="time">( '.$gs_branches.')</small> Student Placement for exam in ' .$max_year.' Academic Year for Grade '.$gs_gradesec.' in ';
				$output.='<B><u> '.$gs_quarter.' </u></B> </u></h4>';
				$output.='<u>የክፍል ደረጃ(Grade) '.$gs_gradesec.'ኛ</u>';
				$output.='<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th colspan="5" class="text-center" style="background-color:#e3e3e3">'.$classname.' ክፍል የተመደቡ የተማሪዎች ስም ዝርዝር</th></tr><tr>';
					$output.='<th class="text-center">No.</th>
					<th>Name</th>
					<th class="text-center">ID</th>
					<th>Regular Grade</th>
					<th>Result</th></tr>';
				$queryFetchData=$this->db->query(" Select * from studentshufflereport where grade='$gs_gradesec' and academicyear='$max_year' and shbranch='$gs_branches' group by stuid order by total DESC limit ".$limitPage." ,".$noofstudent." ");
				if($queryFetchData->num_rows()>0){
					$no=1;
					foreach($queryFetchData->result() as $dataStudent){  
						$stuid=$dataStudent->stuid;
						$queryStudentNum=$this->db->query(" Select fname,mname, lname,id,grade, section,gradesec,username, gender from users where id='$stuid' ");
						
						foreach($queryStudentNum->result() as $stuName){
							
							$id=$stuName->id;
							$gradesec=$stuName->gradesec;
							$output.='<tr><td>'.$no.'.</td><td>'.$stuName->fname.' '.$stuName->mname.' '.$stuName->lname.'</td>
							<td class="text-center">'.$stuName->username.'</td>';
							$output.='<td>'.$stuName->gradesec.'</td><td>'.$dataStudent->total.'</td>';
							
							
						}
						$no++;
						
					}
					$limitPage=$noofstudent + $limitPage;
				}
				$output.='</table><p class="text-center">'.$school_slogan.'!</p></div>';
			}
		}
    	return $output;
	}
	function mark_statistics($max_year,$gs_gradesec,$gs_subject,$gs_quarter){
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$output.='<h4 class="text-center"><u><B>'.$school_name.'</B> mark statistics in ' .$max_year.' Academic Year:</u></h4>';
		$output.='<h6 class="text-center">';
		    $output.='Season :';
	    if($gs_quarter=='semester1'){
	    	$output.='<B><u> 1<sup>st</sup> Semester </u></B> ';
	    }else if($gs_quarter=='semester2'){
	    	$output.='<B><u> 2<sup>nd</sup> Semester </u></B> ';
	    }else{
	    	$output.='<B><u> Yearly Average </u></B> ';
	    }
		$output.='</div></br></h6>';
		if($gs_quarter=='semester1'){

			foreach($gs_gradesec as $grade){
				$output.='<u>የክፍል ደረጃ '.$grade.'ኛ</u>';      			
				$output.='<div class="table-responsive">
				<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th rowspan="3">Subject</th>
				<th colspan="6" class="text-center">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr>
				<tr><th colspan="3" class="text-center">49 እና በታች ያገኙ</th>
				<th colspan="3" class="text-center">50 እና በላይ ያገኙ</th></tr>
				<tr><th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th>
				<th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th> </tr>';
		    	foreach($gs_subject as $subjects){
		    		$m=0;$f=0;$totalGender=0;
		    		$totalGenderm=0;$mm=0;$ff=0;
			    	$output.='<tr><td>'.$subjects.'</td>';
		    		$queryBranch=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' group by gradesec ");
		    		if($queryBranch->num_rows()>0){
		    			foreach($queryBranch->result() as $gradesecs ){
		    				$gradesec=$gradesecs->gradesec;
		    				$queryStudentNum=$this->db->query(" Select fname,mname,lname,id,grade, section,gradesec, gender from users where gradesec='$gradesec' and usertype='Student' and isapproved='1' and status='Active' and academicyear='$max_year' group by id");
		    				foreach($queryStudentNum->result() as $stuName){
		    					$stuid=$stuName->id;
			    				$sem1Ave=$this->db->query("select(select sum(total) from reportcard".$gradesec.$max_year." where stuid='$stuid' and subject='$subjects' and quarter='Quarter1') + (select sum(total) from reportcard".$gradesec.$max_year." where stuid='$stuid' and subject='$subjects' and quarter='Quarter2') as totalResult ");
				                foreach ($sem1Ave->result() as $fetchSem1) {
				                   $totalM=($fetchSem1->totalResult)/2;
					                if($totalM <='49' and $totalM >='0'){
										if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
						        			$m=$m+1;
						        		}else{
						        			$f=$f+1;
						        		}
						        		$totalGender=$f+$m;
						        	}else {
						        		if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
						        			$mm=$mm+1;
						        		}else{
						        			$ff=$ff+1;
						        		}
						        		$totalGenderm=$ff+$mm;
						        	}
				                }
				            }
			    		}
			    	}
			    	$output.='<td class="text-center" style="background-color:#e3e3e3">'.$m.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$f.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGender.'</td>';

					$output.='<td class="text-center" style="background-color:#e3e3e3">'.$mm.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$ff.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGenderm.'</td>';
		    	}
	    		$output.='</table></div>';
	    	}
	    }else if($gs_quarter=='semester2'){
	    	foreach($gs_gradesec as $grade){
				$output.='<u>የክፍል ደረጃ '.$grade.'ኛ</u>';      			
				$output.='<div class="table-responsive">
				<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th rowspan="3">Subject</th>
				<th colspan="6" class="text-center">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr>
				<tr><th colspan="3" class="text-center">49 እና በታች ያገኙ</th>
				<th colspan="3" class="text-center">50 እና በላይ ያገኙ</th></tr>
				<tr><th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th>
				<th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th> </tr>';
		    	foreach($gs_subject as $subjects){
		    		$m=0;$f=0;$totalGender=0;
		    		$totalGenderm=0;$mm=0;$ff=0;
			    	$output.='<tr><td>'.$subjects.'</td>';
		    		$queryBranch=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' group by gradesec ");
		    		if($queryBranch->num_rows()>0){
		    			foreach($queryBranch->result() as $gradesecs ){
		    				$gradesec=$gradesecs->gradesec;
		    				$queryStudentNum=$this->db->query(" Select fname,mname,lname,id,grade, section,gradesec, gender from users where gradesec='$gradesec' and usertype='Student' and isapproved='1' and status='Active' and academicyear='$max_year' group by id");
		    				foreach($queryStudentNum->result() as $stuName){
		    					$stuid=$stuName->id;
			    				$sem1Ave=$this->db->query("select(select sum(total) from reportcard".$gradesec.$max_year." where stuid='$stuid' and subject='$subjects' and quarter='Quarter3') + (select sum(total) from reportcard".$gradesec.$max_year." where stuid='$stuid' and subject='$subjects' and quarter='Quarter4') as totalResult ");
				                foreach ($sem1Ave->result() as $fetchSem1) {
				                   $totalM=($fetchSem1->totalResult)/2;
					                if($totalM <='49' and $totalM >='0'){
										if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
						        			$m=$m+1;
						        		}else{
						        			$f=$f+1;
						        		}
						        		$totalGender=$f+$m;
						        	}else {
						        		if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
						        			$mm=$mm+1;
						        		}else{
						        			$ff=$ff+1;
						        		}
						        		$totalGenderm=$ff+$mm;
						        	}
				                }
				            }
			    		}
			    	}
			    	$output.='<td class="text-center" style="background-color:#e3e3e3">'.$m.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$f.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGender.'</td>';

					$output.='<td class="text-center" style="background-color:#e3e3e3">'.$mm.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$ff.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGenderm.'</td>';
		    	}
	    		$output.='</table></div>';
	    	}
	    }else{
	    	foreach($gs_gradesec as $grade){
				$output.='<u>የክፍል ደረጃ '.$grade.'ኛ</u>';      			
				$output.='<div class="table-responsive">
				<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th rowspan="3">Subject</th>
				<th colspan="6" class="text-center">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr>
				<tr><th colspan="3" class="text-center">49 እና በታች ያገኙ</th>
				<th colspan="3" class="text-center">50 እና በላይ ያገኙ</th></tr>
				<tr><th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th>
				<th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th> </tr>';
		    	foreach($gs_subject as $subjects){
		    		$m=0;$f=0;$totalGender=0;
		    		$totalGenderm=0;$mm=0;$ff=0;
			    	$output.='<tr><td>'.$subjects.'</td>';
		    		$queryBranch=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' group by gradesec ");
		    		if($queryBranch->num_rows()>0){
		    			foreach($queryBranch->result() as $gradesecs ){
		    				$gradesec=$gradesecs->gradesec;
		    				$queryStudentNum=$this->db->query(" Select fname,mname,lname,id,grade, section,gradesec, gender from users where gradesec='$gradesec' and usertype='Student' and isapproved='1' and status='Active' and academicyear='$max_year' ");
		    				foreach($queryStudentNum->result() as $stuName){
		    					$stuid=$stuName->id;
			    				$YAve=$this->db->query("select sum(total) as total from reportcard".$gradesec.$max_year." where stuid='$stuid' and subject='$subjects' ");
			                    foreach ($YAve->result() as $fetchYA) {
			                      	$resultYA=($fetchYA->total)/4;
			                      	if($resultYA <='49' and $resultYA >='0'){
										if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
						        			$m=$m+1;
						        		}else{
						        			$f=$f+1;
						        		}
						        		$totalGender=$f+$m;
						        	}else if($resultYA <='100' and $resultYA >='50'){
						        		if($stuName->gender=='Male' || $stuName->gender=='M' || $stuName->gender=='male' || $stuName->gender=='MALE'){
						        			$mm=$mm+1;
						        		}else{
						        			$ff=$ff+1;
						        		}
						        		$totalGenderm=$ff+$mm;
						        	}
			                    }
			                }	
			    		}
			    	}
			    	$output.='<td class="text-center" style="background-color:#e3e3e3">'.$m.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$f.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGender.'</td>';

					$output.='<td class="text-center" style="background-color:#e3e3e3">'.$mm.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$ff.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGenderm.'</td>';
		    	}
	    		$output.='</table></div>';
	    	}
	    }
    	return $output;
	}
	function mark_statisticsSeattle($max_year,$gs_gradesec,$gs_subject,$gs_quarter){
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$output.='<h4 class="text-center"><u><B>'.$school_name.'</B> mark statistics in ' .$max_year.' Academic Year:</u></h4>';
		$output.='<h6 class="text-center">';
		    $output.='Season :';
		    $output.='Season :';
	    if($gs_quarter=='semester1'){
	    	$output.='<B><u> 1<sup>st</sup> Semester </u></B> ';
	    }else if($gs_quarter=='semester2'){
	    	$output.='<B><u> 2<sup>nd</sup> Semester </u></B> ';
	    }else{
	    	$output.='<B><u> Yearly Average </u></B> ';
	    }
		$output.='</div></br></h6>';
		if($gs_quarter=='semester1'){

			foreach($gs_gradesec as $grade){
				$output.='<u>የክፍል ደረጃ '.$grade.'ኛ</u>';      			
				$output.='<div class="table-responsive">
				<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th rowspan="3">Subject</th>
				<th colspan="6" class="text-center">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr>
				<tr><th colspan="3" class="text-center">49 እና በታች ያገኙ</th>
				<th colspan="3" class="text-center">50 እና በላይ ያገኙ</th></tr>
				<tr><th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th>
				<th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th> </tr>';
		    	foreach($gs_subject as $subjects){
		    		$m=0;$f=0;$totalGender=0;
		    		$totalGenderm=0;$mm=0;$ff=0;
			    	$output.='<tr><td>'.$subjects.'</td>';
		    		$queryBranch=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' group by gradesec ");
		    		if($queryBranch->num_rows()>0){
		    			foreach($queryBranch->result() as $gradesecs ){
		    				$gradesec=$gradesecs->gradesec;
			    			$reportCard=$this->db->query("select sum(total) as stuTotal,gender,total from reportcard".$gradesec.$max_year." as rc cross join users as us where rc.grade='$gradesec' and rc.subject='$subjects' and rc.academicyear='$max_year' and us.id=rc.stuid and us.academicyear='$max_year' and us.isapproved='1' and us.status='Active' and us.gradesec='$gradesec' and quarter='Semester1' group by subject,us.id ");
							foreach($reportCard->result() as $queryDta){
			    				$totalM=$queryDta->stuTotal;
			    				if($totalM <='49' and $totalM >='1'){
									if($queryDta->gender=='Male' || $queryDta->gender=='M' || $queryDta->gender=='male' || $queryDta->gender=='MALE'){
					        			$m=$m+1;
					        		}else{
					        			$f=$f+1;
					        		}
					        		$totalGender=$f+$m;
					        	}else if($totalM <='100' and $totalM >='50'){
					        		if($queryDta->gender=='Male' || $queryDta->gender=='M' || $queryDta->gender=='male' || $queryDta->gender=='MALE'){
					        			$mm=$mm+1;
					        		}else{
					        			$ff=$ff+1;
					        		}
					        		$totalGenderm=$ff+$mm;
					        	}
							}	
			    		}
			    	}
			    	$output.='<td class="text-center" style="background-color:#e3e3e3">'.$m.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$f.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGender.'</td>';

					$output.='<td class="text-center" style="background-color:#e3e3e3">'.$mm.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$ff.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGenderm.'</td>';
		    	}
	    		$output.='</table></div>';
	    	}
	    }else if($gs_quarter=='semester2'){
	    	foreach($gs_gradesec as $grade){
				$output.='<u>የክፍል ደረጃ '.$grade.'ኛ</u>';      			
				$output.='<div class="table-responsive">
				<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th rowspan="3">Subject</th>
				<th colspan="6" class="text-center">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr>
				<tr><th colspan="3" class="text-center">49 እና በታች ያገኙ</th>
				<th colspan="3" class="text-center">50 እና በላይ ያገኙ</th></tr>
				<tr><th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th>
				<th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th> </tr>';
		    	foreach($gs_subject as $subjects){
		    		$m=0;$f=0;$totalGender=0;
		    		$totalGenderm=0;$mm=0;$ff=0;
			    	$output.='<tr><td>'.$subjects.'</td>';
		    		$queryBranch=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' group by gradesec ");
		    		if($queryBranch->num_rows()>0){
		    			foreach($queryBranch->result() as $gradesecs ){
		    				$gradesec=$gradesecs->gradesec;
			    			$reportCard=$this->db->query("select sum(total) as stuTotal,gender,total from reportcard".$gradesec.$max_year." as rc cross join users as us where rc.grade='$gradesec' and rc.subject='$subjects' and rc.academicyear='$max_year' and us.id=rc.stuid and us.academicyear='$max_year' and us.isapproved='1' and us.status='Active' and us.gradesec='$gradesec' and quarter='Semester2' group by subject,us.id ");
							foreach($reportCard->result() as $queryDta){
			    				$totalM=$queryDta->stuTotal;
			    				if($totalM <='49' and $totalM >='1'){
									if($queryDta->gender=='Male' || $queryDta->gender=='M' || $queryDta->gender=='male' || $queryDta->gender=='MALE'){
					        			$m=$m+1;
					        		}else{
					        			$f=$f+1;
					        		}
					        		$totalGender=$f+$m;
					        	}else if($totalM <='100' and $totalM >='50'){
					        		if($queryDta->gender=='Male' || $queryDta->gender=='M' || $queryDta->gender=='male' || $queryDta->gender=='MALE'){
					        			$mm=$mm+1;
					        		}else{
					        			$ff=$ff+1;
					        		}
					        		$totalGenderm=$ff+$mm;
					        	}
							}	
			    		}
			    	}
			    	$output.='<td class="text-center" style="background-color:#e3e3e3">'.$m.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$f.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGender.'</td>';

					$output.='<td class="text-center" style="background-color:#e3e3e3">'.$mm.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$ff.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGenderm.'</td>';
		    	}
	    		$output.='</table></div>';
	    	}
	    }else{
	    	foreach($gs_gradesec as $grade){
				$output.='<u>የክፍል ደረጃ '.$grade.'ኛ</u>';      			
				$output.='<div class="table-responsive">
				<table class="tabler table-bordered table-hover" style="width:100%;">
				<thead>
				<tr>	    	
				<th rowspan="3">Subject</th>
				<th colspan="6" class="text-center">የተማሪዎች ፈተና ውጤት ከመቶ	</th></tr>
				<tr><th colspan="3" class="text-center">49 እና በታች ያገኙ</th>
				<th colspan="3" class="text-center">50 እና በላይ ያገኙ</th></tr>
				<tr><th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th>
				<th class="text-center">ወ</th>
				<th class="text-center">ሴ</th>
				<th class="text-center">ድ</th> </tr>';
		    	foreach($gs_subject as $subjects){
		    		$m=0;$f=0;$totalGender=0;
		    		$totalGenderm=0;$mm=0;$ff=0;
			    	$output.='<tr><td>'.$subjects.'</td>';
		    		$queryBranch=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' group by gradesec ");
		    		if($queryBranch->num_rows()>0){
		    			foreach($queryBranch->result() as $gradesecs ){
		    				$gradesec=$gradesecs->gradesec;
			    			$reportCard=$this->db->query("select sum(total) as stuTotal,gender,total from reportcard".$gradesec.$max_year." as rc cross join users as us where rc.grade='$gradesec' and rc.subject='$subjects' and rc.academicyear='$max_year' and us.id=rc.stuid and us.academicyear='$max_year' and us.isapproved='1' and us.status='Active' and us.gradesec='$gradesec' group by subject,us.id ");
							foreach($reportCard->result() as $queryDta){
			    				$totalM=($queryDta->stuTotal)/2;
			    				if($totalM <='49' and $totalM >='1'){
									if($queryDta->gender=='Male' || $queryDta->gender=='M' || $queryDta->gender=='male' || $queryDta->gender=='MALE'){
					        			$m=$m+1;
					        		}else{
					        			$f=$f+1;
					        		}
					        		$totalGender=$f+$m;
					        	}else if($totalM <='100' and $totalM >='50'){
					        		if($queryDta->gender=='Male' || $queryDta->gender=='M' || $queryDta->gender=='male' || $queryDta->gender=='MALE'){
					        			$mm=$mm+1;
					        		}else{
					        			$ff=$ff+1;
					        		}
					        		$totalGenderm=$ff+$mm;
					        	}
							}	
			    		}
			    	}
			    	$output.='<td class="text-center" style="background-color:#e3e3e3">'.$m.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$f.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGender.'</td>';

					$output.='<td class="text-center" style="background-color:#e3e3e3">'.$mm.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$ff.'</td>
					<td class="text-center" style="background-color:#e3e3e3">'.$totalGenderm.'</td>';
		    	}
	    		$output.='</table></div>';
	    	}
	    }
    	return $output;
	}
	function view_student_detail($id){
		$this->db->where(array('id'=>$id));
		$query=$this->db->get('users');
		return $query->result();
	}
	function Fetch_experience($emp_id){
		$this->db->where(array('id'=>$emp_id));
		$query=$this->db->get('users');
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row();
		$school_name=$row_name->name;
		$schooLogo=$row_name->logo;
		$website=$row_name->website;
	    $email=$row_name->email;
	    $phone=$row_name->phone;
		foreach ($query ->result() as $kevalue) {
			if($kevalue->gender=='Male' || $kevalue->gender=='male' || $kevalue->gender=='MALE' || $kevalue->gender=='m' || $kevalue->gender=='M'){
				$gender='He';
				$gender1='His';
			}else{
				$gender='She';
				$gender1='Her';
			}
			$output.='<div class ="row" id="ENS">
        	<div class="col-lg-12 col-12 text-center">
            <div class="media card-header">
              <img src="'.base_url().'/logo/'.$schooLogo.'" style="width:auto;height: 90px;" class="user-img mr-2" alt="">
              <div class="media-title ml-3">
                <h5></h5>
                <h1 class="font-weight-bold"><u><b>'.strtoupper($school_name).'</b></u></h1>
                <h3></h3>
                <small><i class="fas fa-fax"></i> '.$phone.' ||
                <i class="fas fa-globe"></i> '.$website.' || '.$email.'</small>';
              $output.='</div>
            </div>
          </div>
          <div class="col-lg-12 col-12">
			<p class="m-t-30 pull-right">Date: '.date('M/d/Y').'<br>';
			$output.='Ref.No: _________ </p></div>
			<div class="col-lg-12 col-12 text-center">
            <h3><B><u>TO WHOM IT MAY CONCERN</u></B></h3>
          </div>
        </div>';
		$output.='<ul class="list-unstyled user-progress list-unstyled-border list-unstyled-noborder">
            <li class="media"> <div class="media-body"> 
            <div class="media-title"> ';
		$output.='<p class="m-t-10 font-weight-bold font-16">This letter certifies that <b>'.$kevalue->fname.' '.$kevalue->mname.' </b> was a valued member of our team at <b>'.$school_name.'</b> as a <b>'.$kevalue->usertype.'</b> from <b>'.$kevalue->dateregister.'</b> to till '.date('M-d-Y').'. '.$gender.' was employeed with Gross Sallary of <b>'.$kevalue->gross_sallary.'</b> Br. which is taxed to the Authorized government office.</p>
		<p class="font-weight-bold font-16">During <b>'.$kevalue->fname.'’s</b> employment, '.$gender.' exhibited exceptional proficiency in all environment '.$gender.' assigned. '.$gender.' actively participated in multiple projects, demonstrating strong problem-solving abilities and meticulous attention to detail. 
		<b>'.$kevalue->fname.'’s</b> consistently met project deadlines and collaborated seamlessly with team members to ensure the delivery of high-quality works.</p>
		<p class="font-weight-bold font-16"><b>'.$kevalue->fname.'’s</b> dedication and hard work significantly contributed to the success of our projects. '.$gender1.' innovative ideas and proactive approach were instrumental in overcoming challenges and achieving project objectives. In addition to this '.$gender.' was active and self-motivated individual,who is able to perform well under pressure & who can bring to the table solid capabilities. </p>
		<p class="font-weight-bold font-16">We commend <b>'.$kevalue->fname.'</b> for '.$gender1.' outstanding performance and professionalism throughout '.$gender1.' tenure with <b>'.$school_name.'</b>. '.$gender1.' contributions have been invaluable to our team, and we have no doubt that '.$gender.' will continue to excel in '.$gender1.' future endeavors. We hope '.$gender.' will help you in any aspect of your organizations duty.</p>';
		$output.='</div> </div> </li></u>';
		$output.='<div class="row">
		<div class="col-md-12 col-12 pull-right text-center">Sincerely<br><br></div>';
		$output.='<div class="col-md-8 col-8"><p class="pull-right"> ________________________ <br>GENERAL MANAGER </p></div> ';
		$output.='<div class="col-md-4 col-4"><p> ____________ <br>SIGNATURE</p></div>
		</div>';
		$output.='
		<footer class="main-footer">
        	<div class="footer-right">
                <small class="text-muted pull-right">Powered BY :- GS Technologies || www.grandstande.com || +251984085240</small>
        	</div>
		</footer>';
		
			
		}
		return $output;
	}
	function insert_promotion_policy($data,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->insert('promotion_policy',$data);
	}
	function update_promotion_policy($data,$kepolicy_grade,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('grade',$kepolicy_grade);
		$this->db->update('promotion_policy',$data);
	}
	function insert_rank_policy($data,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->insert('rank_allowed_grades',$data);
	}
	function update_rank_policy($kepolicy_grade,$max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('grade',$kepolicy_grade);
		$this->db->delete('rank_allowed_grades');
	}

	function fetch_promotion_policy($max_year){
		$query=$this->db->query("SELECT * from promotion_policy where academicyear ='$max_year'  GROUP BY grade ORDER BY grade ASC");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
	            <table class="table table-borderedr table-md">
	                <tr>
	                    <th class="text-center">No.</th>
	                    <th class="text-center">Grade</th>
	                    <th class="text-center">Percentage</th>
	                    <th class="text-center">Failed Subjects</th>
	                    <th class="text-center">Academic Year</th>
	                    <th class="text-center">Action</th>
	                </tr>';
	        $no=1;
			foreach ($query->result() as $kvalue) {
				$grade=$kvalue->grade;
				$queryGrades=$this->db->query("SELECT * from promotion_policy where academicyear ='$max_year' and grade='$grade' GROUP BY id ORDER BY grade ASC");
				$totNums=$queryGrades->num_rows() * 2;
				$output.='<tr class="delete_promotion_policy'.$kvalue->id.'"><td rowspan="'.$totNums.'" class="text-center">'.$no.'.</td>
				<td class="text-center" rowspan="'.$totNums.'">'.$kvalue->grade.'</td>';
				foreach($queryGrades->result() as $grades){
					if($grades->average ==0){
						$pAverage='any';
					}else{
						$pAverage='below '. $grades->average;
					}
					$output.='<td class="text-center">'.$pAverage.'</td>
						<td class="text-center">'.$grades->total_failed_subject.'</td>
						
						<td class="text-center">'.$grades->academicyear.' </td>
						<td class="text-center"><button class="btn btn-default btn-sm" id="delete_promotion_policy" value="'.$grades->id.'"><span class="text-danger"><i class="fas fa-trash-alt"></i></span></button></td>';
					
					$output.='</tr>';
					$output.='<tr><td colspan="4" class="text-danger">A student will fail if the percentile is <u>'.$pAverage.'</u> and the number of failed subjects is <u>'.$grades->total_failed_subject.' in grade '.$grades->grade.'</u></td></tr>';
				}
				$no++;
			}
			$output.='</table></div>';
			$output.='<span class="text-bold">Note: A student will fail if they satisfy one of the above failure conditions.</span>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetchSchoolDivision($max_year){
		$query=$this->db->query("SELECT * from schooldivision where academicyear ='$max_year'  GROUP BY dname ORDER BY dname ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive">
	            <table class="table table-striped table-md">
	                <tr>
	                    <th>No.</th>
	                    <th>Division Name</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>';
	        $no=1;
			foreach ($query->result() as $kvalue) {
				$output.='<tr><td>'.$no.'.</td>
				<td>'.$kvalue->dname.'
				<div class="table-links">
	             <a href="#" class="deleteDivision text-danger" id="'.$kvalue->did.'">Delete</a>
	            </div> </td>
				<td>'.$kvalue->academicyear.'</td><td>'.$kvalue->datecreated.'.</td> </tr>';
				$no++;
			}
			$output.='</table></div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetch_School_Assesment($max_year,$postData=null){
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	$this->db->where('academicyear',$max_year);
     	if($searchValue != ''){
        	$searchQuery = " (sasgrade like '%".$searchValue."%' or saseval like '%".$searchValue."%' or sasname like '%".$searchValue."%' or assesment_branch like '%".$searchValue."%' or assesment_subject like '%".$searchValue."%') ";
     	}

     	## Total number of records without filtering
     	/*$this->db->group_by('sasid');*/
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('schoolassesment')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	/*$this->db->group_by('sasid');*/
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$records = $this->db->get('schoolassesment')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$records = $this->db->get('schoolassesment')->result();
        $data = array();
        $no=1;
        
     	foreach($records as $staff){
     		$saseval=$staff->saseval;
			$sasgrade=$staff->sasgrade;
			$countSasName=$this->db->query("SELECT * from schoolassesment where academicyear ='$max_year' and sasgrade='$sasgrade' group BY sasname");
			$numRowsSas=$countSasName->num_rows();
     		$dataPercentage=''; $dataOrder='';$isMandatory='';$dateEnd='';
     		$dataAssesment=$staff->sasname.'<a href="#" class="deleteAssesmentSasName text-danger" id="'.$staff->sasname.'" value="'.$staff->sasgrade.'" name="'.$staff->sasid.'">
						<i class="fas fa-trash-alt"> </i></a>';
			$dataPercentage.='<select class="form-contsrol" name="isassPercentage" id="isassPercentage">';
			if($staff->saspercent==0){
				$dataPercentage.='<option></option>';
				for($i=1;$i<=100;$i++){							
					$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" data-percentage="'.$staff->sasid.'" value="'.$i.'">'.$i.'</option>';					
				}
			}else{
				$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="" data-percentage="'.$staff->sasid.'"></option>';					
				for($i=1;$i<=100;$i++){
					if($staff->saspercent==$i){
						$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" selected="selected" data-percentage="'.$staff->sasid.'" value="'.$i.'">'.$staff->saspercent.'</option>';
					}else{
						$dataPercentage.='<option class="'.$staff->sasname.'" data-percentage="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="'.$i.'">'.$i.'</option>';
					}						
				}
			}
			$dataPercentage.='</select>';
			$dataOrder.='<select class="form-controdl" name="isassOrder" id="isassOrder">';
			for($i=1;$i<=$numRowsSas;$i++){
				if($staff->assorder==$i){
					$dataOrder.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" selected="selected" value="'.$i.'">'.$staff->assorder.'</option>';
				}else{
					$dataOrder.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="'.$i.'">'.$i.'</option>';
				}
			}
			$dataOrder.='</select>';
			$isMandatory.='<select class="form-controdl" name="isassmandatory" id="isassmandatory">';
			if($staff->ismandatory==1){
				$isMandatory.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="1" data-mandatory="'.$staff->sasid.'" selected="selected">Yes</option>';
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="0">No</option>';
			}else{
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="0" selected="selected">No</option>';
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="1">Yes</option>';
			}
			$isMandatory.='</select>';
			$grade=$staff->sasgrade;
			$sasname=$staff->sasname;
			$sasid=$staff->sasid;
			$querySasEnd=$this->db->query("SELECT * from schoolassesment where academicyear ='$max_year' and sasgrade='$grade' and sasid='$sasid' and sasname='$sasname' ORDER BY sasname ASC");
			foreach($querySasEnd->result() as $sa_row){
				$endDates=$sa_row->dateend;
				$dateEnd.='<input type="date" class="asses_endDate" name="'.$sa_row->sasgrade.'" id="asses_endDate'.$sasid.'" data_sasName="'.$sa_row->sasname.'" data-asses-id="'.$sasid.'" value="'.$sa_row->dateend.'"> ';
			}
	    	$data[] = array( 
	           "saseval"=>$staff->saseval,
	           "sasgrade"=>$staff->sasgrade,
	           "assesment_subject"=>$staff->assesment_subject,
	           "sasname"=>$dataAssesment,
	           "saspercent"=>$dataPercentage,
	           "ismandatory"=>$isMandatory,
	           "dateend"=>$dateEnd,
	           "assesment_branch"=>$staff->assesment_branch,
	           
	        ); 
     	}
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
	}
	function fetchSchoolAssesment_admin($max_year,$branch,$postData){
		$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	$this->db->where('academicyear',$max_year);
     	if($searchValue != ''){
        	$searchQuery = " (sasgrade like '%".$searchValue."%' or saseval like '%".$searchValue."%' or sasname like '%".$searchValue."%' or assesment_branch like '%".$searchValue."%' or assesment_subject like '%".$searchValue."%') ";
     	}

     	## Total number of records without filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('schoolassesment')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$records = $this->db->get('schoolassesment')->result();
     	$totalRecordwithFilter = $records[0]->allcount;


     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where('users.branch',$branch);
		$this->db->where('schoolassesment.academicyear',$max_year);
		$this->db->group_by('sasid');
		$this->db->select('schoolassesment.sasgrade,schoolassesment.saseval,schoolassesment.sasname,schoolassesment.saspercent,schoolassesment.ismandatory,schoolassesment.assorder,schoolassesment.dateend,schoolassesment.datecreated,schoolassesment.createdby,schoolassesment.academicyear');
        $this->db->from('schoolassesment');
        $this->db->join('users', 
            'users.grade = schoolassesment.sasgrade and users.branch = schoolassesment.assesment_branch');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
     		$saseval=$staff->saseval;
			$sasgrade=$staff->sasgrade;
			$countSasName=$this->db->query("SELECT * from schoolassesment where academicyear ='$max_year' and sasgrade='$sasgrade' group BY sasid");
			$numRowsSas=$countSasName->num_rows();
     		$dataPercentage=''; $dataOrder='';$isMandatory='';$dateEnd='';
     		$dataAssesment=$staff->sasname.'<a href="#" class="deleteAssesmentSasName text-danger" id="'.$staff->sasname.'" value="'.$staff->sasgrade.'" name="'.$staff->sasid.'">
						<i class="fas fa-trash-alt"> </i></a>';
			$dataPercentage.='<select class="form-contsrol" name="isassPercentage" id="isassPercentage">';
			if($staff->saspercent==0){
				$dataPercentage.='<option></option>';
				for($i=1;$i<=100;$i++){							
					$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" data-percentage="'.$staff->sasid.'" value="'.$i.'">'.$i.'</option>';					
				}
			}else{
				$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="" data-percentage="'.$staff->sasid.'"></option>';					
				for($i=1;$i<=100;$i++){
					if($staff->saspercent==$i){
						$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" selected="selected" data-percentage="'.$staff->sasid.'" value="'.$i.'">'.$staff->saspercent.'</option>';
					}else{
						$dataPercentage.='<option class="'.$staff->sasname.'" data-percentage="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="'.$i.'">'.$i.'</option>';
					}						
				}
			}
			$dataPercentage.='</select>';
			$dataOrder.='<select class="form-controdl" name="isassOrder" id="isassOrder">';
			for($i=1;$i<=$numRowsSas;$i++){
				if($staff->assorder==$i){
					$dataOrder.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" selected="selected" value="'.$i.'">'.$staff->assorder.'</option>';
				}else{
					$dataOrder.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="'.$i.'">'.$i.'</option>';
				}
			}
			$dataOrder.='</select>';
			$isMandatory.='<select class="form-controdl" name="isassmandatory" id="isassmandatory">';
			if($staff->ismandatory==1){
				$isMandatory.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="1" data-mandatory="'.$staff->sasid.'" selected="selected">Yes</option>';
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="0">No</option>';
			}else{
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="0" selected="selected">No</option>';
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="1">Yes</option>';
			}
			$isMandatory.='</select>';
			$grade=$staff->sasgrade;
			$sasname=$staff->sasname;
			$sasid=$staff->sasid;
			$querySasEnd=$this->db->query("SELECT * from schoolassesment where academicyear ='$max_year' and sasgrade='$grade' and sasid='$sasid' and sasname='$sasname' ORDER BY sasname ASC");
			foreach($querySasEnd->result() as $sa_row){
				$endDates=$sa_row->dateend;
				$dateEnd.='<input type="date" class="asses_endDate" name="'.$sa_row->sasgrade.'" id="asses_endDate'.$sasid.'" data_sasName="'.$sa_row->sasname.'" data-asses-id="'.$sasid.'" value="'.$sa_row->dateend.'"> ';
			}
	    	$data[] = array( 
	           "saseval"=>$staff->saseval,
	           "sasgrade"=>$staff->sasgrade,
	           "assesment_subject"=>$staff->assesment_subject,
	           "sasname"=>$dataAssesment,
	           "saspercent"=>$dataPercentage,
	           "ismandatory"=>$isMandatory,
	           "dateend"=>$dateEnd,
	           "assesment_branch"=>$staff->assesment_branch,
	           
	        ); 
     	}
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
		return $output;
	}
	function fetchSchoolAssesment_admin_NOBranch($max_year,$branch,$postData){
		$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	$this->db->where('academicyear',$max_year);
     	if($searchValue != ''){
        	$searchQuery = " (sasgrade like '%".$searchValue."%' or saseval like '%".$searchValue."%' or sasname like '%".$searchValue."%' or assesment_branch like '%".$searchValue."%' or assesment_subject like '%".$searchValue."%') ";
     	}

     	## Total number of records without filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('schoolassesment')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$records = $this->db->get('schoolassesment')->result();
     	$totalRecordwithFilter = $records[0]->allcount;


     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	$this->db->where('users.branch',$branch);
		$this->db->where('schoolassesment.academicyear',$max_year);
		$this->db->group_by('sasid');
		$this->db->select('schoolassesment.sasgrade,schoolassesment.saseval,schoolassesment.sasname,schoolassesment.saspercent,schoolassesment.ismandatory,schoolassesment.assorder,schoolassesment.dateend,schoolassesment.datecreated,schoolassesment.createdby,schoolassesment.academicyear');
        $this->db->from('schoolassesment');
        $this->db->join('users', 
            'users.grade = schoolassesment.sasgrade');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
     		$saseval=$staff->saseval;
			$sasgrade=$staff->sasgrade;
			$countSasName=$this->db->query("SELECT * from schoolassesment where academicyear ='$max_year' and sasgrade='$sasgrade' group BY sasid");
			$numRowsSas=$countSasName->num_rows();
     		$dataPercentage=''; $dataOrder='';$isMandatory='';$dateEnd='';
     		$dataAssesment=$staff->sasname.'<a href="#" class="deleteAssesmentSasName text-danger" id="'.$staff->sasname.'" value="'.$staff->sasgrade.'" name="'.$staff->sasid.'">
						<i class="fas fa-trash-alt"> </i></a>';
			$dataPercentage.='<select class="form-contsrol" name="isassPercentage" id="isassPercentage">';
			if($staff->saspercent==0){
				$dataPercentage.='<option></option>';
				for($i=1;$i<=100;$i++){							
					$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" data-percentage="'.$staff->sasid.'" value="'.$i.'">'.$i.'</option>';					
				}
			}else{
				$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="" data-percentage="'.$staff->sasid.'"></option>';					
				for($i=1;$i<=100;$i++){
					if($staff->saspercent==$i){
						$dataPercentage.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" selected="selected" data-percentage="'.$staff->sasid.'" value="'.$i.'">'.$staff->saspercent.'</option>';
					}else{
						$dataPercentage.='<option class="'.$staff->sasname.'" data-percentage="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="'.$i.'">'.$i.'</option>';
					}						
				}
			}
			$dataPercentage.='</select>';
			$dataOrder.='<select class="form-controdl" name="isassOrder" id="isassOrder">';
			for($i=1;$i<=$numRowsSas;$i++){
				if($staff->assorder==$i){
					$dataOrder.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" selected="selected" value="'.$i.'">'.$staff->assorder.'</option>';
				}else{
					$dataOrder.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="'.$i.'">'.$i.'</option>';
				}
			}
			$dataOrder.='</select>';
			$isMandatory.='<select class="form-controdl" name="isassmandatory" id="isassmandatory">';
			if($staff->ismandatory==1){
				$isMandatory.='<option class="'.$staff->sasname.'" name="'.$staff->sasgrade.'" value="1" data-mandatory="'.$staff->sasid.'" selected="selected">Yes</option>';
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="0">No</option>';
			}else{
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="0" selected="selected">No</option>';
				$isMandatory.='<option class="'.$staff->sasname.'" data-mandatory="'.$staff->sasid.'" name="'.$staff->sasgrade.'" value="1">Yes</option>';
			}
			$isMandatory.='</select>';
			$grade=$staff->sasgrade;
			$sasname=$staff->sasname;
			$sasid=$staff->sasid;
			$querySasEnd=$this->db->query("SELECT * from schoolassesment where academicyear ='$max_year' and sasgrade='$grade' and sasid='$sasid' and sasname='$sasname' ORDER BY sasname ASC");
			foreach($querySasEnd->result() as $sa_row){
				$endDates=$sa_row->dateend;
				$dateEnd.='<input type="date" class="asses_endDate" name="'.$sa_row->sasgrade.'" id="asses_endDate'.$sasid.'" data_sasName="'.$sa_row->sasname.'" data-asses-id="'.$sasid.'" value="'.$sa_row->dateend.'"> ';
			}
	    	$data[] = array( 
	           "saseval"=>$staff->saseval,
	           "sasgrade"=>$staff->sasgrade,
	           "assesment_subject"=>$staff->assesment_subject,
	           "sasname"=>$dataAssesment,
	           "saspercent"=>$dataPercentage,
	           "ismandatory"=>$isMandatory,
	           "dateend"=>$dateEnd,
	           "assesment_branch"=>$staff->assesment_branch,
	           
	        ); 
     	}
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
		return $output;
	}
	function fetchrcComments($max_year,$minYear){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(grade) as gradess from reportcardcomments where academicyear ='$max_year' GROUP BY commentvalue ORDER BY mingradevalue ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive">
	            <table class="table table-striped table-md">
	                <tr>
	                    <th>No.</th>
	                    <th>Grade</th>
	                    <th>Value</th>
	                    <th>Comments</th>
	                    <th>Date Created</th>
	                    <th>Academic Year</th>
	                </tr>';
	        $no=1;
			foreach ($query->result() as $kvalue) {
				$output.='<tr><td>'.$no.'.</td>
				<td>'.$kvalue->gradess.'
				<div class="table-links">
	             <a href="#" class="deleteCommentValue text-danger" name="'.$kvalue->maxgradevalue.'"  value="'.$kvalue->mingradevalue.'" id="'.$kvalue->commentvalue.'">Delete</a>
	            </div> </td>
				<td>>='.$kvalue->mingradevalue.' && < '.$kvalue->maxgradevalue.'</td><td>'.$kvalue->commentvalue.'</td> 
				<td>'.$kvalue->datecreated.'</td><td>'.$kvalue->academicyear.'.</td></tr>';
				$no++;
			}
			$output.='</table></div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
            $queryLast=$this->db->query("SELECT *, GROUP_CONCAT(grade) as gradess from reportcardcomments where academicyear ='$minYear' GROUP BY commentvalue ORDER BY mingradevalue ASC");
        	if($queryLast->num_rows()>0){
        		$output.='<span class="text-info">You can move last year comment details </span><button type="submit" id="moveLastYearRComments" class="btn btn-outline-success text-center"> Move Comments</button>';
        	}
		}
		return $output;
	}
	function fetch_rank_policy($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(grade) as gradess from rank_allowed_grades where academicyear ='$max_year' and allowed='1' GROUP BY allowed ORDER BY grade ASC");
		$output='<div class="table-responsive">
            <table class="table table-striped table-md">
                <tr>
                    <th>No.</th>
                    <th>Grade</th>
                    <th>Academic Year</th>
                </tr>';
        $no=1;
		foreach ($query->result() as $kvalue) {
			$output.='<tr><td>'.$no.'.</td>
			<td>'.$kvalue->gradess.'</td>
			<td>'.$kvalue->academicyear.' </tr>';
			$no++;
		}
		$output.='</table></div>';
		return $output;
	}
	function fetch_letter_policy($max_year,$minYear){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(grade) as gradess from letterange where academicYear ='$max_year' GROUP BY minValue,maxiValue,letterVal ORDER BY grade ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive">
	            <table class="tabler table-bordered" width="100%">
	                <tr>
	                    <th>No.</th>
	                    <th>Grade</th>
	                    <th>Range</th>
	                    <th>Value</th>
	                    <th>Academic Year</th>
	                </tr>';
	        $no=1;
			foreach ($query->result() as $kvalue) {
				$output.='<tr class="drange'.$kvalue->letterVal.'"><td>'.$no.'.</td>
				<td>'.$kvalue->gradess.'
				<div class="table-links">
	             <a href="#" class="deleteLetterPolicy text-danger" name="'.$kvalue->minValue.'" value="'.$kvalue->maxiValue.'" id="'.$kvalue->letterVal.'">Delete</a>
	            </div>

				</td>
				<td>'.$kvalue->minValue.' - '.$kvalue->maxiValue.'</td>
				<td>'.$kvalue->letterVal.'</td>
				<td>'.$kvalue->academicYear.' </tr>';
				$no++;
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No letter range found.
            </div></div>';
			$queryLast=$this->db->query("SELECT *, GROUP_CONCAT(grade) as gradess from letterange where academicYear ='$minYear' GROUP BY minValue,maxiValue,letterVal ORDER BY grade ASC");
        	if($queryLast->num_rows()>0){
        		$output.='<span class="text-info">You can move last year Letter range details </span><button type="submit" id="moveLastYearLetterRange" class="btn btn-outline-success text-center"> Move Letter Range</button>';
        	}
		}
		return $output;
	}
	function lastID($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('usertype','Student');
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$this->db->select_max('id');
		$query=$this->db->get('users');
		$output='';
		foreach ($query->result() as $alue) {
			$last_id=$alue->id;
			$queryFetch=$this->db->query("select username from users where id='$last_id' and academicyear='$max_year' ");
			if($queryFetch->num_rows()>0){
				$queryRow=$queryFetch->row();
				$lastUsername=$queryRow->username;
			}else{
				$lastUsername='';
			}
			$output.='<small><span class="text-dark">Last Student ID is '.$lastUsername.'.</span></small>';
		}
		return $output;
	}
	function fetch_grade_from_staffplaceDir($user,$max_year){
		$queryChk = $this->db->select('*')
                ->where('staff', $user)
                ->where('academicyear',$max_year)
                ->get('directorplacement');
        if($queryChk->num_rows()>0){
        	return $queryChk->result();
        }else{
        	$this->db->where(array('staff'=>$user));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->group_by('grade');
			$query=$this->db->get('staffplacement');
			return $query->result();
        }
	}
	function check_cross_grade_markprogress($branch,$gs_gradesecs,$gs_quarter,$max_year)
	{
		$output='';
		foreach($gs_gradesecs as $gs_gradesec){
			$this->db->where('Grade',$gs_gradesec);
			$this->db->where('Academic_Year',$max_year);
			$this->db->group_by('Subj_name');
			$this->db->order_by('suborder','ASC');
			$query=$this->db->get('subject');
			if($query->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				$queryGradese=$this->db->query("select gradesec from users where academicyear='$max_year' and usertype='Student' and grade='$gs_gradesec' and branch='$branch' and status='Active' and isapproved='1' and gradesec!='' group by gradesec ");
				$output.='<div style="width:100%;height:auto;page-break-inside:avoid;"><h4 class="text-center"><u>'.$school_name.' mark progress for Grade: '.$gs_gradesec.' in '.$max_year.' Academic Year</u></h4>';
				$output .='<div class="table-responsive">
		        <table class="table table-striped">
		        <tr>
	          	<th>Subject Name</th>';
	          	foreach ($queryGradese->result() as $gradeValue) {
					$gradesec_gs=$gradeValue->gradesec;
					$output.='<th>'.$gradesec_gs.'</th>';
				}
	            $output.='</tr>';
				$query2 = $this->db->query("select max(term) as quarter,termgroup from quarter where Academic_year='$max_year' and termgrade ='$gs_gradesec' group by termgroup ");
            	$row2 = $query2->row();
            	$gs_quarter=$row2->quarter;
				foreach ($query->result() as $progress_value) {
					$subject=$progress_value->Subj_name;
					$output.='<tr><td>'.$progress_value->Subj_name.'</td>';
					foreach ($queryGradese->result() as $grade_Value) {
						$gradesec=$grade_Value->gradesec;
						$queryEvaluation=$this->db->query("select * from evaluation where quarter='$gs_quarter' and academicyear='$max_year' and grade='$gs_gradesec' ");
						if($queryEvaluation->num_rows()>0){
							$queryAssesment=$this->db->query("select * from `mark".$branch.$gradesec.$gs_quarter.$max_year."` as m cross join users as ur where ur.id=m.stuid  and m.subname='$subject' and m.quarter='$gs_quarter' and m.academicyear='$max_year' and ur.academicyear='$max_year' and ur.usertype='Student' and m.mbranch='$branch' and ur.status='Active' and ur.isapproved='1' and ur.gradesec='$gradesec' and ur.branch='$branch' group by m.markname order by mid ASC");
							$output .='<td>';
							$totalAssesment=0;
							if($queryAssesment->num_rows()>0){
								foreach ($queryAssesment->result() as $assesValue) {
									$i=1;
									$assesmentName=$assesValue->markname;
									$totalAssesment=$totalAssesment + $i;
									$output .='<div class="badge badge-light"> '.$assesmentName. '</div>';
									$i++;
								}
								$output .='<div class="badge badge-info">Total Assesment '.$totalAssesment.'</div>';
							}else{
								$output .='<div class="badge badge-warning"> -</div>';
							}
							$output .='</td>';
						}else{
							$output.='<td><span class="text-danger">No Evaluation found.</span></td>';
						}
					}
					$output.='</tr>';
				}
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-check-circle"> </i> No record found.
	            </div></div>';
			}
			$output .='</table></div></div>';
		}

		return $output;
	}
	function check_grade_markprogress($branch,$gs_gradesecs,$quarter,$max_year)
	{
		$output='';
		foreach($gs_gradesecs as $gs_gradesec){
			$this->db->where('us.academicyear',$max_year);
			$this->db->where('us.branch',$branch);
			$this->db->where('us.gradesec',$gs_gradesec);
			$this->db->where('s.Academic_Year',$max_year);
			$this->db->group_by('s.Subj_name');
			$this->db->order_by('s.suborder','ASC');
			$this->db->select('us.usertype,us.username,us.fname,us.mname,s.Grade, s.Subj_name, us.grade, us.id');
			$this->db->from('users us');
			$this->db->join('subject s', 
	            'us.grade=s.Grade and us.usertype="Student" ','left');
			$query=$this->db->get();
			if($query->num_rows()>0){
				$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
				$output.='<div style="width:100%;height:auto;page-break-inside:avoid;"><h4 class="text-center"><u>'.$school_name.' mark progress for Grade: '.$gs_gradesec.' in '.$max_year.' Academic Year</u></h4>';
				$output .='<div class="table-responsive">
		        <table class="table table-bordered">
		        <tr>
		          	<th>Subject Name</th>
		          	<th>Teacher Name</th>
		            <th>Added Assesment</th> 
		            <th>Remaining Assesment</th>          
		            <th>Added mark(%)</th>
		            <th>Remaining mark(%)</th>
				</tr>';
				ob_start();
				foreach ($query->result() as $progress_value) {
					$subject=$progress_value->Subj_name;
					$grade=$progress_value->grade;
					$this->db->select('max(term) as quarter,termgroup');
					$this->db->where('Academic_year',$max_year);
					$this->db->where('termgrade',$grade);
					$this->db->group_by('termgroup');
					$query2 =$this->db->get('quarter');
					if($query2->num_rows()>0){
	                	$row2 = $query2->row();
	                	$gs_quarter=$row2->quarter;
						$staff=$progress_value->username;
						$stuid=$progress_value->id;
						$output.='<tr><td>'.$progress_value->Subj_name.'</td>';
						$this->db->where(array('staffplacement.academicyear'=>$max_year));
						$this->db->where(array('staffplacement.subject'=>$subject));
						$this->db->where(array('staffplacement.grade'=>$gs_gradesec));
						$this->db->where('users.branch',$branch);
						$this->db->group_by('users.gradesec,staffplacement.subject');
						$this->db->select('users.fname,users.mname,users.lname');
						$this->db->from('staffplacement');
						$this->db->join('users',
						'users.username = staffplacement.staff');
						$queryUsers=$this->db->get();
						if($queryUsers->num_rows()>0){
							$rowUsers = $queryUsers->row();
		                	$fName=$rowUsers->fname;
		                	$mName=$rowUsers->mname;
		                	$output.='<td>'.$fName.' '.$mName.'</td>';
						}else{
							$output.='<td>-</td>';
						}
						$this->db->select('*');
						$this->db->where('academicyear',$max_year);
						$this->db->where('grade',$grade);
						$this->db->where('quarter',$gs_quarter);
						$queryEvaluation =$this->db->get('evaluation');
						if($queryEvaluation->num_rows()>0){
							$sumPercent=0;
							foreach ($queryEvaluation->result() as $evalue)
							{
								$eid=$evalue->eid;
								$evName=$evalue->evname;
								$this->db->select('*');
								$this->db->where('academicyear',$max_year);
								$this->db->where('customgrade',$grade);
								$this->db->where('customsubject',$subject);
								$this->db->where('customasses',$evName);
								$this->db->where('customquarter',$gs_quarter);
								$queryCheckPercentage =$this->db->get('evaluationcustom');

				            	if($queryCheckPercentage->num_rows()>0){
				            		$rowPercent=$queryCheckPercentage->row();
				            		$percent=$rowPercent->custompercent;
				            	}else{
				            		$percent=$evalue->percent;
				            	}
				            	$this->db->where(array('m.evaid'=>$eid));
								$this->db->where(array('m.subname'=>$subject));
								$this->db->where(array('m.quarter'=>$gs_quarter));
								$this->db->where(array('m.academicyear'=>$max_year));
								$this->db->where(array('ur.academicyear'=>$max_year));
								$this->db->where(array('ur.usertype'=>'Student'));
								$this->db->where(array('ur.status'=>'Active'));
								$this->db->where(array('ur.isapproved'=>'1'));
								$this->db->where('ur.gradesec',$gs_gradesec);
								$this->db->where('ur.branch',$branch);
								$this->db->where('m.mbranch',$branch);
								$this->db->select('*');
								$this->db->from('mark'.$branch.$gs_gradesec.$gs_quarter.$max_year.' as m');
								$this->db->join('users as ur',
								'ur.id=m.stuid');
								$queryMark=$this->db->get();
								if($queryMark->num_rows()>0){
									$sumPercent=$percent + $sumPercent;
								}
							}
							
							$this->db->where(array('m.subname'=>$subject));
							$this->db->where(array('m.quarter'=>$gs_quarter));
							$this->db->where(array('m.academicyear'=>$max_year));
							$this->db->where(array('ur.academicyear'=>$max_year));
							$this->db->where(array('ur.usertype'=>'Student'));
							$this->db->where(array('ur.status'=>'Active'));
							$this->db->where(array('ur.isapproved'=>'1'));
							$this->db->where('ur.gradesec',$gs_gradesec);
							$this->db->where('ur.branch',$branch);
							$this->db->where('m.mbranch',$branch);
							$this->db->group_by('m.markname');
							$this->db->order_by('mid','ASC');
							$this->db->select('*');
							$this->db->from('mark'.$branch.$gs_gradesec.$gs_quarter.$max_year.' as m');
							$this->db->join('users as ur',
							'ur.id=m.stuid');
							$queryAssesment=$this->db->get();

							$output .='<td>';
							foreach ($queryAssesment->result() as $assesValue) {
								$assesmentName=$assesValue->markname;
								$output .='<div class="badge badge-info"> '.$assesmentName. '</div>';
							}
							$remainingMark=100-$sumPercent;
							$output .='</td>';
							$this->db->select('sasname');
							$this->db->where('academicyear',$max_year);
							$this->db->where('sasgrade',$grade);
							$this->db->group_by('sasname');
							$queryAss=$this->db->get('schoolassesment');
							$output .='<td>';
							if($queryAss->num_rows()>0){
								foreach ($queryAss->result() as $queryAsss) {
									$asses_name=$queryAsss->sasname;
									$this->db->where(array('m.markname'=>$asses_name));
									$this->db->where(array('m.subname'=>$subject));
									$this->db->where(array('m.quarter'=>$gs_quarter));
									$this->db->where(array('m.academicyear'=>$max_year));
									$this->db->select('m.markname');
									$queryNassesmentC = $this->db->get('mark'.$branch.$gs_gradesec.$gs_quarter.$max_year.' as m');
									if($queryNassesmentC->num_rows()<1){
										$output .='<div class="badge badge-danger"> '.$asses_name. '</div>';
									}
								}
							}else{
								$output .='-';
							}
							$output .='</td>';
							if($sumPercent<='20'){
								$output .='<td><div class="badge badge-danger">'.$sumPercent.' </div> </td>';
							}else if($sumPercent <='40'){
								$output .='<td><div class="badge badge-warning"> '.$sumPercent.' </div> </td>';
							}else if($sumPercent<='50'){
								$output .='<td><div class="badge badge-info"> '.$sumPercent.'</div> </td>';
							}else if($sumPercent<'100'){
								$output .='<td><div class="badge badge-primary"> '.$sumPercent.'</div> </td>';
							}else if($sumPercent=='100'){
								$output .='<td><div class="badge badge-success">'.$sumPercent.' </div> </td>';
							}
							if($remainingMark<='20'){
								$output .='<td><div class="badge badge-success">'.$remainingMark.' </div> </td>';
							}else if($remainingMark <='40'){
								$output .='<td><div class="badge badge-primary"> '.$remainingMark.' </div> </td>';
							}else if($remainingMark<='50'){
								$output .='<td><div class="badge badge-info"> '.$remainingMark.'</div> </td>';
							}else if($remainingMark<'100'){
								$output .='<td><div class="badge badge-warning"> '.$remainingMark.'</div> </td>';
							}else if($remainingMark=='100'){
								$output .='<td><div class="badge badge-danger">'.$remainingMark.' </div> </td>';
							}
						}else{
							$output.='<td><span class="text-danger">No Evaluation found.</span></td>';
						}
						$output.='</tr>';
					}
				}
				$output .= ob_get_clean();
			}else{
				$output .='<div class="alert alert-light alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-check-circle"> </i> No record found.
	            </div></div>';
			}
			$output .='</table></div></div>';
		}

		return $output;
	}
	function filter_evaluation4analysis($mybranch,$gradesec,$max_year,$quarter)
	{
		$this->db->select('ev.eid,ev.evname');
		$this->db->from('evaluation ev');
		$this->db->join('users u',
		'u.grade=ev.grade');
		$this->db->where('ev.academicyear',$max_year);
		$this->db->where('ev.quarter',$quarter);
		$this->db->where('u.gradesec',$gradesec);
		$this->db->where('u.branch',$mybranch);
		$this->db->where('u.academicyear',$max_year);
		$this->db->where('u.usertype','Student');
		$this->db->where('u.status','Active');
		$this->db->where('u.isapproved','1');
		$this->db->group_by('evname');
		$this->db->order_by('eid','ASC');
		$query=$this->db->get();
		$output='<select class="form-control selectric" required="required" name="branch" id="evaluationanalysis">';
		foreach ($query->result() as $evavalue) {
			$output.='<option value='.$evavalue->eid.'>'.$evavalue->evname.'</option>';	
		}
		$output.='</select>';
		return $output;
	}
	function filter_evaluation4analysis_rank($mybranch,$gradesec,$max_year,$quarter)
	{
		$output='';
		$this->db->select('ev.eid,ev.evname');
		$this->db->from('evaluation ev');
		$this->db->join('users u',
		'u.grade=ev.grade');
		$this->db->where('ev.academicyear',$max_year);
		$this->db->where('ev.quarter',$quarter);
		$this->db->where('u.gradesec',$gradesec);
		$this->db->where('u.branch',$mybranch);
		$this->db->where('u.academicyear',$max_year);
		$this->db->where('u.usertype','Student');
		$this->db->where('u.status','Active');
		$this->db->where('u.isapproved','1');
		$this->db->group_by('evname');
		$this->db->order_by('eid','ASC');
		$query=$this->db->get();
		$output.='<option> </option>';
		foreach ($query->result() as $evavalue) {
			$output.='<option value="'.$evavalue->eid.'">'.$evavalue->evname.'</option>';	
		}
		return $output;
	}
	function filter_assesment4analysis($mybranch,$gradesec,$max_year,$quarter)
	{
		$this->db->select('ev.sasid,ev.sasname');
		$this->db->from('schoolassesment ev');
		$this->db->join('users u',
		'u.grade=ev.sasgrade');
		$this->db->where('ev.academicyear',$max_year);
		$this->db->where('u.gradesec',$gradesec);
		$this->db->where('u.branch',$mybranch);
		$this->db->where('u.academicyear',$max_year);
		$this->db->where('u.usertype','Student');
		$this->db->where('u.status','Active');
		$this->db->where('u.isapproved','1');
		$this->db->group_by('sasname');
		$this->db->order_by('sasid','ASC');
		$query=$this->db->get();
		$output='';
		$output.='<option></option>';
		foreach ($query->result() as $evavalue) {
			$output.='<option value="'.$evavalue->sasname.'">'.$evavalue->sasname.'</option>';	
		}
		return $output;
	}
	function filter_evaluation4analysisGrand($mybranch,$gradesecs,$max_year,$quarter)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query=$this->db->query("select ev.eid,ev.evname from users as u right join evaluation as ev ON u.grade=ev.grade where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and ev.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' and ev.quarter='$quarter' group by ev.evname , ev.grade order by eid ASC ");
			$output='<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$output.='<div class="col-lg-12 col-12">
	                <div class="pretty p-bigger">
	                  <input type="checkbox" name="evaluationanalysis" value="'.$evavalue->eid.'" class="evaluationanalysis" id="customCheck1">
	                  <div class="state p-success">
	                    <i class="icon material-icons"></i>
	                    <label></label>'.$evavalue->evname.'
	                  </div>
	                </div> 
	            </div>';
			}
			$output.='</div>';
		}
		return $output;
	}
	function filterSubject4Analysis($mybranch,$gradesec,$max_year,$quarter)
	{
		/*$query=$this->db->query("select su.Subj_name,su.Subj_Id from subject as su cross join users as u where u.grade=su.Grade and u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and su.Academic_Year='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' group by Subj_name order by Subj_name ASC ");*/
		$output='';
		$this->db->where('users.gradesec',$gradesec);
		$this->db->where('users.branch',$mybranch);
		$this->db->where(array('subject.Academic_Year'=>$max_year));
		$this->db->order_by('subject.Subj_name','ASC');
		$this->db->group_by('subject.Subj_name');
		$this->db->select('*');
		$this->db->from('subject');
		$this->db->join('users',
		'users.grade = subject.Grade');
		$query=$this->db->get();
		$output.='<select class="form-control selectric" required="required" name="branch" id="subevaluationanalysis">';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
		}
		$output.='</select>';
		return $output;
	}
	function filterSubject4TeAnalysis($mybranch,$gradesec,$max_year,$user)
	{
		$this->db->where('grade',$gradesec);
	    $this->db->where('staff',$user);
	    $this->db->where(array('academicyear'=>$max_year));
	    $this->db->order_by('grade','ASC');
	    $this->db->group_by('subject');
	    $query=$this->db->get('staffplacement');
	    $output='<select class="form-control selectric" required="required" name="branch" id="subevaluationanalysis">';
		foreach ($query->result() as $evavalue) {
			$output.='<option value='.$evavalue->subject.'>'.$evavalue->subject.'</option>';	
		}
		$output.='</select>';
		return $output;

		/*$query=$this->db->query("select su.Subj_name,su.Subj_Id from subject as su cross join users as u where u.grade=su.Grade and u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and su.Academic_Year='$max_year' and u.gradesec='$gradesec' and u.branch='$mybranch' group by Subj_name order by Subj_name ASC ");
		$output='<select class="form-control selectric" required="required" name="branch" id="subevaluationanalysis">';
		foreach ($query->result() as $evavalue) {
			$output.='<option value='.$evavalue->Subj_Id.'>'.$evavalue->Subj_name.'</option>';	
		}
		$output.='</select>';
		return $output;*/
	}
	function fetchCustomAnalysis($branch,$gradesecs,$quarter,$evaluations,$subjectGsanalysis,$max_year,$outof_range,$countSubject,$countAssesment)
	{
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;

        $queryac = $this->db->query("select max(year_name) as ay from academicyear");
		$rowac = $queryac->row();
		$yearname=$rowac->ay;    		
		foreach($gradesecs as $gradesec){
    		$output.='<div class="text-center"><h4><u><b> '.$school_name.' </b></u> <u><b> <br></h4><h6> '.$quarter.' Result Analysis for <u><b>'.$gradesec.' in '.$yearname.'E.C  Academic Year</b></u></h6></div>';
			$output .=' <div class="table-responsive" width="100%" height="100%">
			<table id="ENS" class="tabler table-borderedr" width="100%" cellspacing="5" cellpadding="5">
	        <tr>
	        <th rowspan="3">No.</span></th>
	        <th rowspan="3">Student Name</th>
	        <th rowspan="3">Gender</th>';
          	$no=1;
          	$rowSubject=$countSubject * 1;
          	$output.='<th colspan="'.$rowSubject.'" class="text-center">Subject</th></tr><tr>';
          	foreach($subjectGsanalysis as $subject){
          		$queryHTeacher=$this->db->query("SELECT * from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and st.grade='$gradesec' and us.branch='$branch' and subject='$subject'  GROUP BY st.staff ORDER BY st.staff ASC");
          		if($queryHTeacher->num_rows()>0){
					$tName=$queryHTeacher->row_array();
					$fName=$tName['fname'];
					$mName=$tName['mname'];
					$output.='<th class="text-center" colspan="'.$countAssesment.'"> '.$subject.'<br> <small>('.$fName.' '.$mName.')</small></th>';
				}else{
					$output.='<th class="text-center" colspan="'.$countAssesment.'">'.$subject.'<small> (____)</small></th>';
				}
	        }
	        $output.='</tr><tr>';
	        for($i=1;$i<=$countSubject;$i++){
	          	$output.='<td class="text-center">'.$evaluations.'</td>';
	        }
			$output.='</tr>';
			$queryStudent=$this->db->query("select u.id,u.fname,u.mname,u.lname, u.grade, u.gender from users as u where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and u.branch='$branch' and u.gradesec='$gradesec' group by u.id order by u.fname,u.mname,u.lname ASC");
			foreach($subjectGsanalysis as $subject){
				/*foreach($evaluations as $evaluation){*/
					$queryMarkOutof = $this->db->query("select sum(value) as total, outof,value, stuid, subname, markname from `mark".$branch.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and markname='$evaluations' and value <='$outof_range' group by stuid order by value DESC");

					foreach ($queryMarkOutof->result() as $keyvalue) {
						$result1=$keyvalue->value;
						$stuId=$keyvalue->stuid;
						$subjectName=$keyvalue->subname;
						$markName=$keyvalue->markname;
						$outoff=$keyvalue->outof;
						$queryStudent=$this->db->query("select u.id,u.fname,u.mname,u.lname, u.grade, u.gender from users as u where u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and u.branch='$branch' and u.gradesec='$gradesec' and id='$stuId' group by u.id order by u.fname,u.mname,u.lname ASC");
						if($queryStudent->num_rows()>0){
							foreach ($queryStudent->result() as $studentvalue) {
								$grade=$studentvalue->grade;
								$stuid=$studentvalue->id;
								$output.='<td>'.$no.'</td>';
								$allSubTotal=0;
								$output.='<td>'.$studentvalue->fname.' '.$studentvalue->mname. ' '.$studentvalue->lname. '</td>';
								$output.='<td>'.$studentvalue->gender.'</td>';
								foreach($subjectGsanalysis as $subject){
									/*foreach($evaluations as $evaluation){*/
										if($subject==$subjectName){
											if($markName==$evaluations){
												$output.='<td class="text-center">'.number_format((float)$keyvalue->value,2,'.','').'/'.$outoff.'</td> ';
											}else{
												$output.='<td class="text-center">-</td>';
											}
										}else{
											$output.='<td class="text-center">-</td>';
										}
									/*}*/
								}
		    					$output.='</tr>';
		    					$no++;
		    				
		    				}
	    				}else{
							$output.='<td>-</td>';
						}
					}
				
			}
				$output.='</table></div>';
				
				/*$querRemark=$this->db->query("SELECT *, GROUP_CONCAT(achievergrade) as gradess from achievername GROUP BY minvalue,maxivalue ORDER BY id ASC");
				if($querRemark->num_rows()>0){
					$output .='<br>
					<div class="row">
					<div class="col-lg-3 col-2"></div>
					<div class="col-lg-6 col-8">
					<div class="table-responsive">
        			<table class="tabler table-bordered" cellspacing="5" cellpadding="5">
			        <tr>
			        <th class="text-center">Grade</th><th class="text-center">Achiever Name</th><th class="text-center">Range</th> </tr>';
			        
			        $output.='';
					
						foreach($querRemark->result() as $achName){
							$output.='<tr><th class="text-center">'.$achName->gradess.'</th>';
							$output.='<th class="text-center">'.$achName->achievername.'</th>';
							$output.='<th class="text-center">'.$achName->minvalue.'-'.$achName->maxivalue.'</th></tr>';
						}
					
					$output.='';
					$output.='</table></div></div><div class="col-lg-3 col-2"></div></div>';
				}*/
			
		}
		return $output;
	}
	function fetchanalysis($branch,$gradesecs,$quarter,$evaluations,$max_year,$subjectGsanalysis,$countSubject)
	{
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $queryac = $this->db->query("select max(year_name) as ay from academicyear");
		$rowac = $queryac->row();
		$yearname=$rowac->ay;
		foreach($gradesecs as $gradesec){
			$querySubject=$this->db->query("select u.username,u.fname,u.lname, u.mname,s.Grade ,s.Subj_name, u.grade,u.id from users as u cross JOIN subject as s where s.Grade=u.grade and u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and u.branch='$branch' and s.Academic_Year='$max_year' and u.gradesec='$gradesec' group by s.Subj_name order by s.Subj_name ASC");
			if($querySubject->num_rows()>0){
				$rowGrade=$querySubject->row();
				$grade=$rowGrade->grade;
			}else{
				$grade='___';
			}
			
		}
		$output.='<div class="text-center"><h4><u><b> '.$school_name.' '.$yearname.'E.C  Academic Year</b></u> <u><b> <br></h4><h6>'.$quarter.'  Result Analysis for Grade <u><b>'.$grade.'</b></u></h6></div>';
		
		$output .=' <div class="table-responsive" width="100%" height="100%">
		<table id="ENS" class="tabler table-borderedr table-header-rotated" width="100%" cellspacing="5" cellpadding="5">
        <tr>
        <th class="rotate"><div><span>No.</span></div></th>
        <th class="rotate"><div><span>Student Name</span></div></th>
        <th class="rotate"><div><span>Grade</span></div></th>
        <th class="rotate"><div><span>Gender</span></div></th>';
      	$no=1;
		foreach ($subjectGsanalysis as $subvalue) {
			$output.='<th class="rotate"><div><span>'.$subvalue.'</span></div></th>';
		}
		$finalresult=0;
		$output.='<th class="rotate"><div><span>Min Value</span></div></th>
		<th class="rotate"><div><span>Total</span></div></th>
		<th class="rotate"><div><span>Average</span></div></th>
		<th class="rotate"><div><span>Performance</span></div></th></tr>';
		foreach($gradesecs as $gradesec){
			$querySubject=$this->db->query("select u.username,u.fname,u.lname, u.mname,s.Grade ,u.gender,s.Subj_name, u.grade,u.id from users as u cross JOIN subject as s where s.Grade=u.grade and u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and u.branch='$branch' and s.Academic_Year='$max_year' and u.gradesec='$gradesec' group by s.Subj_name order by s.Subj_name ASC");
			if($querySubject->num_rows()>0){
				$totalmark=0;
				$queryStudent=$this->db->query("select * from users where academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and branch='$branch' and gradesec='$gradesec' group by id  order by fname,mname,lname ASC");
				foreach ($queryStudent->result() as $studentvalue) {
					$grade=$studentvalue->grade;
					$stuid=$studentvalue->id;
					$output.='<tr><td>'.$no.'</td>';
					$allSubTotal=0;
					$output.='<td>'.$studentvalue->fname.' '.$studentvalue->mname. ' '.$studentvalue->lname. '</td>';
					$output.='<td>'.$gradesec. '</td>';
					$output.='<td>'.$studentvalue->gender. '</td>';
					if($querySubject->num_rows()>0){
						$minvalueOfMe=0;
						$minvalueOfMe2=0;
						foreach ($subjectGsanalysis as $subvalue) {
							$subject=$subvalue;
							$lastvalMe=0;
							foreach($evaluations as $evaluation){
								$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$branch.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname");
								if($queryMarkOutof->num_rows()>0){
									$totaloutof=0;
									foreach ($queryMarkOutof->result() as $keyvalue) {
				    					$totaloutof=$keyvalue->outof + $totaloutof;
									}
									$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and eid='$evaluation' and academicyear='$max_year' and grade='$grade' ");
									if($queryEvaluation->num_rows()>0){
										foreach ($queryEvaluation->result() as $evavalue) {
											$evName=$evavalue->evname;
											$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
							            	if($queryCheckPercentage->num_rows()>0){
							            		$rowPercent=$queryCheckPercentage->row();
							            		$percent=$rowPercent->custompercent;
							            	}else{
							            		$percent= $evavalue->percent;
							            	}										
											$queryMark = $this->db->query("select sum(value) as total,sum(outof) as outof from `mark".$branch.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname");
											if($queryMark->num_rows()>0){

												foreach ($queryMark->result() as $mvalue) {
													$totalmark=$mvalue->total;
													$finalresult=($percent*$totalmark)/$totaloutof;
													/*$finalValue=number_format((float)$finalresult,2,'.','');*/
													$lastvalMe=$lastvalMe + $finalresult;
												}
											}
										}
									}
								}
								$minvalueOfMe=$lastvalMe;

							}
							if($minvalueOfMe2==0){
								$minvalueOfMe2=$lastvalMe;
							}		
							else if($minvalueOfMe2 <= $lastvalMe && $minvalueOfMe2 !=0){
								$minvalueOfMe2=$minvalueOfMe2;
							}else{
								$minvalueOfMe2=$lastvalMe;
							}
							if($totalmark>0){	
								$output.='<td class="text-center">'.number_format((float)$lastvalMe,2,'.','').'';
								$querRemark=$this->db->query("select achievername from achievername where $lastvalMe between minvalue and maxivalue and achievergrade='$grade'");
								$allSubTotal= $allSubTotal +$lastvalMe;
		    					if($querRemark->num_rows()>0){
		    						foreach($querRemark->result() as $achName){
		    							$output.='<span class="text-center text-info">'.$achName->achievername.'</span>';
		    						}
		    					}
		    					$output.='</td>';
							}else{
								$output.='<td class="text-center">-</td>';
							    $finalresult=0;
							}
						}
					}
					
					if($allSubTotal>0){
						$averageNUm=number_format((float)$allSubTotal/$countSubject,2,'.','');
						$output.='<td class="text-center">'.number_format((float)$minvalueOfMe2 ,2,'.','').'</td>';
						$output.='<td class="text-center">'.number_format((float)$allSubTotal,2,'.','').'</td>';
						$output.='<td class="text-center">'.$averageNUm.'</td>';
						$output.='<td class="text-center">';
						$querRemarkTotal=$this->db->query("select achievername from achievername where $averageNUm between minvalue and maxivalue and achievergrade='$grade'");
						$allSubTotal= $allSubTotal +$lastvalMe;
						if($querRemarkTotal->num_rows()>0){
							foreach($querRemarkTotal->result() as $achName){
								$output.='<span class="text-center text-info">'.$achName->achievername.'</span>';
							}
						}
						$output.='</td>';
					}else{
						$output.='<td class="text-center">-</td>';
						$output.='<td class="text-center">-</td>';
						$output.='<td class="text-center">-</td>';
						$output.='<td class="text-center">-</td>';
					}
					
					$output.='</tr>';
					$no++;
				}
				
			}
		}
		$output.='</table></div>';
		$output.='<div class="text-center">Home Room Teachers Name:_____________</div>';
		return $output;
	}
	function fetchanalysis_filter($branch,$gradesecs,$quarter,$evaluations,$max_year,$subjectGsanalysis,$countSubject,$achiverName)
	{
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $queryac = $this->db->query("select max(year_name) as ay from academicyear");
		$rowac = $queryac->row();
		$yearname=$rowac->ay;
		foreach($gradesecs as $gradesec){
			$querySubject=$this->db->query("select u.username,u.fname,u.lname, u.mname,s.Grade ,s.Subj_name, u.grade,u.id from users as u cross JOIN subject as s where s.Grade=u.grade and u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and u.branch='$branch' and s.Academic_Year='$max_year' and u.gradesec='$gradesec' group by s.Subj_name order by s.Subj_name ASC");
			if($querySubject->num_rows()>0){
				$rowGrade=$querySubject->row();
				$grade=$rowGrade->grade;
			}else{
				$grade='___';
			}
		}
		$finalresult=0;
		foreach($gradesecs as $gradesec){	
			$this->db->where('grade',$gradesec);
        	$this->db->delete('reportvaluestatistics2');		
			$totalmark=0;
			$queryStudent=$this->db->query("select * from users where academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and branch='$branch' and gradesec='$gradesec' group by id  order by fname,mname,lname ASC");
			foreach ($queryStudent->result() as $studentvalue) {
				$grade=$studentvalue->grade;
				$stuid=$studentvalue->id;
				foreach ($subjectGsanalysis as $subvalue) {
					$subject=$subvalue;
					$lastvalMe=0;
					foreach($evaluations as $evaluation){
						$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$branch.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname order by mid ASC");
						if($queryMarkOutof->num_rows()>0){
							$totaloutof=0;
							foreach ($queryMarkOutof->result() as $keyvalue) {
		    					$totaloutof=$keyvalue->outof +$totaloutof;
							}
							$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and eid='$evaluation' and academicyear='$max_year' and grade='$grade' ");
							if($queryEvaluation->num_rows()>0){
								foreach ($queryEvaluation->result() as $evavalue) {
									$evName=$evavalue->evname;
									$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
					            	if($queryCheckPercentage->num_rows()>0){
					            		$rowPercent=$queryCheckPercentage->row();
					            		$percent=$rowPercent->custompercent;
					            	}else{
					            		$percent= $evavalue->percent;
					            	}										
									$queryMark = $this->db->query("select sum(value) as total,sum(outof) as outof from `mark".$branch.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by stuid order by mid ASC");
									if($queryMark->num_rows()>0){
										foreach ($queryMark->result() as $mvalue) {
											$totalmark=$mvalue->total;
											$finalresult=($percent*$totalmark)/$totaloutof;
											$finalValue=number_format((float)$finalresult,2,'.','');
											
										}
										$lastvalMe=$lastvalMe + $finalValue;
									}
								}
							}
						}
					}
					if($totalmark>0){
						$querRemark=$this->db->query("select * from achievername where $lastvalMe between minvalue and maxivalue and achievergrade='$grade' and achievername='$achiverName' ");
						foreach($querRemark->result() as $staName){
						    $less_than=$staName->maxivalue;
						    $greater_than=$staName->minvalue;
			                if($lastvalMe <=$less_than and $lastvalMe >=$greater_than)
			                {
			                	$data[]=array(
						        	'stuid'=>$stuid,
						        	'grade'=>$gradesec,
						        	'quarter'=>$quarter,
						        	'total'=>$lastvalMe,
						        	'subject'=>$subject,
						        	'shbranch'=>$staName->achievername,
						        	'academicyear'=>$max_year
						        );
				        	}
	                	}	
					}else{
					    $finalresult=0;
					}
				}
			}
		}
		if(!empty($data)){
			$queryInsert=$this->db->insert_batch('reportvaluestatistics2',$data);
		}
				
		$output.='<div class="text-center"><h4><u><b> '.$school_name.' '.$yearname.'E.C  Academic Year</b></u> <u><b> <br></h4><h6>'.$quarter.'  Result Analysis for Grade <u><b>'.$grade.'</b></u></h6></div>';
		
		$output.='<div class="table-responsive" width="100%" height="100%">
		<table id="ENS" class="tabler table-borderedr table-header-rotated" width="100%" cellspacing="5" cellpadding="5">
        <tr>
        <th class="rotate"><div><span>No.</span></div></th>
        <th class="rotate"><div><span>Student Name</span></div></th>
        <th class="rotate"><div><span>Grade</span></div></th>
        <th class="rotate"><div><span>Gender</span></div></th>';
      	$no=1;
		foreach ($subjectGsanalysis as $subvalue) {
			$output.='<th class="rotate"><div><span>'.$subvalue.'</span></div></th>';
		}
		
		$output.='<th class="rotate"><div><span>Min Value</span></div></th>
		<th class="rotate"><div><span>Total</span></div></th>
		<th class="rotate"><div><span>Average</span></div></th>
		<th class="rotate"><div><span>Performance</span></div></th></tr>';
		foreach($gradesecs as $gradesec){
			$queryStudent=$this->db->query("select u.grade,u.id, u.fname,u.mname,u.lname ,u.gradesec,u.gender from users as u cross join reportvaluestatistics2 as r2 ON r2.stuid=u.id where r2.academicyear='$max_year' and r2.quarter='$quarter' and u.academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and branch='$branch' and gradesec='$gradesec' group by u.id  order by fname,mname,lname ASC");
			if($queryStudent->num_rows()>0){
				foreach($queryStudent->result() as $rowName){
					$grade=$rowName->grade;
					$sumTotal=0;
					$stuid=$rowName->id;
					$output.='<tr><td>'.$no.'</td>';
					$output.='<td>'.$rowName->fname.' '.$rowName->mname. ' '.$rowName->lname. '</td>';
					$output.='<td>'.$gradesec. '</td>';
					$output.='<td>'.$rowName->gender. '</td>';
					$minvalueOfMe=0;
					$minvalueOfMe2=0;$lastvalMe=0;
					foreach ($subjectGsanalysis as $subvalue) {
						$subject=$subvalue;
						$queryFetchStudent=$this->db->query(" select total, subject from reportvaluestatistics2 where academicyear='$max_year' and subject='$subject' and grade='$gradesec' and stuid='$stuid' and quarter='$quarter' ");
						if($queryFetchStudent->num_rows()>0){
							foreach($queryFetchStudent->result() as $resNum){
								$total=$resNum->total;
								$querAchiver=$this->db->query("select * from achievername where $total between minvalue and maxivalue and achievergrade='$grade' ");
								if($querAchiver->num_rows()>0){
									$rowAchiever=$querAchiver->row();
									$avName=$rowAchiever->achievername;
									$output.='<td class="text-center"><span class="text-info">'.$resNum->total. '<small>('.$avName.')</small)</span></td>';
								}else{
									$output.='<td class="text-center"><span class="text-info">-</span></td>';
								}
								$sumTotal=$sumTotal + $total;
								$lastvalMe=$total;
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
						$minvalueOfMe=$lastvalMe;
						if($minvalueOfMe2==0){
							$minvalueOfMe2=$lastvalMe;
						}		
						else if($minvalueOfMe2 <= $lastvalMe && $minvalueOfMe2 !=0){
							$minvalueOfMe2=$minvalueOfMe2;
						}else{
							$minvalueOfMe2=$lastvalMe;
						}
					}
					$averageU=number_format((float)$sumTotal/$countSubject,2,'.','');
					$output.='<td class="text-center">'.$minvalueOfMe2.'</td>';
					$output.='<td class="text-center">'.$sumTotal.'</td>';
					$output.='<td class="text-center">'.$averageU.'</td>';
					$querAchiver=$this->db->query("select * from achievername where $averageU between minvalue and maxivalue and achievergrade='$grade' ");
					if($querAchiver->num_rows()>0){
						$rowAchiever=$querAchiver->row();
						$avName=$rowAchiever->achievername;
						$output.='<td class="text-center"><span class="text-info">'.$avName.'</span></td>';
					}else{
						$output.='<td class="text-center"><span class="text-info">-</span></td>';
					}
					$no++;
				}
			}
		}
		$output.='</table></div>';
		$output.='<div class="text-center">Home Room Teachers Name:_____________</div>';
		return $output;
	}
	function fetchanalysis_filter_All($branch,$gradesecs,$quarter,$evaluations,$max_year,$subjectGsanalysis,$countSubject,$achiverName)
	{
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $queryac = $this->db->query("select max(year_name) as ay from academicyear");
		$rowac = $queryac->row();
		$yearname=$rowac->ay;
		foreach($gradesecs as $gradesec){
			$querySubject=$this->db->query("select u.username,u.fname,u.lname, u.mname,s.Grade ,s.Subj_name, u.grade,u.id from users as u cross JOIN subject as s where s.Grade=u.grade and u.academicyear='$max_year' and u.status='Active' and u.isapproved='1' and u.usertype='Student' and u.branch='$branch' and s.Academic_Year='$max_year' and u.gradesec='$gradesec' group by s.Subj_name order by s.Subj_name ASC");
			if($querySubject->num_rows()>0){
				$rowGrade=$querySubject->row();
				$grade=$rowGrade->grade;
			}else{
				$grade='___';
			}
		}
		$finalresult=0;
		foreach($gradesecs as $gradesec){	
			$this->db->where('grade',$gradesec);
        	$this->db->delete('reportvaluestatistics2');		
			$totalmark=0;
			$queryStudent=$this->db->query("select * from users where academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and branch='$branch' and gradesec='$gradesec' group by id  order by fname ASC");
			foreach ($queryStudent->result() as $studentvalue) {
				$grade=$studentvalue->grade;
				$stuid=$studentvalue->id;
				foreach ($subjectGsanalysis as $subvalue) {
					$subject=$subvalue;
					$lastvalMe=0;
					foreach($evaluations as $evaluation){
						$queryMarkOutof = $this->db->query("select sum(value) as total,outof from `mark".$branch.$gradesec.$quarter.$max_year."` where subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by markname order by mid ASC");
						if($queryMarkOutof->num_rows()>0){
							$totaloutof=0;
							foreach ($queryMarkOutof->result() as $keyvalue) {
		    					$totaloutof=$keyvalue->outof + $totaloutof;
							}
							$queryEvaluation=$this->db->query("select * from evaluation where quarter='$quarter' and eid='$evaluation' and academicyear='$max_year' and grade='$grade' ");
							if($queryEvaluation->num_rows()>0){
								foreach ($queryEvaluation->result() as $evavalue) {
									$evName=$evavalue->evname;
									$queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$subject' and customasses='$evName' and customquarter='$quarter' ");
					            	if($queryCheckPercentage->num_rows()>0){
					            		$rowPercent=$queryCheckPercentage->row();
					            		$percent=$rowPercent->custompercent;
					            	}else{
					            		$percent= $evavalue->percent;
					            	}										
									$queryMark = $this->db->query("select sum(value) as total,sum(outof) as outof from `mark".$branch.$gradesec.$quarter.$max_year."` where stuid='$stuid' and subname='$subject' and quarter='$quarter' and evaid='$evaluation' group by stuid order by mid ASC");
									if($queryMark->num_rows()>0){
										foreach ($queryMark->result() as $mvalue) {
											$totalmark=$mvalue->total;
											$finalresult=($percent*$totalmark)/$totaloutof;
											$finalValue=number_format((float)$finalresult,2,'.','');
											$lastvalMe=$lastvalMe + $finalValue;
										}
									}
								}
							}
						}
					}
					if($totalmark>0){
						$querRemark=$this->db->query("select * from achievername where $lastvalMe between minvalue and maxivalue and achievergrade='$grade' and achievername='$achiverName' ");
						foreach($querRemark->result() as $staName){
						    $less_than=$staName->maxivalue;
						    $greater_than=$staName->minvalue;
			                if($lastvalMe <=$less_than and $lastvalMe >=$greater_than)
			                {
			                	$data[]=array(
						        	'stuid'=>$stuid,
						        	'grade'=>$gradesec,
						        	'quarter'=>$quarter,
						        	'total'=>$lastvalMe,
						        	'subject'=>$subject,
						        	'shbranch'=>$staName->achievername,
						        	'academicyear'=>$max_year
						        );
				        	}
	                	}	
					}else{
					    $finalresult=0;
					}
				}
			}
		}
		if(!empty($data)){
			$queryInsert=$this->db->insert_batch('reportvaluestatistics2',$data);
		}
		foreach($gradesecs as $gradesec){
			$queryStudent=$this->db->query("select u.grade,u.id, u.fname,u.mname,u.lname ,u.gradesec,u.gender from users as u cross join reportvaluestatistics2 as r2 ON r2.stuid=u.id where r2.academicyear='$max_year' and r2.quarter='$quarter' and u.academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and branch='$branch' and gradesec='$gradesec' group by u.id  order by fname,mname,lname ASC");
			if($queryStudent->num_rows()>0){
				foreach($queryStudent->result() as $rowName){
					$grade=$rowName->grade;
					$stuid=$rowName->id;
					$counStudent=$this->db->query(" select total, subject from reportvaluestatistics2 where academicyear='$max_year' and grade='$gradesec' and stuid='$stuid' and quarter='$quarter' group by subject ");
					$totalSubject=$counStudent->num_rows();
					if($totalSubject == $countSubject){

					}else{
						$this->db->where('stuid',$stuid);
						$this->db->where('academicyear',$max_year);
						$this->db->where('quarter',$quarter);
						$this->db->delete('reportvaluestatistics2');
					}
				}
			}
		}	
		$output.='<div class="text-center"><h4><u><b> '.$school_name.' '.$yearname.'E.C  Academic Year</b></u> <u><b> <br></h4><h6>'.$quarter.'  Result Analysis for Grade <u><b>'.$grade.'</b></u></h6></div>';
		
		$output.='<div class="table-responsive" width="100%" height="100%">
		<table id="ENS" class="tabler table-borderedr table-header-rotated" width="100%" cellspacing="5" cellpadding="5">
        <tr>
        <th class="rotate"><div><span>No.</span></div></th>
        <th class="rotate"><div><span>Student Name</span></div></th>
        <th class="rotate"><div><span>Grade</span></div></th>
        <th class="rotate"><div><span>Gender</span></div></th>';
      	$no=1;
		foreach ($subjectGsanalysis as $subvalue) {
			$output.='<th class="rotate"><div><span>'.$subvalue.'</span></div></th>';
		}
		$output.='<th class="rotate"><div><span>Min Value</span></div></th>
		<th class="rotate"><div><span>Total</span></div></th>
		<th class="rotate"><div><span>Average</span></div></th>
		<th class="rotate"><div><span>Performance</span></div></th></tr>';
		foreach($gradesecs as $gradesec){
			$queryStudent=$this->db->query("select u.grade,u.id, u.fname,u.mname,u.lname ,u.gradesec,u.gender from users as u cross join reportvaluestatistics2 as r2 ON r2.stuid=u.id where r2.academicyear='$max_year' and r2.quarter='$quarter' and u.academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and branch='$branch' and gradesec='$gradesec' group by u.id  order by fname,mname,lname ASC");
			if($queryStudent->num_rows()>0){
				foreach($queryStudent->result() as $rowName){
					$grade=$rowName->grade;
					$stuid=$rowName->id;
					$sumTotal=0;
					$output.='<tr><td>'.$no.'</td>';
					$output.='<td>'.$rowName->fname.' '.$rowName->mname. ' '.$rowName->lname. '</td>';
					$output.='<td>'.$gradesec. '</td>';
					$output.='<td>'.$rowName->gender. '</td>';
					$minvalueOfMe=0;
					$minvalueOfMe2=0;$lastvalMe=0;
					foreach ($subjectGsanalysis as $subvalue) {
						$subject=$subvalue;
						$queryFetchStudent=$this->db->query(" select total, subject from reportvaluestatistics2 where academicyear='$max_year' and subject='$subject' and grade='$gradesec' and stuid='$stuid' and quarter='$quarter' ");
						if($queryFetchStudent->num_rows()>0){
							foreach($queryFetchStudent->result() as $resNum){
								$total=$resNum->total;
								$querAchiver=$this->db->query("select * from achievername where $total between minvalue and maxivalue and achievergrade='$grade' ");
								if($querAchiver->num_rows()>0){
									$rowAchiever=$querAchiver->row();
									$avName=$rowAchiever->achievername;
									$output.='<td class="text-center">'.$resNum->total.' <span class="text-info"><small>('.$avName.')</small)</span></td>';
								}else{
									$output.='<td class="text-center"><span class="text-info">-</span></td>';
								}
								$sumTotal=$sumTotal + $total;
								$lastvalMe=$total;
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
						$minvalueOfMe=$lastvalMe;
						if($minvalueOfMe2==0){
							$minvalueOfMe2=$lastvalMe;
						}		
						else if($minvalueOfMe2 <= $lastvalMe && $minvalueOfMe2 !=0){
							$minvalueOfMe2=$minvalueOfMe2;
						}else{
							$minvalueOfMe2=$lastvalMe;
						}
					}
					$averageU=number_format((float)$sumTotal/$countSubject,2,'.','');
					$output.='<td class="text-center">'.$minvalueOfMe2.'</td>';
					$output.='<td class="text-center">'.$sumTotal.'</td>';
					$output.='<td class="text-center">'.$averageU.'</td>';
					$querAchiver=$this->db->query("select * from achievername where $averageU between minvalue and maxivalue and achievergrade='$grade' ");
					if($querAchiver->num_rows()>0){
						$rowAchiever=$querAchiver->row();
						$avName=$rowAchiever->achievername;
						$output.='<td class="text-center"><span class="text-info">'.$avName.'</span></td>';
					}else{
						$output.='<td class="text-center"><span class="text-info">-</span></td>';
					}
					$no++;
				}
			}
		}
		$output.='</table></div>';
		$output.='<div class="text-center">Home Room Teachers Name:_____________</div>';
		return $output;
	}
	function fetchSubjectMarkAnalysisGraph($branch,$gradesec,$quarter,$SubName,$max_year){
		$queryMark=$this->db->query("select sum(m.value) as total, m.value,us.fname,us.mname,us.lname,us.username from users as us cross join `mark".$branch.$gradesec.$quarter.$max_year."` as m where us.gradesec='$gradesec' and m.quarter='$quarter' and us.branch='$branch' and us.academicyear='$max_year' and m.academicyear='$max_year' and m.subname='$SubName' and us.id=m.stuid and us.usertype='Student' group by m.stuid order by total DESC limit 10 ");
		return $queryMark->result_array();
	}
	function fetchSubjectMarkAnalysisGraphSup($max_year){
		$queryMark=$this->db->query("select * from users where academicyear='$max_year' and usertype='Student' and isapproved='1' and status='Active' group by grade ");
		return $queryMark->result_array();
	}
	function fetchSubjectMarkAnalysisGraphAdmin($mybranch,$max_year){
		$queryMark=$this->db->query("select * from users where academicyear='$max_year' and usertype='Student' and isapproved='1' and status='Active' and branch='$mybranch' group by grade ");
		return $queryMark->result_array();
	}
	function fetchStaffMarkAnalysisGraphSup($max_year){
		$queryTotal=$this->db->query("SELECT *, CONCAT('usertype') as Yearlevel,COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' then 1 else 0 end) AS femalecount FROM users where academicyear='$max_year' and usertype!='Student' and isapproved='1' and status='Active' GROUP BY usertype ORDER BY fname,mname,lname ASC");
		return $queryTotal->result_array();
	}
	function fetchStaffMarkAnalysisGraphSupAdmin($mybranch,$max_year){
		$queryTotal=$this->db->query("SELECT *, CONCAT('usertype') as Yearlevel,COUNT(*) AS studentcount, sum(case when Gender = 'Male' or Gender='M' or Gender='male' then 1 else 0 end) AS malecount, sum(case when Gender = 'Female' or Gender='F' or Gender='female' then 1 else 0 end) AS femalecount FROM users where academicyear='$max_year' and branch='$mybranch' and usertype!='Student' and isapproved='1' and status='Active' GROUP BY usertype ORDER BY fname,mname,lname ASC");
		return $queryTotal->result_array();
	}
	/*function fetchTeachersPerformance($quarter,$max_year){
		$queryUser=$this->db->query("select username,branch from users where academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Teacher' group by id order by fname,mname,lname ASC ");
		if($queryUser->num_rows()>0){
			foreach($queryUser->result() as $userGrade){
				$userName=$userGrade->username;
				$branch=$userGrade->branch;
				$arraySp = array('academicyear'=>$max_year,'staff'=>$userName);
		    	$this->db->where($arraySp);
		    	$this->db->group_by('subject');  
		    	$queryPlacement = $this->db->get('staffplacement');
		    	if($queryPlacement->num_rows()>0){
			    	foreach($queryPlacement->result() as $stPlacement){
			    		$gradePlace=$stPlacement->grade;
			    		$subject=$stPlacement->subject;
			    		$queryMark=$this->db->query("select sum(m.value) as total, m.value,us.fname, us.mname,us.lname,us.username from users as us cross join mark".$branch.$gradePlace.$quarter.$max_year." as m where us.gradesec='$gradePlace' and m.quarter='$quarter' and us.branch='$branch' and us.academicyear='$max_year' and m.academicyear='$max_year' and us.id=m.stuid and us.usertype='Student' group by m.stuid order by total DESC limit 10 ");
			    	}
			    }
			}
		}
		return $queryUser->result_array();
	}*/
	function fetchSubjectMarkAnalysis($branch,$gradesec,$quarter,$SubName,$max_year)
	{
		$output='';
		$queryMark=$this->db->query("select sum(m.value) as total, m.value,us.fname,us.mname,us.lname,us.username from users as us cross join `mark".$branch.$gradesec.$quarter.$max_year."` as m where us.gradesec='$gradesec' and m.quarter='$quarter' and us.branch='$branch' and us.academicyear='$max_year' and m.academicyear='$max_year' and m.subname='$SubName' and us.id=m.stuid and us.usertype='Student' group by m.stuid order by total DESC ");
		if($queryMark->num_rows()>0){
			$query_name = $this->db->query("select * from school");
        	$row_name = $query_name->row();
        	$school_name=$row_name->name;
        	$address=$row_name->address;
        	$output.=' <h3 class="text-center"><u>'.$school_name.'</u></h3><div class="text-center"><h4><u><b>'.$max_year.'E.C</b></u> Academic Year <u><b>'.$quarter.' '.$SubName.'</b></u> Result Analysis for Grade <u><b>'.$gradesec.'</b></u></h4></div>';
			$output .='<div class="table-responsive">
          	<table class="tabler table-striped" width="100%">
	        <thead>
	        <tr>
	        <th>No.</th>
          	<th>Student Name</th>
          	<th>Student ID</th>
          	<th>Total</th></tr> </thead>';
          	$no=1;
			foreach ($queryMark->result() as $markValue) {
				$mValue=$markValue->total;
				$output.='<tr> <td>'.$no.'.</td>
				<td>'.$markValue->fname.' '.$markValue->mname.' '.$markValue->lname.'</td>';
				$output.='<td>'.$markValue->username.'</td>';
				$output.='<td>'.$mValue.'</td></tr>';
				$no++;
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No mark result found.
            </div></div>';
		}
		return $output;
	}
	function filter_quarter($max_year){
		$this->db->where('Academic_year',$max_year);
		$this->db->select_max('term');
		$this->db->order_by('term','ASC');
		$query=$this->db->get('quarter');
		$output='<select class="form-control" required="required" name="branch" id="quarter4eva"><option></option>';
		foreach ($query->result() as $evavalue) {
			$output.='<option value='.$evavalue->term.'>'.$evavalue->term.'</option>';	
		}
		$output.='</select>';
		return $output;
	}
	function filter_quarterAddMark($gradesec,$max_year){
		$output='';
		$query=$this->db->query("select us.grade,qu.term from users as us cross join quarter as qu ON qu.termgrade=us.grade where us.academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and us.gradesec='$gradesec' and qu.Academic_year='$max_year' and qu.onoff='1' group by us.grade,qu.term order by qu.term DESC ");
		if($query->num_rows()>0){ 
			/*$this->db->where('Academic_year',$max_year);
			$this->db->select_max('term');
			$this->db->order_by('term','ASC');
			$query=$this->db->get('quarter');*/
			$output.='<option></option>';
			foreach ($query->result() as $evavalue) {
				$output.='<option value='.$evavalue->term.'>'.$evavalue->term.'</option>';	
			}
		}else{
			$output.='<option>No term/Quarter</option>';
		}
		return $output;
	}
	function filter_staff_branchs($staffRemote,$max_year){
		$queryUsers=$this->db->query("select branch from users where username='$staffRemote' ");
		if($queryUsers->num_rows()>0){
			$rowBranch=$queryUsers->row();
			$branch=$rowBranch->branch;
		}else{
			$branch='';
		}
		$query=$this->db->query("select name from branch where academicyear='$max_year' and name!='$branch' group by name order by name ASC ");
		if($query->num_rows()>0){ 
			$output='';
			foreach ($query->result() as $evavalue) {
				$output.='<option value='.$evavalue->name.'>'.$evavalue->name.'</option>';	
			}
		}else{
			$output.='<option>No branch</option>';
		}
		return $output;
	}
	function filter_quarter_AddMark($gradesec,$max_year){
		$query=$this->db->query("select us.grade,qu.term from users as us cross join quarter as qu ON qu.termgrade=us.grade where us.academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and us.gradesec='$gradesec' and qu.Academic_year='$max_year' and onoff='1' group by us.grade,qu.term order by qu.term DESC ");
		if($query->num_rows()>0){ 
			/*$this->db->where('Academic_year',$max_year);
			$this->db->select_max('term');
			$this->db->order_by('term','ASC');
			$query=$this->db->get('quarter');*/
			$output.='<option></option>';
			foreach ($query->result() as $evavalue) {
				$output.='<option value='.$evavalue->term.'>'.$evavalue->term.'</option>';	
			}
		}else{
			$output.='<option>No term/Quarter</option>';
		}
		return $output;
	}
	function fetch_academicyear_branch($academicyear){
		$this->db->where('academicyear',$academicyear);
		$this->db->order_by('name','ASC');
		$this->db->group_by('name');
		$query=$this->db->get('branch');
		$output='<option></option>';
		foreach ($query->result() as $evavalue) {
			$output.='<option value='.$evavalue->name.'>'.$evavalue->name.'</option>';	
		}
		return $output;
	}
	/*function check_detainedstudent($grade,$max_year){
		$query=$this->db->query("select u.id, pp.average as avpp, u.gradesec from users as u cross join promotion_policy as pp  where pp.grade=u.grade and u.grade='$grade' and u.academicyear='$max_year'  and pp.academicyear='$max_year' group by u.id ");
		$total_detained=0;
		foreach ($query->result() as $kalue) {
			$gradesec=$kalue->gradesec;
			$stuid=$kalue->id;
			$count_subject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and onreportcard='1' and letter='#' and academicyear='$max_year' group by subject ");
				$total_subject=$count_subject->num_rows();
			$countAverage=$this->db->query("select sum(total) as yave from reportcard".$gradesec.$max_year." where grade='$gradesec' and letter!='A' and onreportcard='1' and stuid='$stuid' and academicyear='$max_year' group by stuid ");
			$promotion_average=$kalue->avpp;
			foreach ($countAverage->result() as $averageValue) {
				$kalueV=$averageValue->yave;
				$yearlyaverage=$kalueV/$total_subject;
				if($yearlyaverage < $promotion_average){
					$total_detained= $total_detained + 1;
				}
			}	
		}
		return '<div class="alert alert-info alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i><B> '.$total_detained.'</B> Student(s) are Detained in grade <B>'.$grade.'</B>.
                <a href="#"> View</a>
            </div></div>';
	}*/
	function filtergrade_4_non_registeration($academicyear,$branchRegistration){
		$queryYear=$this->db->query("select year_name from academicyear where id='$academicyear' ");
		$yearRow=$queryYear->row();
		$max_year=$yearRow->year_name;
		$this->db->where('users.branch',$branchRegistration);
		$this->db->where('users.academicyear',$max_year);
		$this->db->where('users.usertype','Student');
		$this->db->group_by('users.grade');
		$this->db->order_by('users.grade','ASC');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
		return $output;
	}
	function Fetch_academicyear_branch_non_registration($academicyear){
		$queryYear=$this->db->query("select year_name from academicyear where id='$academicyear' ");
		$yearRow=$queryYear->row();
		$max_year=$yearRow->year_name;
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('name','ASC');
		$this->db->group_by('name');
		$query=$this->db->get('branch');
		$output='<option></option>';
		foreach ($query->result() as $evavalue) {
			$output.='<option value='.$evavalue->name.'>'.$evavalue->name.'</option>';	
		}
		return $output;
	}
	function fetch_grade_non_registration($branch,$grade,$year){
		$queryYear=$this->db->query("select year_name from academicyear where id='$year' ");
		$yearRow=$queryYear->row();
		$max_year=$yearRow->year_name;
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where('usertype','Student');
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$this->db->where('grade',$grade);
		$this->db->where('branch',$branch);
		$this->db->where(array('academicyear'=>$max_year));
		$query = $this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$queryAcademicYear=$this->db->query("select * from academicyear where id > '$year' ORDER BY id DESC LIMIT 1  ");
			if($queryAcademicYear->num_rows()>0){
				$yearNext=$queryAcademicYear->row();
				$nextYear=$yearNext->year_name;
		        $output .='<div class="table-responsive">
		        <table class="table table-striped table-hover" style="width:100%;">
		        <thead>
		        <tr>
		          	<th>No.</th>
		          	<th>Student Name</th>
		          	<th>Student ID</th>
		          	<th>Grade</th>
		          	<th>Branch</th>
		          	<th>Action</th>
		        </tr>
		        </thead>
		        <tbody>';
		        $no=1;
			    foreach ($query->result() as $row) 
			    {
			    	$userName=$row->username;
			    	$Id=$row->id;
			    	$queryStudentChk=$this->db->query("select * from users where username='$userName' and academicyear = '$nextYear' ");
			    	if($queryStudentChk->num_rows() < 1 ){
			    		$nextGrade=$row->grade;
		    			$output .='<tr class="clearRegs'.$row->id.'"> 
					    <td>'.$no.'.</td>
					    <td>'.$row->fname.' '.$row->mname.' '.$row->lname.'</td>
					    <td>'.$row->username.'</td>
					    <td>'.$row->grade.'</td>
					    <td>'.$row->branch.'</td>
					    <td><a href="#" class="btn btn-info registerthis_student" id="'.$Id.'" value="'.$max_year.'" name="'.$userName.'" data-toggle="modal" data-target="#register_thisyeare_student"> Register</a></td>';
			    		$no++;
			    	}
				    $output.='</tr>'; 
			    }
		        $output .='</tbody> </table> </div>';
		    }else{
		    	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-circle"> </i> No new year found.
            	</div></div>';
		    }
    	}else{
    		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-circle"> </i> No Student found.
            </div></div>';
    	}
        return $output;
	}
	function fetchFailedStudents($branch,$grade,$year){
		$queryYear=$this->db->query("select year_name from academicyear where id='$year' ");
		$yearRow=$queryYear->row();
		$max_year=$yearRow->year_name;

		$this->db->where('academicyear',$max_year);
		$this->db->where('grade',$grade);
		$this->db->delete('failed_students');

		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->where('usertype','Student');
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$this->db->where('grade',$grade);
		$this->db->where('branch',$branch);
		$this->db->where(array('academicyear'=>$max_year));
		$query = $this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        
		    foreach ($query->result() as $row) 
		    {
		    	$username=$row->username;
		    	$stuId=$row->id;
		    	$stuGradeCheck=$row->grade;
		    	$gradesec=$row->gradesec;
				$queryPromotion=$this->db->query("select * from promotion_policy where grade='$stuGradeCheck' and academicyear='$max_year' group by id ");
				if($queryPromotion->num_rows()>0){
					$printValueYA=0;

					$countQuarter=$this->db->query("select * from quarter where Academic_year='$max_year' and termgrade='$stuGradeCheck' group by term "); 
					$allQuarter=$countQuarter->num_rows();

					$selectSubject=$this->db->query("select * from reportcard".$gradesec.$max_year." where grade='$gradesec' and academicyear='$max_year' and onreportcard='1' and letter='#' group by subject order by subjorder ASC"); 
					$subALl=$selectSubject->num_rows();
					foreach($queryPromotion->result() as $promotionAverage ){
						$average=$promotionAverage->average;
						$failedSubjects=$promotionAverage->total_failed_subject;
						$dataFailedSubject=array();
						$totalFailedSubjects=0;
						foreach($selectSubject->result() as $subjectResult){
							$subject=$subjectResult->subject;
							$queryResult=$this->db->query("select sum(total) as subTotal from reportcard".$gradesec.$max_year." where grade='$gradesec' and academicyear='$max_year' and stuid='$stuId' and subject='$subject'");
							$fetchSem1 = $queryResult->row(); // Fetch single row
        					$resultSem1 = ($fetchSem1->subTotal) / $allQuarter;
        					$totalSubAverage = number_format((float)$resultSem1, 0, '.', '');

							if($totalSubAverage < '50'){
								$totalFailedSubjects= $totalFailedSubjects +1;
								$dataFailedSubject[]=array(
									'stuid' =>$stuId,
									'grade' =>$stuGradeCheck,
									'subject' =>$subject,
									'subject_average' =>$totalSubAverage,
									'academicyear' =>$max_year,
									'yearly_average' =>'',
									'failedSubjects'=>$totalFailedSubjects
								);
							}
						}
						$quartrYATotal=$this->db->query("select sum(total) as total from reportcard".$gradesec.$max_year." where stuid='$stuId' and onreportcard='1' and letter='#' ");
			            foreach ($quartrYATotal->result() as $totalValueYA) {
			                if($totalValueYA->total > 0 ){
			                	$printValueYA=(($totalValueYA->total)/$allQuarter)/$subALl;
			                	$printValueYA = number_format((float)$printValueYA, 0, '.', '');
			                	// Update the yearly average in the array
								foreach ($dataFailedSubject as &$subjectData) {
								    $subjectData['yearly_average'] = $printValueYA;
								}

			                }
			            }

					} 
					if (!empty($dataFailedSubject)) {
				        $this->db->insert_batch('failed_students', $dataFailedSubject);
				    }      		
				}
			}
			$queryPromotion = $this->db->query("SELECT * FROM promotion_policy WHERE grade='$grade' AND academicyear='$max_year'");

			if ($queryPromotion->num_rows() > 0) {
				$query_name = $this->db->query("select * from school");
		        $row_name = $query_name->row();
		        $school_name=$row_name->name;
		        $school_name2=$row_name->name_2;
		        $address=$row_name->address;
		        $phone=$row_name->phone;
		        $website=$row_name->website;
		        $email=$row_name->email;
		        $schooLogo=$row_name->logo;
	        	$output.='<div class="support-ticket media pb-1 mb-3 card-header">
		          <img src="'.base_url().'/logo/'.$schooLogo.'" style="width:auto;height: 90px;" class="user-img mr-2" alt="">
		          <div class="media-body ml-3">
		            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">'.$school_name2.' <br>'.$school_name.' </B></h2></span>
		            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u> Students Not Meeting Promotion Criteria in '.$max_year.' Academic Year </u></B></h4></p>
		          </div>
		        </div> ';
			    $output .= '<div class="table-responsive">
			    <table class="table table-striped table-hover" style="width:100%;">
			    <thead>
			    <tr>
			        <th>No.</th>
			        <th>Student ID</th>
			        <th>Student Name</th>
			        <th>Grade</th>
			        <th>Yearly Average</th>
			        <th>Status</th>
			        <th class="text-center">Reason</th>
			    </tr>
			    </thead>
			    <tbody>';
			    
			    $no = 1;

			    $this->db->where('failed_students.academicyear', $max_year);
			    $this->db->where('users.academicyear', $max_year);
			    $this->db->order_by('users.fname, mname, lname', 'ASC');
			    $this->db->group_by('failed_students.stuid');
			    $this->db->select('users.id, fname, mname, lname, gradesec, username, branch, yearly_average, failedSubjects');
			    $this->db->from('failed_students');
			    $this->db->join('users', 'users.id = failed_students.stuid');
			    
			    $records = $this->db->get()->result();

			    foreach ($records as $row) {
			        $stuid = $row->id;

			        // Get the maximum failed subjects for this student
			        $this->db->where('academicyear', $max_year);
			        $this->db->where('stuid', $stuid);
			        $this->db->select_max('failedSubjects');
			        $queryget = $this->db->get('failed_students');
			        $rowData = $queryget->row();
			        $totalFailed = $rowData->failedSubjects;
			        $totalAverage = $row->yearly_average;

			        $isFailed = false;
			        $reason = "";

			        foreach ($queryPromotion->result() as $policyCheck) {
			            $yearlyAverage = $policyCheck->average;
			            $totalSubjects = $policyCheck->total_failed_subject;

			            // If the student violates any policy, mark them as failed
			            if (($yearlyAverage > 0 && $totalAverage < $yearlyAverage) || 
			                ($totalSubjects > 0 && $totalFailed > $totalSubjects)) {
			                $isFailed = true;
			                if ($yearlyAverage > 0 && $totalAverage < $yearlyAverage) {
			                    $reason = 'Yearly Average too low. Average must be >= '.$yearlyAverage. ' to pass';
			                }
			                if ($totalSubjects > 0 && $totalFailed > $totalSubjects) {
			                    $reason = 'Failed in ' . $totalFailed . ' subjects. Maximun failed subjects must be <= '.$totalSubjects.'';
			                }
			                break; // If one rule is met (fail), no need to check further
			            }
			        }

			        // Only show failed students
			        if ($isFailed) {
			            $output .= '<tr class="text-danger">
			                <td>' . $no . '.</td>
			                <td>' . $row->username . '</td>
			                <td>' . $row->fname . ' ' . $row->mname . ' ' . $row->lname . '</td>
			                <td>' . $row->gradesec . '</td>
			                <td>' . $row->yearly_average . '</td>
			                <td>Detained</td>
			                <td>' . $reason . '</td>
			            </tr>';
			            $no++;
			        }
			    }

			    $output .= '</tbody> </table> </div>';
			} else {
			    $output .= '<div class="alert alert-light alert-dismissible show fade">
			        <div class="alert-body">
			            <button class="close" data-dismiss="alert">
			                <span>&times;</span>
			            </button>
			        <i class="fas fa-exclamation-circle"> </i> No promotion policy found.
			    </div></div>';
			}


    	}else{
    		$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-circle"> </i> No Student found.
            </div></div>';
    	}
        return $output;
	}
	function fecth_student_toregister_lastYear($id,$yearDropped,$max_year,$username){
		$output='';
		$queryCheck=$this->db->query("select * from users where username='$username' and academicyear='$max_year' and status='Active' ");
		if($queryCheck->num_rows()<1 ){
			$queryGrade=$this->db->query("select grade from users where grade!='' group by grade order by grade ASC ");
			$queryYear=$this->db->query("select year_name from academicyear group by year_name order by year_name DESC ");
	        $queryBranch=$this->db->query("select name from branch group by name order by name ASC ");
			$output.='<form method="POST" id="registerLast_YearStudent">
			<input type="hidden" name="register_laststudent_id" id="register_laststudent_id" value="'.$id.'">
			<input type="hidden" name="register_laststudent_year" id="register_laststudent_year" value="'.$yearDropped.'">
			<small class="text-info"><i class="fas fa-check-circle"></i> This report will show you not registered student lists from selected year('.$yearDropped.') to the next Academic year.</small>
			<div class="row">';
			if($yearDropped==$max_year){
				$queryUser=$this->db->query("select grade,academicyear,branch from users where id='$id' and academicyear='$max_year' ");
				foreach($queryUser->result() as $row){
					$output.='
					<div class="form-group col-lg-4 col-6">
		            	<label>Select Year</label>
		            	<select class="form-control" id="register_on_year_last" name="register_on_year_last" required>
		            	<option></option>';
		                if($queryYear->num_rows()>0){
		                	foreach($queryYear->result() as $yearname) {
		                		if($yearname->year_name==$row->academicyear){
		                			$output.='<option value="'.$yearname->year_name.'" selected="selected">'.$row->academicyear.'</option>';
		                		}else{
		                			$output.='<option value="'.$yearname->year_name.'">'.$yearname->year_name.'</option>';
		                		}
		                		
		                	}
		                }
		                $output.='</select>
		            </div>
		            <div class="form-group col-lg-4 col-6">
		            	<label>Select Branch</label>
		            	<select class="form-control" id="register_on_branch_last" name="register_on_branch_last" required>
		            	<option></option>';
		                if($queryBranch->num_rows()>0){
		                	foreach($queryBranch->result() as $branchName) {
		                		if(trim(ucfirst(strtolower($branchName->name))) ==trim(ucfirst(strtolower($row->branch)))){
		                			$output.='<option value="'.$branchName->name.'" selected="selected">'.$branchName->name.'</option>';
		                		}else{
		                			$output.='<option value="'.$branchName->name.'">'.$branchName->name.'</option>';
		                		}
		                	}
		                }
		                $output.='</select>
		            </div>
		            <div class="form-group col-lg-4 col-12">
		            	<label>Select Grade</label>
		            	<select class="form-control" id="register_on_grade_last" name="register_on_grade_last" required>
		            	<option></option>';
		                if($queryGrade->num_rows()>0){
		                	foreach($queryGrade->result() as $gradeName) {
		                		if($gradeName->grade==$row->grade){
		                			$output.='<option value="'.$gradeName->grade.'" selected="selected">'.$row->grade.'</option>';
		                		}else{
		                			$output.='<option value="'.$gradeName->grade.'">'.$gradeName->grade.'</option>';
		                		}
		                	}
		                }
		                $output.='</select>
		            </div>';
		        }
			}else{
	    		$output.='
				<div class="form-group col-lg-4 col-6">
	            	<label>Select Year</label>
	            	<select class="form-control" id="register_on_year_last" name="register_on_year_last" required>';
	                if($queryYear->num_rows()>0){
	                	foreach($queryYear->result() as $yearname) {
	                		$output.='<option value="'.$yearname->year_name.'">'.$yearname->year_name.'</option>';
	                	}
	                }
	                $output.='</select>
	            </div>
	            <div class="form-group col-lg-4 col-6">
	            	<label>Select Branch</label>
	            	<select class="form-control" id="register_on_branch_last" name="register_on_branch_last" required>
	            	<option></option>';
	                if($queryBranch->num_rows()>0){
	                	foreach($queryBranch->result() as $branchName) {
	                		$output.='<option value="'.$branchName->name.'">'.$branchName->name.'</option>';
	                	}
	                }
	                $output.='</select>
	            </div>
	            <div class="form-group col-lg-4 col-12">
	            	<label>Select Grade</label>
	            	<select class="form-control" id="register_on_grade_last" name="register_on_grade_last" required>
	            	<option></option>';
	                if($queryGrade->num_rows()>0){
	                	foreach($queryGrade->result() as $gradeName) {
	                		$output.='<option value="'.$gradeName->grade.'">'.$gradeName->grade.'</option>';
	                	}
	                }
	                $output.='</select>
	            </div>';
	        }
	        $output.='</div>
	        <button class="btn btn-info pull-right" type="submit" id="re_register_last_student"> Register Student </button></form>';
	    }else{
	    	$output.='<div class="alert alert-info alert-dismissible show fade">
            <i class="fas fa-check-circle"> </i> Student already registered.</div>';
	    }
        return $output;
	}
	function student_registration($branch,$grade,$year){
		$queryYear=$this->db->query("select year_name from academicyear where id='$year' ");
		$yearRow=$queryYear->row();
		$max_year=$yearRow->year_name;
		$nextYear=$max_year;
		$this->db->where('usertype','Student');
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$this->db->where('grade',$grade);
		$this->db->where('branch',$branch);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('fname,mname,lname','ASC');
		$query = $this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$queryNext=$this->db->query("select * from grade_level where pre_grade='$grade' ");
            if($queryNext->num_rows()>0){
               	$output .=' <div class="activities">
	                <div class="activity-icon text-white support-ticket">
          				<div class="activity-detail">
	                    	<div class="mb-2">
	                    	<a class="text-job" href="#">Action</a>
	                        	<div class="float-right dropdown-menu-right pullDown">
	                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
	                          		<div class="dropdown-menu">
		                            	<div class="dropdown-title">Action</div>
		                            	<a href="#" class="dropdown-item has-icon text-success">
		                            	 	<div class="pretty p-bigger">
							                    <input type="checkbox" class="" id="selectall" onClick="selectAll()">
							                    <div class="state p-warning">
							                      <i class="icon material-icons"></i>
							                      <label></label>Select All 
							                    </div>
							                </div>
							            </a>';
					                	foreach($queryNext->result() as $gradeRow){
					                		$nextGrade=$gradeRow->next_grade;
					                		$output.='<a href="#" id="promoteStudent" class="dropdown-item has-icon text-success" value="'.$nextGrade.'"><i class="fas fa-check-circle"></i> Promote to '.$nextGrade.' </a>';
					                	}
							          	$output.='<a href="#" class="dropdown-item has-icon text-warning" id="detainedStudent" value="'.$grade.'"><i class="fas fa-times-circle"></i> Detained to '.$grade.'</a>
		                          	</div>
	                        	</div>
                  			</div>
                  		</div>
                  	</div>
                </div>';
            }else{
                $output .=' <div class="activities">
	                <div class="activity-icon text-white support-ticket">
          				<div class="activity-detail">
	                    	<div class="mb-2">
	                    	<a class="text-job" href="#">Action</a>
	                        	<div class="float-right dropdown-menu-right pullDown">
	                          		<a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
	                          		<div class="dropdown-menu">
		                            	<div class="dropdown-title">Action</div>
		                            	<a href="#" class="dropdown-item has-icon text-success">
		                            	 	<div class="pretty p-bigger">
							                    <input type="checkbox" class="" id="selectall" onClick="selectAll()">
							                    <div class="state p-warning">
							                      <i class="icon material-icons"></i>
							                      <label></label>Select All 
							                    </div>
							                </div>
							            </a>
							          	<a href="#" class="dropdown-item has-icon text-warning" id="detainedStudent" value="'.$grade.'"><i class="fas fa-times-circle"></i> Detained to '.$grade.'</a>
		                          	</div>
	                        	</div>
                  			</div>
                  		</div>
                  	</div>
                </div>';
            }
	        $no=1;
	        $queryAcademicYear=$this->db->query("select * from academicyear where id > '$year' ORDER BY id DESC LIMIT 1  ");
	        if($queryAcademicYear->num_rows()>0){
	        	$yearNext=$queryAcademicYear->row();
				$nextYear=$yearNext->year_name;
	        }
	        
			
	        /*$currentYear=$max_year;
	        $nextYear=$max_year + 1;*/
	        $queryMaxYear=$this->db->query("select year_name from academicyear where year_name='$nextYear'");
		    foreach ($query->result() as $row) 
		    {
		    	$queryStudentChk=$this->db->query("select id,username,grade from users where unique_id='".$row->unique_id."' and academicyear = '".$nextYear."' ");
		    	$output.='<div class="support-ticket pb-1 clearRegs'.$row->id.'">
                    <div class="media-body">';
                    if($queryStudentChk->num_rows()>0 ){
			    	$stuid=$queryStudentChk->row();
			    	$deletedId=$stuid->id;
			    	$nextGrade=$stuid->grade;
			    	if($nextGrade == $grade){
			    		$output.='<div class="badge badge-pill badge-light mb-1 float-right">
					        <div class="pretty p-bigger">
			                    <input type="checkbox" name="unregister" checked="checked" class="'.$nextYear.'" value="'.$deletedId.'" id="customCheck1">
			                    <div class="state p-warning">
			                      	<i class="icon material-icons"></i>
			                      	<label></label><span class="time text-danger">Detained</span>
					        		<small id="checkstatus'.$deletedId.'" class="time text-success"> </small>
			                    </div>
			                </div>
		                </div>';
			    	}else{
			    		$output.='<div class="badge badge-pill badge-light mb-1 float-right">
					        <div class="pretty p-bigger">
			                    <input type="checkbox" name="unregister" checked="checked" class="'.$nextYear.'" value="'.$deletedId.'" id="customCheck1">
			                    <div class="state p-success"> 
			                      	<i class="icon material-icons"></i>
			                      	<label></label><span class="time text-success">Promoted</span>
					        		<small id="checkstatus'.$deletedId.'" class="time text-success"> </small>
			                    </div>
			                </div>
		                </div>';
			    	}
			    }else if($queryMaxYear->num_rows()> 0){
			        $output.='<div class="badge badge-pill badge-light mb-1 float-right">
				        <div class="pretty p-bigger">
		                    <input type="checkbox" name="stuId[ ]" class="stuidList'.$row->id.'" value="'.$row->id.'" id="customCheck1 stuIdList">
		                    <div class="state p-info">
		                      	<i class="icon material-icons"></i>
		                      	<label></label>Not Regist. <small id="promotestatus'.$row->id.'" class="time text-success"></small>
		                    </div>
		                </div>
	                </div>';
			    }else{
			        $output.='<div class="badge badge-pill badge-light mb-1 float-right">No new year</div> ';
			    }
                    $output.='
                      <span class="font-weight-bold">'.$no.'.'.$row->fname.' '.$row->mname.' '.$row->lname.'</span>
                      <small class="time">(Grade: '.$row->grade.' & Branch: '.$row->branch.')</small>
                      <div class="dropdown-divider"></div>
                    </div>
                  </div> ';
			    $no++;
		    }
    	}else{
    		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-circle"> </i> No Student found.
            </div></div>';
    	}
        return $output;
	}
	function studentPromotionPromote($stuid,$year,$nextGrade){
		$queryYear=$this->db->query("select year_name from academicyear where id='$year' ");
		$yearRow=$queryYear->row();
		$max_year=$yearRow->year_name;

		$this->db->where('id',$stuid);
		$this->db->where('academicyear',$max_year);
		$query=$this->db->get('users');
		$output='';
    	foreach ($query->result() as $studentList) {
    	    $username=$studentList->username;
    	    $age=$studentList->age;
    	    if($age >0){
    	    	$ageU=$age + 1;
    	    }else{
    	    	$ageU='';
    	    }
    	    $queryAcademicYear=$this->db->query("select * from academicyear where id > '$year' ORDER BY id DESC LIMIT 1  ");
	        $yearNext=$queryAcademicYear->row();
			$nextYear=$yearNext->year_name;
    	    $quryCheck=$this->db->query("select username from users where username='$username' and academicyear='$nextYear' ");
		    if($quryCheck->num_rows()<1){
    			$grade=$studentList->grade;
				$data=array(
					'username'=>$studentList->username,
					'usertype'=>$studentList->usertype,
					'fname'=>$studentList->fname,
					'mname'=>$studentList->mname,
					'lname'=>$studentList->lname,
					'last_oflast_name'=>$studentList->last_oflast_name,
					'previous_school' =>$studentList->previous_school,
					'mobile'=>$studentList->mobile,
					'father_mobile'=>$studentList->father_mobile,
					'email'=>$studentList->email,
					'profile'=>$studentList->profile,
					'grade'=>$nextGrade,
					'section'=>'',
					'gradesec'=>'',
					'dob'=>$studentList->dob,
					'age'=>$ageU,
					'gender'=>$studentList->gender,
					'password'=>$studentList->password,
					'password2'=>$studentList->password2,
					'mother_name'=>$studentList->mother_name,
					'father_name' =>$studentList->father_name,
                    'father_dob' =>$studentList->father_dob,
                    'father_age' =>$studentList->father_age,
                    'work' =>$studentList->work,
                    'father_workplace'=>$studentList->father_workplace,
                    'nationality'=>$studentList->nationality ,
                    'marital_status'=>$studentList->marital_status ,
					'city'=>$studentList->city,
					'sub_city'=>$studentList->sub_city,
					'woreda'=>$studentList->woreda,
					'kebele'=>$studentList->kebele,
					'home_place'=>$studentList->home_place,
					'isapproved'=>$studentList->isapproved,
					'dateregister'=>$studentList->dateregister,
					'branch'=>$studentList->branch,
					'transportservice'=>$studentList->transportservice,
					'asp'=>$studentList->asp,
					'mysign'=>$studentList->mysign,
					'academicyear'=>$nextYear,
					'biography'=>$studentList->biography,
					'status'=>$studentList->status,
					'status2' =>$studentList->status2,
					'special_needs' =>$studentList->special_needs,
					'leave_days' =>$studentList->leave_days,
					'finalapproval'=>$studentList->finalapproval,
					'unique_id'=>$studentList->unique_id
				);
    			$queryInsert=$this->db->insert('users',$data);
    			if($queryInsert){
    				$output.='<i class="fas fa-exclamation-circle"> </i> ';
    			}else{
    				$output.='<div class="alert alert-warning alert-dismissible show fade">
                    <div class="alert-body">
                        <button class="close"  data-dismiss="alert">
                            <span>&times;</span>
                        </button>
                    <i class="fas fa-exclamation-circle"> </i> Not registered, PLease try Again.
                </div></div>';
    			}
    		}
		}
		return $output;
	}
	function studentPromotionDetained($stuid,$year){
		$queryYear=$this->db->query("select year_name from academicyear where id='$year' ");
		$yearRow=$queryYear->row();
		$max_year=$yearRow->year_name;
		$this->db->where('id',$stuid);
		$this->db->where('academicyear',$max_year);
		$query=$this->db->get('users');
		$output='';
		$queryAcademicYear=$this->db->query("select * from academicyear where id > '$year' ORDER BY id DESC LIMIT 1  ");
        $yearNext=$queryAcademicYear->row();
		$nextYear=$yearNext->year_name;
		foreach ($query->result() as $studentList) {
			$username=$studentList->username;
    	    $age=$studentList->age;
    	    if($age >0){
    	    	$ageU=$age + 1;
    	    }else{
    	    	$ageU='';
    	    }
    	    $quryCheck=$this->db->query("select username from users where username='$username' and academicyear='$nextYear' ");
		    if($quryCheck->num_rows()<1){
				$data=array(
					'username'=>$studentList->username,
					'usertype'=>$studentList->usertype,
					'fname'=>$studentList->fname,
					'mname'=>$studentList->mname,
					'lname'=>$studentList->lname,
					'last_oflast_name'=>$studentList->last_oflast_name,
					'previous_school' =>$studentList->previous_school,
					'mobile'=>$studentList->mobile,
					'father_mobile'=>$studentList->father_mobile,
					'email'=>$studentList->email,
					'profile'=>$studentList->profile,
					'grade'=>$studentList->grade,
					'section'=>'',
					'gradesec'=>'',
					'dob'=>$studentList->dob,
					'age'=>$ageU,
					'gender'=>$studentList->gender,
					'password'=>$studentList->password,
					'password2'=>$studentList->password2,
					'mother_name'=>$studentList->mother_name,
					'father_name' =>$studentList->father_name,
                    'father_dob' =>$studentList->father_dob,
                    'father_age' =>$studentList->father_age,
                    'work' =>$studentList->work,
                    'father_workplace'=>$studentList->father_workplace,
                    'nationality'=>$studentList->nationality ,
                    'marital_status'=>$studentList->marital_status ,
					'city'=>$studentList->city,
					'sub_city'=>$studentList->sub_city,
					'woreda'=>$studentList->woreda,
					'kebele'=>$studentList->kebele,
					'home_place'=>$studentList->home_place,
					'isapproved'=>$studentList->isapproved,
					'dateregister'=>$studentList->dateregister,
					'branch'=>$studentList->branch,
					'transportservice'=>$studentList->transportservice,
					'asp'=>$studentList->asp,
					'mysign'=>$studentList->mysign,
					'academicyear'=>$nextYear,
					'biography'=>$studentList->biography,
					'status'=>$studentList->status,
					'status2' =>$studentList->status2,
					'special_needs' =>$studentList->special_needs,
					'leave_days' =>$studentList->leave_days,
					'finalapproval'=>$studentList->finalapproval,
					'unique_id'=>$studentList->unique_id
				);
				$queryInsert=$this->db->insert('users',$data);
				if($queryInsert){
					$output.='<i class="fas fa-exclamation-circle"> </i>';
				}else{
					$output.='<div class="alert alert-warning alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-exclamation-circle"> </i> Not registered, Please try Again.
	            	</div></div>';
				}
			}
		}
		return $output;
	}
	function clearRegistration($stuid,$academicyear){
		$this->db->where('id',$stuid);
		$this->db->where('academicyear',$academicyear);
		$query=$this->db->delete('users');
	}
	function startAutoPromotion($fromAcademicYear,$toAcademicYear){
		$output ='';
		$this->db->where('users.academicyear',$fromAcademicYear);
		$this->db->where('users.usertype','Student');
		$this->db->group_by('users.grade');
		$this->db->where('users.grade!=','');
		$this->db->order_by('users.grade','ASC');
		$query=$this->db->get('users');
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach($query->result() as $fetchGrade){
				$stuGradeCheck=$fetchGrade->grade;
				$queryPromotion=$this->db->query("select * from promotion_policy where grade='$stuGradeCheck' and academicyear='$fromAcademicYear' ");
				if($queryPromotion->num_rows()>0){
					foreach($queryPromotion->result() as $promotionAverage ){
						$average=$promotionAverage->average;
					}
					$queryStudent=$this->db->query("select * from users where academicyear='$fromAcademicYear' and status='Active' and isapproved='1' and usertype='Student' and grade='$stuGradeCheck' group by id order by fname ASC");
					if($queryStudent->num_rows()>0){
						$printValueYA=0;
						foreach($queryStudent->result() as $promotionStudent ){
							$stuId=$promotionStudent->id;
							$gradesec=$promotionStudent->gradesec;
							$uniqueId=$promotionStudent->unique_id;
							$stuGrade=$promotionStudent->grade;
							$username=$promotionStudent->username;
								
							$checkStudent=$this->db->query("select fname from users where academicyear='$toAcademicYear' and username='$username' ");
							if($checkStudent->num_rows()<1){
								$countSubject=$this->db->query("select * from reportcard".$gradesec.$fromAcademicYear." where grade='$gradesec' and academicyear='$fromAcademicYear' and onreportcard='1' and letter='#' group by subject order by subjorder ASC"); 
								$subALl=$countSubject->num_rows();
										/*count quarter*/
								$countQuarter=$this->db->query("select * from quarter where Academic_year='$fromAcademicYear' and termgrade='$stuGradeCheck' "); 
								$allQuarter=$countQuarter->num_rows();

								$quartrYATotal=$this->db->query("select sum(total) as total from reportcard".$gradesec.$fromAcademicYear." where stuid='$stuId' and onreportcard='1' and letter='#' ");
					            foreach ($quartrYATotal->result() as $totalValueYA) {
					                if($totalValueYA->total > 0 ){
					                	$printValueYA=(($totalValueYA->total)/$allQuarter)/$subALl;
					                }
					            }
			                	if($printValueYA >= $average){
			                		$queryNext=$this->db->query("select * from grade_level where pre_grade='$stuGradeCheck' ");
    								if($queryNext->num_rows()>0){
    									$rowGrade=$queryNext->row();
    									$nextGradeIs=$rowGrade->next_grade;
    								}else{
    									$nextGradeIs='';
    								}
		                			$data[]=array(
										'username'=>$promotionStudent->username,
										'usertype'=>$promotionStudent->usertype,
										'fname'=>$promotionStudent->fname,
										'mname'=>$promotionStudent->mname,
										'lname'=>$promotionStudent->lname,
										'mobile'=>$promotionStudent->mobile,
										'father_mobile'=>$promotionStudent->father_mobile,
										'email'=>$promotionStudent->email,
										'profile'=>$promotionStudent->profile,
										'grade'=>$nextGradeIs,
										'section'=>'',
										'gradesec'=>'',
										'dob'=>$promotionStudent->dob,
										'age'=>$promotionStudent->age,
										'gender'=>$promotionStudent->gender,
										'password'=>$promotionStudent->password,
										'password2'=>$promotionStudent->password2,
										'mother_name'=>$promotionStudent->mother_name,
										'city'=>$promotionStudent->city,
										'sub_city'=>$promotionStudent->sub_city,
										'woreda'=>$promotionStudent->woreda,
										'kebele'=>$promotionStudent->kebele,
										'isapproved'=>$promotionStudent->isapproved,
										'dateregister'=>$promotionStudent->dateregister,
										'branch'=>$promotionStudent->branch,
										'transportservice'=>$promotionStudent->transportservice,
										'asp'=>$promotionStudent->asp,
										'mysign'=>$promotionStudent->mysign,
										'academicyear'=>$toAcademicYear,
										'biography'=>$promotionStudent->biography,
										'status'=>$promotionStudent->status,
										'unique_id'=>$promotionStudent->unique_id
									);		
			                	}else{
			                		$data[]=array(
										'username'=>$promotionStudent->username,
										'usertype'=>$promotionStudent->usertype,
										'fname'=>$promotionStudent->fname,
										'mname'=>$promotionStudent->mname,
										'lname'=>$promotionStudent->lname,
										'mobile'=>$promotionStudent->mobile,
										'father_mobile'=>$promotionStudent->father_mobile,
										'email'=>$promotionStudent->email,
										'profile'=>$promotionStudent->profile,
										'grade'=>$stuGradeCheck,
										'section'=>'',
										'gradesec'=>'',
										'dob'=>$promotionStudent->dob,
										'age'=>$promotionStudent->age,
										'gender'=>$promotionStudent->gender,
										'password'=>$promotionStudent->password,
										'password2'=>$promotionStudent->password2,
										'mother_name'=>$promotionStudent->mother_name,
										'city'=>$promotionStudent->city,
										'sub_city'=>$promotionStudent->sub_city,
										'woreda'=>$promotionStudent->woreda,
										'kebele'=>$promotionStudent->kebele,
										'isapproved'=>$promotionStudent->isapproved,
										'dateregister'=>$promotionStudent->dateregister,
										'branch'=>$promotionStudent->branch,
										'transportservice'=>$promotionStudent->transportservice,
										'asp'=>$promotionStudent->asp,
										'mysign'=>$promotionStudent->mysign,
										'academicyear'=>$toAcademicYear,
										'biography'=>$promotionStudent->biography,
										'status'=>$promotionStudent->status,
										'unique_id'=>$promotionStudent->unique_id
									);
			                	}       
							} 
						}
					}else{
						$output.='<span class="badge badge-light">
			                <i class="fas fa-exclamation-circle"> </i> Ooops No student found.</span>';
					}	
				}else{
					$output.='<span class="badge badge-light">
		            <i class="fas fa-exclamation-circle"> </i> Please enter promotion average for grade '.$stuGradeCheck.'</span>';
				}
			}
			if(!empty($data)){
            	$queryPromote=$this->db->insert_batch('users',$data);
            	if($queryPromote){
            		$output.='<span class="badge badge-light">
	                <i class="fas fa-check-square"> </i> Some Grades are registered.</span>';
            	}
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-circle"> </i> Ooops something wrong.Please try again.
            </div></div>';
		}
		return $output;
	}
	function filtergrade_4branch($academicyear,$branchRegistration){
		$this->db->where('users.branch',$branchRegistration);
		$this->db->where('users.academicyear',$academicyear);
		$this->db->where('users.usertype','Student');
		$this->db->group_by('users.grade');
		$this->db->order_by('users.grade','ASC');
		$query=$this->db->get('users');
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
		}
		return $output;
	}
	function fetch_username_password($user,$branch,$gs_gradesec,$max_year)
	{
		$output='';
		$query=$this->db->query("select * from users where academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and gradesec='$gs_gradesec' and branch='$branch' group by id order by fname,mname,lname ASC");
		if($query->num_rows()>0){
			$output .='<div class="table-responsive">
	        <table class="table table-bordered">
	        <tr>
	          	<th>Student Name</th>
	            <th>Grade</th>            
	            <th>Branch</th>
	            <th>Username</th>
	            <th>Password</th>
			</tr>';
			foreach ($query->result() as $stuValue) {
				$stusername=$stuValue->username;
	            $alphabet = "abcdefghijklmnopqrstuwxyzABCDEFGHIJKLMNOPQRSTUWXYZ0123456789";
	            $pass = array();
	            $alphaLength = strlen($alphabet) - 1; 
	            for ($i = 0; $i < 6; $i++) {
	                $n = rand(0, $alphaLength);
	                $pass[] = $alphabet[$n];
	            }
	            $temp_pass= implode($pass); 
	            $passHash=hash('sha256', $temp_pass);
	            $this->db->where('academicyear',$max_year);
	            $this->db->where('gradesec',$gs_gradesec);
	            $this->db->where('branch',$branch);
	            $this->db->where('username',$stusername);
	            $this->db->where('usertype','Student');
	            $this->db->set('password2',$passHash);
	            $this->db->set('password',$passHash);
	            $this->db->update('users');
				$output.='<tr><td>'.$stuValue->fname.' '.$stuValue->mname.' '.$stuValue->lname.'</td>';
				$output.='<td>'.$gs_gradesec.'</td>';
				$output.='<td>'.$branch.'</td>';
				$output.='<td>'.$stuValue->username.'</td>';
				$output.='<td>'.$temp_pass.'</td>';
				$output.='</tr>';
			}
		}else{
			$output .='<div class="alert alert-danger alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
            </div></div>';
		}
		$output .='</table></div>';
		return $output;
	}
	function fetch_customusername_password($checkStudent)
	{
		$output='';
		$output .='<div class="table-responsive">
        <table class="table table-bordered">
        <tr>
        <th>Username</th>
          	<th>Student Name</th>
            <th>Grade</th>            
            <th>Branch</th>
            
            <th>Password</th>
		</tr>';
		foreach ($checkStudent as $stuValue) {
			$query=$this->db->query("select fname,mname,lname,grade,branch,username from users where username='$stuValue' order by academicyear DESC limit 1");
			$rowQuery=$query->row();
			$fname=$rowQuery->fname;
			$mname=$rowQuery->mname;
			$lname=$rowQuery->lname;
			$gs_gradesec=$rowQuery->grade;
			$branch=$rowQuery->branch;
			$userName=$rowQuery->username;
            $alphabet = "abcdefghijklmnopqrstuwxyzABCDEFGHIJKLMNOPQRSTUWXYZ0123456789";
            $pass = array();
            $alphaLength = strlen($alphabet) - 1; 
            for ($i = 0; $i < 6; $i++) {
                $n = rand(0, $alphaLength);
                $pass[] = $alphabet[$n];
            }
            $temp_pass= implode($pass); 
            $passHash=hash('sha256', $temp_pass);
            $this->db->where('username',$stuValue);
            $this->db->set('password2',$passHash);
            $this->db->set('password',$passHash);
            $this->db->update('users');
			$output.='<tr><td>'.$userName.'</td>
			<td>'.$fname.' '.$mname.' '.$lname.'</td>';
			$output.='<td>'.$gs_gradesec.'</td>';
			$output.='<td>'.$branch.'</td>';
			
			$output.='<td>'.$temp_pass.'</td>';
			$output.='</tr>';
		}
		
		$output .='</table></div>';
		return $output;
	}
	function fetch_history($branch,$gs_gradesec,$max_year)
	{
		$output='';
		$lastYear=$max_year - 1;
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $address=$row_name->address;
        $output.='<div class="row">
        <div class="col-lg-12 col-12">
        <div class="text-center">
        <h3><u>'.$school_name.'</u></h3>
        <h5><u>Student Grade History in '.$max_year.' & '.$lastYear.' E.C</u></h5>
        </div></div></div>';
		$query=$this->db->query("select fname,mname,lname,gradesec,username from users where academicyear='$max_year' and status='Active' and isapproved='1' and usertype='Student' and grade='$gs_gradesec' and branch='$branch' group by id order by fname,mname,lname ASC");
		if($query->num_rows()>0){
			$output .='<div class="table-responsive">
	        <table class="tabler table-borderedr" width="100%">
	        <tr>
	        	<th>No</th>
	          	<th>Student Name</th>           
	            <th>Branch</th>
	            <th>Current Grade</th>
	            <th>Last Grade</th>
			</tr>';
			$no=1;
			foreach ($query->result() as $stuValue) {
				$stusername=$stuValue->username;
				$queryLast=$this->db->query("select fname,mname,lname,gradesec,username from users where academicyear='$lastYear' and username='$stusername' ");
				if($queryLast->num_rows()>0){
					$row=$queryLast->row();
					$lastGrade=$row->gradesec;
				}else{
					$lastGrade='-';
				}
				$output.='<tr><td>'.$no.'.</td><td>'.$stuValue->fname.' '.$stuValue->mname.' '.$stuValue->lname.'</td>';
				$output.='<td>'.$branch.'</td>';
				$output.='<td>'.$stuValue->gradesec.'</td>';
				$output.='<td>'.$lastGrade.'</td>';
				$output.='</tr>';
				$no++;
			}
		}else{
			$output .='<div class="alert alert-danger alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student history found.
            </div></div>';
		}
		$output .='</table></div>';
		return $output;
	}
	function TopRankStudents($max_year,$quarter){
		$query=$this->db->query("select * from users where status='Active' and usertype='Student' and academicyear='$max_year' and isapproved='1' group by grade ");
        $output ='';
        foreach ($query->result() as $row) { 
        	$id=$row->id;
        	$grade=$row->grade;
        	$gradesec=$row->gradesec;
        	$queryMark=$this->db->query("select s.branch, s.profile, s.fname, s.mname, s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(rank order by rank DESC )from (select sum(total) as rank from reportcard".$max_year." as rc cross join users as s where s.grade='$grade' and s.id=rc.stuid and  rc.quarter= '$quarter' and letter='#' and onreportcard='1' group by stuid order by rank ASC) sm)) as stuRank from reportcard".$max_year." as rc cross join users as s where s.id=rc.stuid and s.grade='$grade' and  rc.quarter= '$quarter' and rc.academicyear='$max_year' and letter='#' and onreportcard='1' group by stuid order by stuRank ASC limit 3");
        	$output.='<div class="card-header"> <small class="text-muted">Grade: '.$row->grade.'</small></div>';
        	foreach ($queryMark->result() as $markValue) {
        		$output .='<ul class="k chat-list list-unstyled m-b-0">
		        	<li class="clearfix">
			        	<a href="#" class="nav-link nav-link-lg">
				        	<img src="'.base_url().'/profile/'.$markValue->profile.'" class="border-circle">
				        	<span class="badge badge-danger"> '.$markValue->stuRank.'</span>
				        	<div class="about">
					        	<div class="name">'.$markValue->fname.' '.$markValue->mname.' <small class="text-muted">'.$markValue->gradesec.'</small>
					        	</div>
					        	<small class="text-muted">('.$markValue->branch.')</small>
					        	<div class="text-success text-small font-600-bold">
					        		<i class="fas fa-check-circle"></i>
					        		'.number_format((float)$markValue->Average,2,'.','').' Total
					        	</div>
				        	</div>
			        	</a>
		        	</li>
	        	</ul>';
        	}
        }
        return $output;
	}
	function TopRankStudentsSection($max_year,$quarter){
		$query=$this->db->query("select * from users where status='Active' and usertype='Student' and academicyear='$max_year' and isapproved='1' group by gradesec ");
        $output ='';
        foreach ($query->result() as $row) { 
        	$id=$row->id;
        	$grade=$row->grade;
        	$gradesec=$row->gradesec;
        	$queryMark=$this->db->query("select s.branch, s.profile,s.fname,s.mname,s.gradesec, sum(total) as Average,FIND_IN_SET(sum(total), (select GROUP_CONCAT(rank order by rank DESC )from (select sum(total) as rank from reportcard".$max_year." as rc cross join users as s where s.id=rc.stuid and rc.grade='$gradesec' and rc.quarter= '$quarter' and letter='#' and onreportcard='1' group by stuid order by rank ASC) sm)) as stuRank from reportcard".$max_year." as rc cross join users as s where s.id=rc.stuid and rc.quarter= '$quarter' and rc.academicyear='$max_year' and rc.grade='$gradesec' and letter='#' and onreportcard='1' group by stuid order by stuRank ASC limit 3 ");
        	$output.='<div class="card-header"> <small class="text-muted">Grade: '.$row->gradesec.'</small></div>';
        	foreach ($queryMark->result() as $markValue) {
        		$output .='<ul class="k chat-list list-unstyled m-b-0">
		        	<li class="clearfix">
			        	<a href="#" class="nav-link nav-link-lg">
				        	<span class="badge badge-info"> '.$markValue->stuRank.'</span>
				        	<div class="about">
					        	<div class="name">'.$markValue->fname.' '.$markValue->mname.'
					        	</div>
					        	<small class="text-muted">('.$markValue->branch.')</small>
					        	<div class="text-warning text-small font-600-bold">
					        		<i class="fas fa-check-circle"></i> '.
					        		number_format((float)$markValue->Average,2,'.','').' Total
					        	</div>
				        	</div>
			        	</a>
		        	</li>
	        	</ul>';
        	}
        }
        return $output;
	}
	function birthdate(){
		$output ='';
		$dateY = date("m-d");
		$query=$this->db->query("select fname,mname,lname,gradesec,dob,usertype,gradesec,profile from users where status='Active' and isapproved='1' and dob LIKE '%-".$dateY."' group by username ");
		if($query->num_rows()>0){
			$output.='<div class="card" style="background-color:#e3e3e3">
                      <div class="card-header">Birth Day Notification</div>';
	        foreach ($query->result_array() as $birthValue) {
	        	$birthdate=$birthValue['dob'];
        		$output .=' <div class="support-ticket media">';
        			if($birthValue['profile']!=''){ 
                        	$output.='<img alt="image" src="'.base_url().'/profile/'.$birthValue['profile'] .'" class="user-img mr-2">';
                    } else { 
                     	$output.='<img alt="image" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
                  	} 
			    $output.='
                <div class="media-body">
                  <span class="font-weight-bold">'.$birthValue['fname'].' '.$birthValue['mname'].' '.$birthValue['lname'].'</span><br>
                  <a href="javascript:void(0)"><i class="fas fa-birthday-cake"></i> Happy Brth Day</a>
                  
                   <small class="text-muted">'.$birthValue['dob'].'<span class="font-weight-bold font-13"> ('.$birthValue['usertype'].')</span></small>

                </div>
              </div>
              <div class="dropdown-divider"></div>';
	        }
	        $output.='</div>';
	    }
        return $output;
	}
	function insertdocument($data){
		$this->db->insert('mydocument',$data);
	}
	function insertnews($data){
		$query=$this->db->insert('blogs',$data);
		if($query){
			echo '1';
		}else{
			echo '0';
		}
	}
	function insertvacancy($data,$todayDate,$expireDate){
		if($expireDate  >= $todayDate){
			$query=$this->db->insert('vacancy',$data);
			if($query){
	            echo '1';
	        }else{
	            echo '0';
	        }
	    }else{
	    	echo '0';
	    }
	}
	function fetchdocuments($user){
		$this->db->where('fileuser',$user);
		$this->db->order_by('id','DESC');
		$query=$this->db->get('mydocument');
		$output='';
		if($query->num_rows()>0){
			$output='<div class="row">';
			foreach ($query->result() as $mydoc) {
				$output.='<div class="col-lg-3 deletedocument'.$mydoc->id.'">
                    <div class="card">
                		<div class="card-statistic-4">
                  			<div class="align-items-center justify-content-between">
                        		<div class="card-content">
                          			<h2 class="mb-3 font-18">'.$mydoc->filename.'
                            			<a href="'.base_url().'mydocument/'.$mydoc->filename.'" class="dwn" download> 
                              			<i class="fas fa-download"></i></a>
                              		</h2>
                           			<p class="mb-0">
                            			<small class="pull-right">
                              				<i data-feather="watch"></i>'.$mydoc->datecreated.'
                            			</small>
                          			</p>
                      			</div> ';
                        		if($mydoc->fileuser ==$_SESSION['username']){ 
                        			$output.='<a href="#"> <button class="btn btn-default deletemydocument" type="submit" id="'.$mydoc->id.'"><span class="text-danger">
                          			<i class="fas fa-trash"></i></span>
                        			</button> </a>';
                       			} 
                        		$output.='
                      		</div>
                  		</div>
                	</div>
              	</div>';
			}
			$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No saved document found.
            </div></div>';
		}
		return $output;
	}
	function loadApplicants(){
		$this->db->order_by('id','DESC');
		$query=$this->db->get('jobapplicants');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $mydoc) {
				$output.='<div class="col-md-6 col-12"> 
					<div class="support-ticket media StudentViewTextInfo">
                    <div class="media-body">
                      <span class="font-weight-bold">'.$mydoc->applyfullname.' </span> &nbsp;&nbsp;
                      <a href="javascript:void(0)">'.$mydoc->applyposition.'</a>';
                      $fileName=$mydoc->applycv;
					    $output.='<a href="'.base_url().'employment/download/'.$fileName.'" class="get-started-btn pull-right">
					        <button class="btn btn-primary" id=""><i class="fas fa-download"></i></button></a><hr>
                      	<p class="my-1">Phone: <u>'.$mydoc->applymobile.'</u> </p>
                       	<p class="my-1">Qualification: <u>'.$mydoc->applyqualification.'</u></p>
                       	<p class="my-1">Experience:  <u> '.$mydoc->applyexperience.'</u>
                      <small class="text-muted pull-right">Applied on '.$mydoc->dateapplied.'</small></p>
                    </div>
                  </div>
                </div>';
			}
			$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No Applicants found.
            </div></div>';
		}
		return $output;
	}
	function fetchvacancy($todayDate){
		$this->db->where('expire >=',$todayDate);
		$this->db->order_by('vid','DESC');
		$query=$this->db->get('vacancy');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $mydoc) {
				$output.='<div class="col-md-12 col-12 deletevacancy'.$mydoc->vid.'">
				<div class="support-ticket media StudentViewTextInfo">
                    <div class="media-body">
                      <span class="font-weight-bold">'.$mydoc->vposition.' 
            			<button class="btn btn-default deletemyvacancy" type="submit" id="'.$mydoc->vid.'"><span class="text-danger">
              			<i class="fas fa-trash-alt"></i> Delete</span>
            			</button> 
            		</a></span><hr>
                      <p>'.substr($mydoc->post, 0, 500).' <a href="#" data-toggle="modal" data-target="#viewPostedVacancyDetail"> <button class="btn btn-default viewmyvacancy" type="submit" id="'.$mydoc->vid.'">Read More
            			</button> </a>
                      <small class="text-muted pull-right">Date '.$mydoc->datepost.'</small></p>
                    </div>
                  </div>
                </div> ';
			}
			$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No vacancy found.
            </div></div>';
		}
		return $output;
	}
	function viewmyvacancyDetail($id){
		$this->db->where('vid ',$id);
		$this->db->order_by('vid','DESC');
		$query=$this->db->get('vacancy');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $mydoc) {
				$output.='<div class="col-md-12 col-12 deletevacancy'.$mydoc->vid.'">
                    <div class="card">
                		<div class="card-statistic-4">
                  			<div class="align-items-center justify-content-between">
                        		<div class="card-content">
                          			<p class="mb-0"><h2 class="mb-3 font-18">'.$mydoc->vposition.' &nbsp;&nbsp; Date Expire: '.$mydoc->expire.' 
                          			 </h2>
                          			</p>
                          			<p class="mb-0"><h2 class="mb-3 font-18">'.$mydoc->post.'</h2>
                          			</p>
                          			<p class="mb-0"><h2 class="mb-3 font-18"><small> Posted By: '.$mydoc->postby.'</small> <small class="time"> <i data-feather="watch"></i>'.$mydoc->datepost.' </small></h2>
                          			</p>
                      			</div> '; 
                        		$output.='
                      		</div>
                  		</div>
                	</div>
              	</div>';
			}
			$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No vacancy found.
            </div></div>';
		}
		return $output;
	}
	function fetchnews(){
		$this->db->order_by('nid','DESC');
		$query=$this->db->get('blogs');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $mydoc) {
				$output.='<div class="col-md-12 deletenews'.$mydoc->nid.'">
					<div class="support-ticket media">
						<div class="media-body">
	                      	<span class="font-weight-bold"><h4>'.$mydoc->ntitle.' <small class="text-muted">Created by <span class="font-weight-bold font-13">'.$mydoc->postby.'</span> &nbsp;&nbsp; '.$mydoc->datepost.'</small> <a href="#"> <button class="btn btn-default deletemynews" type="submit" id="'.$mydoc->nid.'"><span class="text-danger"> <i class="fas fa-trash"></i> Delete</span> </button>  </a></h4></span>
	                      	<p class="my-1">'.$mydoc->description.'</p> ';
	                      	if($mydoc->photo!= ''){
								$output.='<img alt="Picture" src="'.base_url().'/news/'.$mydoc->photo.'" style="height:auto; width:50%;">';
							}
	                      	$output.='
	                    </div>
	                </div><hr>
              	</div>';
			}
			$output.='</div>';
		}else{
			$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No News found.
            </div></div>';
		}
		return $output;
	}
	function deletedocuments($id){
		$this->db->where('id',$id);
		$query=$this->db->delete('mydocument');
	}
	function deletenews($id){
		$this->db->where('nid',$id);
		$query=$this->db->delete('blogs');
	}
	function deletevacancy($id){
		$this->db->where('vid',$id);
		$query=$this->db->delete('vacancy');
	}
	function fetchparents($parentGrade,$branch,$max_year){
		$output='';
		$query_name = $this->db->query("select name from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $columns = [];
		foreach($parentGrade as $grades){
			$columns[] = $grades;
		}
		/*$this->db->group_by('mobile');*/
		$this->db->order_by('mname,lname');
		$this->db->group_by('mname');
		$this->db->group_by('lname');
		$this->db->where('branch',$branch);
		$this->db->where_in('grade', $columns);
		$this->db->where('academicyear',$max_year);
		$this->db->where('usertype','Student');
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$query=$this->db->get('users');
		if($query->num_rows()>0){
			$output.='<div class="table-responsive"> 
            <table class="tabler table-borderedr table-hover" style="width:100%;">
            <thead><tr><th colspan="3" class="text-center">'.$school_name.' Parent`s for the selected grade </th>
            <tr> 
                <th>No.</th>
                <th>Parent/Father Name</th>
                <th>Child`s Grade</th>
                <th>Mother Name</th>
                <th>Academic Year</th> </tr>
            </thead>';
        	$no=1;
			foreach ($query->result() as $fetchparents) {
				$father_Name=$fetchparents->mname;
				$mother_Name=$fetchparents->lname;
				$queryGradesec=$this->db->query("select gradesec,username from users where academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and mname='$father_Name' and lname='$mother_Name' group by username order by gradesec ASC ");
				$output.='<tr>
	                <td>'.$no.'.</td>
	                <td>'.$fetchparents->mname.' '.$fetchparents->lname.'</td><td>';
	                $coun_t=1;
	                foreach($queryGradesec->result() as $rowGradesec){
	                	if($coun_t=='1'){
	                		$output.='<a href="#" class="view_school_parents_child" id="'.$max_year.'" data-toggle="modal" data-target="#view_school_parents_child" value="'.$rowGradesec->username.'"> <span class="text-info"><i class="fas fa-eye"></i>'.$rowGradesec->gradesec.'</span></a>';
	                	}else{
	                		$output.=', <a href="#" class="view_school_parents_child" id="'.$max_year.'" data-toggle="modal" data-target="#view_school_parents_child" value="'.$rowGradesec->username.'"> <span class="text-info"><i class="fas fa-eye"></i> '.$rowGradesec->gradesec.'</span></a>';
	                	}
	                	$coun_t++;
	                }
	                $output.='</td><td>'.$fetchparents->mother_name.' </td>
	                <td>'.$fetchparents->academicyear.'</td>
	            </tr>';
			    $no++;
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		
		return $output;
	}
	function fetch_this_parent_child($username,$max_year){
		$output='';
		$queryGradesec=$this->db->query("select fname,mname,lname, mother_name, gradesec from users where academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and username='$username' ");
		if($queryGradesec->num_rows()>0){
			$output.='<div class="table-responsive"> 
            <table class="tabler table-borderedr table-hover" style="width:100%;">
            <thead><tr><th colspan="3" class="text-center">Student’s detail for the selected grade </th>
            <tr> 
                <th>Student’s Name</th>
                <th>Grade</th>
                <th>Mother Name</th> </tr>
            </thead>';
			foreach($queryGradesec->result() as $row){
				$fName=$row->fname;
				$mName=$row->mname;
				$lName=$row->lname;
				$output.='<tr>
	                <td>'.$fName.' '.$mName.' '.$lName.'</td>';
	                $output.='<td>'.$row->gradesec.' </td>
	                <td>'.$row->mother_name.'</td>
	            </tr>';
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function loadSimilarId(){
		$query=$this->db->query("SELECT *, unique_id,count(unique_id),GROUP_CONCAT(gradesec) as gradesecc from users group by unique_id ,academicyear Having count(unique_id)>1 ");
		$output='';
    	if($query->num_rows()>0){
    		$output='<div class="table-responsive"> 
            <table class="table table-striped table-hover" style="width:100%;">
            <thead><tr> 
                <th>No.</th>
                <th>ID</th>
                <th>Grade</th> </tr>
            </thead>';
            $no=1;
    		foreach ($query->result() as $idValue) {
    			$output.='
				<tr>
	                <td>'.$no.'.</td>
	                <td>'.$idValue->unique_id.'</td>
	                <td>'.$idValue->gradesecc.'</td>
	            </tr>';
			    $no++;
    		}
    	}else{
    		$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No similar ID found.
            </div></div>';
    	}
    	return $output;
	}
	function saveGroup($usergroup,$user){
		$queryUg=$this->db->query("select uname from usegroup where uname='$usergroup' group by uname ");
		if($queryUg->num_rows()<1){
			if($usergroup==trim('superadmin')){
	            $usergroup='superAdmin';
				$data=array(
					'uname'=>$usergroup,
					'datecreated'=>date('M-d-Y'),
					'createdby'=>$user
				);
			}else{
				$data=array(
					'uname'=>ucfirst(strtolower($usergroup)),
					'datecreated'=>date('M-d-Y'),
					'createdby'=>$user
				);
			}
			$this->db->insert('usegroup',$data);
		}
	}
	function saveBgImage($setasbg,$user){
		$queryUg=$this->db->query("select bgname from bgimage where bguser='$user' ");
		if($queryUg->num_rows()>0){
			$data=array(
				'bgname'=>$setasbg,
				'bguser'=>$user
			);
			$this->db->update('bgimage',$data);
		}else{
			$data=array(
				'bgname'=>$setasbg,
				'bguser'=>$user
			);
			$this->db->insert('bgimage',$data);
		}
	}
	function fetch_usergroup(){
		$query=$this->db->query("SELECT * from usegroup group by uname order by uname ASC ");
		return $query;
	}
	function fetchUserGroupRegistration(){
		$query=$this->db->query("SELECT * from usegroup where uname!='superAdmin' group by uname order by uname ASC ");
		return $query;
	}
	function studentRegistrationGrade($max_year){
		$query=$this->db->query("SELECT grade from users where usertype='Student' and academicyear='$max_year' group by grade order by grade ASC ");
		return $query;
	}
	function fetchUserGroup(){
		$query=$this->db->query("SELECT * from usegroup group by uname order by uname ASC ");
		$output='';
    	if($query->num_rows()>0){
    		$output='<div class=""> 
            <table class="table table-striped table-hover" style="width:100%;">
            <thead><tr> 
                <th>No.</th>
                <th>User Group</th>
                <th>User Level</th>
                <th>Access Other Branch</th> </tr>
            </thead>';
            $no=1;
    		foreach ($query->result() as $idValue) {
    			$userLevel=$idValue->userlevel;
    			$output.='
				<tr>
	                <td>'.$no.'.</td>
	                <td>'.$idValue->uname.'
	                <div class="table-links">
		             <a href="#" class="deleteUserGroup text-danger" id="'.$idValue->ugid.'">Delete</a>
		            </div>
	                </td>
	                <td>
	                <select class="form-contsrol groupUserLevel" required="required" name="groupUserLevel" id="groupUserLevel">
                    <option>'.$userLevel.'</option>';
                    for($i=1;$i<=3;$i++){
                    	if($i!=$userLevel){
                    		if($idValue->uname=='Student' || $idValue->uname=='superAdmin' || $idValue->uname=='Admin' || $idValue->uname=='Teacher' || $idValue->uname=='Director'){ 
                    			$output.='<option value="'.$i.'" class="'.$idValue->uname.'" disabled="disabled"> '.$i.' </option>';
                    		}else{
                    			$output.='<option value="'.$i.'" class="'.$idValue->uname.'"> '.$i.' </option>';
                    		}
                    		
                    	}
                    }
                    $output.='
                </select></td>';
	                $userName=$idValue->uname;
					$this->db->where('uname',$userName);
					$this->db->where('accessbranch','1');
					$query=$this->db->get('usegroup');
					if($userLevel =='1'){
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="accessOtherBranch" class="accessOtherBranch" checked="checked" id="'.$idValue->uname.'" value="'.$idValue->uname.'" title="Homepage">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="accessOtherBranch" class="accessOtherBranch" id="'.$idValue->uname.'" value="'.$idValue->uname.'" title="Homepage">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
					}else{
						$output.='<td class="text-center">-</td>';
					}
	                $output.='
	            </tr>';
			    $no++;
    		}
    	}else{
    		$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
    	}
    	return $output;
	}
	function fetchUserGroup_heirarchy(){
		$query=$this->db->query("SELECT * from usegroup where uname!='Student' group by uname order by user_hierarchy ASC ");
		$output='';
    	if($query->num_rows()>0){
    		$totalNums=$query->num_rows();
    		$output.='<span class="text-warning">Note:-Set employee organizational structure position from Top to Bottom. So that any reports will be delivered accordingly.For Example General Manager will be `1` in user heirarchy.</span>
    		<div class=""> 
            <table class="table table-striped table-hover" style="width:100%;">
            <thead><tr> 
                <th>No.</th>
                <th>User Group</th>
                <th>User Hierarchy</th> </tr>
            </thead>';
            $no=1;
    		foreach ($query->result() as $idValue) {
    			$userLevel=$idValue->user_hierarchy;
    			$output.='
				<tr>
	                <td>'.$no.'.</td>
	                <td>'.$idValue->uname.' </td>
	                <td>
	                <select class="form-contsrol groupUserHeirarchy" required="required" name="groupUserHeirarchy" id="groupUserHeirarchy">
                    <option>'.$userLevel.'</option>';
                    for($i=0;$i<=$totalNums;$i++){
                    	if($i!=$userLevel){
                    		$output.='<option value="'.$i.'" class="'.$idValue->uname.'"> '.$i.' </option>';
                    	}
                    }
                    $output.='
                	</select></td>';
	                $output.='
	            </tr>';
			    $no++;
    		}
    	}else{
    		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
    	}
    	return $output;
	}
	function showUserGroup_heirarchy(){
		$queryT=$this->db->query("SELECT * from usegroup where uname!='Student' and user_hierarchy!='0' group by user_hierarchy order by user_hierarchy ASC");
		$output='';
    	if($queryT->num_rows()>0){
    		$output.='<div class="tree"><li>
			    	';
    		foreach ($queryT->result() as $idValue) {
    			$output.='<ul><li>';
    			$num=$idValue->user_hierarchy;
		      	$queryL=$this->db->query("SELECT *, count(user_hierarchy) as totalNum from usegroup where uname!='Student' and  user_hierarchy='$num' group by ugid");
		      	$totalNums=$queryL->num_rows();
		      	if($totalNums>1){
		      		$output.='<ul><li>';
		      		foreach($queryL->result() as $listR){
		      			$output.='<a href="#">'.$listR->uname.'</a>';
		      		}
		      		$output.='</li></ul> ';
		      	}else{
		      		$output.='<ul><a href="#">'.$idValue->uname.'</a></ul>';
		      	}
		      	$output.='</li></ul>';
    		}
    		$output.='</li></div> ';
    	}else{
    		$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
    	}
    	return $output;
	}
	function deleteGroup($ugid){
		$this->db->where('ugid',$ugid);
		$this->db->delete('usegroup');
	}
	function grantUserPermission(){
		$output='';
		$usergroup=$this->db->query("SELECT * from usegroup group by uname order by uname ASC ");
		$output.='<div class="table-responsive">
            <table width="100%" class="tabler table-borderedr">
                <thead>
                    <tr>
                        <th>Permission Name</th><th>Action</th>';
                        foreach($usergroup->result() as $usergroups){ 
	                    	$userName=$usergroups->uname;
	                        $output.='<th class="text-center rotateJossRoster"><div>'.$userName.'</div></th>';
	                    }
                    $output.='</tr></thead>
                <tr>
                    <td rowspan="2">Home Page</td> <td>Post Photo/Text</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','postInfoTPhoto');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="chatPermission" class="postInfoTPhoto" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="HomepagePost">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="chatPermission" class="postInfoTPhoto" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="HomepagePost">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
	                } 
	                $output.='</tr>
	                <tr>
                    <td>Create Polls</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','createPolls');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="chatPermission" class="createPolls" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="HomepagePost">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="chatPermission" class="createPolls" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="HomepagePost">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
	                } 
	                $output.='</tr>
                <tr>
                    <td rowspan="12">Manage Student</td><td>Edit/Delete Student</td> ';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentDE');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentDE" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentDE" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr><tr><td>Student Promotion/Registration</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentPr');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentPr" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentPr" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Student Registration Approval</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentApproval');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentApproval" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentApproval" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Student Placement</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentPl');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentPl" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentPl" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Branch Placement</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','Studentbp');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="Studentbp" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="Studentbp" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Student Vaccination</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentVaccination');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentVaccination" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentVaccination" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Student Incident Report</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentIncident');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentIncident" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentIncident" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student" >
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>View Student</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentVE');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentVE" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentVE" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }

	            	$output.='</tr><tr><td>Grade Group</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','gradeGroup');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="gradeGroup" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="gradeGroup" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Generate Student Password</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentPassword');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentPassword" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentPassword" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Drop Student</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentDrop');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentDrop" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentDrop" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Students Request</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentRequest');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentRequest" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentRequest" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Student">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	            	$output.='</tr>
	            	<tr>
                    <td rowspan="8">Manage Staff</td><td>Edit/Delete Staff</td> ';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffDE');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffDE" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffDE" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr><tr><td>Teacher Placement</td> ';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffPl');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffPl" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffPl" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
                	$output.='</tr><tr><td>Director Placement</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','directorPl');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="directorPl" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="directorPl" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
                	$output.='</tr><tr><td>Homeroom Placement</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','hoomeroomPl');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="hoomeroomPl" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="hoomeroomPl" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Staff Grouping</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffGrouping');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffGrouping" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffGrouping" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Staff Incident</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffIncident');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffIncident" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffIncident" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Staffs Phone</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffPhone');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffPhone" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffPhone" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
						
	                }
	                $output.='</tr><tr><td>Add/Delete Staff Activity</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffActivity');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffActivity" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div> <small class="time">('.$usergroups->uname.')</small></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffActivity" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div> <small class="time">('.$usergroups->uname.')</small></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
                	$output.='</tr>
                    <tr><td rowspan="3">Subject Managment</td><td>Add/Edit/Delete Subject</td> ';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','gradeSubject');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="gradeSubject" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Subject">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="gradeSubject" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Subject">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr><td>የምልከታ መከታታያ ቅፅ</td> ';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','KgSubjectList');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="KgSubjectList" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Subject">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="KgSubjectList" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Subject">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr><td>የምልከታ መከታታያ ሪፖርት</td> ';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','KgSubjectReport');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="KgSubjectReport" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Subject">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="KgSubjectReport" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Subject">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td rowspan="3">Manage ID Card</td> <td>Staff ID</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StaffIDCard');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StaffIDCard" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="IDCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StaffIDCard" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="IDCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <td>Student ID</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentIDCard');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentIDCard" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="IDCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentIDCard" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="IDCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <td>Student Library Entry ID</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','StudentLibraryID');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="StudentLibraryID" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="IDCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="StudentLibraryID" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="IDCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
                <tr><td rowspan="2">Evaluation Mgmt</td> <td>Add/Delete Evaluation</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','Mgmtevaluation');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="Mgmtevaluation" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Evaluation">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="Mgmtevaluation" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Evaluation">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr>
	                <tr> <td>Add/Delete Assesment</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','Mgmtassesment');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="Mgmtassesment" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Evaluation">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="Mgmtassesment" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Evaluation">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td rowspan="4">Manage Attendance</td> <td>Student Attendance</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','studentAttendance');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="studentAttendance" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="studentAttendance" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	            $output.='</tr><tr><td>Student ASP Attendance</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','studentASP');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="studentASP" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="studentASP" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Staff Attendance</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffAttendance');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffAttendance" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffAttendance" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }$output.='</tr><tr><td>Supervision Attendance</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','staffEvaluationAttendance');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="staffEvaluationAttendance" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance" >
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="staffEvaluationAttendance" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Attendance">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	            	$output.='</tr>
	            	<tr>
                    <td rowspan="2">Manage Communication Book</td> <td>Send Communication Book</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','sendcommunicationbook');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="chatPermission" class="sendcommunicationbook" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="CommunicationBook">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="chatPermission" class="sendcommunicationbook" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="CommunicationBook">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Approve Communication Book</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','approvecommunicationbook');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="chatPermission" class="approvecommunicationbook" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="CommunicationBook">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="chatPermission" class="approvecommunicationbook" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="CommunicationBook">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
						
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td rowspan="2">Manage Lesson Plan</td> <td>Add Lesson Plan</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','addlessonplan');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="addlessonplan" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="LessonPlan">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="addlessonplan" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="LessonPlan">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr><tr><td>View Lesson Plan</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','viewlessonplan');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="viewlessonplan" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="LessonPlan">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="viewlessonplan" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="LessonPlan">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	            $output.='</tr>
	            <tr>
                    <td>Manage Homework/Worksheet</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','homeworkworksheet');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="homeworkworksheet" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="HowworkSheet">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="homeworkworksheet" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="HowworkSheet">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Manage Exam</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','studentexam');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="studentexam" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Exam">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="studentexam" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Exam">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td rowspan="7">Manage Mark</td> <td>Add/Delete Mark</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','addstudentmark');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="addstudentmark" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="addstudentmark" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr><tr><td>Prepare Mark Format</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','studentmarkformat');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="studentmarkformat" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="studentmarkformat" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Approve Mark</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','approvemark');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="approvemark" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="approvemark" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>View Mark/Analysis</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','viewstudentmark');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="chatPermission" class="viewstudentmark" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="chatPermission" class="viewstudentmark" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
	                }
	                $output.='</tr> <tr><td> Active/Inactive Division</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','activeInactiveDiv');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="activeInactiveDiv" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="activeInactiveDiv" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="Staff">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr> <tr><td> Lock Mark</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','lockstudentmark');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="lockstudentmark" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="lockstudentmark" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr> <tr><td> Unlock Mark</td>';
                	foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','unlockstudentmark');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="unlockstudentmark" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="unlockstudentmark" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="StudentMark">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	            $output.='</tr>
	            <tr><td rowspan="5">Manage Student Card</td>
                    <td>Report Card</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','reportcard');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="reportcard" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="reportcard" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 

	                $output.='</tr><tr><td>Roster</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','roster');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="roster" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="roster" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Transcript</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','transcript');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="transcript" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="transcript" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Rank Report</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','rankReport');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="rankReport" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="rankReport" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Statistics</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','Statistics');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="Statistics" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="Statistics" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentCard">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='
	            </tr>
	            <tr>
                    <td rowspan="5">Manage Student Basic Skills</td> <td>Add BS Category/Names</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','addRemoveBS');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="addRemoveBS" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="addRemoveBS" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Export Format</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','exportBSFormat');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="exportBSFormat" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="exportBSFormat" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Import BS Excel Data</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','importBSFormat');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="importBSFormat" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="importBSFormat" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Copy Student BS</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','copyStudentBSDATA');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="copyStudentBSDATA" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="copyStudentBSDATA" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Edit Student BS</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','editStudentBSDATA');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="editStudentBSDATA" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="editStudentBSDATA" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="studentbasicskill">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td rowspan="2">Import & Export</td> <td>Export Format</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','exportFile');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="exportFile" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="ImportExport">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="exportFile" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="ImportExport">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr><tr><td>Import File</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','importFile');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="importFile" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="ImportExport">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="importFile" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="ImportExport">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	            $output.='</tr>
	            <tr>
                    <td rowspan="4">Library Management</td> <td>Library Books</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','libraryBooks');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="libraryBooks" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="libraryBooks" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr><tr><td>Borrow Books</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','borrowBooks');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="chatPermission" class="borrowBooks" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="chatPermission" class="borrowBooks" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
						
	                }
	                $output.='</tr><tr><td>Borrow Request</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','borrowRequests');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="borrowRequests" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="borrowRequests" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Generate Report</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','borrowReport');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="borrowReport" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="borrowReport" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                 $output.='</tr>
	            <tr>
                    <td rowspan="7">Inventory Management</td> <td>Stock Category</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','stockCategory');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="stockCategory" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="stockCategory" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='</tr><tr><td>Request Purchase</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','purchaseRequest');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="purchaseRequest" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="purchaseRequest" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Approve Purchase</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','purchaseApprove');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="purchaseApprove" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="purchaseApprove" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Stock Item</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','stockItem');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="stockItem" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="stockItem" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Request Item</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','requestItem');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="requestItem" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="requestItem" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Approve Request</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','approverequest');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="approverequest" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="approverequest" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='</tr><tr><td>Generate Report</td>';
	                foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','generateReport');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="generateReport" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="generateReport" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="inventoryManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	            $output.='</tr>
	            <tr>
                    <td>Fee Management</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','feemanagment');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="feemanagment" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="FeeManagment">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="feemanagment" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="FeeManagment">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Library Management</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','elibrary');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="elibrary" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagment">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="elibrary" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="libraryManagment">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
                <tr>
                    <td>Send Chat/message</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','Chat');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($query->num_rows()>0){
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
		                      <input type="checkbox" name="chatPermission" class="Chat" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="chatMessage">
		                      <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}else{
							$output.='<td class="text-center"><div class="pretty p-switch p-fill">
							<input type="checkbox" name="chatPermission" class="Chat" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="chatMessage">
		                    <div class="state p-success">
		                        <label></label>
		                      </div>
		                    </div></td>';
						}
						
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>School Files</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','schoolfiles');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="schoolfiles" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="schoolFiles">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="schoolfiles" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="schoolFiles">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Website Managment</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','websitemanagment');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="websitemanagment" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="websiteManagment">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="websitemanagment" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="websiteManagment">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Task Managment</td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','taskspage');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel=='1'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="taskspage" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="tasksManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="taskspage" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="tasksManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                    <td>Summer Class Managment </td> <td></td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','summerclass');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="summerclass" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="summerClassManagement">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="summerclass" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="summerClassManagement">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                <td rowspan="3">Staff Performance</td> <td> Feed/Edit Staff Performance</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','manageperformance');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="manageperformance" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="staffperformance">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="manageperformance" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="staffperformance">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>
	            <tr>
                <td> Performance Status</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','performancestatus');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="performancestatus" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="staffperformance">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="performancestatus" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="staffperformance">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                }
	                $output.='
	            </tr>
	            <tr>
                <td> View Self Performance</td>';
                    foreach($usergroup->result() as $usergroups){ 
                    	$userName=$usergroups->uname;
                    	$userLevel=$usergroups->userlevel;
						$this->db->where('usergroup',$userName);
						$this->db->where('allowed','viewmyperformance');
						$this->db->order_by('usergroup','ASC');
						$query=$this->db->get('usergrouppermission');
						if($userLevel!='3'){
							if($query->num_rows()>0){
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
			                      <input type="checkbox" name="chatPermission" class="viewmyperformance" checked="checked" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="staffperformance">
			                      <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}else{
								$output.='<td class="text-center"><div class="pretty p-switch p-fill">
								<input type="checkbox" name="chatPermission" class="viewmyperformance" id="'.$usergroups->uname.'" value="'.$usergroups->uname.'" title="staffperformance">
			                    <div class="state p-success">
			                        <label></label>
			                      </div>
			                    </div></td>';
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
	                } 
	                $output.='
	            </tr>	            
	        </table>
	    </div>';        
        return $output;
	}
	function prepareMarkTable1($max_quarter,$max_year){
		$output='<div class="row">';
		
		$queryStudent=$this->db->query("select us.gradesec from users as us
		where us.academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and branch='EXCELLENCE' and grade='4'
		group by gradesec; ");
		$max_quarter1='Quarter1';
		$branch='EXCELLENCE';
		if($queryStudent->num_rows()>0){ 
			foreach ($queryStudent->result() as $gradesecValue) {
				$gradesec=$gradesecValue->gradesec;
				$this->db->where('subname','Hisab');
				$this->db->set('subname','Mathematics');
				$query=$this->db->update('mark'.$branch.$gradesec.$max_quarter1.$max_year);
				if($query){
				    $this->db->where('subname','Tena & Sewunet Magolimesha');
				    $this->db->set('subname','HPE');
				    $query1=$this->db->update('mark'.$branch.$gradesec.$max_quarter1.$max_year);
				    if($query1){
				        $this->db->where('subname','Kiwena & Eyita Tibebat');
				        $this->db->set('subname','Performing and Visual Arts');
				        $query2=$this->db->update('mark'.$branch.$gradesec.$max_quarter1.$max_year);
				    }
				}
			}
		}
		if($query2){
			$output .='<div class="col-lg-12"><div class="alert alert-success alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
            <i class="fas fa-check-circle"> </i> Table created successfully.
           </div></div></div>';
		}
		$output.='</div>';
		return $output;
	}
	function prepareMarkTable($max_quarter,$max_year){
		$output='';
		$queryBranch=$this->db->query("select name from branch where academicyear='$max_year' group by name ");
		if($queryBranch->num_rows()>0){
			foreach ($queryBranch->result() as $branchValue) {
				$branch=$branchValue->name;
				$queryStudent=$this->db->query("select us.gradesec,max(qu.term) as term from users as us cross join quarter as qu ON qu.termgrade=us.grade where us.academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and branch='$branch' and qu.Academic_year='$max_year' group by us.gradesec ");
				if($queryStudent->num_rows()>0){ 
					foreach ($queryStudent->result() as $gradesecValue) {
						$gradesec=$gradesecValue->gradesec;
						$term=$gradesecValue->term;
						if($term!=='' && $gradesec!==''){
							$fields=array(
								'mid'=>array(
									'type'=>'INT',
									'constraint'=>255,
									'auto_increment'=>TRUE
								),
								'stuid'=>array(
									'type'=>'INT',
									'constraint'=>255
								),
								'mgrade'=>array(
									'type'=>'varchar',
									'constraint'=>25
								),
								'subname'=>array(
									'type'=>'VARCHAR',
									'constraint'=>50
								),
								'evaid'=>array(
									'type'=>'INT',
									'constraint'=>255
								),
								'quarter'=>array(
									'type'=>'VARCHAR',
									'constraint'=>15
								),
								'outof'=>array(
									'type'=>'INT',
									'constraint'=>255
								),
								'value'=>array(
									'type'=>'double'
								),
								'academicyear'=>array(
									'type'=>'VARCHAR',
									'constraint'=>255
								),
								'markname'=>array(
									'type'=>'VARCHAR',
									'constraint'=>25
								),
								'status'=>array(
									'type'=>'INT',
									'constraint'=>2
								),
								'lockmark'=>array(
									'type'=>'INT',
									'constraint'=>2
								),
								'approved'=>array(
									'type'=>'INT',
									'constraint'=>1
								),
								'approvedby'=>array(
									'type'=>'INT',
									'constraint'=>25
								),
								'zeromarkinfo'=>array(
									'type'=>'INT',
									'constraint'=>5
								),
								'mbranch'=>array(
									'type'=>'varchar',
									'constraint'=>25
								)
							);
							$query='';
							$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$branch.$gradesec.$term.$max_year."' ");
	    					if ($queryCheck->num_rows()<1 ){
	    						$this->dbforge->add_field($fields);
								$this->dbforge->add_key('mid',TRUE);
								$query=$this->dbforge->create_table('mark'.$branch.$gradesec.$term.$max_year,TRUE);
								$sql = "CREATE INDEX stu_id ON `mark".$branch.$gradesec.$term.$max_year."`(stuid,mgrade,subname,evaid,markname,mbranch)";
								$this->db->query($sql);	
							}
						}else{
							$output ='2';
						}
					}
					if($query){
						$output ='1';
					}
				}else{
					$output ='2';
				}
			}
		}else{
			$output ='3';
		}
		return $output;
	}
	function prepareBSTable($max_quarter,$max_year){
		$output='';
		$output.='<div class="row">';
		$queryStudent=$this->db->query("select gradesec from users where academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' group by gradesec; "); 
		if($queryStudent->num_rows()>0){
			foreach ($queryStudent->result() as $gradesecValue) {
				$gradesec=$gradesecValue->gradesec;
				$fields=array(
					'id'=>array(
						'type'=>'INT',
						'constraint'=>255,
						'auto_increment'=>TRUE
					),
					'stuid'=>array(
						'type'=>'INT',
						'constraint'=>255
					),
					'grade'=>array(
						'type'=>'varchar',
						'constraint'=>25
					),
					'conduct'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					),
					'bsname'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					),
					'value'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					),
					'quarter'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					),
					'academicyear'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					),
					'datecreated'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					),
					'byuser'=>array(
						'type'=>'varchar',
						'constraint'=>255
					),
					'bsgrade'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					),
					'bsbranch'=>array(
						'type'=>'VARCHAR',
						'constraint'=>255
					)
				);
				$this->dbforge->add_field($fields);
				$this->dbforge->add_key('id',TRUE);
				$query=$this->dbforge->create_table('basicskillvalue'.$gradesec.$max_year,TRUE);		
			}
			if($query){
				$output .='1';
			}
		}else{
			$output .='2';
		}
		$output.='</div>';
		return $output;
	}
	function update_bs_names_values($oldbsnameInfo,$newbsInfo,$max_year,$bsquarterInfo,$grade){
		$output='';
		$queryStudent=$this->db->query("select gradesec from users where academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and grade='$grade' and gradesec!='' group by gradesec "); 
		if($queryStudent->num_rows()>0){
			foreach ($queryStudent->result() as $gradesecValue) {
				$gradesec=$gradesecValue->gradesec;
				$queryCheck = $this->db->query("SHOW TABLES LIKE 'basicskillvalue".$gradesec.$max_year."' ");
        		if ($queryCheck->num_rows()>0 ){
					$this->db->where('academicyear',$max_year);
					$this->db->where('bsname',$oldbsnameInfo);
					$this->db->where('bsgrade',$gradesec);
					$this->db->where('quarter',$bsquarterInfo);
					$this->db->set('bsname',$newbsInfo);
					$query=$this->db->update('basicskillvalue'.$gradesec.$max_year);
					if($query){
						$output.='<span>Data updated for '.$gradesec.'</span><br>';
					}else{
						$output.='<span>Data not updated for '.$gradesec.'</span><br>';
					}	
				}else{
					$output.='<span>No table found for '.$gradesec.'</span><br>';
				}	
			}	
		}else{
			$output .=' Ooops no section found for grade '.$grade.'.<br>';
		}

		return $output;
	}
	function update_bs_names_values_key($oldbsnameInfo,$newbsInfo,$max_year){
		$output='';
		$queryStudent=$this->db->query("select gradesec from users where academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' and gradesec!='' group by gradesec "); 
		if($queryStudent->num_rows()>0){
			foreach ($queryStudent->result() as $gradesecValue) {
				$gradesec=$gradesecValue->gradesec;
				$queryCheck = $this->db->query("SHOW TABLES LIKE 'basicskillvalue".$gradesec.$max_year."' ");
        		if ($queryCheck->num_rows()>0 ){
					$this->db->where('academicyear',$max_year);
					$this->db->where('value',$newbsInfo);
					$this->db->where('bsgrade',$gradesec);
					$this->db->set('value',$oldbsnameInfo);
					$query=$this->db->update('basicskillvalue'.$gradesec.$max_year);
					if($query){
						$output.='<span>Data updated for '.$gradesec.'</span><br>';
					}else{
						$output.='<span>Data not updated for '.$gradesec.'</span><br>';
					}	
				}else{
					$output.='<span>No table found for '.$gradesec.'</span><br>';
				}	
			}	
		}else{
			$output .=' Ooops no section found for grade '.$grade.'.<br>';
		}

		return $output;
	}
	function searchFinanceStudents($searchItem,$branch,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));

		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));

		$this->db->or_like('grade', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        <th>No.</th>
	            <th>ID</th>
	            <th>Name</th>
	            <th>Gr. & Sec</th>
	            <th>Gender</th>
	            <th>Branch</th>
	        </tr>
	        </thead>
	        <tbody>';
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'.</td>
				<td>'.$value->unique_id.' 
				<div class="table-links">
	             <a href="#" class="deletestudent text-danger" id="'.$value->id.'"><i class="fas fa-trash-alt"></i></a>
	             <div class="bullet"></div>
	             <a href="#" class="dropstudent text-warning" id="'.$value->id.'"><i class="fas fa-user-times"></i></a>
	             <div class="bullet"></div>
	             <a href="#" class="editstudent text-success" id="'.$value->unique_id.'" value="'.$max_year.'"><i class="fas fa-user-edit"></i></a>
	             <div class="bullet"></div>
	             <a href="#" class="viewStudentPrint" value="" data-toggle="modal" data-target="#printStudentViewModal" id="'.$value->unique_id.'"> <span class="text-info"><i class="fas fa-eye"></i></span></a>
	            </div>
				</td>
	            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' 
	             <div class="table-links">
	             	<a href="#" class="resetPassword text-warning" id="'.$value->unique_id.'">Reset Password</a>
	            </div>
	            </td> 
	            <td>'.$value->gradesec.'</td>
	            <td>'.$value->gender.'</td>
	            <td>'.$value->branch.' </td>  
	            </tr>';
	            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
            </div></div>';
		}
		return $output;
	}
	function searchAdminStudents($searchItem,$branch,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		

		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));

		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));

		$this->db->or_like('grade', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        <th>No.</th>
	            <th>ID</th>
	            <th>Name</th>
	            <th>Gr. & Sec</th>
	            <th>Gender</th>
	            <th>Branch</th>
	            <th>Mark</th>
	        </tr>
	        </thead>
	        <tbody>';
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'.</td>
				<td>'.$value->unique_id.' 
				<div class="table-links">
	             <a href="#" class="deletestudent text-danger" id="'.$value->id.'"><i class="fas fa-trash-alt"></i></a>
	             <div class="bullet"></div>
	             <a href="#" class="dropstudent text-warning" id="'.$value->id.'"><i class="fas fa-user-times"></i></a>
	             <div class="bullet"></div>
	             <a href="#" class="editstudent text-success" id="'.$value->unique_id.'" value="'.$max_year.'" data-toggle="modal" data-target="#editStudentInfoPage"><i class="fas fa-user-edit"></i></a>
	             <div class="bullet"></div>
	             <a href="#" class="viewStudentPrint" value="" data-toggle="modal" data-target="#printStudentViewModal" id="'.$value->unique_id.'"> <span class="text-info"><i class="fas fa-eye"></i></span></a>
	            </div>
				</td>
	            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' 
	             <div class="table-links">
	             	<a href="#" class="resetPassword text-warning" id="'.$value->unique_id.'">Reset Password</a>
	             	<div class="bullet"></div>
             		<a href="#" class="leavingRequest text-info" id="'.$value->unique_id.'" value="'.$max_year.'"><i class="fas fa-user-minus"></i></a>
	            </div>
	            </td> 
	            <td>'.$value->gradesec.'</td>
	            <td>'.$value->gender.'</td>
	            <td>'.$value->branch.' </td>  
	            <td class="text-center"><a href="#" target="_blanck"><button class="btn btn-default" id="viewStuAttendance" name="'.$max_year.'" value="'.$value->username.'"><span class="text-info"> View</span></button></a></td>
	            </tr>';
	            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
            </div></div>';
		}
		return $output;
	}
	function searchStudents($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        <th>No.</th>
	            <th>ID</th>
	            <th>Name</th>
	            <th>Gr. & Sec</th>
	            <th>Gender</th>
	            <th>Branch</th>
	            <th>Mark</th>
	        </tr>
	        </thead>
	        <tbody>';
	        $no=1;
			foreach ($query ->result() as $value) {

			$id=$value->id;
			$output .='<tr class="delete_mem'.$value->id.'">
			<td>'.$no.'.</td>
			<td>'.$value->unique_id.'
            <div class="table-links">
             <a href="#" class="deletestudent text-danger" id="'.$value->id.'"><i class="fas fa-trash-alt"></i></a>
             <div class="bullet"></div>
             <a href="#" class="dropstudent text-warning" id="'.$value->id.'"><i class="fas fa-user-times"></i></a>
             <div class="bullet"></div>
             <a href="#" class="editstudent text-success" id="'.$value->unique_id.'" value="'.$max_year.'" data-toggle="modal" data-target="#editStudentInfoPage"><i class="fas fa-user-edit"></i></a>
             <div class="bullet"></div>
             <a href="#" class="viewStudentPrint" value="" data-toggle="modal" data-target="#printStudentViewModal" id="'.$value->unique_id.'"> <span class="text-info"><i class="fas fa-eye"></i></span></a>
            </div>
            </td>
            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.'
            <div class="table-links">
             	<a href="#" class="resetPassword text-warning" id="'.$value->unique_id.'">Reset Password</a>
             	<div class="bullet"></div>
             	<a href="#" class="leavingRequest text-info" id="'.$value->unique_id.'" value="'.$max_year.'"><i class="fas fa-user-minus"></i></a>
            </div>
            </td> ';
           
            $output.='<td>'.$value->gradesec.'</td>';
            
            $output.='
            <td>'.$value->gender.'</td>
            <td>'.$value->branch.' </td>     
            <td class="text-center"><a href="#" target="_blanck"><button class="btn btn-default" id="viewStuAttendance" name="'.$max_year.'" value="'.$value->username.'"><span class="text-info"> View</span></button></a> </td> 
            </tr>';
            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
            </div></div>';
		}
		return $output;
	}
	function searchSummerStudents($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('summerstudent');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        <th>No.</th>
	            <th>ID</th>
	            <th>Name</th>
	            <th>Gr. & Sec</th>
	            <th>Gender</th>
	            <th>Branch</th>
	            <th>Mark & Attendance</th>
	        </tr>
	        </thead>
	        <tbody>';
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .='<tr class="delete_mem'.$value->id.'">
				<td>'.$no.'.</td>
				<td>'.$value->username.'
	            <div class="table-links">
	             <a href="#" class="deleteSummerStudent text-danger" id="'.$value->id.'">Delete</a>
	             <div class="bullet"></div>
	             <a href="#" class="editSummerStudent text-success" id="'.$value->unique_id.'">Edit</a>
	            </div>
	            </td>
	            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> 
	            <td>'.$value->gradesec.'</td>
	            <td>'.$value->gender.'</td>
	            <td>'.$value->branch.' </td>  
	            </tr>';
	            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
            </div></div>';
		}
		return $output;
	}
	function searchStudentsToLockMark($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        <th>No.</th>
	            <th>ID</th>
	            <th>Name</th>
	            <th>Gr & Sec</th>
	            <th>Gender</th>
	            <th>Branch</th>
	            <th>Lock</th>
	        </tr>
	        </thead>
	        <tbody>';
	        $no=1;
			foreach ($query ->result() as $value) {

			$id=$value->id;
			$output .='<tr class="lockStudent'.$value->id.'">
			<td>'.$no.'.</td>
			<td>'.$value->unique_id.' </td>
            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> ';
            $output.='<td>'.$value->gradesec.'</td>';
            $output.='
            <td>'.$value->gender.'</td>
            <td>'.$value->branch.' </td>     
            <td>';
            $uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='lockstudentmark' order by id ASC "); 
            if($uperStuDE->num_rows() >0){
	            $output.='<button class="btn btn-info lockThisStudentMark" id="lockThisStudentMark'.$value->id.'" name="'.$max_year.'" value="'.$value->id.'"> Lock</button>';
	        }
            $uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='unlockstudentmark' order by id ASC ");  
            if($uperStuDE->num_rows() >0){
	            $output.='<button class="btn btn-warning unlockThisStudentMark" id="unlockThisStudentMark'.$value->id.'" name="'.$max_year.'" value="'.$value->id.'"> UnLock</button>';
	        }
            $output.='</td> 
            </tr>';
            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
            </div></div>';
		}
		return $output;
	}
	function searchAdminStudentsToLockMark($searchItem,$branch,$max_year){
		$this->db->order_by('fname,mname,lname','ASC');
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		

		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));

		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));

		$this->db->or_like('grade', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
			$output .='
	         <div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	        <thead>
	        <tr>
	        <th>No.</th>
	            <th>ID</th>
	            <th>Name</th>
	            <th>Gr & Sec</th>
	            <th>Gender</th>
	            <th>Branch</th>
	            <th>Lock</th>
	        </tr>
	        </thead>
	        <tbody>';
	        $no=1;
			foreach ($query ->result() as $value) {

			$id=$value->id;
			$output .='<tr class="lockStudent'.$value->id.'">
			<td>'.$no.'.</td>
			<td>'.$value->unique_id.' </td>
            <td>'.$value->fname .' '.$value->mname.' '.$value->lname.' </td> ';
            $output.='<td>'.$value->gradesec.'</td>';
            $output.='
            <td>'.$value->gender.'</td>
            <td>'.$value->branch.' </td>     
            <td>';
            $uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='lockstudentmark' order by id ASC "); 
            if($uperStuDE->num_rows() >0){
	            $output.='<button class="btn btn-info lockThisStudentMark" id="lockThisStudentMark'.$value->id.'" name="'.$max_year.'" value="'.$value->id.'"> Lock</button>';
	        }
            $uperStuDE=$this->db->query("SELECT * from usergrouppermission where usergroup='".$_SESSION['usertype']."' and tableName='StudentMark' and allowed='unlockstudentmark' order by id ASC ");  
            if($uperStuDE->num_rows() >0){
	            $output.='<button class="btn btn-warning unlockThisStudentMark" id="unlockThisStudentMark'.$value->id.'" name="'.$max_year.'" value="'.$value->id.'"> UnLock</button>';
	        }
            $output.='</td> 
            </tr>';
            $no++;
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
            </div></div>';
		}
		return $output;
	}
	function fetchNoGrades($max_year){
		$queryStudent=$this->db->query("select grade from users where academicyear='$max_year' and usertype='Student' group by grade ");
		$output='';
		if($queryStudent->num_rows()>0){
			$output.='<div class="row">';
			foreach ($queryStudent->result() as $gradeValue) {
				$output.='<ul class="nav nav-tabs" role="tablist">
                  <li class="nav-item">
                    <a class="nav-link selectThisGrade" value="'.$gradeValue->grade.'" href="#" role="tab" aria-selected="true">'.$gradeValue->grade.'
                    </a>
                  </li>
                </ul>';
			}
			$output.='</div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No grade found.
            </div></div>';
		}
		return $output;
	}
	function fetchNoSections($grade,$max_year){
		$queryStudent=$this->db->query("select section from users where academicyear='$max_year' and usertype='Student' and grade='$grade' group by section ");
		$output='';
		if($queryStudent->num_rows()>0){
			$output.='<div class="row">';
			foreach ($queryStudent->result() as $gradeValue) {
				$output.='<ul class="nav nav-tabs" role="tablist">
                  <li class="nav-item">
                    <a class="nav-link" id="'.$gradeValue->section.'" href="#" role="tab"
                      aria-selected="true">'.$gradeValue->section.'</a>
                  </li>
                </ul>';
			}
			$output.='</div>';
			$totalSec= $queryStudent->num_rows();
			$output.='<div class="alert alert-info alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> There are '.$totalSec.' Sections.
            </div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No grade found.
            </div></div>';
		}
		return $output;
	}
	function nOfStudents($max_year){
		$queryStu=$this->db->query("select id from users where academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' group by id ");
		$output='';
		$totalStudent=$queryStu->num_rows();
		$output .='<div class="badge badge-light alert-dismissible show fade">
                <div class="alert-body">
                <i class="fas fa-check-circle"> </i> No of Student '.$totalStudent.'.
        </div></div>';
		return $output;
	}
	function fetchContype($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(congrade) as gradess from conductype where academicyear ='$max_year' group by coname,condesc order by cid ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="card">
			<div class="table-responsive">
	        <table class="table table-stripped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Grade</th>
	                    <th>Conduct Value</th>
	                    <th>Conduct Description</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="deleteCon'.$bsnames->coname.''.$bsnames->condesc.'">
	                <td>'.$no.'.</td>
	                <td>'.$bsnames->gradess.'</td>
	                <td>'.$bsnames->coname.'
	                <div class="table-links"> <a href="#" 
	                class="deletecontype" id="'.$bsnames->condesc.'" value="'.$bsnames->coname.'">
	                 <span class="text-danger"><i class="fas fa-trash"></i></span> 
	                 </a>
	                 </div> </td>
	                <td>'.$bsnames->condesc.'</td>
	                <td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->datecreated.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No conduct value found.
        	</div></div>';
		}
		return $output;
	}
	function deleteBsCategory($id,$max_year,$quarter){
		$this->db->where(array('bscategory'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('season'=>$quarter));
		$this->db->delete('bscategory');
	}
	function delete_subject_Category_list($id,$max_year){
		$this->db->where(array('category_name'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('kg_subject_list_category');
	}
	function delete_subject_Header($id,$max_year){
		$this->db->where(array('sub_name'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('kg_subject_header');
	}
	function deleteConType($id,$delte_desc,$max_year){
		$this->db->where(array('coname'=>$id));
		$this->db->where(array('condesc'=>$delte_desc));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('conductype');
	}
	function fetch_bstype($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(btgrade) as gradess from bstype where academicyear ='$max_year' group by bstype,bsdesc order by bstid ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="card">
			<div class="table-responsive">
	        <table class="table table-stripped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Grade</th>
	                    <th>Basic Skill Type</th>
	                    <th>Basic Skill Description</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="delete_bs'.$bsnames->bstype.'">
	                <td>'.$no.'.</td><td>'.$bsnames->gradess.'</td>
	                <td>'.$bsnames->bstype.'
	                <div class="table-links"> <a href="#" 
	                class="deletebaskilltype" value="'.$bsnames->bstype.'">
	                 <span class="text-danger"><i class="fas fa-trash"></i></span> 
	                 </a><div class="bullet"></div>
	                 <a href="#" class="editbaskilltype" value="'.$bsnames->bstype.'">
	                 <span class="text-info"><i class="fas fa-pen"></i></span> 
	                 </a> </div> </td>
	                <td>'.$bsnames->bsdesc.'</td>
	                <td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->datecreated.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No basic skill type found.
        	</div></div>';
		}
		return $output;
	}
	function subject_value_list($max_year){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(value_grade) as gradess from kg_subject_value where academicyear ='$max_year' group by value_name,value_desc order by id ASC");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="card">
			<div class="table-responsive">
	        <table class="tabler table-bordered table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Grade</th>
	                    <th>Value Name</th>
	                    <th>Value Description</th>
	                    <th>Academic Year</th>
	                    <th>Date Created</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<tr class="delete_bs'.$bsnames->value_name.'">
	                <td>'.$no.'.</td><td>'.$bsnames->gradess.'</td>
	                <td>'.$bsnames->value_name.'<span class="badge badge-light">'.$bsnames->value_percent.'</span>
	                <div class="table-links"> <a href="#" 
	                class="deletesubject_list_value" value="'.$bsnames->value_name.'">
	                 <span class="text-danger"><i class="fas fa-trash"></i></span> 
	                 </a><div class="bullet"></div>
	                 <a href="#" class="editsubject_list_value" value="'.$bsnames->value_name.'">
	                 <span class="text-info"><i class="fas fa-pen"></i></span> 
	                 </a> </div> </td>
	                <td>'.$bsnames->value_desc.'</td>
	                <td>'.$bsnames->academicyear.'</td>
	                <td>'.$bsnames->datecreated.'</td>
	            </tr>';
	            $no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fethchBsToEdit($bstid,$max_year,$quarter,$category){
		$query=$this->db->query("select * from basicskill where academicyear='$max_year' and bsname='$bstid' and season='$quarter' and bscategory='$category' group by bsname order by bsname ASC ");
		$queryGrade=$this->db->query("select * from basicskill where academicyear='$max_year' and bsname='$bstid' and season='$quarter' and bscategory='$category' group by grade order by grade ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="dropdown-divider"></div><div class="row">';
			foreach ($queryGrade->result() as $bsGrades) {
				$grade=$bsGrades->grade;
				$queryNumRows=$this->db->query("select * from basicskill where academicyear='$max_year' and season='$quarter' and grade='$grade' group by bsname order by bsname ASC ");
				$allbS=$queryNumRows->num_rows();
				$output .='<div class="col-lg-6 col-12"> 
				<div class="StudentViewTextInfo"> 
				<button class="btn btn-danger btn-sm" id="deleteThisGradeBSNAme" value="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bsGrades->bsname.'">Delete Gr. '.$bsGrades->grade.'</button> <div class="bullet"></div>
				<div class="pretty p-icon p-smooth">
					<input type="checkbox" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" name="changeBSNameForGrade" value="'.$bsGrades->grade.'" checked="checked">
          	  		<div class="state p-success">
                		<i class="icon fa fa-check"></i>
                		<label></label>'.$bsGrades->grade.'
              		</div>
      			</div>';
      			if($bsGrades->subjectrow=='1'){
      				$output.='
					<div class="pretty p-switch p-fill">
	                  <input type="checkbox" name="specificaddOnSubRowGs" value="'.$bsGrades->season.'" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" checked="checked">
	                  <div class="state p-success">
	                    <label></label>Subject Row
	                  </div>
	                </div>';
	            }else{
	            	$output.='
					<div class="pretty p-switch p-fill">
	                  <input type="checkbox" name="specificaddOnSubRowGs" value="'.$bsGrades->season.'" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" >
	                  <div class="state p-success">
	                    <label></label>Subject Row
	                  </div>
	                </div>';
	            }
	            $output.='Order<select class="form-contrlol specificbsNamessubOrderJo" required="required" name="specificbsNamessubOrderJo" id="specificbsNamessubOrderJo">';
					for ($i=1; $i <=$allbS ; $i++) { 
						if($i==$bsGrades->bsorder){
							$output.='<option selected="selected" title="'.$bsGrades->grade.'" id="'.$bsGrades->bsname.'" name="'.$bsGrades->season.'" value="'.$i.'">'.$i.'</option>';
						}else{
							$output.='<option title="'.$bsGrades->grade.'" id="'.$bsGrades->bsname.'" name="'.$bsGrades->season.'" value="'.$i.'">'.$i.'</option>';
						}
					}
				$output.='</select>';
	            $queryBSCategory=$this->db->query("select bc.bscategory,bc.bcgrade from bscategory as bc where  bc.academicyear='$max_year' and season='$quarter' group by bc.bscategory order by bc.bcorder ASC ");
	            $output.='<select class="form-contro changeBSCategory" required="required" name="changeBSCategory" id="changeBSCategory">';
	            foreach ($queryBSCategory->result() as $queryBSCategorys) {
					if($queryBSCategorys->bscategory==$category ){
						$output.='<option value="'.$queryBSCategorys->bscategory.'" id="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bstid.'" selected="selected">'.$queryBSCategorys->bscategory.'</option> ';
					}else{
						$output.='<option value="'.$queryBSCategorys->bscategory.'" id="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bstid.'">'.$queryBSCategorys->bscategory.'</option> ';
					}
				}
      			$output.='</select></div> </div>' ;
			}
			$output.='</div> ';
			$output.='<div class="row">';
			foreach ($query->result() as $bsnames) {
				$output.='<div class="col-lg-10 col-12"> 
				<input type ="hidden" name="" id="bsquarterInfo" value="'.$bsnames->season.'" >
					<input type ="hidden" name="" id="bsnameInfo" value="'.$bsnames->bsname.'" >';
					$output.='<input type="text" class="form-control bsInfo" name="bstid" value="'.$bsnames->bsname.'"> 
				</div>
				<div class="col-lg-2 col-12">';
					$output.='<button class="btn btn-success btn-block" id="saveBsInfo" value="'.$bstid.'">Save Changes</button>
				</div> ';
			}
			$output.='</div> ';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fethchBsToEditDirector($bstid,$max_year,$quarter,$category,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join directorplacement as dp ON dp.grade=u.gradesec where dp.staff='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){
			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("select * from basicskill where academicyear='$max_year' and bsname='$bstid' and season='$quarter' and bscategory='$category' and grade='$grade' group by bsname order by bsname ASC ");
				$queryGrade=$this->db->query("select * from basicskill where academicyear='$max_year' and bsname='$bstid' and season='$quarter' and bscategory='$category' and grade='$grade' group by grade order by grade ASC ");
				
				if($query->num_rows()>0){
					$output.='<div class="dropdown-divider"></div><div class="row">';
					foreach ($queryGrade->result() as $bsGrades) {
						$grade=$bsGrades->grade;
						$queryNumRows=$this->db->query("select * from basicskill where academicyear='$max_year' and season='$quarter' and grade='$grade' group by bsname order by bsname ASC ");
						$allbS=$queryNumRows->num_rows();
						$output .='<div class="col-lg-6 col-12"> 
						<div class="StudentViewTextInfo"> 
						<button class="btn btn-danger btn-sm" id="deleteThisGradeBSNAme" value="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bsGrades->bsname.'">Delete Gr. '.$bsGrades->grade.'</button> <div class="bullet"></div>
						<div class="pretty p-icon p-smooth">
							<input type="checkbox" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" name="changeBSNameForGrade" value="'.$bsGrades->grade.'" checked="checked">
		          	  		<div class="state p-success">
		                		<i class="icon fa fa-check"></i>
		                		<label></label>'.$bsGrades->grade.'
		              		</div>
		      			</div>';
		      			if($bsGrades->subjectrow=='1'){
		      				$output.='
							<div class="pretty p-switch p-fill">
			                  <input type="checkbox" name="specificaddOnSubRowGs" value="'.$bsGrades->season.'" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" checked="checked">
			                  <div class="state p-success">
			                    <label></label>Subject Row
			                  </div>
			                </div>';
			            }else{
			            	$output.='
							<div class="pretty p-switch p-fill">
			                  <input type="checkbox" name="specificaddOnSubRowGs" value="'.$bsGrades->season.'" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" >
			                  <div class="state p-success">
			                    <label></label>Subject Row
			                  </div>
			                </div>';
			            }
			            $output.='Order<select class="form-contrlol specificbsNamessubOrderJo" required="required" name="specificbsNamessubOrderJo" id="specificbsNamessubOrderJo">';
							for ($i=1; $i <=$allbS ; $i++) { 
								if($i==$bsGrades->bsorder){
									$output.='<option selected="selected" title="'.$bsGrades->grade.'" id="'.$bsGrades->bsname.'" name="'.$bsGrades->season.'" value="'.$i.'">'.$i.'</option>';
								}else{
									$output.='<option title="'.$bsGrades->grade.'" id="'.$bsGrades->bsname.'" name="'.$bsGrades->season.'" value="'.$i.'">'.$i.'</option>';
								}
							}
						$output.='</select>';
			            $queryBSCategory=$this->db->query("select bc.bscategory,bc.bcgrade from bscategory as bc where  bc.academicyear='$max_year' and season='$quarter' group by bc.bscategory order by bc.bcorder ASC ");
			            $output.='<select class="form-contro changeBSCategory" required="required" name="changeBSCategory" id="changeBSCategory">';
			            foreach ($queryBSCategory->result() as $queryBSCategorys) {
							if($queryBSCategorys->bscategory==$category ){
								$output.='<option value="'.$queryBSCategorys->bscategory.'" id="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bstid.'" selected="selected">'.$queryBSCategorys->bscategory.'</option> ';
							}else{
								$output.='<option value="'.$queryBSCategorys->bscategory.'" id="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bstid.'">'.$queryBSCategorys->bscategory.'</option> ';
							}
						}
		      			$output.='</select></div> </div>' ;
					}
					$output.='</div> ';
					$output.='<div class="row">';
					foreach ($query->result() as $bsnames) {
						$output.='<div class="col-lg-10 col-12"> 
						<input type ="hidden" name="" id="bsquarterInfo" value="'.$bsnames->season.'" >
							<input type ="hidden" name="" id="bsnameInfo" value="'.$bsnames->bsname.'" >';
							$output.='<input type="text" class="form-control bsInfo" name="bstid" value="'.$bsnames->bsname.'"> 
						</div>
						<div class="col-lg-2 col-12">';
							$output.='<button class="btn btn-success btn-block" id="saveBsInfo" value="'.$bstid.'">Save Changes</button>
						</div> ';
					}
					$output.='</div> ';
				}else{
					$output.='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No record found.
		        	</div></div>';
				}
			}
		}
		return $output;
	}
	function fethchBsToEditTeacher($bstid,$max_year,$quarter,$category,$user){
		$output='';
		$queryChk=$this->db->query("select u.grade from users as u cross join hoomroomplacement as dp ON dp.roomgrade=u.gradesec where dp.teacher='$user' and dp.academicyear='$max_year' and isapproved='1' and status='Active' and u.academicyear='$max_year' group by u.grade  ");
		if($queryChk->num_rows()>0){
			foreach($queryChk->result() as $rowGrade){
				$grade=$rowGrade->grade;
				$query=$this->db->query("select * from basicskill where academicyear='$max_year' and bsname='$bstid' and season='$quarter' and bscategory='$category' and grade='$grade' group by bsname order by bsname ASC ");
				$queryGrade=$this->db->query("select * from basicskill where academicyear='$max_year' and bsname='$bstid' and season='$quarter' and bscategory='$category' and grade='$grade' group by grade order by grade ASC ");
				
				if($query->num_rows()>0){
					$output.='<div class="dropdown-divider"></div><div class="row">';
					foreach ($queryGrade->result() as $bsGrades) {
						$grade=$bsGrades->grade;
						$queryNumRows=$this->db->query("select * from basicskill where academicyear='$max_year' and season='$quarter' and grade='$grade' group by bsname order by bsname ASC ");
						$allbS=$queryNumRows->num_rows();
						$output .='<div class="col-lg-6 col-12"> 
						<div class="StudentViewTextInfo"> 
						<button class="btn btn-danger btn-sm" id="deleteThisGradeBSNAme" value="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bsGrades->bsname.'">Delete Gr. '.$bsGrades->grade.'</button> <div class="bullet"></div>
						<div class="pretty p-icon p-smooth">
							<input type="checkbox" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" name="changeBSNameForGrade" value="'.$bsGrades->grade.'" checked="checked">
		          	  		<div class="state p-success">
		                		<i class="icon fa fa-check"></i>
		                		<label></label>'.$bsGrades->grade.'
		              		</div>
		      			</div>';
		      			if($bsGrades->subjectrow=='1'){
		      				$output.='
							<div class="pretty p-switch p-fill">
			                  <input type="checkbox" name="specificaddOnSubRowGs" value="'.$bsGrades->season.'" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" checked="checked">
			                  <div class="state p-success">
			                    <label></label>Subject Row
			                  </div>
			                </div>';
			            }else{
			            	$output.='
							<div class="pretty p-switch p-fill">
			                  <input type="checkbox" name="specificaddOnSubRowGs" value="'.$bsGrades->season.'" id="'.$bsGrades->grade.'" class="'.$bsGrades->bsname.'" >
			                  <div class="state p-success">
			                    <label></label>Subject Row
			                  </div>
			                </div>';
			            }
			            $output.='Order<select class="form-contrlol specificbsNamessubOrderJo" required="required" name="specificbsNamessubOrderJo" id="specificbsNamessubOrderJo">';
							for ($i=1; $i <=$allbS ; $i++) { 
								if($i==$bsGrades->bsorder){
									$output.='<option selected="selected" title="'.$bsGrades->grade.'" id="'.$bsGrades->bsname.'" name="'.$bsGrades->season.'" value="'.$i.'">'.$i.'</option>';
								}else{
									$output.='<option title="'.$bsGrades->grade.'" id="'.$bsGrades->bsname.'" name="'.$bsGrades->season.'" value="'.$i.'">'.$i.'</option>';
								}
							}
						$output.='</select>';
			            $queryBSCategory=$this->db->query("select bc.bscategory,bc.bcgrade from bscategory as bc where  bc.academicyear='$max_year' and season='$quarter' group by bc.bscategory order by bc.bcorder ASC ");
			            $output.='<select class="form-contro changeBSCategory" required="required" name="changeBSCategory" id="changeBSCategory">';
			            foreach ($queryBSCategory->result() as $queryBSCategorys) {
							if($queryBSCategorys->bscategory==$category ){
								$output.='<option value="'.$queryBSCategorys->bscategory.'" id="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bstid.'" selected="selected">'.$queryBSCategorys->bscategory.'</option> ';
							}else{
								$output.='<option value="'.$queryBSCategorys->bscategory.'" id="'.$bsGrades->grade.'" name="'.$quarter.'" title="'.$bstid.'">'.$queryBSCategorys->bscategory.'</option> ';
							}
						}
		      			$output.='</select></div> </div>' ;
					}
					$output.='</div> ';
					$output.='<div class="row">';
					foreach ($query->result() as $bsnames) {
						$output.='<div class="col-lg-10 col-12"> 
						<input type ="hidden" name="" id="bsquarterInfo" value="'.$bsnames->season.'" >
							<input type ="hidden" name="" id="bsnameInfo" value="'.$bsnames->bsname.'" >';
							$output.='<input type="text" class="form-control bsInfo" name="bstid" value="'.$bsnames->bsname.'"> 
						</div>
						<div class="col-lg-2 col-12">';
							$output.='<button class="btn btn-success btn-block" id="saveBsInfo" value="'.$bstid.'">Save Changes</button>
						</div> ';
					}
					$output.='</div> ';
				}else{
					$output.='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No record found.
		        	</div></div>';
				}
			}
		}
		return $output;
	}
	function editlist_name($bstid,$max_year){
		$query=$this->db->query("select * from kg_subject_list_name where academicyear='$max_year' and sname='$bstid' group by sname order by sname ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row"> ';
			foreach ($query->result() as $bsnames) {
				$output.='<div class="col-lg-8 col-8"> 
				<input type ="hidden" name="" id="listnameInfo" value="'.$bsnames->sname.'" >';
				$output.='<input type="text" class="form-control sub_listInfo" name="bstid" value="'.$bsnames->sname.'"> </div><div class="col-lg-4 col-4">';
				$output.='<button class="btn btn-primary" id="save_list_nameInfo" value="'.$bstid.'">Save Changes</button></div> ';
			}
			$output.='</div> ';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No basic skill type found.
        	</div></div>';
		}
		return $output;
	}
	function fethchtoedit_subject_list_value($bstid,$max_year){
		$query=$this->db->query("select * from kg_subject_value where academicyear='$max_year' and value_name='$bstid' group by value_name order by value_name ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row"> ';
			foreach ($query->result() as $bsnames) {
				$output.='<div class="col-lg-3"> ';
				$output.='<input type="text" class="form-control sub_list_Info" name="bstid" value="'.$bsnames->value_name.'"> </div><div class="col-lg-3">';
				$output.='<input type="text" class="form-control sub_list_percentage" name="sub_list_percentage" value="'.$bsnames->value_percent.'"> </div>

				<div class="col-lg-6">';
				$output.='<input type="text" class="form-control sub_list_desc_Info" name="bstdesc" value="'.$bsnames->value_desc.'"></div> <div class="col-lg-2">';
				$output.='<button class="btn btn-primary" id="savesub_Type" value="'.$bstid.'">Save Changes</button> ';
			}
			$output.='</div> ';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fethchBsTypeToEdit($bstid,$max_year){
		$query=$this->db->query("select * from bstype where academicyear='$max_year' and bstype='$bstid' group by bstype order by bstype ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="dropdown-divider"></div><div class="row"> ';
			foreach ($query->result() as $bsnames) {
				$output.='<input type="hidden" class="form-control oldbstypeInfo" name="bstid" value="'.$bsnames->bstype.'"> ';
				$output.='<input type="hidden" class="form-control oldbstdescInfo" name="bstdesc" value="'.$bsnames->bsdesc.'">';
				$output.='<div class="col-lg-5"> ';
				$output.='<input type="text" class="form-control bstypeInfo" name="bstid" value="'.$bsnames->bstype.'"> </div><div class="col-lg-5">';
				$output.='<input type="text" class="form-control bstdescInfo" name="bstdesc" value="'.$bsnames->bsdesc.'"></div> <div class="col-lg-2">';
				$output.='<button class="btn btn-info" id="saveBsType" value="'.$bstid.'">Save Changes</button> ';
			}
			$output.='</div> ';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No basic skill type found.
        	</div></div>';
		}
		return $output;
	}
	function fethchBsCategoryToEdit($category,$quarter,$max_year){
		$query=$this->db->query("select * from bscategory where academicyear='$max_year' and bscategory='$category' and season='$quarter' group by bscategory order by bscategory ASC ");
		$queryGrade=$this->db->query("select * from bscategory where academicyear='$max_year' and bscategory='$category' and season='$quarter' group by bcgrade order by bcgrade ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="dropdown-divider"></div><div class="row"> ';
			foreach ($queryGrade->result() as $bsGrades) {
				$output .='<div class="col-lg-2 col-4"> 
				<div class="StudentViewTextInfo"> 
				<button class="btn btn-danger btn-sm" id="deleteThisGradeCategory" value="'.$bsGrades->bcgrade.'" name="'.$quarter.'" title="'.$bsGrades->bscategory.'">Delete Gr. '.$bsGrades->bcgrade.'</button>
				<div class="pretty p-icon p-smooth">
					<input type="checkbox" id="'.$bsGrades->bcgrade.'" class="'.$bsGrades->bscategory.'" name="changeBSCateForGrade" value="'.$bsGrades->bcgrade.'" checked="checked">
          	  		<div class="state p-success">
                		<i class="icon fa fa-check"></i>
                		<label></label>'.$bsGrades->bcgrade.'
              		</div>
      			</div>
      			</div>
      			</div>' ;
			}
			$output.='</div> <div class="row">';
			foreach ($query->result() as $bsnames) {
				$output.='<input type="hidden" class="form-control oldbsCategoryInfo" name="oldbsCategoryInfo" value="'.$bsnames->bscategory.'"> ';
				$output.='<input type="hidden" class="form-control oldbstCategoryInfo" name="oldbstCategoryInfo" value="'.$bsnames->season.'">';
				$output.='<div class="col-lg-7 col-12"> ';
				$output.='<input type="text" class="form-control" id="bsCategoryInfo" name="bsCategoryInfo" value="'.$bsnames->bscategory.'" required="required"> </div><div class="col-lg-3 col-6">';
				$output.='<input type="text" class="form-control" id="bstCategoryQuarterInfo" name="bstCategoryQuarterInfo" value="'.$bsnames->season.'" required="required"></div> <div class="col-lg-2 col-6">';
				$output.='<button class="btn btn-info btn-block" id="saveBsCategory" name="'.$quarter.'" value="'.$category.'">Save Changes</button> ';
			}
			$output.='</div> ';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function deleteBsType($id,$max_year){
		$this->db->where(array('bstype'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('bstype');
	}
	function deletesubject_list_value($id,$max_year){
		$this->db->where(array('value_name'=>$id));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->delete('kg_subject_value');
	}
	function fecthStudentBs($branches,$gradesec,$quarter,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryBS=$this->db->query("select bs.bsname,bs.subjectrow from users as u inner join basicskill as bs where bs.grade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' and bs.season='$quarter' group by bs.bsname order by bs.bsname ASC ");
			$output.='<div class="card">
	        <div class="card-header">
	            <h4>Student Basic Skills Values</h4>
	        </div>
			<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                 <td class="rotateJossRoster"><div>No.</div></td>
	                  ';
	                    foreach ($queryBS->result() as $bsName) {
	                    	$output.='<td class="rotateJossRoster"><div>'.$bsName->bsname.'</div></td>';
	                    }
	                $output.='</tr>
	            </thead>';
	        $no=1;
	        $output.='<input type="hidden" id="bsQuarter" value="'.$quarter.'" >';
	        $output.='<input type="hidden" id="bsGradesec" value="'.$gradesec.'" >';
	        $output.='<input type="hidden" id="bsBranch" value="'.$branches.'" >';
			foreach ($queryfetchBS->result() as $stuList) {
				$stuid=$stuList->id;
				$grade=$stuList->grade;
				$output.='<input type="hidden" id="bsConductStuId" value="'.$stuid.'" >';
				$output.='<tr> <td>'.$no.'</td>';
				/*$output.='<td>'.$stuList->fname.' '.$stuList->mname.'</td>';*/
				foreach ($queryBS->result() as $bsName1) {
					$bsName=$bsName1->bsname;
					$subjectRow=$bsName1->subjectrow;
					if($subjectRow!='1'){
						$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType" >';

								$insertedValue=$bsValue->value;
								if($insertedValue==''){
									$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									foreach ($queryBsType->result() as $bsType)
									{
										$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
									}
								}else{
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									$queryBsType2=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' and bstype!='$insertedValue' ");
									foreach ($queryBsType2->result() as $bsType)
									{
										$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
									}	
								}
								$output.='</select></td>';
							}
						}else{
							$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType">';
							$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
							$output.='<option></option>';
							foreach ($queryBsType->result() as $bsType) {
								$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
							}
							$output.='</select></td>';
						}
					}else{
						$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType" >';
								$insertedValue=$bsValue->value;
								if($insertedValue==''){
									$queryBsType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									foreach ($queryBsType->result() as $bsType) {
										$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
									}
								}else{
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									$queryBsType2=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' and coname!='$insertedValue' ");
									foreach ($queryBsType2->result() as $bsType) {
										$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
									}	
								}
								$output.='</select></td>';
							}
						}else{
							$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType">';
							$queryBsType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
							$output.='<option></option>';
							foreach ($queryBsType->result() as $bsType) {
								$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
							}
							$output.='</select></td>';
						}
					}

	        	}
	        	$output.='</tr>';
	        	$no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function fecthStudentBsFeedOption3($branches,$gradesec,$quarter,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$output.='<input type="hidden" id="bsQuarter_feed" value="'.$quarter.'" >';
	        $output.='<input type="hidden" id="bsGradesec_feed" value="'.$gradesec.'" >';
	        $output.='<input type="hidden" id="bsBranch_feed" value="'.$branches.'" >';
			$queryBSCategory=$this->db->query("select bc.bscategory,bc.bcgrade from users as u inner join bscategory as bc where bc.bcgrade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bc.season='$quarter' and bc.academicyear='$max_year' group by bc.bscategory order by bc.bcorder ASC ");
	        $no=1;
			foreach ($queryfetchBS->result() as $stuList) {
				$stuid=$stuList->id;
				$grade=$stuList->grade;
				$output.='<input type="hidden" id="bsConductStuId_feed" value="'.$stuid.'" >';
				$output.='<span>Student Name:- '.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'
				<span>
				<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;"> ';
		        if($queryBSCategory->num_rows()>0){
					foreach($queryBSCategory->result() as $rows){
						$bc_name=$rows->bscategory;
						$queryBS=$this->db->query("select bs.bsname,bs.subjectrow from users as u inner join basicskill as bs where bs.grade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' and bscategory='$bc_name' and bs.season='$quarter' group by bs.bs order by bs.bsorder ASC ");
						$output.='<tr><td class="" style="background-color:#e3e3e3">'.$bc_name.'</td>';
						$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
						foreach ($queryBsType->result() as $bsType)
						{
							$output.='<td style="background-color:#e3e3e3" id="insertbsTypeGS_feed" value="'.$bsType->bstype.'">'.$bsType->bstype.'</td>';
						}
						$queryConType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
						foreach ($queryConType->result() as $conType) {
							$output.='<td style="background-color:#e3e3e3" id="insertbsTypeGS_feed" name="'.$stuList->id.'" value="'.$conType->coname.'">'.$conType->coname.'</td>';
						}
						foreach ($queryBS->result() as $bsName1) {
							$bsName=$bsName1->bsname;
							$subjectRow=$bsName1->subjectrow;
							$output.='<tr><td class="" style="white-space: wrap;word-wrap: break-word;">'.$bsName.'</td>';
					if($subjectRow!='1'){
						$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								$output.='<td><select class="form-contrlol insertbsTypeo_feed" name="insertbsType_feed" >';
								$insertedValue=$bsValue->value;
								if($insertedValue==''){
									$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									foreach ($queryBsType->result() as $bsType)
									{
										$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
									}
								}else{
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									$queryBsType2=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' and bstype!='$insertedValue' ");
									foreach ($queryBsType2->result() as $bsType)
									{
										$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
									}	
								}
								$output.='</select></td>';
							}
						}else{
							$output.='<td><select class="form-contrlol insertbsTypeo_feed" name="insertbsType_feed">';
							$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
							$output.='<option></option>';
							foreach ($queryBsType->result() as $bsType) {
								$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
							}
							$output.='</select></td>';
						}
					}else{
						$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								$output.='<td><select class="form-contrlol insertbsTypeo_feed" name="insertbsType_feed" >';
								$insertedValue=$bsValue->value;
								if($insertedValue==''){
									$queryBsType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									foreach ($queryBsType->result() as $bsType) {
										$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
									}
								}else{
									$output.='<option>'.$bsValue->value.'</option>';
									$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
									$queryBsType2=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' and coname!='$insertedValue' ");
									foreach ($queryBsType2->result() as $bsType) {
										$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
									}	
								}
								$output.='</select></td>';
							}
						}else{
							$output.='<td><select class="form-contrlol insertbsTypeo_feed" name="insertbsType_feed">';
							$queryBsType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
							$output.='<option></option>';
							foreach ($queryBsType->result() as $bsType) {
								$output.='<option id="insertbsTypeGS_feed" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
							}
							$output.='</select></td>';
						}
					}
	        	}
					}
				}
				
	        	$output.='</tr>';
	        	$no++;
	        	$output.='</table></div>';
	        	$output.='<hr>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function fecthStudentBsFeed($branches,$gradesec,$quarter,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$output.='<input type="hidden" id="bsQuarter_feed" value="'.$quarter.'" >';
	        $output.='<input type="hidden" id="bsGradesec_feed" value="'.$gradesec.'" >';
	        $output.='<input type="hidden" id="bsBranch_feed" value="'.$branches.'" >';
			$queryBSCategory=$this->db->query("select bc.bscategory,bc.bcgrade from users as u cross join bscategory as bc where bc.bcgrade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bc.season='$quarter' and bc.academicyear='$max_year' group by bc.bscategory order by bc.bcorder ASC ");
	        $no=1;
			foreach ($queryfetchBS->result() as $stuList) {
				$stuid=$stuList->id;
				$grade=$stuList->grade;
				$output.='<input type="hidden" id="bsConductStuId_feed" value="'.$stuid.'" >';
				$output.='<span>Student Name:- '.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'
				<span>
				<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;"> ';
		        if($queryBSCategory->num_rows()>0){
					foreach($queryBSCategory->result() as $rows){
						$bc_name=$rows->bscategory;
						$queryBS=$this->db->query("select bs.bsname,bs.subjectrow from users as u inner join basicskill as bs where bs.grade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' and bscategory='$bc_name' and bs.season='$quarter' group by bs.bsname order by bs.bsorder ASC ");
						$output.='<tr><td class="" style="background-color:#e3e3e3">'.$bc_name.'</td>';
						$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
						foreach ($queryBsType->result() as $bsType)
						{
							$output.='<td style="background-color:#e3e3e3" id="insertbsTypeGS_feed" value="'.$bsType->bstype.'">'.$bsType->bstype.'</td>';
						}
						$queryConType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
						foreach ($queryConType->result() as $conType) {
							$output.='<td style="background-color:#e3e3e3" id="insertbsTypeGS_feed" name="'.$stuList->id.'" value="'.$conType->coname.'">'.$conType->coname.'</td>';
						}
						foreach ($queryBS->result() as $bsName1) {
							$bsName=$bsName1->bsname;
							$subjectRow=$bsName1->subjectrow;
							$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
							$output.='<tr><td class="" style="white-space: wrap;word-wrap: break-word;">'.$bsName.'</td>';
							if($subjectRow!='1'){
								if($queryBsValue->num_rows()>0){
									foreach ($queryBsValue->result() as $bsValue) {
										$insertedValue=$bsValue->value;
										foreach ($queryBsType->result() as $bsType) {
											$con_type=$bsType->bstype;
											if($insertedValue==$con_type){
												$output .='<td><div class="pretty p-icon p-smooth">
          										<input type="radio" id="'.$stuList->id.'" class="insertbsTypeGS_feed" name="insertbsTypeGS_feed'.$stuList->id.''.$bsName.'" value="'.$bsType->bstype.'" title="'.$bsName.'" checked="checked">
								          	  		<div class="state p-success">
								                		<i class="icon fa fa-check"></i>
								                		<label></label>
								              		</div>
								      			</div></td>' ;
											}else{
												$output .='<td><div class="pretty p-icon p-smooth">
          										<input type="radio" id="'.$stuList->id.'" class="insertbsTypeGS_feed" name="insertbsTypeGS_feed'.$stuList->id.''.$bsName.'" value="'.$bsType->bstype.'" title="'.$bsName.'"  >
								          	  		<div class="state p-success">
								                		<i class="icon fa fa-check"></i>
								                		<label></label>
								              		</div>
								      			</div></td>' ;	
											}
										}
									}
									foreach ($queryConType->result() as $bsType) {
										$output.='<td>-</td>' ;
											
									}
								}else{
									foreach ($queryBsType->result() as $bsType) {
										$con_type=$bsType->bstype;	
										$output .='<td><div class="pretty p-icon p-smooth">
          										<input type="radio" id="'.$stuList->id.'" class="insertbsTypeGS_feed" name="insertbsTypeGS_feed'.$stuList->id.''.$bsName.'" value="'.$bsType->bstype.'" title="'.$bsName.'"  >
								          	  		<div class="state p-success">
								                		<i class="icon fa fa-check"></i>
								                		<label></label>
								              		</div>
								      			</div></td>' ;		
									}
									foreach ($queryConType->result() as $bsType) {
										$output.='<td>-</td>' ;
											
									}
								}
							}else{
								if($queryBsValue->num_rows()>0){
									foreach ($queryBsType->result() as $bsType) {
										$output.='<td>-</td>' ;	
									}
									foreach ($queryBsValue->result() as $bsValue) {
										$insertedValue=$bsValue->value;
										foreach ($queryConType->result() as $bsType) {
											$coname=$bsType->coname;
											if($insertedValue==$coname){
												$output .='<td><div class="pretty p-icon p-smooth">
          										<input type="radio" id="'.$stuList->id.'" class="insertbsTypeGS_feed" name="insertbsTypeGS_feed'.$stuList->id.''.$coname.'" value="'.$bsType->coname.'" title="'.$bsName.'" checked="checked" >
								          	  		<div class="state p-success">
								                		<i class="icon fa fa-check"></i>
								                		<label></label>
								              		</div>
								      			</div></td>' ;	
											}else{
												$output .='<td><div class="pretty p-icon p-smooth">
          										<input type="radio" id="'.$stuList->id.'" class="insertbsTypeGS_feed" name="insertbsTypeGS_feed'.$stuList->id.''.$coname.'" value="'.$bsType->coname.'" title="'.$bsName.'" >
								          	  		<div class="state p-success">
								                		<i class="icon fa fa-check"></i>
								                		<label></label>
								              		</div>
								      			</div></td>' ;
											}
										}
									}
								}else{
									foreach ($queryBsType->result() as $bsType) {
										$output.='<td>-</td>' ;	
									}
									foreach ($queryConType->result() as $bsType) {
										$coname=$bsType->coname;
										$output .='<td><div class="pretty p-icon p-smooth">
  										<input type="radio" id="'.$stuList->id.'" class="insertbsTypeGS_feed" name="insertbsTypeGS_feed'.$stuList->id.''.$coname.'" value="'.$bsType->coname.'" title="'.$bsName.'" >
						          	  		<div class="state p-success">
						                		<i class="icon fa fa-check"></i>
						                		<label></label>
						              		</div>
						      			</div></td>' ;
									}
								}
							}
	        			}
					}
				}
	        	$output.='</tr>';
	        	$no++;
	        	$output.='</table></div>';
	        	$output.='<hr>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function fecthStudentBsFeed2($branches,$gradesec,$quarter,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			/*$queryBS=$this->db->query("select bs.bsname,bs.subjectrow from users as u inner join basicskill as bs where bs.grade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' and bs.season='$quarter' group by bs.bsname order by bs.bsname ASC ");*/
			$queryBSCat=$this->db->query("select bs.bcgrade,bs.bscategory,bs.bcsubjectrow from users as u inner join bscategory as bs where bs.bcgrade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' and bs.season='$quarter' group by bs.bscategory order by bs.bsid ASC ");
			$output.='<div class="card">
			<div class="table-responsive">
	         	<table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead> <tr>';
	                foreach ($queryBSCat->result() as $bsCats) {
                    	$grade=$bsCats->bcgrade;
                    	$bsCat=$bsCats->bscategory;
                    	$queryBSbNames=$this->db->query("select bssubcategory from bs_sub_category where bcgrade='$grade' and academicyear='$max_year' and season='$quarter' and bscategory='$bsCat' group by bssubcategory order by bsid ASC ");
                    	foreach($queryBSbNames->result() as $bsNames2){
                    		$subCategory=$bsNames2->bssubcategory;
                    		$queryBSSubNames=$this->db->query("select bsname from basicskill where grade='$grade' and academicyear='$max_year' and season='$quarter' and bscategory='$bsCat' and sub_category='$subCategory' group by bsname order by id ASC ");
                    		if($queryBSSubNames->num_rows()>0){
	                    		$colSpan2=$queryBSSubNames->num_rows() ;
	                    	}else{
	                    		$colSpan2=1;
	                    	}
	                    	if($queryBSbNames->num_rows()>0){
		                		$colSpan=$queryBSbNames->num_rows();
		                	}else{
		                		$colSpan=1;
		                	}
		                }
		                $colFinal=($colSpan + $colSpan2)-1;
                    	$output.='<td colspan="'.$colFinal.'" class="text-center"> '.$bsCat.'</td>';	
                    }
                    $output.='<tr>';
                    foreach ($queryBSCat->result() as $bsCats) {
                    	$grade=$bsCats->bcgrade;
                    	$bsCat=$bsCats->bscategory;
                    	$queryBSbNames=$this->db->query("select bssubcategory from bs_sub_category where bcgrade='$grade' and academicyear='$max_year' and season='$quarter' and bscategory='$bsCat' group by bssubcategory order by bsid ASC ");
                    	foreach($queryBSbNames->result() as $bsNames2){
                    		$subCategory=$bsNames2->bssubcategory;
                    		$queryBSSubNames=$this->db->query("select bsname from basicskill where grade='$grade' and academicyear='$max_year' and season='$quarter' and bscategory='$bsCat' and sub_category='$subCategory' group by bsname order by id ASC ");
                    		if($queryBSSubNames->num_rows()>0){
	                    		$colSpan2=$queryBSSubNames->num_rows() ;
	                    	}else{
	                    		$colSpan2=1;
	                    	}
                    		
                    		$output.='<td colspan="'.$colSpan2.'" class="text-center"><div>'.$subCategory.' </div> </td>';
                    	}
                    }
                    $output.='<tr>';
                    foreach ($queryBSCat->result() as $bsCats) {
                    	$grade=$bsCats->bcgrade;
                    	$bsCat=$bsCats->bscategory;
                    	foreach($queryBSbNames->result() as $bsNames2){
                    		$subCategory=$bsNames2->bssubcategory;
                    		
                    		$queryBSSubNames=$this->db->query("select bsname,subjectrow from basicskill where grade='$grade' and academicyear='$max_year' and season='$quarter' and bscategory='$bsCat' group by bsname order by id ASC ");
                    		if($queryBSSubNames->num_rows()>0){
                    			foreach($queryBSSubNames->result() as $BsSub){
                    				$output.='<td>'.$BsSub->bsname.' </td>';
                    			}

                    		}	 
                    	}
                    	       	
                    }
	                $output.='</tr>
	            </thead>';
	        $no=1;
	        $output.='<input type="hidden" id="bsQuarter" value="'.$quarter.'" >';
	        $output.='<input type="hidden" id="bsGradesec" value="'.$gradesec.'" >';
	        $output.='<input type="hidden" id="bsBranch" value="'.$branches.'" >';
			foreach ($queryfetchBS->result() as $stuList) {
				$stuid=$stuList->id;
				$grade=$stuList->grade;
				$output.='<input type="hidden" id="bsConductStuId" value="'.$stuid.'" >';
				$output.='<tr>';
				foreach ($queryBSCat->result() as $bsCats) {
					$grade=$bsCats->bcgrade;
	                $bsCat=$bsCats->bscategory;
	                $queryBSbNames=$this->db->query("select bssubcategory from bs_sub_category where bcgrade='$grade' and academicyear='$max_year' and season='$quarter' and bscategory='$bsCat' group by bsid order by bsid ASC ");
	                if($queryBSbNames->num_rows()>0){
	                	foreach($queryBSbNames->result() as $BsSub){
	                		$subCategory=$BsSub->bssubcategory;
							$queryBSNames=$this->db->query("select bsname,subjectrow from basicskill where grade='$grade' and academicyear='$max_year' and season='$quarter' and sub_category='$subCategory' and bscategory='$bsCat' group by bsname order by id ASC ");
							if($queryBSNames->num_rows()>0){
								foreach($queryBSNames->result() as $bsName1){
									$bsName=$bsName1->bsname;
									$subjectRow=$bsName1->subjectrow;
									if($subjectRow!='1'){
										$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
										if($queryBsValue->num_rows()>0){
											foreach ($queryBsValue->result() as $bsValue) {
												$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType" >';

												$insertedValue=$bsValue->value;
												if($insertedValue==''){
													$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
													$output.='<option>'.$bsValue->value.'</option>';
													$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
													foreach ($queryBsType->result() as $bsType)
													{
														$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
													}
												}else{
													$output.='<option>'.$bsValue->value.'</option>';
													$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
													$queryBsType2=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' and bstype!='$insertedValue' ");
													foreach ($queryBsType2->result() as $bsType)
													{
														$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
													}	
												}
												$output.='</select></td>';
											}
										}else{
											$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType">';
											$queryBsType=$this->db->query("select bstype from bstype where academicyear='$max_year' and btgrade='$grade' ");
											$output.='<option></option>';
											foreach ($queryBsType->result() as $bsType) {
												$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->bstype.'">'.$bsType->bstype.'</option>';
											}
											$output.='</select></td>';
										}
									}else{
										$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
										if($queryBsValue->num_rows()>0){
											foreach ($queryBsValue->result() as $bsValue) {
												$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType" >';
												$insertedValue=$bsValue->value;
												if($insertedValue==''){
													$queryBsType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
													$output.='<option>'.$bsValue->value.'</option>';
													$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
													foreach ($queryBsType->result() as $bsType) {
														$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
													}
												}else{
													$output.='<option>'.$bsValue->value.'</option>';
													$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value=""></option>';
													$queryBsType2=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' and coname!='$insertedValue' ");
													foreach ($queryBsType2->result() as $bsType) {
														$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
													}	
												}
												$output.='</select></td>';
											}
										}else{
											$output.='<td>'.$stuList->fname.' '.$stuList->mname.'<br><select class="form-contrlol insertbsTypeo" name="insertbsType">';
											$queryBsType=$this->db->query("select coname from conductype where academicyear='$max_year' and congrade='$grade' ");
											$output.='<option></option>';
											foreach ($queryBsType->result() as $bsType) {
												$output.='<option id="insertbsTypeGS" class="'.$bsName.'" name="'.$stuList->id.'" value="'.$bsType->coname.'">'.$bsType->coname.'</option>';
											}
											$output.='</select></td>';
										}
									}
								}
							}
						}
					}

	        	}
	        	$output.='</tr>';
	        	$no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function fecthOverallComment($gs_branches,$gs_gradesec,$gs_quarter,$max_year)
	{
		$output='';
    	$stuNO=1;
    	$query=$this->db->query("select total_words from total_comment_words ");
		if($query->num_rows()>0){
			$queryRow=$query->row();
			$totalNums=$queryRow->total_words;
		}else{
			$totalNums=0;
		}
    	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade,u.gradesec,u.profile from users as u where u.academicyear='$max_year' and u.gradesec='$gs_gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,lname ASC ");
    	$output.='<input type="hidden" id="totalWordsFORComments" value="'.$totalNums.'"> ';
    	$output.='<input type="hidden" id="academicyearTocomment" value="'.$max_year.'"> ';
        $output.='<input type="hidden" id="quarterTocomment" value="'.$gs_quarter.'"> ';
        $output.='<input type="hidden" id="markGradeSecTocomment" value="'.$gs_gradesec.'"> ';
        $output.='<input type="hidden" id="markGradeSecBranchTocomment" value="'.$gs_branches.'"> ';
		foreach ($queryStudent->result_array() as $row) { 
    		$id=$row['id'];
    		$average=0;$count=0;
    		$queryComment=$this->db->query("select * from overallcomments where academicyear='$max_year' and quarter='$gs_quarter' and stuid='$id' ");
    		if($queryComment->num_rows()>0){
    			$commentRow=$queryComment->row();
    			$commentValue=$commentRow->resultcomment;
    			if($commentValue!=''){
    				$string = preg_replace('/\s+/', ' ', $commentValue); 
	      			$word_s = explode(" ", $string); 
					$count = count($word_s);
	    			$len = $totalNums - $count; 
    			}else{
	    			$len = $totalNums; 
	    		}
    		}else{
    			$len = $totalNums;
    		}
    		$output.='<input type="hidden" id="markGradeStuidTocomment" name="markGradeStuidTocomment" value="'.$id.'"> ';
    		$output.='<div class="col-md-12 col-lg-12 col-xl-12">
            <div class="support-ticket">';
          	$output.='<span class="font-weight-bold">'.$row['fname'].' ' .$row['mname'].' '.$row['lname']. '</span> <span class="badge badge-light pull-right" id="totalWordsLeft'.$id.'">'.$len.' Words left</span>';

    		if($queryComment->num_rows()>0){
    			$commentRow=$queryComment->row();
    			$commentValue=$commentRow->resultcomment;            			
    			$output.='<textarea class="count_words'.$id.'" rows="4" cols="50" wrap="physical" title="'.$id.'" name="teacher_ocomment_gs" id="teacher_ocomment_gs" placeholder="Add Comment" style="width:100%; height:100px;"> '.$commentValue.'</textarea>';          			
    		}else{
    			$output.='<textarea class="count_words'.$id.'" rows="4" cols="50" wrap="physical"  title="'.$id.'" name="teacher_ocomment_gs" id="teacher_ocomment_gs" placeholder="Add Comment" style="width:100%; height:100px;"> </textarea>';
    		}
	    	
    		$output.='</div>
            </div>
            <div class="dropdown-divider"></div>';
		}
		$output.='<button class="btn btn-info btn-block" type="submit" name="submitTeacheroComment" id="submitTeacheroComment">Save Changes</button> </div>
		<p class="infoTeacheroComment"></p>';
		return $output;
	}
	function fetch_total_comment_words(){
		$output='';
		$query=$this->db->query("select total_words from total_comment_words ");
		if($query->num_rows()>0){
			$queryRow=$query->row();
			$totalNums=$queryRow->total_words;
		}else{
			$totalNums=0;
		}
		$output.='<form method="POST" id="save_total_comment_words">
            <div class="row">
              <div class="col-lg-8 col-8">
               <div class="form-group">
                 <input type="number" class="form-control" id="save_total_comment_words_here" name="save_total_comment_words_here" placeholder="Number of comment words ..." value="'.$totalNums.'">
                </div>
              </div>
              <div class="col-lg-4 col-4">
                <button type="submit" name="savetotalcommentwords" class="btn btn-primary btn-block">Save Changes
                  </button>
              </div>
            </div>
          </form>';
		
		return $output;
	}
	function save_this_grade_teacher_ocomment($id,$academicyear,$quarter){
		$this->db->where(array('stuid'=>$id));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('academicyear'=>$academicyear));
		$querystu=$this->db->get('overallcomments');
		if($querystu->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function fecthStudentResult($branches,$gradesec,$quarter,$period_status,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.username  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryfetchBS2=$this->db->query("select u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.grade  order by u.grade ASC ");
			if($queryfetchBS->num_rows()>0){
				$rowGrade=$queryfetchBS->row();
				$grade=$rowGrade->grade;
			}else{
				$grade='';
			}
			$queryBS=$this->db->query("select bs.sname,bs.nid from kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$quarter' and bs.sgrade='$grade' and bs.sterm='$quarter' and kc.cate_grade='$grade' and bs.academicyear='$max_year' group by bs.nid order by bs.nid ASC ");
			if($queryBS->num_rows()>0){
				$output.='
				<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover">
		            <thead>
		                <tr>
		                    <th class="rotateJossRoster"><div>No.</div></th>
		                    <th class="rotateJossRoster"><div>Student Name</div></th>';
		                    foreach ($queryBS->result() as $queryValues) {
		                    	$output.='<th class="rotateJossRoster"><div>'.$queryValues->sname.'</div></th>';
		                    }
		                $output.='</tr>
		            </thead>';
		        $no=1;
		        $output.='<input type="hidden" id="bsQuarter_kg_value" value="'.$quarter.'" >';
		        $output.='<input type="hidden" id="bsPeriod_kg_value" value="'.$period_status.'" >';
		        $output.='<input type="hidden" id="bsGradesec_kg_value" value="'.$gradesec.'" >';
		        $output.='<input type="hidden" id="bsBranch_kg_value" value="'.$branches.'" >';
				foreach ($queryfetchBS->result() as $stuList) {
					$stuid=$stuList->username;
					$grade=$stuList->grade;
					$output.='<tr> <td>'.$no.'</td>';
					$output.='<td>'.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'</td>';
					foreach ($queryBS->result() as $bsName1) {
						$bsName=$bsName1->nid;
						$queryBsValue=$this->db->query("select * from kg_subject_student_result where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and criteria_name='$bsName' and result_period='$period_status' ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								$output.='<td>'.$stuList->fname.'<select class="insert_stu_result_value_gs">';
								$insertedValue=$bsValue->value;
								$queryBsType=$this->db->query("select value_name from kg_subject_value where academicyear='$max_year' and value_grade='$grade' ");
								$output.='<option class="'.$bsName.'" name="'.$stuList->username.'" value=""></option>';
								foreach ($queryBsType->result() as $bsType) {
									if($insertedValue==$bsType->value_name){
										$output.='<option selected="selected" class="'.$bsName.'" name="'.$stuList->username.'" value="'.$bsType->value_name.'">'.$bsType->value_name.'</option>';
									}else{
										$output.='<option class="'.$bsName.'" name="'.$stuList->username.'" value="'.$bsType->value_name.'">'.$bsType->value_name.'</option>';
									}
								}
								$output.='</select></td>';
							}
						}else{
							$output.='<td>'.$stuList->fname.'<select class="insert_stu_result_value_gs">';
							$queryBsType=$this->db->query("select value_name from kg_subject_value where academicyear='$max_year' and value_grade='$grade' ");
							$output.='<option></option>';
							foreach ($queryBsType->result() as $bsType) {
								$output.='<option class="'.$bsName.'" name="'.$stuList->username.'" value="'.$bsType->value_name.'">'.$bsType->value_name.'</option>';
							}
							$output.='</select></td>';
						}
		        	}
		        	$output.='</tr>';
		        	$no++;
				}
				$output.='</table></div>';
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function fecthStudentResultWeek($branches,$gradesec,$quarter,$period_status,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.username  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryfetchBS2=$this->db->query("select u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.grade  order by u.grade ASC ");
			if($queryfetchBS->num_rows()>0){
				$rowGrade=$queryfetchBS->row();
				$grade=$rowGrade->grade;
			}else{
				$grade='';
			}
			$queryBS=$this->db->query("select bs.sname,bs.nid from kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$quarter' and bs.sgrade='$grade' and bs.sterm='$quarter' and kc.cate_grade='$grade' and bs.academicyear='$max_year' and bs.week='$period_status' group by bs.nid order by bs.nid ASC ");
			if($queryBS->num_rows()>0){
				$output.='
				<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover">
		            <thead>
		                <tr>
		                    <th class="rotateJossRoster"><div>No.</div></th>
		                    <th class="rotateJossRoster"><div>Student Name</div></th>';
		                    foreach ($queryBS->result() as $queryValues) {
		                    	$output.='<th class="rotateJossRoster"><div>'.$queryValues->sname.'</div></th>';
		                    }
		                $output.='</tr>
		            </thead>';
		        $no=1;
		        $output.='<input type="hidden" id="bsQuarter_kg_value" value="'.$quarter.'" >';
		        $output.='<input type="hidden" id="bsPeriod_kg_value" value="'.$period_status.'" >';
		        $output.='<input type="hidden" id="bsGradesec_kg_value" value="'.$gradesec.'" >';
		        $output.='<input type="hidden" id="bsBranch_kg_value" value="'.$branches.'" >';
				foreach ($queryfetchBS->result() as $stuList) {
					$stuid=$stuList->username;
					$grade=$stuList->grade;
					$output.='<tr> <td>'.$no.'</td>';
					$output.='<td>'.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'</td>';
					foreach ($queryBS->result() as $bsName1) {
						$bsName=$bsName1->nid;
						$queryBsValue=$this->db->query("select * from kg_subject_student_result where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and criteria_name='$bsName' and result_period='$period_status' ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								$output.='<td>'.$stuList->fname.'<select class="insert_stu_result_value_gs">';
								$insertedValue=$bsValue->value;
								$queryBsType=$this->db->query("select value_name from kg_subject_value where academicyear='$max_year' and value_grade='$grade' ");
								$output.='<option class="'.$bsName.'" name="'.$stuList->username.'" value=""></option>';
								foreach ($queryBsType->result() as $bsType) {
									if($insertedValue==$bsType->value_name){
										$output.='<option selected="selected" class="'.$bsName.'" name="'.$stuList->username.'" value="'.$bsType->value_name.'">'.$bsType->value_name.'</option>';
									}else{
										$output.='<option class="'.$bsName.'" name="'.$stuList->username.'" value="'.$bsType->value_name.'">'.$bsType->value_name.'</option>';
									}
								}
								$output.='</select></td>';
							}
						}else{
							$output.='<td>'.$stuList->fname.'<select class="insert_stu_result_value_gs">';
							$queryBsType=$this->db->query("select value_name from kg_subject_value where academicyear='$max_year' and value_grade='$grade' ");
							$output.='<option></option>';
							foreach ($queryBsType->result() as $bsType) {
								$output.='<option class="'.$bsName.'" name="'.$stuList->username.'" value="'.$bsType->value_name.'">'.$bsType->value_name.'</option>';
							}
							$output.='</select></td>';
						}
		        	}
		        	$output.='</tr>';
		        	$no++;
				}
				$output.='</table></div>';
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	/*function fetch_kg_result_report($branches,$gradesec,$quarter,$max_year){
		$output='';
		$queryStudent=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec, u.grade,u.age, u.gender from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		if($queryStudent->num_rows()>0){
			$arrayValue_period=array('በመጀመሪያ','በመጨረሻ');
			$query_name = $this->db->query("select * from school");
	        $row_name = $query_name->row();
	        $school_name=$row_name->name;
	        $address=$row_name->address;
	        $phone=$row_name->phone;
	        $website=$row_name->website;
	        $email=$row_name->email;
	        $schooLogo=$row_name->logo;
		    foreach($queryStudent->result() as $row_student){
		    	$grade=$row_student->grade;
		    	$username=$row_student->username;
		    	$output.= '<div style="width:100%;height:auto;page-break-inside:avoid;display: block; ">
          <div class="support-ticket media pb-1 mb-3 card-header">
          <img src="'.base_url().'/logo/'.$schooLogo.'" style="width:auto;height: 110px;" class="user-img mr-2" alt="">
          <div class="media-body ml-3">
            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">ኢትዮ ኤክሰለንስ አካዳሚ <br>'.$school_name.' </B></h2></span>
            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u> የምልከታ መከታተያ ቅፅ | Evaluation Form </u></B></h4></p>
          </div>
        </div> ';
		    	$output.='
		    	
		    	<div class="row">
		    	<div class="col-md-12">
				<div class="row">';

				$queryHoomRoom=$this->db->query("select u.fname,u.mname,mysign from users as u cross join hoomroomplacement as hm where hm.roomgrade='$gradesec' and hm.academicyear='$max_year' and hm.branch='$branches' and u.branch='$branches' and u.username=hm.teacher and u.status='Active' and u.isapproved='1' ");
                if($queryHoomRoom->num_rows()>0){
                  $rowHommeRoom=$queryHoomRoom->row_array();
                  $tfName=$rowHommeRoom['fname'];
                  $tmName=$rowHommeRoom['mname'];
                  $signSigns=$rowHommeRoom['mysign'];
                }else{
                  $tfName='___________';
                  $tmName='___________';
                  $signSigns='_____';
                }
                if($row_student->age!='0'){
                	$age=$row_student->age;
                }else{
                	$age='____';
                }
		    	$output.='<div class="col-md-6"><b>ክፍል <u>'.$gradesec.'</u> &nbsp;&nbsp; ጭብጥ፡- <u>'.$quarter.'</u><br>
		    	የህፃኑ/ኗ ስም:-'.$row_student->fname.' '.$row_student->mname.' '.$row_student->lname.'</b></div><div class="col-md-2"> <b>ዕድሜ:- '.$age.'</b></div> <div class="col-md-4"> <b>ፆታ:-'.$row_student->gender.'</b></div></div>
		    	የመምህር ስም፡- <b><u>'.$tfName.' '.$tmName.' </u></b>&nbsp;&nbsp; የትምህርት ዘመን፡- <b><u>'.$max_year.'</u></b></div></div>
		    	<u>የምዘና ቁልፎች (Evaluation Keys)</u><br>
		    	';
		    	$queryBsType=$this->db->query("select value_name ,value_desc from kg_subject_value where academicyear='$max_year' and value_grade='$grade' order by id ASC ");
		    	if($queryBsType->num_rows()>0){
		    		$queryCount=$queryBsType->num_rows();
		    		$totalColumn=$queryCount * 2;
			    	foreach ($queryBsType->result() as $bsType) {
						$output.='<small>'.$bsType->value_name.'. '.$bsType->value_desc.'</small><br>';
					}
				}
		    	$output.='<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;">
		            <thead>
		                <tr>
		                    <th class="text-center" rowspan="4">የመማርያ ዓዉድ</th></tr>
		                    <tr><th class="text-center" colspan="'.$totalColumn.'">ምልከታ</th></tr>
		                    <tr><th class="text-center" colspan="'.$queryCount.'">በጭብጡ መጀመሪያ</th>
		                    <th class="text-center" colspan="'.$queryCount.'">በጭብጡ መጨረሻ</th></tr> ';
		                    foreach ($queryBsType->result() as $bsType) {
								$output.='<th class="text-center">'.$bsType->value_name.'</th>';
							}
							foreach ($queryBsType->result() as $bsType) {
								$output.='<th class="text-center">'.$bsType->value_name.'</th>';
							}
		                $output.='</tr>
		            </thead>';
		            $queryCategory=$this->db->query("select * from kg_subject_list_category where academicyear='$max_year' and cate_grade='$grade' and cate_term='$quarter' group by category_name order by suborder ");
		            if($queryCategory->num_rows()>0){
		            	$cat_no=1;
		            	foreach($queryCategory->result() as $row_cate){
		            		$category=$row_cate->category_name;
		            		$cate_id=$row_cate->sid;
		            		$output.='<tr style="background:#e3e3e3"><td>'.$cat_no.'. '.$category.'</td>';
		            		for($i=1; $i<=$totalColumn;$i++){
		            			$output.='<td></td>';
		            		}
		            		
		            		$queryList=$this->db->query("select * from kg_subject_list_name where academicyear='$max_year' and sgrade='$grade' and scategory='$category' and sterm='$quarter' group by nid order by nid ");
		            		if($queryList->num_rows()>0){
		            			$list_no=1;
		            			foreach($queryList->result() as $row_list){
		            				$criteriaName=$row_list->nid;
		            				$output.='<tr><td>'.$cat_no.'.'.$list_no.' '.$row_list->sname.'</td>';
		            				foreach($arrayValue_period as $arrayValue_periods){
		            					foreach ($queryBsType->result() as $bsType) {
		            						$value_type=$bsType->value_name;
		            						$queryResult=$this->db->query("select * from kg_subject_student_result where academicyear='$max_year' and stuid='$username' and criteria_name='$criteriaName' and quarter='$quarter' and result_period='$arrayValue_periods' ");
		            						if($queryResult->num_rows()>0){
		            							foreach($queryResult->result() as $row_result){
		            								$f_result=$row_result->value;
		            								if($f_result==$value_type){
		            									$output.='<td class="text-center"><i class="fas fa-check-circle"></i></td>';
		            								}else{
		            									$output.='<td class="text-center">-</td>';
		            								}
		            							}
		            						}else{
		            							$output.='<td class="text-center">-</td>';
		            						}
										}
		            				}
		            				$output.='</tr>';
		            				$list_no++;
		            			}
		            		}
		            		$cat_no++;
		            	}
		            }
		        $output.='</table></div></div><br>';
		        $output.='Teacher’s Comment ___________________________________________________________________________________________ ___________________________________________________________________________________________ ';
	              
	              $queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u cross join directorplacement as dp ON dp.staff=u.username where dp.grade='$gradesec' and dp.academicyear='$max_year' and usertype!='Student' and u.branch='$branches' and isapproved='1' and status='Active' ");
	               if($queryDirector->num_rows()>0){
	                $rowSignD=$queryDirector->row();
	                $signName=$rowSignD->fname;
	                $signmame=$rowSignD->mname;
	                $signlame=$rowSignD->lname;
	                $signSignsD=$rowSignD->mysign;
	              }else{
	                $signName='';
	                $signmame='';
	                $signSignsD='_____';
	              }
	            $output.="<p>Teacher’s Name:- <u><b>".$tfName." ".$tmName."</b></u> Signature <img alt='' src='".base_url()."/".$signSigns."' style='height:40px;width:120px'></p>
              	<p>Director's Name:-<u><b>".$signName." ".$signmame."</b></u>
                Signature  <img alt='' src='".base_url()."/".$signSignsD."' class='' style='height:40px;width:120px'></p>";
                 $output.='Parent/Guardian Name & Signature  ______________________________ ____________ ';
		    }
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}*/
	function fetch_kg_result_report($branches,$gradesec,$quarter,$max_year){
		$output='';
		$queryStudent=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec, u.grade,u.age, u.gender from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		if($queryStudent->num_rows()>0){
			$arrayValue_period=array('በመጨረሻ');
			$query_name = $this->db->query("select * from school");
	        $row_name = $query_name->row();
	        $school_name=$row_name->name;
	        $school_name2=$row_name->name_2;
	        $address=$row_name->address;
	        $phone=$row_name->phone;
	        $website=$row_name->website;
	        $email=$row_name->email;
	        $schooLogo=$row_name->logo;
		    foreach($queryStudent->result() as $row_student){
		    	$grade=$row_student->grade;
		    	$username=$row_student->username;
		    	$output.= '<div style="width:100%;height:auto;page-break-inside:avoid;display: block; ">
          <div class="support-ticket media pb-1 mb-3 card-header">
          <img src="'.base_url().'/logo/'.$schooLogo.'" style="width:auto;height: 110px;" class="user-img mr-2" alt="">
          <div class="media-body ml-3">
            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">'.$school_name2.' <br>'.$school_name.' </B></h2></span>
            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u> የምልከታ መከታተያ ቅፅ | Evaluation Form </u></B></h4></p>
          </div>
        </div> ';
		    	$output.='
		    	
		    	<div class="row">
		    	<div class="col-md-12">
				<div class="row">';

				$queryHoomRoom=$this->db->query("select u.fname,u.mname,mysign from users as u cross join hoomroomplacement as hm where hm.roomgrade='$gradesec' and hm.academicyear='$max_year' and hm.branch='$branches' and u.branch='$branches' and u.username=hm.teacher and u.status='Active' and u.isapproved='1' ");
                if($queryHoomRoom->num_rows()>0){
                  $rowHommeRoom=$queryHoomRoom->row_array();
                  $tfName=$rowHommeRoom['fname'];
                  $tmName=$rowHommeRoom['mname'];
                  $signSigns=$rowHommeRoom['mysign'];
                }else{
                  $tfName='___________';
                  $tmName='___________';
                  $signSigns='_____';
                }
                if($row_student->age!='0'){
                	$age=$row_student->age;
                }else{
                	$age='____';
                }
		    	$output.='<div class="col-md-6"><b>ክፍል <u>'.$gradesec.'</u> &nbsp;&nbsp; ጭብጥ፡- <u>'.$quarter.'</u><br>
		    	የህፃኑ/ኗ ስም:-'.$row_student->fname.' '.$row_student->mname.' '.$row_student->lname.'</b></div><div class="col-md-2"> <b>ዕድሜ:- '.$age.'</b></div> <div class="col-md-4"> <b>ፆታ:-'.$row_student->gender.'</b></div></div>
		    	የመምህር ስም፡- <b><u>'.$tfName.' '.$tmName.' </u></b>&nbsp;&nbsp; የትምህርት ዘመን፡- <b><u>'.$max_year.'</u></b></div></div>
		    	<u>የምዘና ቁልፎች (Evaluation Keys)</u><br>
		    	';
		    	$queryBsType=$this->db->query("select value_name ,value_desc from kg_subject_value where academicyear='$max_year' and value_grade='$grade' order by id ASC ");
		    	if($queryBsType->num_rows()>0){
		    		$queryCount=$queryBsType->num_rows();
		    		/*$totalColumn=$queryCount * 2;*/
		    		$totalColumn= 4;
			    	foreach ($queryBsType->result() as $bsType) {
						$output.='<small>'.$bsType->value_name.'. '.$bsType->value_desc.'</small><br>';
					}
				}
		    	$output.='<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;">
		            <thead>
		                <tr>
		                    <th class="text-center" rowspan="4">የመማርያ ዓዉድ</th></tr>
		                    		                    
		                    <th class="text-center" colspan="'.$queryCount.'">በጭብጡ መጨረሻ የተሰጠ የምልከታ ውጤት</th></tr> ';
		                    /*foreach ($queryBsType->result() as $bsType) {
								$output.='<th class="text-center">'.$bsType->value_name.'</th>';
							}*/
							foreach ($queryBsType->result() as $bsType) {
								$output.='<th class="text-center">'.$bsType->value_name.'</th>';
							}
		                $output.='</tr>
		            </thead>';
		            $queryCategory=$this->db->query("select * from kg_subject_list_category where academicyear='$max_year' and cate_grade='$grade' and cate_term='$quarter' group by category_name order by suborder ");
		            if($queryCategory->num_rows()>0){
		            	$cat_no=1;
		            	foreach($queryCategory->result() as $row_cate){
		            		$category=$row_cate->category_name;
		            		$cate_id=$row_cate->sid;
		            		$output.='<tr style="background:#e3e3e3"><td>'.$cat_no.'. '.$category.'</td>';
		            		for($i=1; $i<=$totalColumn;$i++){
		            			$output.='<td></td>';
		            		}
		            		
		            		$queryList=$this->db->query("select * from kg_subject_list_name where academicyear='$max_year' and sgrade='$grade' and scategory='$category' and sterm='$quarter' group by nid order by nid ");
		            		if($queryList->num_rows()>0){
		            			$list_no=1;
		            			foreach($queryList->result() as $row_list){
		            				$criteriaName=$row_list->nid;
		            				$output.='<tr><td>'.$cat_no.'.'.$list_no.' '.$row_list->sname.'</td>';
		            				foreach($arrayValue_period as $arrayValue_periods){
		            					foreach ($queryBsType->result() as $bsType) {
		            						$value_type=$bsType->value_name;
		            						$queryResult=$this->db->query("select * from kg_subject_student_result where academicyear='$max_year' and stuid='$username' and criteria_name='$criteriaName' and quarter='$quarter' and result_period='$arrayValue_periods' ");
		            						if($queryResult->num_rows()>0){
		            							foreach($queryResult->result() as $row_result){
		            								$f_result=$row_result->value;
		            								if($f_result==$value_type){
		            									$output.='<td class="text-center"><i class="fas fa-check-circle"></i></td>';
		            								}else{
		            									$output.='<td class="text-center">-</td>';
		            								}
		            							}
		            						}else{
		            							$output.='<td class="text-center">-</td>';
		            						}
										}
		            				}
		            				$output.='</tr>';
		            				$list_no++;
		            			}
		            		}
		            		$cat_no++;
		            	}
		            }
		        $output.='</table></div></div><br>';
		        $output.='Teacher’s Comment ___________________________________________________________________________________________ ___________________________________________________________________________________________ ';
	              
	              $queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u cross join directorplacement as dp ON dp.staff=u.username where dp.grade='$gradesec' and dp.academicyear='$max_year' and usertype!='Student' and u.branch='$branches' and isapproved='1' and status='Active' ");
	               if($queryDirector->num_rows()>0){
	                $rowSignD=$queryDirector->row();
	                $signName=$rowSignD->fname;
	                $signmame=$rowSignD->mname;
	                $signlame=$rowSignD->lname;
	                $signSignsD=$rowSignD->mysign;
	              }else{
	                $signName='';
	                $signmame='';
	                $signSignsD='_____';
	              }
	            $output.="<p>Teacher’s Name:- <u><b>".$tfName." ".$tmName."</b></u> Signature <img alt='' src='".base_url()."/".$signSigns."' style='height:40px;width:120px'></p>
              	<p>Director's Name:-<u><b>".$signName." ".$signmame."</b></u>
                Signature  <img alt='' src='".base_url()."/".$signSignsD."' class='' style='height:40px;width:120px'></p>";
                 $output.='Parent/Guardian Name & Signature  ______________________________ ____________ ';
		    }
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	public function fetch_kg_result_reportWeek($branch, $gradesec, $chibt, $week, $max_year,$season)
	{
	    // Get Grade
	    $gradeRow = $this->db->select('grade')
	        ->where(['branch' => $branch, 'gradesec' => $gradesec, 'academicyear' => $max_year])
	        ->group_by('grade')
	        ->get('users')
	        ->row();

	    if (!$gradeRow) {
	        return '<div class="alert alert-light">Ooops, no record found for this grade.</div>';
	    }
	    $grade = $gradeRow->grade;

	    // Check Subject Header
	    $subExists = $this->db->select('sub_name')
	        ->where(['sub_name' => $chibt, 'header_grade' => $grade, 'academicyear' => $max_year])
	        ->group_by('sub_name')
	        ->get('kg_subject_header')
	        ->num_rows();

	    if ($subExists <= 0) {
	        return '<div class="alert alert-light">Ooops, no record found for this subject.</div>';
	    }

	    // School Info
	    $school = $this->db->get('school')->row();

	    // Homeroom Teacher
	    $teacher = $this->db->select('u.fname, u.mname, u.mysign')
	        ->from('users u')
	        ->join('hoomroomplacement hm', 'hm.teacher=u.username AND hm.branch=u.branch')
	        ->where([
	            'hm.roomgrade' => $gradesec,
	            'hm.academicyear' => $max_year,
	            'hm.branch' => $branch,
	            'u.status' => 'Active',
	            'u.isapproved' => '1'
	        ])
	        ->get()
	        ->row_array();

	    $tfName = $teacher['fname'] ?? '___________';
	    $tmName = $teacher['mname'] ?? '___________';
	    $hmsignSigns = $teacher['mysign'] ?? '_____';

	    // Director placement
    	$queryDi=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u cross join directorplacement as dp ON dp.staff=u.username where dp.grade='$gradesec' and dp.academicyear='$max_year' and usertype!='Student' and u.branch='$branch' and isapproved='1' and status='Active' and mysign!='' ");
           if($queryDi->num_rows()>0){
            $rowSignD=$queryDi->row();
            $signName=$rowSignD->fname;
            $signmame=$rowSignD->mname;
            $signlame=$rowSignD->lname;
            $signSigns=$rowSignD->mysign;
            $directorName=" <u>".$signName." ".$signmame."</u> &nbsp;&nbsp;&nbsp; ፊርማ:- 
            <img alt='' src='".base_url()."/".$signSigns."' class='' style='height:40px;width:120px'>";
          }else{
            $directorName=" _______________ &nbsp;&nbsp;&nbsp;
            ፊርማ:- _____";
          }
	    // Students
	    $students = $this->db->where([
	            'academicyear' => $max_year,
	            'status' => 'Active',
	            'isapproved' => '1',
	            'usertype' => 'Student',
	            'branch' => $branch,
	            'gradesec' => $gradesec
	        ])
	        ->order_by('fname, mname, lname', 'ASC')
	        ->get('users')
	        ->result();

	    if (empty($students)) {
	        return '<div class="alert alert-warning">No students found.</div>';
	    }

	    // Subject Value Keys
	    $keys = $this->db->where([
	            'academicyear' => $max_year,
	            'value_grade' => $grade
	        ])
	        ->get('kg_subject_value')
	        ->result();
	    $totalKey = count($keys);

	    // Start of report container
	    $output = '<div class="grandKGReport-container">';
	    foreach ($students as $student) {
	    	$stuid=$student->id;
	        $username = $student->username;
	        $output .= '<div style="width:100%;height:auto;page-break-inside:avoid;display: block; ">
		      <div class="support-ticket media pb-1 mb-3 card-header">
		          <img src="'.base_url().'/logo/'.$school->logo.'" style="width:auto;height: 110px;" class="user-img mr-2" alt="">
		          <div class="media-body ml-3">
		          	<div class="row">
			          	<div class="col-12 col-md-6 col-lg-6">
				            <span class="font-weight-bold">
				              <h2><b>'.$school->name_2.' <br>'.$school->name.'</b></h2>
				            </span>
				            <p class="my-1">
				              <h4><b><u>የተማሪዎች የምልከታ መከታተያ ሪፖርት | Student Progress Report Card</u></b></h4>
				            </p>
			            </div>
			            <div class="col-12 col-md-6 col-lg-6">
			            	<div class="pull-right" style="word-wrap: break-word; white-space: normal; font-weight: bold; font-size: 16px;">
					            <p>የህፃኑ/ኗ ስም:<strong> ' . $student->fname . ' ' . $student->mname . ' ' . $student->lname . '</strong> 
				                &nbsp; ፆታ: <strong>' . $student->gender . '</strong><br>ጭብጥ:<strong> ' . $chibt . '</strong> &nbsp; <strong>ደረጃ:</strong> ' . $gradesec . '<br>
				                የመምህር ስም: <strong>' . $tfName . ' ' . $tmName . '</strong> &nbsp; ፊርማ: <strong><img alt=" " src="'.base_url().'/'.$hmsignSigns.'" style="height:40px;width:120px"></strong><br>
				                የርዕሰ መምህር ስም: ' . $directorName . '

				                 <br>
				                የትምህርት ዘመን:<strong>' . $max_year . '</strong></p>
			                </div>
		                </div>
	                </div>
		          </div>
		      </div>';

	        $output .= '
	        <div class="grandKGReport-student card">
	            <div class="card-body">
	                <div class="table-responsives">
	                    <table class="tabler table-bordered"> '; 

	        // Loop through weeks and categories for result and learning objectives
	        foreach ($week as $weekName) {
	            $weekLabel = $this->translate_week($weekName);
	            $categories = $this->db->select('kc.category_name')
	                ->from('kg_subject_list_name bs')
	                ->join('kg_subject_list_category kc', 'kc.category_name = bs.scategory')
	                ->where([
	                    'kc.cate_term' => $chibt,
	                    'kc.cate_grade' => $grade,
	                    'kc.academicyear' => $max_year,
	                    'bs.sgrade' => $grade,
	                    'bs.sterm' => $chibt,
	                    'bs.academicyear' => $max_year,
	                    'bs.week' => $weekName
	                ])
	                ->group_by('kc.category_name')
	                ->order_by('kc.category_name', 'ASC')
	                ->get()
	                ->result();
	            $output.='<thead><tr style="background-color:#e3e3e3"><th>አዉድ</th>';
	            foreach ($categories as $category) {
	                $output .= '<th>' . $category->category_name . '</th>';
	            }
	            $output.='</tr></thead><tbody>';
	            // Output results for each category in different columns
	            $output .= '<tr>';
	            $output .= '<td rowspan="1">' . $weekLabel . '</td>';
	            $finalResult=0;
	            foreach ($categories as $category) {
	                
	                // Fetch criteria (Learning Objectives) for the category
	                $names = $this->db->select('bs.sname, bs.nid')
	                    ->from('kg_subject_list_name bs')
	                    ->where([
	                        'bs.sgrade' => $grade,
	                        'bs.sterm' => $chibt,
	                        'bs.academicyear' => $max_year,
	                        'bs.week' => $weekName,
	                        'bs.scategory' => $category->category_name
	                    ])
	                    ->order_by('bs.nid', 'ASC')
	                    ->get()
	                    ->result();
	                // Output results for each learning objective
	                $valuePercent=0; // Initialize before loop
					$totalCriterias = 0; // Make sure this is also initialized

					foreach ($names as $sName) {
					    $criteriaName = $sName->nid;
					    $queryResult = $this->db->query("SELECT value FROM kg_subject_student_result 
					        WHERE academicyear='$max_year' 
					        AND stuid='$username' 
					        AND criteria_name='$criteriaName' 
					        AND quarter='$chibt' 
					        AND result_period='$weekName' ");

					    if ($queryResult->num_rows() > 0) {
					        $f_result = $queryResult->row()->value;

					        $valueP = $this->db->where([
					            'academicyear' => $max_year,
					            'value_grade'  => $grade,
					            'value_name'   => $f_result
					        ])
					        ->get('kg_subject_value')
					        ->row();

					        if ($valueP) {
					            $valuePercent += $valueP->value_percent;
					        }
					    }

					    $totalCriterias += 1;
					}
					$finalResult = $valuePercent / $totalCriterias;

					if ($finalResult > 0) {
					    // Format to nearest whole number
					    $finalFal = number_format((float)$finalResult, 0, '.', '');

					    // Look up corresponding value_name
					    $valueName = $this->db->where([
					        'academicyear'    => $max_year,
					        'value_grade'     => $grade,
					        'value_percent'   => $finalFal
					    ])
					    ->get('kg_subject_value')
					    ->row();

					    if ($valueName) {
					        $valueN = $valueName->value_name;
					    } else {
					        $valueN = 'NG'; // No grade found for this percent
					    }
					} else {
					    $valueN = 'NG'; // Final result was zero or less
					}

	                $output .= '<td style="word-wrap: break-word; white-space: normal; font-weight: bold; font-size: 16px;"> ዉጤት- <strong><u>' . $valueN . '</u></strong><br>
	                <u>Learning Objectives</u>:-';

					$resultsArray = [];

					foreach ($names as $sName) {
					    $criteriaName = $sName->nid;
					    $queryResult = $this->db->query("SELECT value FROM kg_subject_student_result 
					        WHERE academicyear='$max_year' 
					        AND stuid='$username' 
					        AND criteria_name='$criteriaName' 
					        AND quarter='$chibt' 
					        AND result_period='$weekName' ");

					    if ($queryResult->num_rows() > 0) {
					        $f_result = $queryResult->row()->value;

					        // Fetch corresponding value_percent
					        $keyQuery = $this->db->where([
					            'academicyear' => $max_year,
					            'value_grade' => $grade,
					            'value_name'  => $f_result
					        ])
					        ->get('kg_subject_value');

					        if ($keyQuery->num_rows() > 0) {
					            $valueP = $keyQuery->row();
					            $valuePercent = $valueP->value_percent;
					            $resultsArray[] = $sName->sname . '';
					        } else {
					            $resultsArray[] = $sName->sname . ' (N/A)';
					        }
					    } else {
					        $resultsArray[] = $sName->sname . ' (No Result)';
					    }

					}

					// Join results with commas
					$output .= implode(', ', $resultsArray);
					$output .= '</td>';

	             
	            }
	        }

	        $output .= '</tbody></table></div>'; // End of table

	        $queryCategory=$this->db->query("select * from bscategory where academicyear='$max_year' and bcgrade='$grade' and season='$season' group by bscategory order by bcorder ASC");
	        if($queryCategory->num_rows()>0){
	            $output.= '<div class="grandKGReport-keys">
	            <u>'.$max_year.' E.C Basic Skills and Behaviour Progress Report of '.$season.'</u><hr>
	            <div class="row">';
	            $dateYear=date('Y');
	            $output .='<div class ="col-lg-12 col-md-12 col-12"></div>';
	            foreach ($queryCategory->result() as $bscatvalue) {
	              $bscategory=$bscatvalue->bscategory;
	              $query_basicskill=$this->db->query(" Select * from basicskill where grade='$grade' and academicyear='$max_year' and season='$season' and bsname!='Conduct' and bscategory='$bscategory' group by bsname order by bsname ASC ");       
	              foreach ($query_basicskill->result() as $bsvalue) {
	                $bsname=$bsvalue->bsname;
	                $output .='<div class="col-12 col-md-4 col-lg-4"><span>'.$bsvalue->bsname.' -  ';
	                $query_bsvalue=$this->db->query(" Select * from basicskillvalue".$gradesec.$max_year." where stuid='$stuid' and academicyear='$max_year' and bsname='$bsname' and quarter='$season' ");
	                  if($query_bsvalue->num_rows()>0) {
	                    foreach ($query_bsvalue ->result() as $bsresult) {
	                      $output .=''.$bsresult->value.'';
	                    }
	                  }else {
	                    $output .='NG';
	                  }
	                
	                $output .='</span></div>';
	              }
	              
	            }
	            // Evaluation keys
	            $output .='</div><div class="dropdown-divider"></div><div class="row">';/*basic skill table closed*/
	            $queryEvaKey=$this->db->query("select * from bstype where academicyear='$max_year' and btgrade='$grade' ");
	            $output.='<div class="col-lg-6 col-md-6 col-12">
	            <h4>Basic Skill Evaluation Keys</h4>';
          		if($queryEvaKey->num_rows()>0){
			        foreach ($queryEvaKey->result() as $keyVValue) {
			            $output .= '<div class="col-12 col-md-12 col-lg-12">' . $keyVValue->bstype . ' => ' . $keyVValue->bsdesc . '</div>';
			        }
			    }
			    $output.='</div><div class="col-lg-6 col-md-6 col-12">
			    <h4>Learning Objective Evaluation Keys</h4>';
			    foreach ($keys as $row) {
			    	$output .= '<div class="col-12 col-md-12 col-lg-12">' . $row->value_name . ' => ' . $row->value_desc . '</div>';
			    }
			    $output.='</div><div class="col-lg-12 col-md-12 col-12">';

			    $queryTerm=$this->db->query("select startdate,endate from quarter where Academic_year='$max_year' and term='$season' ");
			    $output.='<div class="dropdown-divider"></div>
			    <h6>Absence Days: ';
			   	if($queryTerm->num_rows()>0){
		            $qRow=$queryTerm->row();
		            $date1 =$qRow->startdate;
		            $date2 =$qRow->endate;
		            $changeDate1 = DateTime::createFromFormat('d/m/y',$date1);
		            $changeDate2 = DateTime::createFromFormat('d/m/y',$date2);
		            $startDate1= $changeDate1->format('Y-m-d');
		            $endDate1= $changeDate2->format('Y-m-d');
		            $query_total_absent=$this->db->query("select count(stuid) as att from attendance as attt where attt.stuid='$username' 
		            and attt.absentdate between '$startDate1' and '$endDate1' and attt.academicyear='$max_year' and absentype='Absent' ");
		            if($query_total_absent->num_rows()>0){
		              foreach ($query_total_absent->result() as $absent){
		                if($absent->att>0)
		                {
		                  $output .= '<B>'.$absent->att.'</B>';
		                }else{
		                	$output.='-';
		                }
		              }
		            }else{
		              $output.='-';
		            }
	            }else{
	              $output.='-';
	            } 
	            $output .='</h6></div></div></div>';
	        }

	        $output .= '</div></div></div>';
	    }

	    $output .= '</div>'; // Close container

	    return $output;
	}

	private function translate_week($week)
	{
	    $map = [
	        'Week 1' => '1ኛ ሳምንት',
	        'Week 2' => '2ኛ ሳምንት',
	        'Week 3' => '3ኛ ሳምንት',
	        'Week 4' => '4ኛ ሳምንት',
	        'Week 5' => '5ኛ ሳምንት',
	        'Week 6' => '6ኛ ሳምንት',
	        'Week 7' => '7ኛ ሳምንት',
	        'Week 8' => '8ኛ ሳምንት',
	        'Week 9' => '9ኛ ሳምንት',
	        'Week 10' => '10ኛ ሳምንት'
	    ];
	    return $map[$week] ?? $week;
	}


	function fecthNonFilledStudent_kf_result_GS($branches,$gradesec,$quarter,$period_status,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryBS=$this->db->query("select bs.sname,bs.nid from users as u inner join kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$quarter' and bs.sterm='$quarter' and bs.sgrade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' group by bs.nid order by bs.nid ASC ");
			if($queryBS->num_rows()>0){
				$output.='
				<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;">
		            <thead>
		                <tr>
		                    <th class="rotateJossRoster"><div>No.</div></th>
		                    <th class="rotateJossRoster"><div>Student Name</div></th>';
		                    foreach ($queryBS->result() as $queryValues) {
		                    	$output.='<th class="rotateJossRoster"><div>'.$queryValues->sname.'</div></th>';
		                    }
		                $output.='</tr>
		            </thead>';
		        $no=1;
				foreach ($queryfetchBS->result() as $stuList) {
					$stuid=$stuList->username;
					$grade=$stuList->grade;
					$output.='<tr> <td>'.$no.'</td>';
					$output.='<td>'.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'</td>';
					foreach ($queryBS->result() as $bsName1) {
						$bsName=$bsName1->nid;
						$queryBsValuee=$this->db->query("select * from kg_subject_student_result where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and criteria_name='$bsName' and result_period='$period_status' ");
						if($queryBsValuee->num_rows()>0){
							$output.='<td>';
							foreach ($queryBsValuee->result() as $bsValue) {
								$insertedValue=$bsValue->value;
								if($insertedValue!==''){
									$output.='<i class="fas fa-check-circle"></i>';
								}else{
									$output.='<span class="badge badge-danger"><i class="fas fa-times-circle"></i></span>';
								}								
							}
							$output.='</td>';
						}else{
							$output.='<td><span class="badge badge-danger"><i class="fas fa-times-circle"></i></span></td>';
						}
		        	}
		        	$output.='</tr>';
		        	$no++;
				}
				$output.='</table></div>';
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function fecthNonFilledStudent_kf_result_GSWeek($branches,$gradesec,$quarter,$period_status,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryBS=$this->db->query("select bs.sname,bs.nid from users as u inner join kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$quarter' and bs.sterm='$quarter' and bs.sgrade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' and bs.week='$period_status' group by bs.nid order by bs.nid ASC ");
			if($queryBS->num_rows()>0){
				$output.='
				<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;">
		            <thead>
		                <tr>
		                    <th class="rotateJossRoster"><div>No.</div></th>
		                    <th class="rotateJossRoster"><div>Student Name</div></th>';
		                    foreach ($queryBS->result() as $queryValues) {
		                    	$output.='<th class="rotateJossRoster"><div>'.$queryValues->sname.'</div></th>';
		                    }
		                $output.='</tr>
		            </thead>';
		        $no=1;
				foreach ($queryfetchBS->result() as $stuList) {
					$stuid=$stuList->username;
					$grade=$stuList->grade;
					$output.='<tr> <td>'.$no.'</td>';
					$output.='<td>'.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'</td>';
					foreach ($queryBS->result() as $bsName1) {
						$bsName=$bsName1->nid;
						$queryBsValuee=$this->db->query("select * from kg_subject_student_result where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and criteria_name='$bsName' and result_period='$period_status' ");
						if($queryBsValuee->num_rows()>0){
							$output.='<td>';
							foreach ($queryBsValuee->result() as $bsValue) {
								$insertedValue=$bsValue->value;
								if($insertedValue!==''){
									$output.='<i class="fas fa-check-circle"></i>';
								}else{
									$output.='<span class="badge badge-danger"><i class="fas fa-times-circle"></i></span>';
								}								
							}
							$output.='</td>';
						}else{
							$output.='<td><span class="badge badge-danger"><i class="fas fa-times-circle"></i></span></td>';
						}
		        	}
		        	$output.='</tr>';
		        	$no++;
				}
				$output.='</table></div>';
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function fecthDataProgress($branches,$gradesecs,$period_status,$max_year){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
         $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
		foreach($gradesecs as $gradesec){
			$queryBS=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' group by kh.sub_name order by kh.sub_name ASC ");
			if($queryBS->num_rows()>0){
				$nooo=1;
				$output.='<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;">
		        <thead> <tr><th colspan="3" class="text-center" style="background-color:#e3e3e3">
	            '.$school_name.' Data Progress Status in '.$max_year.' E.C('.$gYearName.' G.C) for grade '.$gradesec.'</th></tr>';
	            $no=1; 
				foreach($queryBS->result() as $rowActivity){
					$noo=1;
					$output.='<tr style="background-color:#e3e3e3"><th>'.$no.'</th><th colspan="2">'.$rowActivity->sub_name.'</th>';
					$quarter=$rowActivity->sub_name;
					$grade=$rowActivity->header_grade;
					$query_List_cat=$this->db->query("select kc.category_name from kg_subject_list_category as kc where kc.cate_term='$quarter' and kc.academicyear='$max_year' and kc.cate_grade='$grade' group by kc.sid order by kc.sid ASC ");
					if($query_List_cat->num_rows()>0){
						foreach($query_List_cat->result() as $row_cat){
							$cate_name=$row_cat->category_name;
							$query_List=$this->db->query("select bs.sname,bs.nid,bs.scategory from  kg_subject_list_name as bs where bs.sterm='$quarter' and  bs.academicyear='$max_year' and bs.scategory='$cate_name' and bs.sgrade='$grade' group by bs.sname order by bs.sname ASC ");
							if($query_List->num_rows()>0){	
								$output.='<tr style="background-color:#e3e3e3"><td>'.$no.'.'.$noo.'</td><td>'.$cate_name.'</td><td> Status</td>';	
								$nooo=1;
								foreach($query_List->result() as $row_Activity){
									$criteriaName=$row_Activity->nid;
									$criteria_Name=$row_Activity->sname;
									$output.='<tr><td>'.$no.'.'.$noo.'.'.$nooo.'</td><td>'.$criteria_Name.'</td><td>';
									$query_check=$this->db->query("select * from kg_subject_student_result where quarter='$quarter' and academicyear='$max_year' and result_period='$period_status' and bsgrade='$gradesec' and criteria_name='$criteriaName' group by criteria_name order by criteria_name ASC ");
									if($query_check->num_rows()>0){
										$output.='<span class="badge badge-success"><i class="fas fa-check-circle"></i></span>';
									}else{
										$output.='<span class="badge badge-danger"><i class="fas fa-times-circle"></i></span>';
									}
									$output.='</td></tr>';
									$nooo++;
								}
								$noo++;
							}
						}
					}
					$no++;
				}
				$output.='</table></div>';
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
	            <div class="alert-body">
	                <button class="close"  data-dismiss="alert">
	                    <span>&times;</span>
	                </button>
	            <i class="fas fa-check-circle"> </i> No record found for grade '.$gradesec.'.
	    	</div></div>';
			}
		}
		return $output;
	}
	function fecthDataProgressWeek($branches,$gradesecs,$period_status,$max_year){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
         $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
		foreach($gradesecs as $gradesec){
			$queryBS=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' group by kh.sub_name order by kh.sub_name ASC ");
			if($queryBS->num_rows()>0){
				$nooo=1;
				$output.='<div class="table-responsive">
		        <table class="tabler table-borderedr table-hover" style="width:100%;">
		        <thead> <tr><th colspan="3" class="text-center" style="background-color:#e3e3e3">
	            '.$school_name.' Data Progress Status in '.$max_year.' E.C('.$gYearName.' G.C) for grade '.$gradesec.'</th></tr>';
	            $no=1; 
				foreach($queryBS->result() as $rowActivity){
					$noo=1;
					$output.='<tr style="background-color:#e3e3e3"><th>'.$no.'</th><th colspan="2">'.$rowActivity->sub_name.'</th>';
					$quarter=$rowActivity->sub_name;
					$grade=$rowActivity->header_grade;
					$query_List_cat=$this->db->query("select kc.category_name from kg_subject_list_category as kc where kc.cate_term='$quarter' and kc.academicyear='$max_year' and kc.cate_grade='$grade' group by kc.sid order by kc.sid ASC ");
					if($query_List_cat->num_rows()>0){
						foreach($query_List_cat->result() as $row_cat){
							$cate_name=$row_cat->category_name;
							$query_List=$this->db->query("select bs.sname,bs.nid,bs.scategory from  kg_subject_list_name as bs where bs.sterm='$quarter' and  bs.academicyear='$max_year' and bs.scategory='$cate_name' and bs.sgrade='$grade' and bs.week='$period_status' group by bs.sname order by bs.sname ASC ");
							if($query_List->num_rows()>0){	
								$output.='<tr style="background-color:#e3e3e3"><td>'.$no.'.'.$noo.'</td><td>'.$cate_name.'</td><td> Status</td>';	
								$nooo=1;
								foreach($query_List->result() as $row_Activity){
									$criteriaName=$row_Activity->nid;
									$criteria_Name=$row_Activity->sname;
									$output.='<tr><td>'.$no.'.'.$noo.'.'.$nooo.'</td><td>'.$criteria_Name.'</td><td>';
									$query_check=$this->db->query("select * from kg_subject_student_result where quarter='$quarter' and academicyear='$max_year' and result_period='$period_status' and bsgrade='$gradesec' and criteria_name='$criteriaName' group by criteria_name order by criteria_name ASC ");
									if($query_check->num_rows()>0){
										$output.='<span class="badge badge-success"><i class="fas fa-check-circle"></i></span>';
									}else{
										$output.='<span class="badge badge-danger"><i class="fas fa-times-circle"></i></span>';
									}
									$output.='</td></tr>';
									$nooo++;
								}
								$noo++;
							}
						}
					}
					$no++;
				}
				$output.='</table></div>';
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
	            <div class="alert-body">
	                <button class="close"  data-dismiss="alert">
	                    <span>&times;</span>
	                </button>
	            <i class="fas fa-check-circle"> </i> No record found for grade '.$gradesec.'.
	    	</div></div>';
			}
		}
		return $output;
	}
	function fecthReportStatistics($branches,$valueNames,$headerNames,$gradesec,$quarter,$period_status,$max_year,$countValues){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
		$colSpan=$countValues + 3;
		$output.='<h4 class="text-center">'.$school_name.'<br> <u>'.$quarter.'('.$period_status.') Report Statistics in '.$max_year.' E.C('.$gYearName.' G.C) for '.$gradesec.'</u></h4>
		<div class="table-responsive">
        <table class="tabler table-borderedr table-hover" style="width:100%;">
        <thead> <tr><th>No.</th><th>Student Name</th><th>Grade</th>';
        foreach($valueNames as $valueName){
        	$output.='<th class="text-center" style="background-color:#e3e3e3">'.$valueName.' </th>';
        }
        $output.='</tr>';

    	foreach($headerNames as $headerName){
    		
    		$queryFetchCat=$this->db->query("select sn.sname,sn.nid from kg_subject_list_name as sn where sn.academicyear='$max_year' and sn.sgrade='$gradesec' and sn.sterm='$quarter' and sn.scategory='$headerName' group by sn.sname ");
    		if($queryFetchCat->num_rows()>0){
    			$no=1; 
    			$output.='<tr style="background-color:#e3e3e3"><th class="text-center" colspan="'.$colSpan.'">'.$headerName.'</th></tr>';
    			foreach($queryFetchCat->result() as $row_cat){
    				$cat_Name=$row_cat->sname;	
    				$catName=$row_cat->nid;	
    				$output.='<tr style="background-color:#e3e3e3"><th colspan="'.$colSpan.'">'.$cat_Name.'</th></tr>';		
    				$no=1; 
	            	foreach($valueNames as $valueName){	
			            $queryFetch=$this->db->query("select sr.stuid, sr.value,us.fname,us.mname, us.lname, us.gradesec from kg_subject_student_result as sr cross join users as us where us.username=sr.stuid and us.grade='$gradesec' and us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$branches' and sr.academicyear='$max_year' and sr.criteria_name='$catName' and sr.value='$valueName' and sr.quarter='$quarter' and sr.result_period='$period_status' order by us.fname,us.mname,us.lname ");
			            if($queryFetch->num_rows()>0){

			            	foreach($queryFetch->result() as $rowResult){
			            		$output.='<tr><td>'.$no.'.</td><td>'.$rowResult->fname.' '.$rowResult->mname.' '.$rowResult->lname.'</td><td>'.$rowResult->gradesec.' </td>';
			            		foreach($valueNames as $valueName){
				            		if($rowResult->value==$valueName){
				            			$output.='<td class="text-center">'.$valueName.' <i class="fas fa-check-double"></i></td>';
				            		}else{
				            			$output.='<td class="text-center">-</td>';
				            		}

				            	}
				            	$no++;
			            	}
			            }
					} 
				}
			}
			$no=1;
		}
		$output.='</table></div>';
		return $output;
	}
	function fecthReportStatisticsWeek($branches,$valueNames,$headerNames,$gradesec,$quarter,$period_status,$max_year,$countValues){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
		$colSpan=$countValues + 3;
		$output.='<h4 class="text-center">'.$school_name.'<br> <u>'.$quarter.'('.$period_status.') Report Statistics in '.$max_year.' E.C('.$gYearName.' G.C) for '.$gradesec.'</u></h4>
		<div class="table-responsive">
        <table class="tabler table-borderedr table-hover" style="width:100%;">
        <thead> <tr><th>No.</th><th>Student Name</th><th>Grade</th>';
        foreach($valueNames as $valueName){
        	$output.='<th class="text-center" style="background-color:#e3e3e3">'.$valueName.' </th>';
        }
        $output.='</tr>';

    	foreach($headerNames as $headerName){
    		
    		$queryFetchCat=$this->db->query("select sn.sname,sn.nid from kg_subject_list_name as sn where sn.academicyear='$max_year' and sn.sgrade='$gradesec' and sn.sterm='$quarter' and sn.scategory='$headerName' and sn.week='$period_status' group by sn.sname ");
    		if($queryFetchCat->num_rows()>0){
    			$no=1; 
    			$output.='<tr style="background-color:#e3e3e3"><th class="text-center" colspan="'.$colSpan.'">'.$headerName.'</th></tr>';
    			foreach($queryFetchCat->result() as $row_cat){
    				$cat_Name=$row_cat->sname;	
    				$catName=$row_cat->nid;	
    				$output.='<tr style="background-color:#e3e3e3"><th colspan="'.$colSpan.'">'.$cat_Name.'</th></tr>';		
    				$no=1; 
	            	foreach($valueNames as $valueName){	
			            $queryFetch=$this->db->query("select sr.stuid, sr.value,us.fname,us.mname, us.lname, us.gradesec from kg_subject_student_result as sr cross join users as us where us.username=sr.stuid and us.grade='$gradesec' and us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$branches' and sr.academicyear='$max_year' and sr.criteria_name='$catName' and sr.value='$valueName' and sr.quarter='$quarter' and sr.result_period='$period_status' order by us.fname,us.mname,us.lname ");
			            if($queryFetch->num_rows()>0){

			            	foreach($queryFetch->result() as $rowResult){
			            		$output.='<tr><td>'.$no.'.</td><td>'.$rowResult->fname.' '.$rowResult->mname.' '.$rowResult->lname.'</td><td>'.$rowResult->gradesec.' </td>';
			            		foreach($valueNames as $valueName){
				            		if($rowResult->value==$valueName){
				            			$output.='<td class="text-center">'.$valueName.' <i class="fas fa-check-double"></i></td>';
				            		}else{
				            			$output.='<td class="text-center">-</td>';
				            		}

				            	}
				            	$no++;
			            	}
			            }
					} 
				}
			}
			$no=1;
		}
		$output.='</table></div>';
		return $output;
	}
	function calculate_resultReportStatistics1($branches,$gradesec,$quarter,$period_status,$max_year){
	    $output='';   

	    $this->db->where('kg_subject_list_name.academicyear',$max_year);
	    $this->db->where('kg_subject_list_name.sterm',$quarter);
	    $this->db->where('users.usertype','Student');
	    $this->db->where('users.gradesec',$gradesec);
	    $this->db->where('users.branch',$branches);
	    $this->db->where(array('users.academicyear'=>$max_year));
	    $this->db->order_by('kg_subject_list_name.nid','ASC');
	    $this->db->group_by('kg_subject_list_name.scategory');
	    $this->db->select('kg_subject_list_name.scategory,kg_subject_list_name.sgrade, kg_subject_list_name.nid,users.gradesec');
	    $this->db->from('kg_subject_list_name');
	    $this->db->join('users', 
	            'users.grade = kg_subject_list_name.sgrade');
	    $queryCat = $this->db->get();
	    $fValue=0;
	    if($queryCat->num_rows()>0){
	    	$this->db->where('bsbranch',$branches);
	    	$this->db->where('bsgrade',$gradesec);
	    	$this->db->where('academicyear',$max_year);
	    	$queryDelete=$this->db->delete('kg_student_resultcalculate');
	    	$queryKey=$this->db->query("select max(kv.value_percent) as Max_Value , kv.value_name, kv.value_percent,u.grade from users as u inner join kg_subject_value as kv where kv.value_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kv.academicyear='$max_year' group by kv.value_name order by kv.value_percent DESC ");
	    	if($queryKey->num_rows()>0){
	    		$rowMax=$queryKey->row();
	        	$maxValue=$rowMax->Max_Value;
	    	}else{
	    		$maxValue='';
	    	}	    	
	    	$arrayData=array();
	    	foreach($queryCat->result() as $catName){
            	$totalResults=0;
              	$category=$catName->scategory;
              	$grade=$catName->sgrade;
              	$gradesec=$catName->gradesec; 
              	$queryUsers=$this->db->query("select username,fname,mname,lname from users where academicyear='$max_year' and gradesec='$gradesec' and branch='$branches' and status='Active' and isapproved='1' ");
	  			foreach($queryUsers->result() as $rowUsers){
	  				$userName=$rowUsers->username;
	  				$queryTotalCriteria=$this->db->query("select sname,nid from kg_subject_list_name as km where km.academicyear='$max_year' and km.sterm='$quarter' and km.scategory='$category' and km.sgrade='$grade' group by nid ");  
              		$numCount=	$queryTotalCriteria->num_rows();   
              		$totalValue=$numCount * $maxValue;    
	  				foreach($queryTotalCriteria->result() as $rowValue){
	  					$nids=$rowValue->nid;
	  					$queryValueFinal=$this->db->query("select value,stuid from kg_subject_student_result as kr where kr.academicyear='$max_year' and kr.quarter='$quarter' and kr.result_period='$period_status' and stuid='$userName' and criteria_name='$nids' group by kr.id ");
						if($queryValueFinal->num_rows()>0){
							foreach($queryValueFinal->result() as $row){
								$values=$row->value;
		          				$query_value=$this->db->query("select value_percent from kg_subject_value as kv where kv.academicyear='$max_year' and kv.value_grade='$grade' and kv.value_name='$values' ");
		          				foreach($query_value->result() as $rowValuee){
		              				$valu_percent=$rowValuee->value_percent;	
		              				$totalResults=$totalResults + $valu_percent;

		              			}
							}
							$fValue=round(($maxValue * $totalResults)/$totalValue);
						}		                  				
		  			}
		  			$arrayData=array(
		  				'stuid'=>$userName,
		  				'group_name'=>$category,
		  				'value'=>$fValue,
		  				'quarter'=>$quarter,
		  				'result_period'=>$period_status,
		  				'academicyear'=>$max_year,
		  				'bsgrade'=>$gradesec,
		  				'bsbranch'=>$branches
		  			);
		  			$query=$this->db->insert('kg_student_resultcalculate',$arrayData);
		  			$totalResults=0;$fValue=0;
		  		}
	  		} 
	  	}
	  	if($query){
	  		return true;
	  	}else{
	  		return false;
	  	}
	}
	function calculate_resultReportStatistics1Week($branches,$gradesec,$quarter,$period_status,$max_year){
	    $output='';   
	    $query='';
	    $this->db->where('kg_subject_list_name.academicyear',$max_year);
	    $this->db->where('kg_subject_list_name.sterm',$quarter);
	    $this->db->where('kg_subject_list_name.week',$period_status);
	    $this->db->where('users.usertype','Student');
	    $this->db->where('users.gradesec',$gradesec);
	    $this->db->where('users.branch',$branches);
	    $this->db->where(array('users.academicyear'=>$max_year));
	    $this->db->order_by('kg_subject_list_name.nid','ASC');
	    $this->db->group_by('kg_subject_list_name.scategory');
	    $this->db->select('kg_subject_list_name.scategory,kg_subject_list_name.sgrade, kg_subject_list_name.nid,users.gradesec');
	    $this->db->from('kg_subject_list_name');
	    $this->db->join('users', 
	            'users.grade = kg_subject_list_name.sgrade');
	    $queryCat = $this->db->get();
	    $fValue=0;
	    if($queryCat->num_rows()>0){
	    	$this->db->where('bsbranch',$branches);
	    	$this->db->where('bsgrade',$gradesec);
	    	$this->db->where('academicyear',$max_year);
	    	$queryDelete=$this->db->delete('kg_student_resultcalculate');
	    	$queryKey=$this->db->query("select max(kv.value_percent) as Max_Value , kv.value_name, kv.value_percent,u.grade from users as u inner join kg_subject_value as kv where kv.value_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kv.academicyear='$max_year' group by kv.value_name order by kv.value_percent DESC ");
	    	if($queryKey->num_rows()>0){
	    		$rowMax=$queryKey->row();
	        	$maxValue=$rowMax->Max_Value;
	    	}else{
	    		$maxValue='';
	    	}	    	
	    	$arrayData=array();
	    	foreach($queryCat->result() as $catName){
            	$totalResults=0;
              	$category=$catName->scategory;
              	$grade=$catName->sgrade;
              	$gradesec=$catName->gradesec; 
              	$queryUsers=$this->db->query("select username,fname,mname,lname from users where academicyear='$max_year' and gradesec='$gradesec' and branch='$branches' and status='Active' and isapproved='1' ");
	  			foreach($queryUsers->result() as $rowUsers){
	  				$userName=$rowUsers->username;
	  				$queryTotalCriteria=$this->db->query("select sname,nid from kg_subject_list_name as km where km.academicyear='$max_year' and km.sterm='$quarter' and km.scategory='$category' and km.sgrade='$grade' and week='$period_status' group by nid ");  
              		$numCount=	$queryTotalCriteria->num_rows();   
              		$totalValue=$numCount * $maxValue;    
	  				foreach($queryTotalCriteria->result() as $rowValue){
	  					$nids=$rowValue->nid;
	  					$queryValueFinal=$this->db->query("select value,stuid from kg_subject_student_result as kr where kr.academicyear='$max_year' and kr.quarter='$quarter' and kr.result_period='$period_status' and stuid='$userName' and criteria_name='$nids' group by kr.id ");
						if($queryValueFinal->num_rows()>0){
							foreach($queryValueFinal->result() as $row){
								$values=$row->value;
		          				$query_value=$this->db->query("select value_percent from kg_subject_value as kv where kv.academicyear='$max_year' and kv.value_grade='$grade' and kv.value_name='$values' ");
		          				foreach($query_value->result() as $rowValuee){
		              				$valu_percent=$rowValuee->value_percent;	
		              				$totalResults=$totalResults + $valu_percent;

		              			}
							}
							$fValue=round(($maxValue * $totalResults)/$totalValue);
						}		                  				
		  			}
		  			$arrayData=array(
		  				'stuid'=>$userName,
		  				'group_name'=>$category,
		  				'value'=>$fValue,
		  				'quarter'=>$quarter,
		  				'result_period'=>$period_status,
		  				'academicyear'=>$max_year,
		  				'bsgrade'=>$gradesec,
		  				'bsbranch'=>$branches
		  			);
		  			$query=$this->db->insert('kg_student_resultcalculate',$arrayData);
		  			$totalResults=0;$fValue=0;
		  		}
	  		} 
	  	}
	  	if($query){
	  		return true;
	  	}else{
	  		return false;
	  	}
	}
	function fecthReportStatistics1($branches,$gradesec,$quarter,$period_status,$max_year){
	    $output='';
	    $query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
	    $this->db->where('kg_subject_list_name.academicyear',$max_year);
	    $this->db->where('kg_subject_list_name.sterm',$quarter);
	    $this->db->where('users.usertype','Student');
	    $this->db->where('users.gradesec',$gradesec);
	    $this->db->where('users.branch',$branches);
	    $this->db->where(array('users.academicyear'=>$max_year));
	    $this->db->order_by('kg_subject_list_name.nid','ASC');
	    $this->db->group_by('kg_subject_list_name.scategory');
	    $this->db->select('kg_subject_list_name.scategory,kg_subject_list_name.sgrade, kg_subject_list_name.nid,users.gradesec');
	    $this->db->from('kg_subject_list_name');
	    $this->db->join('users', 
	            'users.grade = kg_subject_list_name.sgrade');
	    $queryCat = $this->db->get();
	    if($queryCat->num_rows()>0){
	    	$query_name = $this->db->query("select * from school");
	        $row_name = $query_name->row();
	        $school_name=$row_name->name;
	        $school_name2=$row_name->name_2;
	        $address=$row_name->address;
	        $phone=$row_name->phone;
	        $website=$row_name->website;
	        $email=$row_name->email;
	        $schooLogo=$row_name->logo;
	      	$totalHeader=$queryCat->num_rows() + 1;
	      	$output.= '<div style="width:100%;height:auto;page-break-inside:avoid;display: block; ">
	          <div class="support-ticket media pb-1 mb-3 card-header">
	          <img src="'.base_url().'/logo/'.$schooLogo.'" style="width:auto;height: 110px;" class="user-img mr-2" alt="">
	          <div class="media-body ml-3">
	            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">'.$school_name2.' <br>'.$school_name.' </B></h2></span>
	            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u>የ'.$max_year.'ዓ.ም የትምህርት ዘመን የተማሪዎች ዉጤት ትንተና</u></B></h4></p>
	          </div>
	        </div> ';
	      	$queryHoomRoom=$this->db->query("select u.fname,u.mname,mysign from users as u cross join hoomroomplacement as hm where hm.roomgrade='$gradesec' and hm.academicyear='$max_year' and hm.branch='$branches' and u.branch='$branches' and u.username=hm.teacher and u.status='Active' and u.isapproved='1' ");
            if($queryHoomRoom->num_rows()>0){
              $rowHommeRoom=$queryHoomRoom->row_array();
              $tfName=$rowHommeRoom['fname'];
              $tmName=$rowHommeRoom['mname'];
              $signSigns=$rowHommeRoom['mysign'];
            }else{
              $tfName='___________';
              $tmName='___________';
              $signSigns='_____';
            }  
	      	$output.='<h4><u> ክፍል:- '.$gradesec.' &nbsp;&nbsp;&nbsp;&nbsp; ጭብጥ :- '.$quarter.' </u></h4><br>
	      	<div class="table-responsive">
	          <table class="tabler table-borderedr table-hover" style="width:100%;">
	          <thead> <tr><th rowspan="2">የተሰጠ ነጥብ</th><th rowspan="2">ፆታ</th><th colspan="'.$totalHeader.'" class="text-center">አዉድ</th></tr>';
	        $queryKey=$this->db->query("select max(kv.value_percent) as Max_Value , kv.value_name, kv.value_percent,kv.value_desc,u.grade from users as u inner join kg_subject_value as kv where kv.value_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kv.academicyear='$max_year' group by kv.value_name order by kv.value_percent DESC ");
          	foreach($queryCat->result() as $catName){
            	$category=$catName->scategory;
            	$grade=$catName->sgrade;
            	$output.='<th class="text-center" style="background-color:#e3e3e3">'.$catName->scategory.' </th>';  
          	}
	        if($queryKey->num_rows()>0){
	        	$numCount=0;
	            $arrayGender=array('Male','Female');
	            foreach($queryKey->result() as $rowValue){
	            	$tot=0; $totma=0;$totfe=0; $male=0;
	              	$valPercent=$rowValue->value_percent;
	              	$valName=$rowValue->value_name;
	              	$output.='<tr><th rowspan="4" class="text-center">'.$rowValue->value_name.'</th>';
	              	foreach($arrayGender as $arrayGenders){
	              		if($arrayGenders=='Male'){
	              			$output.='<tr><td>ወንድ</td>';
	              		}else{
	              			$output.='<tr><td>ሴት</td>';
	              		}                              
		                foreach($queryCat->result() as $catName){
		                	$totalResults=0;
		                  	$category=$catName->scategory;
		                  	$grade=$catName->sgrade;
		                  	$gradesec=$catName->gradesec;
		                  	$queryValue=$this->db->query("select value,stuid from kg_student_resultcalculate where academicyear='$max_year' and quarter='$quarter' and result_period='$period_status' and value='$valPercent' and group_name='$category' group by id ");
		                  	if($queryValue->num_rows()>0){            	
		                  		foreach($queryValue->result() as $rowValue){
		                  			$userName=$rowValue->stuid;
		                  			$queryUsers=$this->db->query("select gender,fname,mname, lname from users where academicyear='$max_year' and gradesec='$gradesec' and branch='$branches' and status='Active' and isapproved='1' and username='$userName' ");
		                  			foreach($queryUsers->result() as $rowUsers){
			                  			if($rowUsers->gender==$arrayGenders){
			                  				$totma=$totma + 1;
			                  			}		                  				
		                  			}
		                  		}
		                  		if($totma>0){
		                  			$output.='<td class="text-center">'.$totma.'</td>';
		                  		}else{
		                  			$output.='<td class="text-center">-</td>';
		                  		}
		                  	}else{
		                  		$output.='<td class="text-center">-</td>';
		                  	}
                  			$totma=0; 	
		                }
		                $output.='</tr>';
	              	} 
	              	$output.='<td style="background:#e3e3e3">ድምር</td>'; 
	              	foreach($queryCat->result() as $catName){
	              		$tot=0;
	              		foreach($arrayGender as $arrayGenders){
		                	$totalResults=0;
		                  	$category=$catName->scategory;
		                  	$grade=$catName->sgrade;
		                  	$gradesec=$catName->gradesec;
		                  	$queryValue=$this->db->query("select value,stuid from kg_student_resultcalculate where academicyear='$max_year' and quarter='$quarter' and result_period='$period_status' and value='$valPercent' and group_name='$category' group by id ");
		                  	if($queryValue->num_rows()>0){            	
		                  		foreach($queryValue->result() as $rowValue){
		                  			$userName=$rowValue->stuid;
		                  			$queryUsers=$this->db->query("select gender,fname,mname, lname from users where academicyear='$max_year' and gradesec='$gradesec' and branch='$branches' and status='Active' and isapproved='1' and username='$userName' ");
		                  			foreach($queryUsers->result() as $rowUsers){
			                  			if($rowUsers->gender==$arrayGenders){
			                  				$totma=$totma + 1;
			                  			}		                  				
		                  			}
		                  		}	                  		
		                  	}
		                }
		                $tot=$totma + $tot;
		                if($tot>0){
                  			$output.='<td style="background:#e3e3e3" class="text-center">'.$tot.'</td>';
                  		}else{
                  			$output.='<td style="background:#e3e3e3" class="text-center">-</td>';
                  		}
		                $tot=0;
                  		$totma=0;		                
	              	}
              		 $output.='</tr>';
	            }
	        }
	        $output.='</tr>';
	      	$output.='</table></div><br>';
	      	$output.='<div class="row">
	      	<div class="col-md-8 col-8">';
	      	foreach($queryKey->result() as $rowValue){
            	$output.='<h6>'.$rowValue->value_name.' = ' .$rowValue->value_desc.'</h6>';  
          	}
	      	$output.='</div>
	      	<div class="col-md-4 col-4">
	      	የመምህርቷ ስም:- <u>'.$tfName.' '.$tmName.' </u><br>
	      	ፊርማ';$output.="<img alt='' src='".base_url()."/".$signSigns."' class='' style='height:40px;width:120px'><br>";
	      	$output.='ያፀደቀዉ አካል ስም _________________________. <br>
	      	ፊርማ ____________________.
	      	</div>
	      	</div>';
	    }
	    return $output;
	}
	function fecthReportStatistics1Week($branches,$gradesec,$quarter,$period_status,$max_year){
	    $output='';
	    $query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
	    $this->db->where('kg_subject_list_name.academicyear',$max_year);
	    $this->db->where('kg_subject_list_name.sterm',$quarter);
	    $this->db->where('kg_subject_list_name.week',$period_status);
	    $this->db->where('users.usertype','Student');
	    $this->db->where('users.gradesec',$gradesec);
	    $this->db->where('users.branch',$branches);
	    $this->db->where(array('users.academicyear'=>$max_year));
	    $this->db->order_by('kg_subject_list_name.nid','ASC');
	    $this->db->group_by('kg_subject_list_name.scategory');
	    $this->db->select('kg_subject_list_name.scategory,kg_subject_list_name.sgrade, kg_subject_list_name.nid,users.gradesec');
	    $this->db->from('kg_subject_list_name');
	    $this->db->join('users', 
	            'users.grade = kg_subject_list_name.sgrade');
	    $queryCat = $this->db->get();
	    if($queryCat->num_rows()>0){
	    	$query_name = $this->db->query("select * from school");
	        $row_name = $query_name->row();
	        $school_name=$row_name->name;
	        $school_name2=$row_name->name_2;
	        $address=$row_name->address;
	        $phone=$row_name->phone;
	        $website=$row_name->website;
	        $email=$row_name->email;
	        $schooLogo=$row_name->logo;
	      	$totalHeader=$queryCat->num_rows() + 1;
	      	$output.= '<div style="width:100%;height:auto;page-break-inside:avoid;display: block; ">
	          <div class="support-ticket media pb-1 mb-3 card-header">
	          <img src="'.base_url().'/logo/'.$schooLogo.'" style="width:auto;height: 110px;" class="user-img mr-2" alt="">
	          <div class="media-body ml-3">
	            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">'.$school_name2.' <br>'.$school_name.' </B></h2></span>
	            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u>የ'.$max_year.'ዓ.ም የትምህርት ዘመን የተማሪዎች ዉጤት ትንተና</u></B></h4></p>
	          </div>
	        </div> ';
	      	$queryHoomRoom=$this->db->query("select u.fname,u.mname,mysign from users as u cross join hoomroomplacement as hm where hm.roomgrade='$gradesec' and hm.academicyear='$max_year' and hm.branch='$branches' and u.branch='$branches' and u.username=hm.teacher and u.status='Active' and u.isapproved='1' ");
            if($queryHoomRoom->num_rows()>0){
              $rowHommeRoom=$queryHoomRoom->row_array();
              $tfName=$rowHommeRoom['fname'];
              $tmName=$rowHommeRoom['mname'];
              $signSigns=$rowHommeRoom['mysign'];
            }else{
              $tfName='___________';
              $tmName='___________';
              $signSigns='_____';
            }  
	      	$output.='<h4><u> ክፍል:- '.$gradesec.' &nbsp;&nbsp;&nbsp;&nbsp; ጭብጥ :- '.$quarter.' </u></h4><br>
	      	<div class="table-responsive">
	          <table class="tabler table-borderedr table-hover" style="width:100%;">
	          <thead> <tr><th rowspan="2">የተሰጠ ነጥብ</th><th rowspan="2">ፆታ</th><th colspan="'.$totalHeader.'" class="text-center">አዉድ</th></tr>';
	        $queryKey=$this->db->query("select max(kv.value_percent) as Max_Value , kv.value_name, kv.value_percent,kv.value_desc,u.grade from users as u inner join kg_subject_value as kv where kv.value_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kv.academicyear='$max_year' group by kv.value_name order by kv.value_percent DESC ");
          	foreach($queryCat->result() as $catName){
            	$category=$catName->scategory;
            	$grade=$catName->sgrade;
            	$output.='<th class="text-center" style="background-color:#e3e3e3">'.$catName->scategory.' </th>';  
          	}
	        if($queryKey->num_rows()>0){
	        	$numCount=0;
	            $arrayGender=array('Male','Female');
	            foreach($queryKey->result() as $rowValue){
	            	$tot=0; $totma=0;$totfe=0; $male=0;
	              	$valPercent=$rowValue->value_percent;
	              	$valName=$rowValue->value_name;
	              	$output.='<tr><th rowspan="4" class="text-center">'.$rowValue->value_name.'</th>';
	              	foreach($arrayGender as $arrayGenders){
	              		if($arrayGenders=='Male'){
	              			$output.='<tr><td>ወንድ</td>';
	              		}else{
	              			$output.='<tr><td>ሴት</td>';
	              		}                              
		                foreach($queryCat->result() as $catName){
		                	$totalResults=0;
		                  	$category=$catName->scategory;
		                  	$grade=$catName->sgrade;
		                  	$gradesec=$catName->gradesec;
		                  	$queryValue=$this->db->query("select value,stuid from kg_student_resultcalculate where academicyear='$max_year' and quarter='$quarter' and result_period='$period_status' and value='$valPercent' and group_name='$category' group by id ");
		                  	if($queryValue->num_rows()>0){            	
		                  		foreach($queryValue->result() as $rowValue){
		                  			$userName=$rowValue->stuid;
		                  			$queryUsers=$this->db->query("select gender,fname,mname, lname from users where academicyear='$max_year' and gradesec='$gradesec' and branch='$branches' and status='Active' and isapproved='1' and username='$userName' ");
		                  			foreach($queryUsers->result() as $rowUsers){
			                  			if($rowUsers->gender==$arrayGenders){
			                  				$totma=$totma + 1;
			                  			}		                  				
		                  			}
		                  		}
		                  		if($totma>0){
		                  			$output.='<td class="text-center">'.$totma.'</td>';
		                  		}else{
		                  			$output.='<td class="text-center">-</td>';
		                  		}
		                  	}else{
		                  		$output.='<td class="text-center">-</td>';
		                  	}
                  			$totma=0; 	
		                }
		                $output.='</tr>';
	              	} 
	              	$output.='<td style="background:#e3e3e3">ድምር</td>'; 
	              	foreach($queryCat->result() as $catName){
	              		$tot=0;
	              		foreach($arrayGender as $arrayGenders){
		                	$totalResults=0;
		                  	$category=$catName->scategory;
		                  	$grade=$catName->sgrade;
		                  	$gradesec=$catName->gradesec;
		                  	$queryValue=$this->db->query("select value,stuid from kg_student_resultcalculate where academicyear='$max_year' and quarter='$quarter' and result_period='$period_status' and value='$valPercent' and group_name='$category' group by id ");
		                  	if($queryValue->num_rows()>0){            	
		                  		foreach($queryValue->result() as $rowValue){
		                  			$userName=$rowValue->stuid;
		                  			$queryUsers=$this->db->query("select gender,fname,mname, lname from users where academicyear='$max_year' and gradesec='$gradesec' and branch='$branches' and status='Active' and isapproved='1' and username='$userName' ");
		                  			foreach($queryUsers->result() as $rowUsers){
			                  			if($rowUsers->gender==$arrayGenders){
			                  				$totma=$totma + 1;
			                  			}		                  				
		                  			}
		                  		}	                  		
		                  	}
		                }
		                $tot=$totma + $tot;
		                if($tot>0){
                  			$output.='<td style="background:#e3e3e3" class="text-center">'.$tot.'</td>';
                  		}else{
                  			$output.='<td style="background:#e3e3e3" class="text-center">-</td>';
                  		}
		                $tot=0;
                  		$totma=0;		                
	              	}
              		 $output.='</tr>';
	            }
	        }
	        $output.='</tr>';
	      	$output.='</table></div><br>';
	      	$output.='<div class="row">
	      	<div class="col-md-8 col-8">';
	      	foreach($queryKey->result() as $rowValue){
            	$output.='<h6>'.$rowValue->value_name.' = ' .$rowValue->value_desc.'</h6>';  
          	}
	      	$output.='</div>
	      	<div class="col-md-4 col-4">
	      	የመምህርቷ ስም:- <u>'.$tfName.' '.$tmName.' </u><br>
	      	ፊርማ';$output.="<img alt='' src='".base_url()."/".$signSigns."' class='' style='height:40px;width:120px'><br>";
	      	$output.='ያፀደቀዉ አካል ስም _________________________. <br>
	      	ፊርማ ____________________.
	      	</div>
	      	</div>';
	    }
	    return $output;
	}
	function fecthRosterSummary($branches,$gradesec,$period_status,$max_year,$max_quarter){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
        $arraySemester=array('Semester1','Semester2');
        $queryBS=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' group by kh.sub_name order by kh.sub_name ASC ");
	    if($queryBS->num_rows()>0){
	    	$output.='<h4 class="text-center">'.$school_name.'<br> <u> የ'.$gradesec.' ክፍል የውጤት ማጠናቀሪያ ሮስተር በ'.$max_year.'ዓ.ም('.$gYearName.' G.C) </u></h4>
					<div class="table-responsive">
			        <table class="tabler table-bordered table-hover" style="width:100%;">
			        <thead><tr><th rowspan="3">ተ.ቁ</th><th rowspan="3">የተማሪው/ዋ ሙሉ ስም</th><th rowspan="3">ጾታ</th>';
	        foreach($arraySemester as $arraySemesters){
	        	if($arraySemesters=='Semester1'){
	        		$semesterName='ወሰነ ትምህርት አንድ';
	        	}else{
	        		$semesterName='ወሰነ ትምህርት ሁለት';
	        	}
		        $queryBSName=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
	        	$columnSpanNames=$queryBSName->num_rows() + 2;
		        $output.='<th colspan="'.$columnSpanNames.'" class="text-center">'.$semesterName.'</th>
		        ';
		    }
		    $output.='<th rowspan="3" class="text-center">የአማካኝ የ1ኛና 2ኛ ወሰነ ት/ት</th><tr>';
		    $noC=1;
		    foreach($arraySemester as $arraySemesters){
		    	 $queryBSName=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
	        	foreach($queryBSName->result() as $rowActivity){
		        	$output.='<th>ጭብጥ'.$noC.'</th>';
		        	$noC++;
		        }
		        $output.='<th>አማካኝ</th><th>ጠባይ</th>';
		    }
		    $output.='<tr>';
		    foreach($arraySemester as $arraySemesters){
		    	$queryBSName2=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
		    	if($queryBSName2->num_rows()>0){
		        	foreach($queryBSName2->result() as $rowActivity){
						$output.='<th>'.$rowActivity->sub_name.'</th>';
					} 
					$output.='<th></th>';
					$output.='<th></th>';
				}else{
					$output.='<th>-</th><th>-</th>';
				}       
	    	}
	    	$output.='</tr>';
	    	$queryStudent=$this->db->query("select username,fname,mname,lname,grade,gender from users where academicyear='$max_year' and gradesec='$gradesec' and isapproved='1' and status='Active' and usertype='Student' and branch='$branches' group by id order by fname,mname,lname ASC ");
	    	if($queryStudent->num_rows()>0){
	    		$noStudent=1;$finalYearlyAverage=0;
	    		foreach($queryStudent->result() as $rowStudent){
	    			$stuid=$rowStudent->username;
	    			$grade=$rowStudent->grade;
	    			$queryMaxValuePercent=$this->db->query("select max(value_percent) as max_value_percent from kg_subject_value where academicyear='$max_year' and value_grade='$grade' ");
	    			if($queryMaxValuePercent->num_rows()>0){
	    				$max_value_row=$queryMaxValuePercent->row();
			            $max_value_percent=$max_value_row->max_value_percent;
	    			}
	    			$output.='<tr><td>'.$noStudent.'</td><td>'.$rowStudent->fname.' '.$rowStudent->mname.' '.$rowStudent->lname.'</td><td>'.$rowStudent->gender.'</td>';
	    			$totalHeaders=0;$sumofTotalResult=0;
				    foreach($arraySemester as $arraySemesters){				    	
		    			$queryBSName3=$this->db->query("select kh.header_grade, kh.sub_name,kh.sub_name from kg_subject_header as kh where kh.header_grade='$grade' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
				    	if($queryBSName3->num_rows()>0){
				    		$totalListName=0;$totalOutOff=0;$totalGettedValue=0;
				        	foreach($queryBSName3->result() as $rowActivity){
				        		$totalHeaders=$totalHeaders + 1;
				        		$quarter=$rowActivity->sub_name;
				        		$queryFetchCat=$this->db->query("select sn.sname,sn.nid from kg_subject_list_name as sn where sn.academicyear='$max_year' and sn.sgrade='$grade' and sn.sterm='$quarter' group by sn.sname ");
				        		if($queryFetchCat->num_rows()>0){
				        			$totalListName=$queryFetchCat->num_rows();
				        			$totalOutOff=$totalListName * $max_value_percent;
				        			foreach($queryFetchCat->result() as $rowsCat){
				        				$catName=$rowsCat->nid;
				        				$queryFetch=$this->db->query("select sr.stuid, sr.value from kg_subject_student_result as sr where sr.stuid='$stuid' and  sr.academicyear='$max_year' and sr.criteria_name='$catName' and sr.quarter='$quarter' and sr.result_period='$period_status'  ");
			            				if($queryFetch->num_rows()>0){
			            					foreach($queryFetch->result() as $value_Name){
			            						$resultValue=$value_Name->value;
			            						$queryValuePercent=$this->db->query("select value_percent from kg_subject_value where academicyear='$max_year' and value_grade='$grade' and value_name='$resultValue' ");
			            						if($queryValuePercent->num_rows()>0){
			            							$value_row=$queryValuePercent->row();
			            							$value_percent=$value_row->value_percent;
			            						}else{
			            							$value_percent=0;
			            						}
			            						$totalGettedValue=$totalGettedValue + $value_percent;
			            					}
			            				}
				        			}
				        		}
				        		if($totalOutOff>0){
				        			$convertedResult=(100*$totalGettedValue)/$totalOutOff;
				        		}else{
				        			$convertedResult=0;
				        		}
				        		$sumofTotalResult=$sumofTotalResult + $convertedResult;
				        		$convertedResult2=round($convertedResult);
				        		if ($convertedResult2 >= 90 && $convertedResult2 <= 100){
						            $letterValue='E';
						        }
						        elseif ($convertedResult2 >= 70 && $convertedResult2 <= 89){ 
						            $letterValue='VG';
						        }
						        elseif ($convertedResult2 >= 50 && $convertedResult2 <= 69){ 
						            $letterValue='G';
						        }
						        elseif ($convertedResult2 <= 49){
						            $letterValue='NI';
						        }else{
						        	$letterValue='-';
						        }
								$output.='<td class="text-center">'.$letterValue.'</td>';
								$totalListName=0;$totalOutOff=0;$totalGettedValue=0;
							} 
						}
						$totalHeadersPercent=100 * $totalHeaders;
						if($totalHeadersPercent>0){
							$averageResult= (100 * $sumofTotalResult)/$totalHeadersPercent;
						}else{
							$averageResult= 0;
						}
						$finalYearlyAverage=$finalYearlyAverage + $averageResult;
						$averageResult2=round($averageResult);
						if ($averageResult2 >= 90 && $averageResult2 <= 100){
				            $letterValue='E';
				        }
				        elseif ($averageResult2 >= 70 && $averageResult2 <= 89){ 
				            $letterValue='VG';
				        }
				        elseif ($averageResult2 >= 50 && $averageResult2 <= 69){ 
				            $letterValue='G';
				        }
				        elseif ($averageResult2 <= 49){
				            $letterValue='NI';
				        }else{
				        	$letterValue='-';
				        }
				        if($queryBSName3->num_rows()>0){
							$output.='<td class="text-center">'.$letterValue.'</td>';
						}else{
							$output.='<td class="text-center">-</td>';
						}
						$eachQuarterBasicskill=$this->db->query(" Select value from basicskillvalue".$gradesec.$max_year." where stuid='$stuid' and academicyear='$max_year' and quarter='$max_quarter' and bsname='Conduct' group by stuid ");
				          if($eachQuarterBasicskill->num_rows()>0){
				            $valueBS=$eachQuarterBasicskill->row();
				            $getValue=$valueBS->value;
				            $output.='<td class="text-center">'.$getValue.'</td>';
				          }else{
				            $output.='<td class="text-center">-</td>';
				          }
						$totalHeaders=0;$sumofTotalResult=0;
					}
					$finalYearlyAverage2=round($finalYearlyAverage/2);
			        if ($finalYearlyAverage2 >= 90 && $finalYearlyAverage2 <= 100){
			            $letterValue='E';
			        }
			        elseif ($finalYearlyAverage2 >= 70 && $finalYearlyAverage2 <= 89){ 
			            $letterValue='VG';
			        }
			        elseif ($finalYearlyAverage2 >= 50 && $finalYearlyAverage2 <= 69){ 
			            $letterValue='G';
			        }
			        elseif ($finalYearlyAverage2 <= 49){
			            $letterValue='NI';
			        }else{
			        	$letterValue='-';
			        }
				    if($queryBSName3->num_rows()>0){
						$output.='<td class="text-center">'.$letterValue.'</td>';
					}else{
						$output.='<td class="text-center">-</td>';
					}
	    			$output.='</tr>';
	    			$noStudent++;
	    			$finalYearlyAverage=0;$finalYearlyAverage2=0;
	    		}
	    	}
			$output.='</table></div>';
			$output.='<p>ማሳሰቢያ፡- የተማሪ ውጤት የሚገለጸው በፊደል ነው፡፡</p>';
			/*$queryKey=$this->db->query("select kv.value_name, kv.value_desc,u.grade from users as u inner join kg_subject_value as kv where kv.value_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kv.academicyear='$max_year' group by kv.value_name order by kv.id ASC ");
			 if($queryKey->num_rows()>0){*/
				$output.= '<div id="ENS" class="table-responsive">
	            <table id="ENS" class="tabler table-borderedr table-md" cellspacing="5" cellpadding="5">';
	            $output .='<tr><th class="text-center" colspan="3">መግለጫ/Key</th></tr>';
	            $output .='<tr><td class="text-center">E</td><td class="text-center">ከ90 - 100 </td><td class="text-center">እጅግ በጣም ጥሩ ( E - Exceed Expectations) </td>';
	            $output .='<tr><td class="text-center">VG</td><td class="text-center">ከ70 - 89</td><td class="text-center"> በጣም ጥሩ (VG - Very Good)</td>';
	            $output .='<tr><td class="text-center">G </td><td class="text-center">ከ50 - 69</td><td class="text-center"> ጥሩ (G - Good) </td>';
	            $output .='<tr><td class="text-center">NI </td><td class="text-center">ከ49 በታች</td><td class="text-center">መሻሻል የሚያስፈልገው (NI - Needs Improvement)</td>';
	            $output.= '</table></div>';
	        /*}*/
		}
		return $output;
	}
	function fecthRosterSummaryWeek($branches,$gradesec,$period_status,$max_year,$max_quarter){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
        $arraySemester=array('Semester1','Semester2');
        $queryBS=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' group by kh.sub_name order by kh.sub_name ASC ");
	    if($queryBS->num_rows()>0){
	    	$output.='<h4 class="text-center">'.$school_name.'<br> <u> የ'.$gradesec.' ክፍል የውጤት ማጠናቀሪያ ሮስተር በ'.$max_year.'ዓ.ም('.$gYearName.' G.C) </u></h4>
					<div class="table-responsive">
			        <table class="tabler table-bordered table-hover" style="width:100%;">
			        <thead><tr><th rowspan="3">ተ.ቁ</th><th rowspan="3">የተማሪው/ዋ ሙሉ ስም</th><th rowspan="3">ጾታ</th>';
	        foreach($arraySemester as $arraySemesters){
	        	if($arraySemesters=='Semester1'){
	        		$semesterName='ወሰነ ትምህርት አንድ';
	        	}else{
	        		$semesterName='ወሰነ ትምህርት ሁለት';
	        	}
		        $queryBSName=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
	        	$columnSpanNames=$queryBSName->num_rows() + 2;
		        $output.='<th colspan="'.$columnSpanNames.'" class="text-center">'.$semesterName.'</th>
		        ';
		    }
		    $output.='<th rowspan="3" class="text-center">የአማካኝ የ1ኛና 2ኛ ወሰነ ት/ት</th><tr>';
		    $noC=1;
		    foreach($arraySemester as $arraySemesters){
		    	 $queryBSName=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
	        	foreach($queryBSName->result() as $rowActivity){
		        	$output.='<th>ጭብጥ'.$noC.'</th>';
		        	$noC++;
		        }
		        $output.='<th>አማካኝ</th><th>ጠባይ</th>';
		    }
		    $output.='<tr>';
		    foreach($arraySemester as $arraySemesters){
		    	$queryBSName2=$this->db->query("select kh.header_grade, kh.sub_name,u.grade,kh.sub_name from users as u inner join kg_subject_header as kh where kh.header_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
		    	if($queryBSName2->num_rows()>0){
		        	foreach($queryBSName2->result() as $rowActivity){
						$output.='<th>'.$rowActivity->sub_name.'</th>';
					} 
					$output.='<th></th>';
					$output.='<th></th>';
				}else{
					$output.='<th>-</th><th>-</th>';
				}       
	    	}
	    	$output.='</tr>';
	    	$queryStudent=$this->db->query("select username,fname,mname,lname,grade,gender from users where academicyear='$max_year' and gradesec='$gradesec' and isapproved='1' and status='Active' and usertype='Student' and branch='$branches' group by id order by fname,mname,lname ASC ");
	    	if($queryStudent->num_rows()>0){
	    		$noStudent=1;$finalYearlyAverage=0;
	    		foreach($queryStudent->result() as $rowStudent){
	    			$stuid=$rowStudent->username;
	    			$grade=$rowStudent->grade;
	    			$queryMaxValuePercent=$this->db->query("select max(value_percent) as max_value_percent from kg_subject_value where academicyear='$max_year' and value_grade='$grade' ");
	    			if($queryMaxValuePercent->num_rows()>0){
	    				$max_value_row=$queryMaxValuePercent->row();
			            $max_value_percent=$max_value_row->max_value_percent;
	    			}
	    			$output.='<tr><td>'.$noStudent.'</td><td>'.$rowStudent->fname.' '.$rowStudent->mname.' '.$rowStudent->lname.'</td><td>'.$rowStudent->gender.'</td>';
	    			$totalHeaders=0;$sumofTotalResult=0;
				    foreach($arraySemester as $arraySemesters){				    	
		    			$queryBSName3=$this->db->query("select kh.header_grade, kh.sub_name,kh.sub_name from kg_subject_header as kh where kh.header_grade='$grade' and kh.academicyear='$max_year' and quarter_name='$arraySemesters' group by kh.sub_name order by kh.sub_name ASC ");
				    	if($queryBSName3->num_rows()>0){
				    		$totalListName=0;$totalOutOff=0;$totalGettedValue=0;
				        	foreach($queryBSName3->result() as $rowActivity){
				        		$totalHeaders=$totalHeaders + 1;
				        		$quarter=$rowActivity->sub_name;
				        		$queryFetchCat=$this->db->query("select sn.sname,sn.nid from kg_subject_list_name as sn where sn.academicyear='$max_year' and sn.sgrade='$grade' and sn.sterm='$quarter' and week='$period_status' group by sn.sname ");
				        		if($queryFetchCat->num_rows()>0){
				        			$totalListName=$queryFetchCat->num_rows();
				        			$totalOutOff=$totalListName * $max_value_percent;
				        			foreach($queryFetchCat->result() as $rowsCat){
				        				$catName=$rowsCat->nid;
				        				$queryFetch=$this->db->query("select sr.stuid, sr.value from kg_subject_student_result as sr where sr.stuid='$stuid' and  sr.academicyear='$max_year' and sr.criteria_name='$catName' and sr.quarter='$quarter' and sr.result_period='$period_status'  ");
			            				if($queryFetch->num_rows()>0){
			            					foreach($queryFetch->result() as $value_Name){
			            						$resultValue=$value_Name->value;
			            						$queryValuePercent=$this->db->query("select value_percent from kg_subject_value where academicyear='$max_year' and value_grade='$grade' and value_name='$resultValue' ");
			            						if($queryValuePercent->num_rows()>0){
			            							$value_row=$queryValuePercent->row();
			            							$value_percent=$value_row->value_percent;
			            						}else{
			            							$value_percent=0;
			            						}
			            						$totalGettedValue=$totalGettedValue + $value_percent;
			            					}
			            				}
				        			}
				        		}
				        		if($totalOutOff>0){
				        			$convertedResult=(100*$totalGettedValue)/$totalOutOff;
				        		}else{
				        			$convertedResult=0;
				        		}
				        		$sumofTotalResult=$sumofTotalResult + $convertedResult;
				        		$convertedResult2=round($convertedResult);
				        		if ($convertedResult2 >= 90 && $convertedResult2 <= 100){
						            $letterValue='E';
						        }
						        elseif ($convertedResult2 >= 70 && $convertedResult2 <= 89){ 
						            $letterValue='VG';
						        }
						        elseif ($convertedResult2 >= 50 && $convertedResult2 <= 69){ 
						            $letterValue='G';
						        }
						        elseif ($convertedResult2 <= 49){
						            $letterValue='NI';
						        }else{
						        	$letterValue='-';
						        }
								$output.='<td class="text-center">'.$letterValue.'</td>';
								$totalListName=0;$totalOutOff=0;$totalGettedValue=0;
							} 
						}
						$totalHeadersPercent=100 * $totalHeaders;
						if($totalHeadersPercent>0){
							$averageResult= (100 * $sumofTotalResult)/$totalHeadersPercent;
						}else{
							$averageResult= 0;
						}
						$finalYearlyAverage=$finalYearlyAverage + $averageResult;
						$averageResult2=round($averageResult);
						if ($averageResult2 >= 90 && $averageResult2 <= 100){
				            $letterValue='E';
				        }
				        elseif ($averageResult2 >= 70 && $averageResult2 <= 89){ 
				            $letterValue='VG';
				        }
				        elseif ($averageResult2 >= 50 && $averageResult2 <= 69){ 
				            $letterValue='G';
				        }
				        elseif ($averageResult2 <= 49){
				            $letterValue='NI';
				        }else{
				        	$letterValue='-';
				        }
				        if($queryBSName3->num_rows()>0){
							$output.='<td class="text-center">'.$letterValue.'</td>';
						}else{
							$output.='<td class="text-center">-</td>';
						}
						$eachQuarterBasicskill=$this->db->query(" Select value from basicskillvalue".$gradesec.$max_year." where stuid='$stuid' and academicyear='$max_year' and quarter='$max_quarter' and bsname='Conduct' group by stuid ");
				          if($eachQuarterBasicskill->num_rows()>0){
				            $valueBS=$eachQuarterBasicskill->row();
				            $getValue=$valueBS->value;
				            $output.='<td class="text-center">'.$getValue.'</td>';
				          }else{
				            $output.='<td class="text-center">-</td>';
				          }
						$totalHeaders=0;$sumofTotalResult=0;
					}
					$finalYearlyAverage2=round($finalYearlyAverage/2);
			        if ($finalYearlyAverage2 >= 90 && $finalYearlyAverage2 <= 100){
			            $letterValue='E';
			        }
			        elseif ($finalYearlyAverage2 >= 70 && $finalYearlyAverage2 <= 89){ 
			            $letterValue='VG';
			        }
			        elseif ($finalYearlyAverage2 >= 50 && $finalYearlyAverage2 <= 69){ 
			            $letterValue='G';
			        }
			        elseif ($finalYearlyAverage2 <= 49){
			            $letterValue='NI';
			        }else{
			        	$letterValue='-';
			        }
				    if($queryBSName3->num_rows()>0){
						$output.='<td class="text-center">'.$letterValue.'</td>';
					}else{
						$output.='<td class="text-center">-</td>';
					}
	    			$output.='</tr>';
	    			$noStudent++;
	    			$finalYearlyAverage=0;$finalYearlyAverage2=0;
	    		}
	    	}
			$output.='</table></div>';
			$output.='<p>ማሳሰቢያ፡- የተማሪ ውጤት የሚገለጸው በፊደል ነው፡፡</p>';
			/*$queryKey=$this->db->query("select kv.value_name, kv.value_desc,u.grade from users as u inner join kg_subject_value as kv where kv.value_grade=u.grade and u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branches' and kv.academicyear='$max_year' group by kv.value_name order by kv.id ASC ");
			 if($queryKey->num_rows()>0){*/
				$output.= '<div id="ENS" class="table-responsive">
	            <table id="ENS" class="tabler table-borderedr table-md" cellspacing="5" cellpadding="5">';
	            $output .='<tr><th class="text-center" colspan="3">መግለጫ/Key</th></tr>';
	            $output .='<tr><td class="text-center">E</td><td class="text-center">ከ90 - 100 </td><td class="text-center">እጅግ በጣም ጥሩ ( E - Exceed Expectations) </td>';
	            $output .='<tr><td class="text-center">VG</td><td class="text-center">ከ70 - 89</td><td class="text-center"> በጣም ጥሩ (VG - Very Good)</td>';
	            $output .='<tr><td class="text-center">G </td><td class="text-center">ከ50 - 69</td><td class="text-center"> ጥሩ (G - Good) </td>';
	            $output .='<tr><td class="text-center">NI </td><td class="text-center">ከ49 በታች</td><td class="text-center">መሻሻል የሚያስፈልገው (NI - Needs Improvement)</td>';
	            $output.= '</table></div>';
	        /*}*/
		}
		return $output;
	}
	function fecthReportStatistics_admin($branches,$valueNames,$headerNames,$gradesecs,$quarter,$period_status,$max_year,$countValues){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
		$colSpan=$countValues + 3;
		$queryGrade=$this->db->query("select grade from users where academicyear='$max_year' and usertype='Student' and gradesec='$gradesecs' group by grade ");
		if($queryGrade->num_rows()>0){
			$gradeRow=$queryGrade->row();
			$gradesec=$gradeRow->grade;
		}else{
			$gradesec='';
		}
		$output.='<h4 class="text-center">'.$school_name.'<br> <u>'.$quarter.'('.$period_status.') Report Statistics in '.$max_year.' E.C('.$gYearName.' G.C) for '.$gradesec.'</u></h4>
		<div class="table-responsive">
        <table class="tabler table-borderedr table-hover" style="width:100%;">
        <thead> <tr><th>No.</th><th>Student Name</th><th>Grade</th>';
        foreach($valueNames as $valueName){
        	$output.='<th class="text-center" style="background-color:#e3e3e3">'.$valueName.' </th>';
        }
        $output.='</tr>';
    	foreach($headerNames as $headerName){
    		$queryFetchCat=$this->db->query("select sn.sname,sn.nid from kg_subject_list_name as sn where sn.academicyear='$max_year' and sn.sgrade='$gradesec' and sn.sterm='$quarter' and sn.scategory='$headerName' group by sn.sname ");
    		if($queryFetchCat->num_rows()>0){
    			$no=1; 
    			$output.='<tr style="background-color:#e3e3e3"><th class="text-center" colspan="'.$colSpan.'">'.$headerName.'</th></tr>';
    			foreach($queryFetchCat->result() as $row_cat){
    				$cat_Name=$row_cat->sname;	
    				$catName=$row_cat->nid;	
    				$output.='<tr style="background-color:#e3e3e3"><th colspan="'.$colSpan.'">'.$cat_Name.'</th></tr>';		
    				$no=1; 
	            	foreach($valueNames as $valueName){	
			            $queryFetch=$this->db->query("select sr.stuid, sr.value,us.fname,us.mname, us.lname, us.gradesec from kg_subject_student_result as sr cross join users as us where us.username=sr.stuid and us.grade='$gradesec' and us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$branches' and sr.academicyear='$max_year' and sr.criteria_name='$catName' and sr.value='$valueName' and sr.quarter='$quarter' and sr.result_period='$period_status' order by us.fname,us.mname,us.lname ");
			            if($queryFetch->num_rows()>0){

			            	foreach($queryFetch->result() as $rowResult){
			            		$output.='<tr><td>'.$no.'.</td><td>'.$rowResult->fname.' '.$rowResult->mname.' '.$rowResult->lname.'</td><td>'.$rowResult->gradesec.' </td>';
			            		foreach($valueNames as $valueName){
				            		if($rowResult->value==$valueName){
				            			$output.='<td class="text-center">'.$valueName.' <i class="fas fa-check-double"></i></td>';
				            		}else{
				            			$output.='<td class="text-center">-</td>';
				            		}

				            	}
				            	$no++;
			            	}
			            }
					} 
				}
			}
			$no=1;
		}
		$output.='</table></div>';
		return $output;
	}
	function fecthReportStatistics_adminWeek($branches,$valueNames,$headerNames,$gradesecs,$quarter,$period_status,$max_year,$countValues){
		$output='';
		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $logo=$row_name->logo;
        $querySlogan=$this->db->query("select gyear from academicyear where year_name='$max_year' ");
        $rowGyear = $querySlogan->row();
        $gYearName=$rowGyear->gyear;
		$colSpan=$countValues + 3;
		$queryGrade=$this->db->query("select grade from users where academicyear='$max_year' and usertype='Student' and gradesec='$gradesecs' group by grade ");
		if($queryGrade->num_rows()>0){
			$gradeRow=$queryGrade->row();
			$gradesec=$gradeRow->grade;
		}else{
			$gradesec='';
		}
		$output.='<h4 class="text-center">'.$school_name.'<br> <u>'.$quarter.'('.$period_status.') Report Statistics in '.$max_year.' E.C('.$gYearName.' G.C) for '.$gradesec.'</u></h4>
		<div class="table-responsive">
        <table class="tabler table-borderedr table-hover" style="width:100%;">
        <thead> <tr><th>No.</th><th>Student Name</th><th>Grade</th>';
        foreach($valueNames as $valueName){
        	$output.='<th class="text-center" style="background-color:#e3e3e3">'.$valueName.' </th>';
        }
        $output.='</tr>';
    	foreach($headerNames as $headerName){
    		$queryFetchCat=$this->db->query("select sn.sname,sn.nid from kg_subject_list_name as sn where sn.academicyear='$max_year' and sn.sgrade='$gradesec' and sn.sterm='$quarter' and sn.scategory='$headerName' and week='$period_status' group by sn.sname ");
    		if($queryFetchCat->num_rows()>0){
    			$no=1; 
    			$output.='<tr style="background-color:#e3e3e3"><th class="text-center" colspan="'.$colSpan.'">'.$headerName.'</th></tr>';
    			foreach($queryFetchCat->result() as $row_cat){
    				$cat_Name=$row_cat->sname;	
    				$catName=$row_cat->nid;	
    				$output.='<tr style="background-color:#e3e3e3"><th colspan="'.$colSpan.'">'.$cat_Name.'</th></tr>';		
    				$no=1; 
	            	foreach($valueNames as $valueName){	
			            $queryFetch=$this->db->query("select sr.stuid, sr.value,us.fname,us.mname, us.lname, us.gradesec from kg_subject_student_result as sr cross join users as us where us.username=sr.stuid and us.grade='$gradesec' and us.academicyear='$max_year' and us.usertype='Student' and us.status='Active' and us.isapproved='1' and us.branch='$branches' and sr.academicyear='$max_year' and sr.criteria_name='$catName' and sr.value='$valueName' and sr.quarter='$quarter' and sr.result_period='$period_status' order by us.fname,us.mname,us.lname ");
			            if($queryFetch->num_rows()>0){

			            	foreach($queryFetch->result() as $rowResult){
			            		$output.='<tr><td>'.$no.'.</td><td>'.$rowResult->fname.' '.$rowResult->mname.' '.$rowResult->lname.'</td><td>'.$rowResult->gradesec.' </td>';
			            		foreach($valueNames as $valueName){
				            		if($rowResult->value==$valueName){
				            			$output.='<td class="text-center">'.$valueName.' <i class="fas fa-check-double"></i></td>';
				            		}else{
				            			$output.='<td class="text-center">-</td>';
				            		}

				            	}
				            	$no++;
			            	}
			            }
					} 
				}
			}
			$no=1;
		}
		$output.='</table></div>';
		return $output;
	}
	function updateStudent_kg_result_value($bsGradesec,$stuid,$quarter,$bsPeriod,$bsname,$max_year,$value,$data){
		$this->db->where('academicyear',$max_year);
		$this->db->where('stuid',$stuid);
		$this->db->where('quarter',$quarter);
		$this->db->where('result_period',$bsPeriod);
		$this->db->where('criteria_name',$bsname);
		$query=$this->db->get('kg_subject_student_result');
		$output='';
		if($query->num_rows() > 0){
			$this->db->where('academicyear',$max_year);
			$this->db->where('stuid',$stuid);
			$this->db->where('quarter',$quarter);
			$this->db->where('result_period',$bsPeriod);
			$this->db->where('criteria_name',$bsname);
			$this->db->set('value',$value);
			$queryy=$this->db->update('kg_subject_student_result');
		}else{
			$queryy=$this->db->insert('kg_subject_student_result',$data);
		}
		if($queryy){
			$output.='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Saved Successfully.
        	</div></div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> ooops, Please try again.
        	</div></div>';
		} 
		return $output;
	}
	function fecthNonFilledStudentBs($branches,$gradesec,$quarter,$max_year){
		$this->db->select('id,fname,mname, lname, username, gradesec,grade');
		$this->db->where('academicyear',$max_year);
		$this->db->where('usertype','Student');
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$this->db->where('gradesec',$gradesec);
		$this->db->where('branch',$branches);
		$this->db->group_by('id');
		$this->db->order_by('fname,mname,lname','ASC');
		$queryfetchBS=$this->db->get('users');
		
		$output='';
		if($queryfetchBS->num_rows()>0){
			foreach ($queryfetchBS->result() as $stuList) {
				$stuid=$stuList->id;
				$grade=$stuList->grade;
				$fname=$stuList->fname;
				$mname=$stuList->mname;
				$this->db->select('bsname');
				$this->db->where('academicyear',$max_year);
				$this->db->where('grade',$grade);
				$this->db->where('season',$quarter);
				$this->db->group_by('bsname');
				$queryBS=$this->db->get('basicskill');
				if($queryBS->num_rows()>0){
					foreach ($queryBS->result() as $queryBSs) {
						$bs_name=$queryBSs->bsname;
						$this->db->where(array('bsname'=>$bs_name));
						$this->db->where(array('stuid'=>$stuid));
						$this->db->where(array('quarter'=>$quarter));
						$this->db->where(array('academicyear'=>$max_year));
						$this->db->group_by('bsname');
						$this->db->order_by('bsname','ASC');
						$this->db->select('bsname');
						$queryBSC = $this->db->get('basicskillvalue'.$gradesec.$max_year);
						if($queryBSC->num_rows()<1){
							$output.=' <a href="javascript:void(0)" class="view_ThisSubjectResult_gs">
								<div class="card-body StudentViewTextInfo">
						            <div class="support-ticket media">
						              	<div class="media-body">
						                	
						                	
							                <span class="font-weight-bold font-14 text-dark">'.$fname.' '.$mname.'
							                </span><div class="bullet"></div>
							                <span class="font-weight-bold font-16">'.$bs_name.'</span>
							                <div class="bullet"></div>
							                <span class="font-weight-bold font-16 text-danger">NG</span>
							            </div>
						            </div>
					          	</div>
					        </a> ';
						}
						$this->db->where(array('bsname'=>$bs_name));
						$this->db->where(array('stuid'=>$stuid));
						$this->db->where(array('quarter'=>$quarter));
						$this->db->where(array('academicyear'=>$max_year));
						$this->db->where(array('value'=>''));
						$this->db->group_by('bsname');
						$this->db->order_by('bsname','ASC');
						$this->db->select('bsname');
						$queryBSCt = $this->db->get('basicskillvalue'.$gradesec.$max_year);
						if($queryBSCt->num_rows()>0){
							$output.=' <a href="javascript:void(0)" class="view_ThisSubjectResult_gs">
								<div class="card-body StudentViewTextInfo">
						            <div class="support-ticket media">
						              	<div class="media-body">
							                <span class="font-weight-bold font-14 text-dark">'.$fname.' '.$mname.'
							                </span><div class="bullet"></div>
							                <span class="font-weight-bold font-16">'.$bs_name.'</span>
							                <div class="bullet"></div>
							                <span class="font-weight-bold font-16 text-danger">NG</span>
							            </div>
						            </div>
					          	</div>
					        </a> ';
						}
					}
				}else{
					$output .='<div class="alert alert-warning alert-dismissible show fade">
		                <div class="alert-body">
		                    <button class="close"  data-dismiss="alert">
		                        <span>&times;</span>
		                    </button>
		                <i class="fas fa-check-circle"> </i> No basic skill found.
		        	</div></div>';
				}
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function printReportPage($branches,$gradesec,$quarter,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryBS=$this->db->query("select bs.bsname,bs.subjectrow from users as u inner join basicskill as bs where bs.grade=u.grade and u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' and bs.academicyear='$max_year' group by bs.bsname order by bs.bsname ASC ");
			$output.='<div class="card">
			<div class="table-responsive">
	        <table class="tabler table-bordered table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <td class="rotateJossRoster"><div>No.</div></td>
	                    <td class="rotateJossRoster"><div>Student Name</div></td>
	                    <td class="rotateJossRoster"><div>Grade</div></td>';
	                    foreach ($queryBS->result() as $bsName) {
	                    	$output.='<td class="rotateJossRoster text-center"><div>'.$bsName->bsname.'</div></td>';
	                    }
	                $output.='<td class="rotateJossRoster"><div>Sig.</div></td></tr>
	            </thead>';
	        $no=1;
			foreach ($queryfetchBS->result() as $stuList) {
				$stuid=$stuList->id;
				$grade=$stuList->grade;
				$output.='<input type="hidden" id="bsConductStuId" value="'.$stuid.'" >';
				$output.='<tr> <td>'.$no.'</td>';
				$output.='<td>'.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'</td>';
				$output.='<td>'.$stuList->gradesec.'</td>';
				foreach ($queryBS->result() as $bsName1) {
					$bsName=$bsName1->bsname;
					$subjectRow=$bsName1->subjectrow;
					if($subjectRow!='1'){
						$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								$insertedValue=$bsValue->value;
								if($insertedValue==''){
									$output.='<td class="text-center"> </td>';
								}else{
									$output.='<td class="text-center">'.$insertedValue.'</td>';	
								}
							}
						}else{
							$output.='<td>-</td>';
						}
					}else{
						$queryBsValue=$this->db->query("select conduct,bsname,value,quarter, academicyear from `basicskillvalue".$gradesec.$max_year."` where academicyear='$max_year' and quarter='$quarter' and stuid='$stuid' and bsname='$bsName' group by bsname order by bsname ASC ");
						if($queryBsValue->num_rows()>0){
							foreach ($queryBsValue->result() as $bsValue) {
								
								$insertedValue=$bsValue->value;
								if($insertedValue==''){
									$output.='<td class="text-center"></td>';
								}else{
									$output.='<td class="text-center">'.$insertedValue.'</td>';
										
								}
							}
						}else{
							$output.='<td class="text-center">-</td>';
						}
					}
	        	}
				$output.='<td class="text-center">_____</td>';
	        	$output.='</tr>';
	        	$no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function updateStudentBs($bsGradesec,$stuid,$quarter,$bsname,$max_year,$value,$data){
		$this->db->where('academicyear',$max_year);
		$this->db->where('stuid',$stuid);
		$this->db->where('quarter',$quarter);
		$this->db->where('bsname',$bsname);
		$query=$this->db->get('basicskillvalue'.$bsGradesec.$max_year);
		$output='';
		if($query->num_rows() > 0){
			$this->db->where('academicyear',$max_year);
			$this->db->where('stuid',$stuid);
			$this->db->where('quarter',$quarter);
			$this->db->where('bsname',$bsname);
			$this->db->set('value',$value);
			$queryUpdate=$this->db->update('basicskillvalue'.$bsGradesec.$max_year);
			if($queryUpdate){
				$output.='Basic skill data updated successfully.';
			}else{
				$output.='ooops,Data not updated. Please try again.';
			}
		}else{
			$queryInsert=$this->db->insert('basicskillvalue'.$bsGradesec.$max_year,$data);
			if($queryInsert){
				$output.='Basic skill data saved successfully.';
			}else{
				$output.='ooops, Data not saved. Please try again.';
			} 
		}
		return $output;
	}
	function fecthStudentResultComments($branches,$gradesec,$quarter,$max_year){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.academicyear='$max_year' and u.usertype='Student' and u.status='Active' and u.isapproved='1' and u.gradesec='$gradesec' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$output.='<div class="card">
	        <div class="card-header">
	            <h4>Student Result Values</h4>
	        </div>
			<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Student Name</th>
	                    <th>Student ID</th>
	                    <th>Grade</th>';
	                $output.='</tr>
	            </thead>';
	        $no=1;
	        $output.='<input type="hidden" id="resultCommentQuarter" value="'.$quarter.'" >';
	        $output.='<input type="hidden" id="resultCommentGradesec" value="'.$gradesec.'" >';
	        $output.='<input type="hidden" id="resultCommentBranch" value="'.$branches.'" >';
			foreach ($queryfetchBS->result() as $stuList) {
				$stuid=$stuList->id;
				$grade=$stuList->grade;
				$queryBS=$this->db->query("select bs.resultcomment from manualreportcardcomments as bs where bs.stuid='$stuid' and bs.academicyear='$max_year' and bs.quarter='$quarter' group by bs.resultcomment order by bs.resultcomment ASC ");
				$output.='<input type="hidden" id="bsResultCommentStuId" value="'.$stuid.'" >';
				$output.='<tr> <td>'.$no.'</td>';
				$output.='<td>'.$stuList->fname.' '.$stuList->mname.'</td>';
				$output.='<td>'.$stuList->username.'</td>';
				$output.='<td>'.$stuList->gradesec.'</td>';
				$output.='<td><select class="form-control insertResultCommentTypeo" name="insertResultCommentType" >';
				foreach ($queryBS->result() as $bsName1) {
					$bsName=$bsName1->resultcomment;
					$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="'.$bsName.'">'.$bsName.'</option>';
				}
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="Excellent Keep up the good work">Excellent Keep up the good work</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="He/She is the good model for the class">He/She is the good model for the class</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="Great Achievement! Congratulations">Great Achievement! Congratulations</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="Keep it up Congratulations">Keep it up Congratulations</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="He/She is an asset to the class">He/She is an asset to the class</option>';

				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="He/She has a potential for better result">He/She has a potential for better result</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="He/She can do more than this">He/She can do more than this</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="Please encourage him/her for better performance">Please encourage him/her for better performance</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="Please give extra help at home">Please give extra help at home</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="Please give more attention at home">Please give more attention at home</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="Help from home is needed">Help from home is needed</option>';
				$output.='<option id="insertCommentTypeGS" class="" name="'.$stuid.'" value="He/she needs a constant focus from family">He/she needs a constant focus from family</option>';
				$output.='</select></td>';
	        	$output.='</tr>';
	        	$no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No student found.
        	</div></div>';
		}
		return $output;
	}
	function updatestudentresultcomment($bsGradesec,$stuid,$quarter,$max_year,$value,$data){
		$this->db->where('academicyear',$max_year);
		$this->db->where('stuid',$stuid);
		$this->db->where('quarter',$quarter);
		$query=$this->db->get('manualreportcardcomments');
		$output='';
		if($query->num_rows() > 0){
			$this->db->where('academicyear',$max_year);
			$this->db->where('stuid',$stuid);
			$this->db->where('quarter',$quarter);
			$this->db->set('resultcomment',$value);
			$queryy=$this->db->update('manualreportcardcomments');
		}else{
			$queryy=$this->db->insert('manualreportcardcomments',$data);
		}
		if($queryy){
			$output.='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Saved Successfully.
        	</div></div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> ooops, Please try again.
        	</div></div>';
		} 
		return $output;
	}
	function fetchNoGradesForOrderSubject($max_year){
		$queryStudent=$this->db->query("select grade from users where academicyear='$max_year' and usertype='Student' and grade!='' group by grade ");
		$output='';
		if($queryStudent->num_rows()>0){
			$no=1;
			$output.='<div class="row">';
			foreach ($queryStudent->result() as $gradeValue) {
				$grade=$gradeValue->grade;
				$output.='<div class="col-12 col-md-4 col-lg-4">
                    <div id="accordion">
                      <div class="accordion">
                        <div class="accordion-header" role="button" data-toggle="collapse" data-target="#no'.$no.'" aria-expanded="true">
                          <h4>Grade '.$gradeValue->grade.'</h4>
                        </div>
                        <div class="accordion-body collapse" id="no'.$no.'" data-parent="#accordion">';
                          $querySubject=$this->db->query("select suborder,Grade, Subj_name,Subj_Id from subject where Academic_Year='$max_year' and Grade='$grade' order by suborder ASC");
                          if($querySubject->num_rows()>0){
                          	$subNo=1;
                          	$output.='<table class="table table-striped">
				                <tr>
				                    <th>No.</th>
				                    <th>Subject Name</th>
				                    <th>Subject Order</th>
				                </tr><tbody class="row_position"> ';
				            $countSubject=$querySubject->num_rows();
                          	foreach ($querySubject->result() as $SubjeValue) {
                          		$output.='<tr id="'.$SubjeValue->Subj_Id.'">
                          		<td>'.$subNo.'.</td>';
                          		$output.='<td>'.$SubjeValue->Subj_name.'</td>';
                          		$output.='<td><select class="form-control selectSubOrder"> ';
                          		$currOrder=intval($SubjeValue->suborder);
                          		if($currOrder='' || $currOrder >$countSubject){
                          			$output.='<option></option>';
                          			for($i=1;$i<=$countSubject;$i++){
                          				$output.='<option id="selectSubOrder" class="'.$SubjeValue->Subj_name.'" value="'.$i.'" name="'.$SubjeValue->Grade.'">'.$i.'</option>';
                          			}
                          		}else{
                          			$output.='<option id="selectSubOrder" class="'.$SubjeValue->Subj_name.'" value="'.$currOrder.'" name="'.$SubjeValue->Grade.'">'.$SubjeValue->suborder.'</option>';
                          			for($i=1;$i<=$countSubject;$i++){
                          				if($i===$currOrder){
                          					$output.='<option></option>';
                          				}else{
                          					$output.='<option id="selectSubOrder" class="'.$SubjeValue->Subj_name.'" value="'.$i.'" name="'.$SubjeValue->Grade.'">'.$i.'</option>';
                          				}
	                          		}
                          		}
                          		$output.='</select></td>';
                          		$subNo++;
                          	}
                          	$output.='</tbody></table>';
                          }else{
                          	$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> No subject found.
				            </div></div>';
                          }
                        $output.='</div>
                      </div>
                    </div>
                  </div>';
                $no++;
              }
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No grade found.
            </div></div>';
		}
		return $output;
	}
	function fetch_subject_placement($max_year){
		$queryStudent=$this->db->query("select grade from users where academicyear='$max_year' and usertype='Student' and grade!='' group by grade ");
		$output='';
		if($queryStudent->num_rows()>0){
			$no=1;
			$output.='<div class="row">';
			foreach ($queryStudent->result() as $gradeValue) {
				$grade=$gradeValue->grade;
				$output.='<div class="col-12 col-md-4 col-lg-4">
                    <div id="accordion">
                      <div class="accordion">
                        <div class="accordion-header" role="button" data-toggle="collapse" data-target="#no'.$no.'" aria-expanded="true">
                          <h4>Grade '.$gradeValue->grade.'</h4>
                        </div>
                        <div class="accordion-body collapse" id="no'.$no.'" data-parent="#accordion">';
                          $querySubject=$this->db->query("select subject_placement,suborder,Grade, Subj_name,Subj_Id from subject where Academic_Year='$max_year' and Grade='$grade' order by suborder ASC");
                          if($querySubject->num_rows()>0){
                          	$subNo=1;
                          	$output.='<table class="table table-striped">
				                <tr>
				                    <th>No.</th>
				                    <th>Subject Name</th>
				                    <th>Subject Placement</th>
				                </tr><tbody class="row_position"> ';
				            $arrayPlacement=array('Left','Right');
                          	foreach ($querySubject->result() as $SubjeValue) {
                          		$output.='<tr id="'.$SubjeValue->Subj_Id.'">
                          		<td>'.$subNo.'.</td>';
                          		$output.='<td>'.$SubjeValue->Subj_name.'</td>';
                          		$output.='<td><select class="form-control selectSubPlacement"> ';
                      			$output.='<option></option>';
                      			foreach($arrayPlacement as $arrayPlacements){
                      				if($arrayPlacements ==$SubjeValue->subject_placement){
                      					$output.='<option selected="selected" id="selectSubPlacement" class="'.$SubjeValue->Subj_name.'" value="'.$arrayPlacements.'" name="'.$SubjeValue->Grade.'">'.$arrayPlacements.'</option>';
                      				}else{
                      					$output.='<option id="selectSubPlacement" class="'.$SubjeValue->Subj_name.'" value="'.$arrayPlacements.'" name="'.$SubjeValue->Grade.'">'.$arrayPlacements.'</option>';
                      				}
                      			}
                          		$output.='</select></td>';
                          		$subNo++;
                          	}
                          	$output.='</tbody></table>';
                          }else{
                          	$output .='<div class="alert alert-warning alert-dismissible show fade">
				                <div class="alert-body">
				                    <button class="close"  data-dismiss="alert">
				                        <span>&times;</span>
				                    </button>
				                <i class="fas fa-check-circle"> </i> No subject found.
				            </div></div>';
                          }
                        $output.='</div>
                      </div>
                    </div>
                  </div>';
                $no++;
              }
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No grade found.
            </div></div>';
		}
		return $output;
	}
	function fetchSummerTeacherPlacement($user,$max_year){
        $this->db->where(array('staff'=>$user));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->group_by('grade');
		$query=$this->db->get('summerstaffplacement');
		return $query->result();
        
	}
	function fetchSummerSubjectForDirector($gradesec,$max_year){
		$this->db->where('summerstudent.gradesec',$gradesec);
		$this->db->where(array('summersubject.Academic_Year'=>$max_year));
		$this->db->order_by('summersubject.Subj_name','ASC');
		$this->db->group_by('summersubject.Subj_name');
		$this->db->select('*');
		$this->db->from('summersubject');
		$this->db->join('summerstudent',
		'summerstudent.grade = summersubject.Grade');
		$query=$this->db->get();
		$output ='';
		foreach ($query->result() as $row) { 
			$output .='<option value="'.$row->Subj_name.'">'.$row->Subj_name.'</option>';
		}
		return $output;
	}
	function fetchSummerSubjectForTeacher($gradesec,$max_year,$user){
		$this->db->where('grade',$gradesec);
		$this->db->where('staff',$user);
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->order_by('grade','ASC');
		$this->db->group_by('subject');
		$query=$this->db->get('summerstaffplacement');
		$output ='<option> </option>';
			foreach ($query->result() as $row) { 
				$output .='<option value="'.$row->subject.'">'.$row->subject.'</option>';
			}
			return $output;
	}
	function update_reportcardResult($max_year,$gradesec,$branch){
	    $this->db->where('us.gradesec',$gradesec);
	    $this->db->where('us.academicyear',$max_year);
	    $this->db->where('us.status','Active');
	    $this->db->where('us.isapproved','1');
	    $this->db->where('us.branch',$branch);
	    $this->db->where('su.Academic_Year',$max_year);
	    $this->db->group_by('us.id,su.Subj_name');
	    $this->db->select('us.grade, us.id, us.gradesec, su.Subj_name, su.Merged_percent, su.Merged_name, su.suborder, su.letter, su.onreportcard');
	    $this->db->from('summerstudent as us');
	    $this->db->join('summersubject as su', 
	            'us.grade = su.Grade');
	    $querySubject = $this->db->get();
	    if($querySubject->num_rows()>0){
	      $total=0;$average=0;$average1=0;
	      $queyDelete=$this->db->query("delete from summerreportcard where rpbranch ='$branch' and grade='$gradesec' and academicyear='$max_year' ");
	        foreach ($querySubject->result() as $calcMark) {
	          $stuid=$calcMark->id;
	          $grade=$calcMark->grade;
	          $subject=$calcMark->Subj_name;
	          $letter=$calcMark->letter;
	          $mergedPercent=$calcMark->Merged_percent;
	          $onReportCard=$calcMark->onreportcard;
	          $subjorder=$calcMark->suborder;
	          if($calcMark->Merged_name==''){
	            $mergedSubject='';
	          }else{
	            $mergedSubject=$calcMark->Merged_name;
	          }
	          $this->db->where('ev.academicyear',$max_year);
	          $this->db->where('ev.grade',$grade);
	          $this->db->where('ma.academicyear',$max_year);
	          $this->db->where('ma.stuid',$stuid);
	          $this->db->where('ma.subname',$subject);
	          $this->db->group_by('ev.eid,ma.stuid,ma.subname');
	          $this->db->select('ma.stuid, ma.subname, ma.quarter,sum(ma.value) as total,sum(ma.outof) as outof,ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent');
	          $this->db->from('summerevaluation as ev');
	          $this->db->join('summermark as ma', 
	                  'ev.eid = ma.evaid');
	          $evalname_query = $this->db->get();
	          $average1=0;$average=0;
	          foreach ($evalname_query->result() as $eValue) {
	            $sumu_otof=$eValue->outof;
	            $evaid=$eValue->eid;
	            $percent=$eValue->percent;
	            if($eValue->outof != 0){
	              $conver= ($eValue->total *$percent )/$sumu_otof;
	              $average =$conver + $average;
	              $average1 =($average * $mergedPercent)/100;
	            }
	          }
	          $data[]=array(
	            'stuid'=>$stuid,
	            'subject'=>$subject,
	            'mergedname'=>$mergedSubject,
	            'total'=>number_format((float)$average1,2,'.',''),
	            'letter'=>$letter,
	            'grade'=>$gradesec,
	            'onreportcard'=>$onReportCard,
	            'rpbranch'=>$branch,
	            'subjorder'=>$subjorder,
	            'academicyear'=>$max_year
	          );
	          $average=0;
	        }
	        $query_insert1=$this->db->insert_batch('summerreportcard',$data);
	      }
	        $queryMergedSubject=$this->db->query("select us.grade, us.id, us.gradesec, su.Subj_name, su.Merged_percent, su.Merged_name, su.suborder, su.letter, su.onreportcard from summersubject as su cross join summerstudent as us where us.grade=su.Grade and us.gradesec='$gradesec' and us.status='Active' and us.isapproved='1' and us.academicyear='$max_year' and su.Academic_Year='$max_year' and us.branch='$branch' and Merged_name!='' ");
	        if($queryMergedSubject->num_rows()>0){
	        $sqlDelete=$this->db->query("select *, sum(total) as mergedTot from summerreportcard where mergedname!='' and rpbranch='$branch' and grade='$gradesec' group by mergedname,stuid ");
	        if($sqlDelete->num_rows()>0){
	          foreach ($sqlDelete->result() as $mergedValue) {
	            $mergedTotal=$mergedValue->mergedTot;
	            $stuid=$mergedValue->stuid;
	            $subject=$mergedValue->subject;
	            $mergedSubject=$mergedValue->mergedname;
	            $letter=$mergedValue->letter;
	            $subjorder=$mergedValue->subjorder;
	            $data1[]=array(
	              'stuid'=>$stuid,
	              'subject'=>$mergedSubject,
	              'quarter'=>$max_quarter,
	              'total'=>number_format((float)$mergedTotal,2,'.',''),
	              'letter'=>$letter,
	              'grade'=>$gradesec,
	              'onreportcard'=>'1',
	              'rpbranch'=>$branch,
	              'subjorder'=>$subjorder,
	              'academicyear'=>$max_year
	            );
	          }
	          $query_insert1=$this->db->insert_batch('summerreportcard',$data1);
	        }
	      }
	    if($query_insert1){
	      return true;
	    }
	}
	function reportcardByQuarter($max_year,$gradesec,$branch,$gyear){
	   $query_student=$this->db->query(" select * from summerstudent where gradesec='$gradesec' and usertype='Student' and branch='$branch' and isapproved='1' and status='Active' and academicyear='$max_year' order by fname,mname,lname ASC ");
	    $output ='';
	    $queryac = $this->db->query("select max(year_name) as ay from academicyear");
        $rowac = $queryac->row();
        $yearname=$rowac->ay;

        $query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $address=$row_name->address;
        $phone=$row_name->phone;
        $website=$row_name->website;
        $email=$row_name->email;
        $schooLogo=$row_name->logo;
        $averageSummer=0;
	    foreach ($query_student->result() as $row_student)
	    {
	    	$username1=$row_student->username;
	      	$stuid=$row_student->id;
	      	$grade=$row_student->grade;
	      	$grade_sec=$row_student->gradesec;
            $output.='<div style="width:100%;height:92%;page-break-inside:avoid;">';
		        $output.='<div style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">

		        <div class ="row" id="ENS">
		        <div class="col-lg-12 col-12">
		            <div class="media pb-1 mb-3 card-header">
		              <img src="'.base_url().'/logo/'.$schooLogo.'" style="width:130px;height: 130px;" class="user-img" alt="">
		              <div class="media-body">
		                <h1><u><b>'.strtoupper($school_name).'</b></u></h1>
		                <i class="fas fa-fax"></i> '.$phone.'
		                <small><i class="fas fa-globe"></i> '.$website.'</small>';
		              $output.='</div>
		            </div>
		        </div>
	          	<div class="col-lg-12 col-12 text-center">
	            	<h3><B>SUMMER PROGRAM '.$gyear.' STUDENT REPORT CARD</B></h3>
	          	</div>
		    </div>';
	      	$output.= '<div class="card-header StudentViewTextInfo">
		      	<div class="row" style="background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;">
			      	<div class="col-lg-12 col-12">
			      	 <h3><b>Student Name: '.strtoupper($row_student->fname).' '.strtoupper($row_student->mname).' '.strtoupper($row_student->lname).'</b></h3>
			      	</div>
			      	<div class="col-lg-6 col-6">
			      		<h4><b> Grade: '.strtoupper($row_student->gradesec).' </b></h4>
			      	</div>
			      	<div class="col-lg-6 col-6">
			      		<h4><b>Academic Year: '.$max_year.'</b></h4>
			      	</div>
		      	</div>
	      	</div>
	      	</div>
	      	<div class="dropdown-divider"></div>
	      	<div class="row">
	      	<div class="col-lg-6">
	        <div class="table-responsive">
	        <table width="100%"  class="table-bordered table-md" cellspacing="5" cellpadding="5">';
	      	$output.='<tr><th>Subject</th>';
	      	$output .='<th class="text-center" colspan="2">Summer Class</th>';
	      	$output.='</tr>';
	        $query_result=$this->db->query(" Select * from summerreportcard where grade='$gradesec' and stuid='$stuid' and academicyear='$max_year' and onreportcard='1' group by subject order by subject ASC ");
	        foreach ($query_result->result() as $qvalue_result) 
	        {
	          	$subject=$qvalue_result->subject;
	            $output .='<tr><td>'.$qvalue_result->subject.'</td>';
	          	
              	$query_qua_result=$this->db->query(" Select * from summerreportcard where grade='$gradesec' and stuid='$stuid' and academicyear='$max_year' and subject='$subject' and onreportcard='1' group by subject order by subject ASC ");
              	if($query_qua_result->num_rows()>0)
              	{
            		foreach ($query_qua_result->result() as $quvalue)
            		{
	                  	$letter=$quvalue->letter;
	                  	$result=$quvalue->total;
	                  	/*if($letter!='A') {*/
	                    	$output .='<td class="text-center">'.$result.'</td>';
	                  	/*} else{*/
                      		$queryRange=$this->db->query("select letterVal from letterange where grade='$grade' and $result between minValue and maxiValue and academicYear='$max_year'");
                      		if($queryRange->num_rows()>0){
		                        foreach ($queryRange->result() as $letterValue) {
		                          	$letterVal=$letterValue->letterVal;
		                          	$output.= "<td class='text-center'>".$letterVal."</td>";
		                        }
                      		}else{
                        		$output.= "<td class='text-center'> -</td>";
                      		}
                  		/*}*/
                	}
              	}else{
                	$output.= "<td class='text-center'> -</td>";
              	}
	        	$output .='</tr>'; 
	        }	        
            $output .='<tr><td><b>Total</b></td>';
          	$query_qua_total=$this->db->query(" Select sum(total) as quarter_total from summerreportcard where grade='$gradesec' and stuid='$stuid' and academicyear='$max_year' and letter!='A' and onreportcard='1' group by quarter order by subject ASC ");
          	if($query_qua_total->num_rows()>0) {
            	foreach ($query_qua_total->result() as $qtvalue){
              		$output .= '<td class="text-center" colspan="2"><B>'.number_format((float)$qtvalue->quarter_total,2,'.','').'</B></td>';
            	}
          	} else{
            	$output .='<td class="text-center" colspan="2">-</td>';
          	}		
            $output .='</tr>';
            $output .='<tr><td><b>Average</b></td>';
        	$query_qua_total=$this->db->query(" Select sum(total) as quarter_total from summerreportcard where grade='$gradesec' and stuid='$stuid' and academicyear='$max_year' and letter!='A' and onreportcard='1' group by quarter order by subject ASC ");
          	/*count subject starts*/
          	$count_subject=$this->db->query("select * from summerreportcard where grade='$gradesec' and letter!='A' and onreportcard='1' and academicyear='$max_year' group by subject ");
      		$total_subject=$count_subject->num_rows();
      		if($query_qua_total->num_rows()>0) {
            	foreach ($query_qua_total->result() as $qtvalue) {
            		$averageSummer=number_format((float)$qtvalue->quarter_total/$total_subject,2,'.','');
              		$output .= '<td class="text-center" colspan="2"><B>'.number_format((float)$qtvalue->quarter_total/$total_subject,2,'.','').'</B></td>';
            	}
          	}else{
            	$output .='<td class="text-center" colspan="2">-</td>';
          	}
          	
            $output .='</tr>';
	        $output .='<tr><td><b>No. of Absence</b></td>';
	        $queryTotalAbsent=$this->db->query("select count(stuid) as att from summerattendance as attt where attt.stuid='$username1' and attt.academicyear='$max_year' and absentype='Absent' ");
		      if($queryTotalAbsent->num_rows()>0){
		        foreach ($queryTotalAbsent->result() as $absent){
		          if($absent->att>0)
		          {
		            $output .= '<td class="text-center" colspan="2">'.$absent->att.'</td>';
		          }
		          else{
		            $output .= '<td class="text-center" colspan="2">-</td>';
		          }
		        }
		      }else{
		        $output.='<td class="text-center" colspan="2">-</td>';
		      }
	        $output .='</tr>';
	      	$output .='</table></div></div>';

	      	$output.= "<div class='col-lg-6'>
	      	<h5 id='ENS' class='text-center'><u>GRADING SYSTEM</u></h5>";
	      	$queryKey=$this->db->query("select * from letterange where grade = '$grade' and academicYear='$max_year' ");
	      	$output.="<div class='keyTextInfo' style='background:url(../img/bg.jpg);background-size:cover;background-position:center; background-repeat:no-repeat;'> <div class='row'>";
	        foreach($queryKey->result() as $keyVal){
	            $output.='<div class="col-lg-6 col-6 StudentViewTextInfo">';
	            $output.='<h4 class="title-header">'.$keyVal->minValue.'-'.$keyVal->maxiValue.'='.$keyVal->letterVal.'</h4>';
	            $output.='</div>';
	        }
	      	$output.="</div></div></div>";
	      	$output.= '<div class="col-lg-12 col-12"><div class="dropdown-divider"></div>';
	      	$output.="<h5 id='ENS'><u>GENERAL COMMENTS AND RECOMMENDATIONS</u></h5>";
	      	/*$output.="<h5 id='ENS' class='text-center'>የክፍል ሃላፊ መምህር አስተያየት/Homeroom Teacher's Remark</h5>";*/
	      	$reportCardComments=$this->db->query("select commentvalue from reportcardcomments where grade='$grade' and $averageSummer between mingradevalue and maxgradevalue and academicYear='$max_year'");
            if($averageSummer >0 && $reportCardComments->num_rows()>0){
              foreach($reportCardComments->result() as $commentValue){
                $output .= '<u>'.$commentValue->commentvalue.'</u><br>';
              }
              
            }else{
              $output.='____________________________________________________________________ _________________________ ____________________________________________________________________ _________________________ <br>';
            }
	      	$queryDirector=$this->db->query("select u.fname,u.mname,u.lname ,u.mysign from users as u where usertype='superAdmin' and u.branch='$branch' and isapproved='1' and finalapproval='1' and status='Active' and mysign!='' ");
             if($queryDirector->num_rows()>0){
              $rowSignD=$queryDirector->row();
              $signName=$rowSignD->fname;
              $signmame=$rowSignD->mname;
              $signlame=$rowSignD->lname;
              $signlame=$rowSignD->lname;
              $signSigns=$rowSignD->mysign;
              $output.="<p class='text-center'>School Head Name <u><b>".$signName." ".$signmame."</b></u> Signature  <img alt='Sig.' src='".base_url()."/".$signSigns."' class='' style='height:40px;width:120px'></p>";
            }else{
              $output.="<p class='text-center'>School Head Name______________________ Signature____________</p>";
            }
	      $output.='</div></div>';
	    }
	    return $output;
	}
	function myNew_CommunicationBook($branch,$gradesec,$username,$max_year){
		$output='';
		$this->db->where('users.branch',$branch);
		$this->db->where('hoomroomplacement.branch',$branch);
		$this->db->where('hoomroomplacement.roomgrade',$gradesec);
		$this->db->like('hoomroomplacement.academicyear',$max_year);
		$this->db->select('hoomroomplacement.teacher,users.fname,users.mname,users.lname');
        $this->db->from('hoomroomplacement');
        $this->db->join('users', 
            'users.username = hoomroomplacement.teacher');
        $query = $this->db->get();
		if($query->num_rows()>0){
			$output.='<div class="row" id="sendindNewComBookStatus"> <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
			<option></option>';
			foreach($query->result() as $bookSent){
				$teacher=$bookSent->teacher;
				$output.='<div class="pretty p-icon p-smooth">
	                <input type="checkbox" name="sendindNewComBookStatus" class="sendindNewComBookStatus" id="" value="'.$teacher.'" >
	                <div class="state p-success">
	                <i class="icon fa fa-check"></i>
	                    <label></label>'.$bookSent->fname.' '.$bookSent->mname.'
	                </div>
			    </div>';
			}
			$output.='</div>
			<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
			<div class="card">
				<div class="card-body StudentViewTextInfo">
		      	<div class="chat-box"> ';
				$output.='
	          			<div class="chat-box">
					        <div class="card-footer chat-form">
				            	<input type="text" name="sendMyNewComBookReplyText" class="form-control sendMyNewComBookReplyText" id="sendMyNewComBookReplyText" placeholder="Type a text here ..." >
				            	<button class="btn btn-info sendMyNewComBookReply"> <i class="far fa-paper-plane"></i> </button>
					        </div>
					    </div>
	            	</div>
	            	</div> 
	            </div>
			 </div>
			</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No homeroom teacher found.
            </div></div>';
		}
		return $output;
	}
	function viewComBookId($lessonID,$max_year){
		$this->db->where('communicationbook.id',$lessonID);
		$this->db->where('communicationbook.academicyear',$max_year);
		$query = $this->db->get('communicationbook');
		$output='';

		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		foreach($query->result() as $lessonP){
			$output.='<div id="printLessonPlanGs">
			<h3 class="text-center"><p><u><b>'.$school_name.' Communication Book for '.$max_year.' Academic Year</b></u></p></h3>
			<p><h5 class="text-center"><u>Subject: <b>'.$lessonP->comsubject.'</b> & Grade: <b>'.$lessonP->comgrade.'</b></u></h5></p>';
			$output.='<div class="row">
              <div class="col-lg-12">
                <div class="form-group" id="ENS">
                  <label for="Mobile">Comments</label>
                  '.$lessonP->comnote.'
                </div>
              </div>
            </div>
            </div>';
		}
		return $output;
	}
	function fetch_unseen_comBook_notification($user,$max_year,$max_quarter){
		$this->db->select('*');
		$this->db->from('communicationbook');
		$this->db->order_by('communicationbook.id','DESC');
		$this->db->where('communicationbook.academicyear',$max_year);
		$this->db->where('communicationbook.stuid',$user);
		$this->db->where('communicationbook.quarter',$max_quarter);
		$this->db->where('communicationbook.approvecom','1');
		$this->db->where('communicationbook.status','0');
		return $this->db->count_all_results();
	}
	function fetchcomBooknotification($user){
		$this->db->order_by('id','DESC');
		$this->db->select('*');
        $this->db->from('communicationbook');
        /*$this->db->where('status','0');*/
        $this->db->where('approvecom','1');
        $this->db->where('stuid',$user);
        $query = $this->db->get();
        $output='';
        foreach ($query->result() as $row) {
        	# code...
        	$output .='<a href="#" class="dropdown-item"> 
                  <span class="dropdown-item-desc"> 
                    <span class="message-user">
                      Communication Text    
                    </span>
                    <span class="time messege-text">
                    '.$row->comsubject.' '.$row->comgrade.' '.$row->datecreated.'   
                   </span>
                    <span class="time">
                      '.substr($row->comnote,0,60).'
                    </span>
                  </span>
                </a> ';
        }
        return $output;
	}
	function fetchUserAction($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->limit(50);
		$this->db->order_by('id','DESC');
		$query=$this->db->get('useractions');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:auto;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Action</th> 
	                    <th>Branch</th> 
	                    <th>Grade</th>
	                    <th>Subject</th>
	                    <th>Quarter</th>
	                    <th>Target User</th> 
	                    <th>Old Data</th>
	                    <th>New Data</th>
	                    <th>Deleted Name</th>
	                    <th>Action By</th>
	                    <th>Action Date</th>
	                    <th>Restore</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach($query->result() as $fetchActions ){
				$targetUser=$fetchActions->updateduser;
				$quarter=$fetchActions->quarter;
				$grade=$fetchActions->infograde;
				$subject=$fetchActions->subject;
				$branch=$fetchActions->userbranch;
				$userAction=$fetchActions->useraction;
				$id=$fetchActions->id;
				$oldData=$fetchActions->oldata;
				$queryUser=$this->db->query("select fname,mname,lname from users where id='$targetUser' ");
				$output.='<tr><td>'.$no.' </td>';
				if($targetUser!='-' && $queryUser->num_rows()>0){
					$targetRow=$queryUser->row_array();
					$fName=$targetRow['fname'];
					$mName=$targetRow['mname'];
					$lName=$targetRow['lname'];
					$output.='<td>'.$fetchActions->useraction.' </td>';
					$output.='<td>'.$fetchActions->userbranch.' </td>';
					$output.='<td>'.$fetchActions->infograde.' </td>';
					$output.='<td>'.$fetchActions->subject.' </td>';				
					$output.='<td>'.$fetchActions->quarter.' </td>';
					$output.='<td>'.$fName.' '.$mName.' '.$lName.' </td>';
					$output.='<td>'.$fetchActions->oldata.' </td>';
					$output.='<td>'.$fetchActions->newdata.' </td>';
					$output.='<td>'.$fetchActions->markname.' </td>';
					$output.='<td>'.$fetchActions->userinfo.' </td>';
					$output.='<td>'.$fetchActions->actiondate.' </td>';
				}else{
					$output.='<td>'.$fetchActions->useraction.' </td>';
					$output.='<td>'.$fetchActions->userbranch.' </td>';
					$output.='<td>'.$fetchActions->infograde.' </td>';
					$output.='<td>'.$fetchActions->subject.' </td>';				
					$output.='<td>'.$fetchActions->quarter.' </td>';
					$output.='<td>'.$fetchActions->updateduser.' </td>';
					$output.='<td>'.$fetchActions->oldata.' </td>';
					$output.='<td>'.$fetchActions->newdata.' </td>';
					$output.='<td>'.$fetchActions->markname.' </td>';
					$output.='<td>'.$fetchActions->userinfo.' </td>';
					$output.='<td>'.$fetchActions->actiondate.' </td>';
				}
				if($userAction!=='Mark updated' && $userAction!=='Student Deleted' && $userAction!=='Mark Percentage updated' && $userAction!=='Staff deleted' && $userAction!=='Director placement deleted' && $userAction!=='Teacher placement deleted' && $userAction!=='H.room placement deleted' && $userAction!=='Evaluation deleted' && $userAction!=='Generate Password'){
					$output.='<td><button class="btn btn-danger restoreDeletedMark savingrestoreDeletedMark'.$id.'" id="'.$grade.'_'.$id.'" value="'.$branch.'" name="'.$quarter.'" title="'.$subject.'" alt="'.$oldData.'">Restore</button></td>';
				}else{
					$output.='<td>-</td>';
				}
				$output.='</tr>';
				$no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetchUrgentAlert($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('status','0');
		$this->db->order_by('id','DESC');
		$query=$this->db->get('useralertactions');
		$output='';
		if($query->num_rows()>0){
	        $no=1;
			foreach($query->result() as $fetchActions ){
				$targetUser=$fetchActions->updateduser;
				$quarter=$fetchActions->quarter;
				$grade=$fetchActions->infograde;
				$subject=$fetchActions->subject;
				$branch=$fetchActions->userbranch;
				$userAction=$fetchActions->useraction;
				$id=$fetchActions->id;
				$oldData=$fetchActions->oldata;
				$queryUser=$this->db->query("select fname,mname,lname from users where id='$targetUser' ");
				if($targetUser!='-' && $queryUser->num_rows()>0){
					$targetRow=$queryUser->row_array();
					$fName=$targetRow['fname'];
					$mName=$targetRow['mname'];
					$lName=$targetRow['lname'];
					$output.='<div class="support-ticket media StudentViewTextInfo">
	                    <div class="media-body">
	                    <div class="badge badge-default mb-1 float-right"><button class="btn btn-warning ignoreAlteredResult ignoringAlteredResult'.$id.'" id="'.$grade.'" value="'.$branch.'" name="'.$quarter.'" title="'.$id.'" alt="'.$max_year.'">Ignore</button></div>
	                      <div class="badge badge-default mb-1 float-right"><button class="btn btn-success updateAlteredResult updatingAlteredResult'.$id.'" id="'.$grade.'" value="'.$branch.'" name="'.$quarter.'" title="'.$id.'" alt="'.$max_year.'">Update Result</button></div>
	                       
	                      <span class="font-weight-bold">'.$fetchActions->useraction.' </span>
	                      <a href="javascript:void(0)">'.$fetchActions->userbranch.' '.$fetchActions->infograde.' '.$fetchActions->subject.' '.$fetchActions->quarter.'  </a>
	                      <p class="my-1">'.$fName.' '.$mName.' '.$lName.' <span class="badge badge-light">'.$fetchActions->oldata.'</span> => <span class="badge badge-light">'.$fetchActions->newdata.' </span> <span class="badge badge-info">'.$fetchActions->markname.' </span></p>
	                      <small class="text-muted">Action by <span class="font-weight-bold font-13">'.$fetchActions->userinfo.'</span> &nbsp;&nbsp; '.$fetchActions->actiondate.'</small>
	                    </div>
                  	</div>';
              	}else{
              		$output.='<div class="support-ticket media StudentViewTextInfo">
	                    <div class="media-body">
	                    <div class="badge badge-default mb-1 float-right"><button class="btn btn-warning ignoreAlteredResult ignoringAlteredResult'.$id.'" id="'.$grade.'" value="'.$branch.'" name="'.$quarter.'" title="'.$id.'" alt="'.$max_year.'">Ignore</button></div>
	                       <div class="badge badge-default mb-1 float-right"><button class="btn btn-success updateAlteredResult updatingAlteredResult'.$id.'" id="'.$grade.'" value="'.$branch.'" name="'.$quarter.'" title="'.$id.'" alt="'.$max_year.'">Update Result</button></div>
	                       
	                      <span class="font-weight-bold">'.$fetchActions->useraction.' </span>
	                      <a href="javascript:void(0)">'.$fetchActions->userbranch.' '.$fetchActions->infograde.' '.$fetchActions->subject.' '.$fetchActions->quarter.' </a>
	                      <p class="my-1"> <span class="badge badge-light"> '.$fetchActions->oldata.'</span> => <span class="badge badge-light">'.$fetchActions->newdata.' </span> '.$fetchActions->markname.' </p>
	                      <small class="text-muted">Action by <span class="font-weight-bold font-13">'.$fetchActions->userinfo.'</span> &nbsp;&nbsp; '.$fetchActions->actiondate.'</small>
	                    </div>
                  	</div>';
              	}
				$no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function restoreDeletedMark($grade,$subject,$quarter,$branch,$old_data,$max_year){
		if($old_data==='-'){
			$this->db->where('academicyear',$max_year);
			$this->db->where('mgrade',$grade);
			$this->db->where('subname',$subject);
			$this->db->where('quarter',$quarter);
			$this->db->where('mbranch',$branch);
			$query=$this->db->get('trash_mark');
		}else{
			$this->db->where('academicyear',$max_year);
			$this->db->where('mgrade',$grade);
			$this->db->where('subname',$subject);
			$this->db->where('quarter',$quarter);
			$this->db->where('mbranch',$branch);
			$this->db->where('markname',$old_data);
			$query=$this->db->get('trash_mark');
		}
		$output='';
		if($query->num_rows()>0){
			$dataInsert=array();
			foreach($query->result() as $row){
				$dataInsert[]=array(
                  'stuid' =>$row->stuid,
                  'mgrade' =>$row->mgrade,
                  'subname' =>$row->subname,
                  'evaid' =>$row->evaid,
                  'quarter' =>$row->quarter,
                  'outof' =>$row->outof,
                  'value' =>$row->value,
                  'academicyear' =>$row->academicyear,
                  'markname' =>$row->markname,
                  'status' =>$row->status,
                  'lockmark' =>$row->lockmark,
                  'approved' =>$row->approved,
                  'approvedby' =>$row->approvedby,
                  'zeromarkinfo' =>$row->zeromarkinfo,
                  'mbranch' =>$row->mbranch
              );
			}
			$queryInsert=$this->db->insert_batch('mark'.$branch.$grade.$quarter.$max_year,$dataInsert);
			if($queryInsert){
				if($old_data==='-'){
					$this->db->where('academicyear',$max_year);
					$this->db->where('mgrade',$grade);
					$this->db->where('subname',$subject);
					$this->db->where('quarter',$quarter);
					$this->db->where('mbranch',$branch);
					$queryDelete=$this->db->delete('trash_mark');
				}else{
					$this->db->where('academicyear',$max_year);
					$this->db->where('mgrade',$grade);
					$this->db->where('subname',$subject);
					$this->db->where('quarter',$quarter);
					$this->db->where('mbranch',$branch);
					$this->db->where('markname',$old_data);
					$queryDelete=$this->db->delete('trash_mark');
				}
				if($queryDelete){
					$this->db->where('academicyear',$max_year);
					$this->db->where('infograde',$grade);
					$this->db->where('subject',$subject);
					$this->db->where('quarter',$quarter);
					$this->db->where('userbranch',$branch);
					$this->db->where('oldata',$old_data);
					$queryDeleteInfo=$this->db->delete('useractions');
					$output.='Data restored successfully.';
				}else{
					$output.='Ooops Please try again.';
				}
			}else{
				$output.='Ooops Please try again.';
			}
		}else{
			$output.='No record found.';
		}
		return $output;
	}
	function customActions($searchItem,$max_year){
		$this->db->like('infograde',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->or_like('subject',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->or_like('actiondate',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->or_like('userinfo',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->or_like('userbranch',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->or_like('quarter',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->or_like('useraction',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->order_by('id','DESC');
		$query=$this->db->get('useractions');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Action</th> 
	                    <th>Branch</th> 
	                    <th>Grade</th>
	                    <th>Subject</th>
	                    <th>Quarter</th>
	                    <th>Target User</th> 
	                    <th>Old Data</th>
	                    <th>New Data</th>
	                    <th>Mark Name</th>
	                    <th>Action By</th>
	                    <th>Action Date</th>
	                    <th>Restore</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach($query->result() as $fetchActions ){
				$targetUser=$fetchActions->updateduser;
				$quarter=$fetchActions->quarter;
				$grade=$fetchActions->infograde;
				$subject=$fetchActions->subject;
				$branch=$fetchActions->userbranch;
				$userAction=$fetchActions->useraction;
				$id=$fetchActions->id;
				$oldData=$fetchActions->oldata;
				$queryUser=$this->db->query("select fname,mname,lname from users where id='$targetUser' ");
				$output.='<tr><td>'.$no.' </td>';
				if($targetUser!='-' && $queryUser->num_rows()>0){
					
					$targetRow=$queryUser->row_array();
					$fName=$targetRow['fname'];
					$mName=$targetRow['mname'];
					$lName=$targetRow['lname'];
					$output.='<td>'.$fetchActions->useraction.' </td>';
					$output.='<td>'.$fetchActions->userbranch.' </td>';
					$output.='<td>'.$fetchActions->infograde.' </td>';
					$output.='<td>'.$fetchActions->subject.' </td>';				
					$output.='<td>'.$fetchActions->quarter.' </td>';
					$output.='<td>'.$fName.' '.$mName.' '.$lName.' </td>';
					$output.='<td>'.$fetchActions->oldata.' </td>';
					$output.='<td>'.$fetchActions->newdata.' </td>';
					$output.='<td>'.$fetchActions->markname.' </td>';
					$output.='<td>'.$fetchActions->userinfo.' </td>';
					$output.='<td>'.$fetchActions->actiondate.' </td>';
				}else{
					$output.='<td>'.$fetchActions->useraction.' </td>';
					$output.='<td>'.$fetchActions->userbranch.' </td>';
					$output.='<td>'.$fetchActions->infograde.' </td>';
					$output.='<td>'.$fetchActions->subject.' </td>';				
					$output.='<td>'.$fetchActions->quarter.' </td>';
					$output.='<td>'.$fetchActions->updateduser.' </td>';
					$output.='<td>'.$fetchActions->oldata.' </td>';
					$output.='<td>'.$fetchActions->newdata.' </td>';
					$output.='<td>'.$fetchActions->markname.' </td>';
					$output.='<td>'.$fetchActions->userinfo.' </td>';
					$output.='<td>'.$fetchActions->actiondate.' </td>';
				}
				if($userAction!=='Mark updated' && $userAction!=='Student Deleted'){
					$output.='<td><button class="btn btn-danger restoreDeletedMark savingrestoreDeletedMark'.$id.'" id="'.$grade.'_'.$id.'" value="'.$branch.'" name="'.$quarter.'" title="'.$subject.'" alt="'.$oldData.'">Restore</button></td>';
				}else{
					$output.='<td>-</td>';
				}
				$output.='</tr>';
				$no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function customActionsAdmin($searchItem,$branch,$max_year){
		$this->db->like('infograde',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->like('userbranch',$branch);
		$this->db->or_like('subject',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->like('userbranch',$branch);
		$this->db->or_like('actiondate',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->like('userbranch',$branch);
		$this->db->or_like('userinfo',$searchItem);
		$this->db->like('academicyear',$max_year);
		$this->db->like('userbranch',$branch);
		$this->db->order_by('id','DESC');
		$query=$this->db->get('useractions');
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
	        <table class="table table-striped table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Action</th> 
	                    <th>Branch</th> 
	                    <th>Grade</th>
	                    <th>Subject</th>
	                    <th>Quarter</th>
	                    <th>Target User</th> 
	                    <th>Old Data</th>
	                    <th>New Data</th>
	                    <th>Mark Name</th>
	                    <th>Action By</th>
	                    <th>Action Date</th>
	                    <th>Restore</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach($query->result() as $fetchActions ){
				$targetUser=$fetchActions->updateduser;
				$quarter=$fetchActions->quarter;
				$grade=$fetchActions->infograde;
				$subject=$fetchActions->subject;
				$branch=$fetchActions->userbranch;
				$userAction=$fetchActions->useraction;
				$id=$fetchActions->id;
				$oldData=$fetchActions->oldata;
				$queryUser=$this->db->query("select fname,mname,lname from users where id='$targetUser' ");
				$output.='<tr><td>'.$no.' </td>';
				if($targetUser!='-' && $queryUser->num_rows()>0){
					
					$targetRow=$queryUser->row_array();
					$fName=$targetRow['fname'];
					$mName=$targetRow['mname'];
					$lName=$targetRow['lname'];
					$output.='<td>'.$fetchActions->useraction.' </td>';
					$output.='<td>'.$fetchActions->userbranch.' </td>';
					$output.='<td>'.$fetchActions->infograde.' </td>';
					$output.='<td>'.$fetchActions->subject.' </td>';				
					$output.='<td>'.$fetchActions->quarter.' </td>';
					$output.='<td>'.$fName.' '.$mName.' '.$lName.' </td>';
					$output.='<td>'.$fetchActions->oldata.' </td>';
					$output.='<td>'.$fetchActions->newdata.' </td>';
					$output.='<td>'.$fetchActions->markname.' </td>';
					$output.='<td>'.$fetchActions->userinfo.' </td>';
					$output.='<td>'.$fetchActions->actiondate.' </td>';
				}else{
					$output.='<td>'.$fetchActions->useraction.' </td>';
					$output.='<td>'.$fetchActions->userbranch.' </td>';
					$output.='<td>'.$fetchActions->infograde.' </td>';
					$output.='<td>'.$fetchActions->subject.' </td>';				
					$output.='<td>'.$fetchActions->quarter.' </td>';
					$output.='<td>'.$fetchActions->updateduser.' </td>';
					$output.='<td>'.$fetchActions->oldata.' </td>';
					$output.='<td>'.$fetchActions->newdata.' </td>';
					$output.='<td>'.$fetchActions->markname.' </td>';
					$output.='<td>'.$fetchActions->userinfo.' </td>';
					$output.='<td>'.$fetchActions->actiondate.' </td>';
				}
				if($userAction!=='Mark updated' && $userAction!=='Student Deleted'){
					$output.='<td><button class="btn btn-danger restoreDeletedMark savingrestoreDeletedMark'.$id.'" id="'.$grade.'_'.$id.'" value="'.$branch.'" name="'.$quarter.'" title="'.$subject.'" alt="'.$oldData.'">Restore</button></td>';
				}else{
					$output.='<td>-</td>';
				}
				$output.='</tr>';
				$no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function searchStudentsToTransportServiceNotAccess($searchItem,$branch,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisStudentToGroupEdit" id="saveThisStudentToGroupEdit" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function filterAssesmentGroupEvaluation($gradesecs,$max_year)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$query2 = $this->db->query("select max(term) as quarter from quarter where Academic_year='$max_year' and termgrade ='$gradesec' group by termgroup ");
			if($query2->num_rows()>0){
	            $row2 = $query2->row();
	            $max_quarter=$row2->quarter;
				$query=$this->db->query("select * from evaluation where academicyear='$max_year' and grade='$gradesec' and quarter='$max_quarter' group by evname order by evname ASC ");
				$output.='<div class="row"> ';
				$no=1;
				foreach ($query->result() as $evavalue) {
					$output .=' <div class="col-lg-12 col-12"> <button class="btn btn-default assesment4GroupEvaluation" id="assesment4GroupEvaluation" name="assesment4GroupEvaluation" value="'.$evavalue->evname.'"> >> '.$evavalue->evname.' </button></div>';
				}
				$output.='</div>';
			}
		}
		return $output;
	}
	function searchStudentsToCopyMark($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisStudentCopyMarks" id="saveThisStudentCopyMarks" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function searchStudentsToCopyMarkNotAccess($searchItem,$branch,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisStudentCopyMarks" id="saveThisStudentCopyMarks" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function searchStudentsToTransportService($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisStudentToGroupEdit" id="saveThisStudentToGroupEdit" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function search_BS_Names($searchItem,$max_year,$max_quarter){
		$query=$this->db->query("SELECT *, GROUP_CONCAT(grade) as gradess from basicskill where academicyear ='$max_year' and season='$max_quarter' and bsname LIKE '%$searchItem%' GROUP BY bscategory,bsname ORDER BY id DESC");
		$output='';
		if($query->num_rows()>0){
			$allbS=$query->num_rows();
	        $no=1;
			foreach ($query->result() as $bsnames) {
				$output.='<div class="card-body delete_bs'.$bsnames->bsname.'">
				<div class="support-ticket media">';
                    $output.='<div class="media-body">
                      <div class="badge badge-pill badge-light mb-1 float-left"> Category:-
                      '.$bsnames->bscategory.'
		                
	                </div><br>
                      
                  	<p class="my-1"> '.$no.'. '.$bsnames->bsname.'';
                  	$output.='<select class="form-contrlol bsNamessubOrderJo" required="required" name="bsNamessubOrderJo" id="bsNamessubOrderJo">';
						for ($i=1; $i <=$allbS ; $i++) { 
							if($i==$bsnames->bsorder){
								$output.='<option selected="selected" class="'.$bsnames->gradess.'" id="'.$bsnames->bsname.'" name="'.$max_quarter.'" value="'.$i.'">'.$i.'</option>';
							}else{
								$output.='<option class="'.$bsnames->gradess.'" id="'.$bsnames->bsname.'" name="'.$max_quarter.'" value="'.$i.'">'.$i.'</option>';
							}
						}
					$output.='</select>';
                    $output.='<small class="text-muted"><span><a href="#" class="deletebaskill" value="'.$bsnames->bsname.'" name="'.$max_quarter.'"> 
		                <span class="text-danger">Delete</span> 
		                </a> <i class="fas fa-circle"></i>
		                <a href="#" class="editbaskill" value="'.$bsnames->bsname.'" name="'.$max_quarter.'" title="'.$bsnames->bscategory.'"> 
		                <span class="text-info">Edit</span> 
		                </a>
		                <span class="font-weight-bold">&nbsp; &nbsp;Grade '.$bsnames->gradess.' &nbsp;';
                    $output.='</span> </span>
                        &nbsp;&nbsp; Created at '.$bsnames->datecreated.' for '.$bsnames->academicyear.' Academic year</small></p>
                    </div>
                  </div>
                </div><hr>';
	            $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No basic skill found.
        	</div></div>';
		}
		return $output;
	}
	function searchStudentsToTransportService_staffs($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->like('username',$searchItem);
		$this->db->where('usertype!=','Student');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));

		$this->db->or_like('fname', $searchItem);
		$this->db->where('usertype!=','Student');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));

		$this->db->or_like('mname', $searchItem);
		$this->db->where('usertype!=','Student');
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));

		
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisStudentToGroupEdit_Staffs" id="saveThisStudentToGroupEdit_Staffs" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function searchStudentsToForUnarchive($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Inactive'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Inactive'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Inactive'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisStudentToUnarchive" id="saveThisStudentToUnarchive" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function searchSummerStudentsToTransportService($searchItem,$max_year){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('summerstudent');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisSummerStudentToGroupEdit" id="saveThisSummerStudentToGroupEdit" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function searchStudentsToTransportServiceBranch($searchItem,$max_year,$mybranch){
		$this->db->order_by('fname','ASC');
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$mybranch));
		$this->db->like('username',$searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$mybranch));
		$this->db->or_like('fname', $searchItem);
		$this->db->where(array('usertype'=>'Student'));
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$mybranch));
		$this->db->or_like('grade', $searchItem);
		$query=$this->db->get('users');
		$output ='';
		if($query->num_rows()>0){
	        $no=1;
			foreach ($query ->result() as $value) {
				$id=$value->id;
				$output .=' '.$no.'.<button class="btn btn-default saveThisStudentToGroupEdit" id="saveThisStudentToGroupEdit" value="'.$value->username.'">'.$value->username.' ('.$value->fname.' '.$value->mname.') </button><br>';
            	$no++;
			}
		}
		return $output;
	}
	function fetchCustomText(){
		$this->db->select('profile,fname,mname,ct.id,ct.datecreated,ct.comtext');
		$this->db->from('customcomtext ct');
		$this->db->join('users us',
		'us.username=ct.createdby');
		$this->db->order_by('id','DESC');
		$query = $this->db->get();
		$output='';
		if($query->num_rows()>0){
			foreach ($query->result() as $fetchText) {
				$output.='<div class="deleteCustomText'.$fetchText->id.'">
                    <div class="StudentViewTextInfo">';
                      	$output.=' <small class="text-muted pull-right"> '.$fetchText->fname.' ' .$fetchText->mname.' on  '.$fetchText->datecreated.'</small>
                      	<div class="media-boddy">
                        	<div class="moreData">'.$fetchText->comtext.' <a href="#" class="text-danger deleteCustomText" name="'.$fetchText->id.'" value="'.$fetchText->id.'" id="'.$fetchText->id.'"><i class="fas fa-trash-alt"></i> Remove
	                            </a> </div>
                      	</div>
                    </div>
                </div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetchCustomGroup($max_year,$user){
		$query=$this->db->query("select fname,mname,ct.createdby,ct.quarter,ct.perweight, ct.tid,ct.datecreated, ct.pername,ct.per_division from teacherperfogroup as ct cross join users as us where us.username=ct.createdby and ct.academicyear='$max_year' order by ct.tid DESC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $fetchText) {
				$output.='<div class="col-md-6 col-12">
					<div class="deletePerformanceGroup'.$fetchText->tid.'">
	                  <div class="support-ticket media">
	                    <div class="media-body">
	                      <div class="badge badge-pill badge-light mb-1 float-right">CONVERTED VALUE <span class="badge badge-info">'.$fetchText->perweight.'</span></div>
	                      <span class="font-weight-bold">'.$fetchText->pername.' <small class="text-muted">('.$fetchText->per_division.') </small></span> ';
	                      if($fetchText->createdby==$user || $_SESSION['usertype']===trim('superAdmin')){
		                      $output.='<a href="#" name="'.$fetchText->tid.'" value="'.$fetchText->tid.'" class="deletePerformanceGroup text-danger" id="'.$fetchText->tid.'"><i class="fas fa-trash-alt"></i></a>
		                      <div class="bullet"></div>
		                      <a href="#" name="'.$fetchText->tid.'" value="'.$fetchText->tid.'" class="editPerformanceGroup text-success" id="'.$fetchText->tid.'" data-toggle="modal" data-target="#editPerformanceGroup"><i class="fas fa-pen-alt"></i></a><br>';
		                  }
	                      $output.='<small class="text-muted">Created by <span class="font-weight-bold font-13">'.$fetchText->fname.' '.$fetchText->mname.'</span> on '.$fetchText->datecreated.'</small>
	                    </div>
	                  </div>
	                </div><hr>
              	</div>';
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No group record found.
            </div></div>';
		}
		return $output;
	}
	function load_school_week($max_year){
		$query=$this->db->query("select fname,mname,ct.start_date,ct.end_date, ct.id,ct.created_at, ct.week_name from school_week as ct cross join users as us where us.username=ct.createdby and ct.academicyear='$max_year' order by ct.week_name ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $fetchText) {
				$output.='<div class="col-md-4 col-6">
					<div class="card deleteSchoolWeek'.$fetchText->week_name.'">
	                <div class="card-body">
	                  <div class="support-ticket media pb-1 mb-3">
	                    <div class="media-body ml-3">
	                      <span class="font-weight-bold">'.$fetchText->week_name.'('.$fetchText->start_date.'- '.$fetchText->end_date.')</span> <a href="#" name="'.$fetchText->week_name.'" value="'.$fetchText->week_name.'" class="deleteSchoolWeek text-danger" id="'.$max_year.'"><i class="fas fa-trash-alt"></i></a>
	                      <p></p>
	                      <small class="text-muted">Created by <span class="font-weight-bold font-13">'.$fetchText->fname.' '.$fetchText->mname.'</span> on '.$fetchText->created_at.'</small>
	                    </div>
	                  </div>
	                </div>
	              </div>
              	</div>';
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No week record found.
            </div></div>';
		}
		return $output;
	}
	function load_school_non_working_dates($max_year){
		$query=$this->db->query("select fname,mname,ct.non_working_date,ct.reason_date, ct.id,ct.created_at from school_non_working_days as ct cross join users as us where us.username=ct.createdby and ct.academicyear='$max_year' order by ct.non_working_date ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $fetchText) {
				$output.='<div class="col-md-4 col-12">
					<div class="card deleteSchoolNon_working_date'.$fetchText->non_working_date.'">
	                <div class="card-body">
	                  <div class="support-ticket media pb-1 mb-3">
	                    <div class="media-body ml-3">
	                      <span class="font-weight-bold">'.$fetchText->non_working_date.'</span> 
	                      <a href="#" name="'.$fetchText->non_working_date.'" value="'.$fetchText->non_working_date.'" class="deleteSchoolNon_working_date text-danger" id="'.$max_year.'"><i class="fas fa-trash-alt"></i></a>
	                      <p>'.$fetchText->reason_date.'</p>
	                      <small class="text-muted">Created by <span class="font-weight-bold font-13">'.$fetchText->fname.' '.$fetchText->mname.'</span> on '.$fetchText->created_at.'</small>
	                    </div>
	                  </div>
	                </div>
	              </div>
              	</div>';
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div>';
		}
		return $output;
	}
	function fetchPerformanceGroup($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('tid','ASC');
		$this->db->group_by('tid');
		$query=$this->db->get('teacherperfogroup');
		return $query->result();
	}
	function fetchCustomActivity($max_year,$user){
		$query=$this->db->query("select tg.pername,tg.tid from teacherperfogroup as tg where tg.academicyear='$max_year' group by tg.pername,tg.per_division order by tg.pername ASC ");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
	        $no=1;
			foreach ($query->result() as $fetchText) {
				$groupsId=$fetchText->tid;
				$output.='<div class="col-12 col-sm-12 col-lg-12 col-md-12">
                <div class="activities"> <div class="activity"> ';
                    $queryActivirty=$this->db->query("select ct.activity_for,ct.activity_division, ct.pergroup, ct.quarter, ct.aid,ct.createdby, ct.datecreated, ct.acname, ct.aweight from teacherperactivity as ct where ct.pergroup='$groupsId' and ct.academicyear='$max_year' order by ct.acname ASC");
                      if($queryActivirty->num_rows()>0){
                      	$output.='<div class="activity-detail"> <h4>'.$fetchText->pername.'</h4>';
                      	foreach($queryActivirty->result() as $rowActivity){
                      		$output.='<div class="deletePerformanceActivity'.$rowActivity->aid.'">	
		                        <span class="text-job"><i class="fas fa-check"></i> '.$rowActivity->acname.' <span class="time text-muted">(Activity for:- '.$rowActivity->activity_division.' & Evaluated By:- '.$rowActivity->activity_for.')</span>  <span class="badge badge-light">'.$rowActivity->aweight.'</span></span>
		                        <div class="float-right">
		                          <a href="#" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></a>
		                          <div class="dropdown-menu">';
		                          if($rowActivity->createdby==$user || $_SESSION['usertype']===trim('superAdmin')){
			                            $output.='<a href="#" name="'.$rowActivity->aid.'" value="'.$rowActivity->aid.'" class="dropdown-item has-icon editPerformanceActivity text-success" id="'.$rowActivity->aid.'" data-toggle="modal" data-target="#editPerformanceActivity"><i class="fas fa-pen-alt"></i> Edit</a>
			                            <div class="dropdown-divider"></div>
			                            <a href="#" name="'.$rowActivity->aid.'" value="'.$rowActivity->aid.'" class="dropdown-item has-icon deletePerformanceActivity text-danger" id="'.$rowActivity->aid.'"><i class="fas fa-trash-alt"></i> Delete</a>';
			                        }
		                          $output.='</div>
		                        </div>';
                      		$output.='<span class="time text-muted">'.$rowActivity->datecreated.'</span></div>';
                      	}
                      	$output.='</div>';
                      }
                      $output.='
                    </div>
                  </div>
                </div> ';
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No activity record found.
            </div></div>';
		}
		return $output;
	}
	function fetch_edit_activity_name($idName){
		$this->db->where('aid',$idName);
		$query=$this->db->get('teacherperactivity');
		$output='';
		foreach($query->result() as $row){
			$output.='
				<input type="hidden" id="activityIDNew" value="'.$row->aid.'"
	          <div class="card">
	            <div class="card-header">
	              <div class="row">
	                <div class="col-lg-12 col-12">
	                  <div class="form-group">
	                    <input class="form-control activityNameNew" id="activityNameNew" type="text" value="'.$row->acname.'">
	                  </div>
	                 </div>
	                <div class="col-lg-6 col-6">
	                  <div class="form-group">
	                    <input class="form-control activityWeightNew" id="activityWeightNew" type="number" value="'.$row->aweight.'">
	                  </div>
	                </div>
	                <div class="col-lg-6 col-6">
	                  <div class="form-group">
	                    <button type="submit" name="save_activity_changes" id="save_activity_changes" class="btn btn-primary btn-block">Save Changes </button>
	                  </div>
	                </div>
	                <div class="col-lg-12 col-12">
	                 	<a href="#" class="save_activity_info"></a>
	                </div>
	              </div>
	            </div>
	          </div>';
		}
		return $output;
	}
	function fetch_edit_group_name($idName){
		$this->db->where('tid',$idName);
		$query=$this->db->get('teacherperfogroup');
		$output='';
		foreach($query->result() as $row){
			$output.='
				<input type="hidden" id="groupIDNew" value="'.$row->tid.'"
	          <div class="card">
	            <div class="card-header">
	              <div class="row">
	                <div class="col-lg-12 col-12">
	                  <div class="form-group">
	                    <input class="form-control groupNameNew" id="groupNameNew" type="text" value="'.$row->pername.'">
	                  </div>
	                 </div>
	                <div class="col-lg-6 col-6">
	                  <div class="form-group">
	                    <input class="form-control groupWeightNew" id="groupWeightNew" type="number" value="'.$row->perweight.'">
	                  </div>
	                </div>
	                <div class="col-lg-6 col-6">
	                  <div class="form-group">
	                    <button type="submit" name="save_group_changes" id="save_group_changes" class="btn btn-primary btn-block">Save Changes </button>
	                  </div>
	                </div>
	                <div class="col-lg-12 col-12">
	                 	<a href="#" class="save_group_info"></a>
	                </div>
	              </div>
	            </div>
	          </div>';
		}
		return $output;
	}
	function update_activity_name($activityNameNew,$activityWeightNew,$activityIDNew){
		$this->db->where('aid',$activityIDNew);
		$this->db->set('acname',$activityNameNew);
		$this->db->set('aweight',$activityWeightNew);
		$query=$this->db->update('teacherperactivity');
		$output='';
		if($query){
			$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Changes saved successfully.
        	</div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops Please try again.
        	</div></div>';
		}
		return $output;
	}
	function update_group_name($activityNameNew,$activityWeightNew,$activityIDNew){
		$this->db->where('tid',$activityIDNew);
		$this->db->set('pername',$activityNameNew);
		$this->db->set('perweight',$activityWeightNew);
		$query=$this->db->update('teacherperfogroup');
		$output='';
		if($query){
			$output .='<div class="alert alert-success alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Changes saved successfully.
        	</div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops Please try again.
        	</div></div>';
		}
		return $output;
	}
	function fetchStaffToPerformActivity($max_year,$branches,$activity_week,$activity_staffs,$usertype){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec, u.grade,u.status2 from users as u where u.id='$activity_staffs' and u.status='Active' and u.isapproved='1' and u.branch='$branches' group by u.id ");
		$output='';
		if($queryfetchBS->num_rows()>0){
				$output.='<div class="row">';
		        foreach ($queryfetchBS->result() as $stuList) {
					$teid=$stuList->id;
					$grade=$stuList->grade;
					$user_division=$stuList->status2;
					$queryGroup=$this->db->query("select tg.pername,tg.tid,tg.perweight from teacherperfogroup as tg where tg.academicyear='$max_year' and per_division='$user_division' group by tg.pername order by tg.pername ASC ");
					if($queryGroup->num_rows()>0){
					$noID=1;
					$output.='<div class="col-12 col-sm-12 col-lg-12 col-md-12">
		        	<div class="card"> <div class="card-body StudentViewTextInfo">';
					$output.='<h4>Staff Name:- '.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.' 
					<span class="pull-right">'.$activity_week.'</span></h4><hr>';
					foreach($queryGroup->result() as $rowGroup){
						$groupsId=$rowGroup->tid;
						$acName=$rowGroup->pername;
						$queryBS=$this->db->query("select acname,aid,aweight from teacherperactivity where academicyear='$max_year' and pergroup='$groupsId' and activity_division='$user_division' and activity_for='$usertype' group by acname order by acname ASC ");
		                if($queryBS->num_rows()>0){
		                	$querySume=$this->db->query("select sum(pervalue) as totalSumVale from teacherperfvalue where academicyear='$max_year' and teid='$teid' and actiGroup='$groupsId' and per_week='$activity_week' ");
					      	$row=$querySume->row();
					      	$TotalValue=$row->totalSumVale;
		                	$output.='<div class=""><h6>'.$noID.' .'.$rowGroup->pername.' <span class="badge badge-light"> Weight '.$rowGroup->perweight.'</span>
		                	<span class="float-rightf">Given Point <span class="badge badge-info" id="TotalGivenResults'.$groupsId.''.$teid.'"> '.$TotalValue.' </span> </span> </h6>';
		                	$subNo=1;
		                    foreach($queryBS->result() as $rowActivity){
		                        $aid=$rowActivity->aid;
		                        $weightT=$rowActivity->aweight;
		                      	$output.='&nbsp;&nbsp; '.$noID.'.'.$subNo.' '.$rowActivity->acname.'  
				                <span class="badge badge-light"> Achievable Point '.$rowActivity->aweight.'</span>';
				                $queryCheck=$this->db->query("select acid,pervalue from teacherperfvalue where academicyear='$max_year' and acid='$aid' and teid='$teid' and per_week='$activity_week' ");
								$output.='
								<select class="form-condtrol insertTeacherPerformance">
								<option></option>';
								$output.='<option value="NA" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">NA</option>';
								if($queryCheck->num_rows()>0){
									$rowValue=$queryCheck->row_array();
									$teaValue=$rowValue['pervalue'];
									for($i=0;$i<=$weightT;$i++){
										if($i==$teaValue){
											$output.='<option selected="selected" value="'.$i.'" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">'.$teaValue.'</option>';
										}else{
											$output.='<option value="'.$i.'" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">'.$i.'</option>';
										}
									}
								}else{
									for($i=0;$i<=$weightT;$i++){
										$output.='<option value="'.$i.'" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">'.$i.'</option>';
									}
								}
								$output.='</select><div class="dropdown-divider"></div>';
								$subNo++;
		                    }
		                    $noID++;
		                    $output.=' </div> ';
		                }
		            }
		            $output.='<hr><div class="float-right">';
		            $queryCheckAgree=$this->db->query("select * from teacher_performance_agremment where teaid='$teid' and week_agreed='$activity_week' and academicyear='$max_year' ");
		            if($queryCheckAgree->num_rows()>0){
		            	$output.='<div class="form-group mb-0 col-12">
                            <div class="custom-control custom-checkbox">
                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" checked="checked" disabled="disabled">
                              <label class="custom-control-label" for="agreed_ToResult">Signed. </label>
                            </div>
                        </div>';
		            }else{
		            	$output.='<div class="form-group mb-0 col-12">
                            <div class="custom-control custom-checkbox">
                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" disabled="disabled">
                              <label class="custom-control-label" for="agreed_ToResult">Not signed yet. </label>
                            </div>
                        </div>';
		            }
		            $output.='</div></div> </div> </div> ';
		        }
		        
		        $output.=' </div> ';
		    }
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetchStaffToPerformActivity_all($max_year,$branches,$activity_week,$activity_staffs){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec, u.grade,u.status2 from users as u where u.id='$activity_staffs' and u.status='Active' and u.isapproved='1' and u.branch='$branches' group by u.id ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$output.='<div class="row">';
		    foreach ($queryfetchBS->result() as $stuList) {
				$teid=$stuList->id;
				$grade=$stuList->grade;
				$user_division=$stuList->status2;
				$queryGroup=$this->db->query("select tg.pername,tg.tid,tg.perweight from teacherperfogroup as tg where tg.academicyear='$max_year' and per_division='$user_division' group by tg.pername order by tg.pername ASC ");
				if($queryGroup->num_rows()>0){
				$noID=1;
					$output.='<div class="col-12 col-sm-12 col-lg-12 col-md-12">
		        	<div class="card"> <div class="card-body StudentViewTextInfo"> ';
					$output.='<h4>Staff Name:- '.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.' 
					<span class="pull-right">'.$activity_week.'</span></h4><hr>';
					foreach($queryGroup->result() as $rowGroup){
						$groupsId=$rowGroup->tid;
						$acName=$rowGroup->pername;
						$queryBS=$this->db->query("select acname,aid,aweight from teacherperactivity where academicyear='$max_year' and pergroup='$groupsId' and activity_division='$user_division' group by acname order by acname ASC ");
		                if($queryBS->num_rows()>0){
		                	$querySume=$this->db->query("select sum(pervalue) as totalSumVale from teacherperfvalue where academicyear='$max_year' and teid='$teid' and actiGroup='$groupsId' and per_week='$activity_week' ");
					      	$row=$querySume->row();
					      	$TotalValue=$row->totalSumVale;
		                	$output.='<div class=""><h6>'.$noID.' .'.$rowGroup->pername.' <span class="badge badge-light"> Weight '.$rowGroup->perweight.'</span>
		                	<span class="float-rightf">Given Point <span class="badge badge-info" id="TotalGivenResults'.$groupsId.''.$teid.'"> '.$TotalValue.' </span> </span> </h6>';
		                	$subNo=1;
		                    foreach($queryBS->result() as $rowActivity){
		                        $aid=$rowActivity->aid;
		                        $weightT=$rowActivity->aweight;
		                      	$output.='&nbsp;&nbsp; '.$noID.'.'.$subNo.' '.$rowActivity->acname.'  
				                <span class="badge badge-light"> Achievable Point '.$rowActivity->aweight.'</span>';
				                $queryCheck=$this->db->query("select acid,pervalue from teacherperfvalue where academicyear='$max_year' and acid='$aid' and teid='$teid' and per_week='$activity_week' ");
								$output.='
								<select class="form-condtrol insertTeacherPerformance">';
								$output.='<option></option>
								<option value="NA" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">NA</option>';
								if($queryCheck->num_rows()>0){
									$rowValue=$queryCheck->row_array();
									$teaValue=$rowValue['pervalue'];
									for($i=0;$i<=$weightT;$i++){
										if($i==$teaValue){
											$output.='<option selected="selected" value="'.$i.'" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">'.$teaValue.'</option>';
										}else{
											$output.='<option value="'.$i.'" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">'.$i.'</option>';
										}
									}
								}else{
									for($i=0;$i<=$weightT;$i++){
										$output.='<option value="'.$i.'" id="'.$teid.'" class="'.$aid.'" name="'.$groupsId.'" title="'.$activity_week.'">'.$i.'</option>';
									}
								}
								$output.='</select><div class="dropdown-divider"></div>';
								$subNo++;
		                    }
		                    $noID++;
		                    $output.=' </div> ';
		                }
		            }
		            $output.='<hr><div class="float-right">';
		            $queryCheckAgree=$this->db->query("select * from teacher_performance_agremment where teaid='$teid' and week_agreed='$activity_week' and academicyear='$max_year' ");
		            if($queryCheckAgree->num_rows()>0){
		            	$output.='<div class="form-group mb-0 col-12">
                            <div class="custom-control custom-checkbox">
                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" checked="checked" disabled="disabled">
                              <label class="custom-control-label" for="agreed_ToResult">Signed. </label>
                            </div>
                        </div>';
		            }else{
		            	$output.='<div class="form-group mb-0 col-12">
                            <div class="custom-control custom-checkbox">
                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" disabled="disabled">
                              <label class="custom-control-label" for="agreed_ToResult">Not signed yet. </label>
                            </div>
                        </div>';
		            }
		            $output.='</div></div> </div> </div> ';
		        }
		        
		        $output.=' </div> ';
		    }
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_signed_nonsigned_staffs($max_year,$branches,$activity_week){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec, u.grade from users as u where u.status='Active' and u.isapproved='1' and usertype!='Student' and u.branch='$branches' group by u.id order by fname,mname,lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryGroup=$this->db->query("select tg.pername,tg.tid,tg.perweight from teacherperfogroup as tg where tg.academicyear='$max_year' group by tg.pername order by tg.pername ASC ");
			if($queryGroup->num_rows()>0){
				$output='<div class="table-responsive"> 
	            <table class="table table-striped" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Staff Name</th>
	                <th>Week Name</th>
	                <th>Academic Year</th>
	                <th>Status</th> </tr>
	            </thead>';
	            $no=1;
		        foreach ($queryfetchBS->result() as $staff) {
					$teid=$staff->id;
					$grade=$staff->grade;
                  	$output.='<tr><td>'.$no.'. </td> ';
                    $output.='<td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.' </td> ';
                    $output.='<td>'.$activity_week.' </td> ';
                    $output.='<td>'.$max_year.' </td> ';
                       $queryCheckAgree=$this->db->query("select * from teacher_performance_agremment where teaid='$teid' and week_agreed='$activity_week' and academicyear='$max_year' ");
                       $output.='<td>';
                       if($queryCheckAgree->num_rows()>0){
			            	$output.='<div class="form-group mb-0 col-12">
	                            <div class="custom-control custom-checkbox">
	                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" checked="checked" disabled="disabled">
	                              <label class="custom-control-label" for="agreed_ToResult">Signed. </label>
	                            </div>
	                        </div>';
			            }else{
			            	$output.='<div class="form-group mb-0 col-12">
	                            <div class="custom-control custom-checkbox">
	                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" disabled="disabled">
	                              <label class="custom-control-label" for=""><span class="text-danger">Not signed yet</span> </label>
	                            </div>
	                        </div>';
			            }
                      $output.='</td></tr>';
                	$no++;
		        }
		    }else{
		    	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No activity record found.
        	</div></div>';
		    }
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No staff record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_signed_nonsigned_staffs_my($max_year,$branches,$activity_week,$usertype){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec, u.grade from users as u where u.status='Active' and u.isapproved='1' and usertype!='Student' and u.branch='$branches' group by u.id order by fname,mname,lname ASC");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryGroup=$this->db->query("select tg.pername,tg.tid,tg.perweight from teacherperfogroup as tg where tg.academicyear='$max_year' group by tg.pername order by tg.pername ASC ");
			if($queryGroup->num_rows()>0){
				$output='<div class="table-responsive"> 
	            <table class="table table-striped" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Staff Name</th>
	                <th>Week Name</th>
	                <th>Academic Year</th>
	                <th>Status</th> </tr>
	            </thead>';
	            $no=1;
		        foreach ($queryfetchBS->result() as $staff) {
					$teid=$staff->id;
					$grade=$staff->grade;
                  	$output.='<tr><td>'.$no.'. </td> ';
                    $output.='<td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.' </td> ';
                    $output.='<td>'.$activity_week.' </td> ';
                    $output.='<td>'.$max_year.' </td> ';
                       $queryCheckAgree=$this->db->query("select * from teacher_performance_agremment where teaid='$teid' and week_agreed='$activity_week' and academicyear='$max_year' ");
                       $output.='<td>';
                       if($queryCheckAgree->num_rows()>0){
			            	$output.='<div class="form-group mb-0 col-12">
	                            <div class="custom-control custom-checkbox">
	                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" checked="checked" disabled="disabled">
	                              <label class="custom-control-label" for="agreed_ToResult">Signed. </label>
	                            </div>
	                        </div>';
			            }else{
			            	$output.='<div class="form-group mb-0 col-12">
	                            <div class="custom-control custom-checkbox">
	                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" disabled="disabled">
	                              <label class="custom-control-label" for=""><span class="text-danger">Not signed yet</span> </label>
	                            </div>
	                        </div>';
			            }
                      $output.='</td></tr>';
                	$no++;
		        }
		    }else{
		    	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No activity record found.
        	</div></div>';
		    }
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No staff record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_signed_nonsigned_staffs_myDirector($max_year,$branches,$activity_week,$user){
		$output='';
		$queryMyBoss=$this->db->query("select u.fname,u.mname,u.lname,u.id,u.profile from users as u cross join staff_group as sg where sg.staff_list=u.username and sg.academicyear='$max_year' and staff_head='$user' group by staff_list order by u.fname,u.mname,u.lname ASC");
        if($queryMyBoss->num_rows()>0){
			$queryGroup=$this->db->query("select tg.pername,tg.tid,tg.perweight from teacherperfogroup as tg where tg.academicyear='$max_year' group by tg.pername order by tg.pername ASC ");
			if($queryGroup->num_rows()>0){
				$output='<div class="table-responsive"> 
	            <table class="table table-striped" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Staff Name</th>
	                <th>Week Name</th>
	                <th>Academic Year</th>
	                <th>Status</th> </tr>
	            </thead>';
	            $no=1;
		        foreach ($queryMyBoss->result() as $staff) {
					$teid=$staff->id;
                  	$output.='<tr><td>'.$no.'. </td> ';
                    $output.='<td>'.$staff->fname.' '.$staff->mname.' '.$staff->lname.' </td> ';
                    $output.='<td>'.$activity_week.' </td> ';
                    $output.='<td>'.$max_year.' </td> ';
                       $queryCheckAgree=$this->db->query("select * from teacher_performance_agremment where teaid='$teid' and week_agreed='$activity_week' and academicyear='$max_year' ");
                       $output.='<td>';
                       if($queryCheckAgree->num_rows()>0){
			            	$output.='<div class="form-group mb-0 col-12">
	                            <div class="custom-control custom-checkbox">
	                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" checked="checked" disabled="disabled">
	                              <label class="custom-control-label" for="agreed_ToResult">Signed. </label>
	                            </div>
	                        </div>';
			            }else{
			            	$output.='<div class="form-group mb-0 col-12">
	                            <div class="custom-control custom-checkbox">
	                              <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" disabled="disabled">
	                              <label class="custom-control-label" for=""><span class="text-danger">Not signed yet</span> </label>
	                            </div>
	                        </div>';
			            }
                      $output.='</td></tr>';
                	$no++;
		        }
		    }else{
		    	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No activity record found.
        		</div></div>';
		   	}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No staff record found in your group.
        	</div></div>';
		}
		return $output;
	}
	function fetch_performance_onoff($max_year){
		$queryWeek=$this->db->query("select * from school_week where academicyear='$max_year' group by week_name order by week_name ASC  ");
		$output='';
		if($queryWeek->num_rows()>0){
			$output='<div class="table-responsive"> 
            <table class="table table-striped" style="width:100%;">
            <thead><tr> 
                <th>No.</th>
                <th>Week Name</th>
                <th>User Division</th>
                <th>Academic Year</th>
                <th>Status</th> </tr>
            </thead>';
            $no=1;
			foreach($queryWeek->result() as $rows){
				$activity_week=$rows->week_name;
				$queryDivision=$this->db->query("select * from schooldivision where academicyear='$max_year' group by dname order by dname ASC ");
				if($queryDivision->num_rows()>0){
					foreach($queryDivision->result() as $row0){
						$user_division=$row0->dname;
						$this->db->where('academicyear',$max_year);
			            $this->db->where('permission_week',$activity_week);
			            $this->db->where('user_divison',$user_division);
						$queryPermission = $this->db->get('teacher_performance_view_permission');
						$output.='<tr><td>'.$no.'</td>';
						$output.='<td>'.$activity_week.'</td>';
						$output.='<td>'.$user_division.'</td>';
						$output.='<td>'.$max_year.'</td><td>';
						if($queryPermission->num_rows()>0){
							$output.='<div class="pretty p-switch p-fill">
				                <input type="checkbox" name="onoff_their_result" class="onoff_their_result" checked="checked" id="'.$activity_week.'" title="'.$user_division.'" value="0" >
				                <div class="state p-success">
				                    <label></label>
				                </div>
						    </div>';
						}else{
							$output.='<div class="pretty p-switch p-fill">
				              	<input type="checkbox" name="onoff_their_result" title="'.$user_division.'" class="onoff_their_result" id="'.$activity_week.'" value="1" >
				              	<div class="state p-success">
				                	<label></label>
				              	</div>
						    </div>';
						}
						$output.='</td></tr>';
					}
				}
	            $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close" data-dismiss="alert">
                  <span>&times;</span>
                </button><i class="fas fa-exclamation-triangle "></i> No week record yet.
            </div>
         	</div>';
		}
		return $output;
	}
	function fetch_performance_onoff_non_admin($max_year,$user_division){
		$queryWeek=$this->db->query("select * from school_week where academicyear='$max_year' group by week_name order by id DESC  ");
		$output='';
		if($queryWeek->num_rows()>0){
			$output='<div class="table-responsive"> 
            <table class="table table-striped" style="width:100%;">
            <thead><tr> 
                <th>No.</th>
                <th>Week Name</th>
                <th>User Division</th>
                <th>Academic Year</th>
                <th>Status</th> </tr>
            </thead>';
            $no=1;
			foreach($queryWeek->result() as $rows){
				$activity_week=$rows->week_name;
				$this->db->where('academicyear',$max_year);
	            $this->db->where('permission_week',$activity_week);
	            $this->db->where('user_divison',$user_division);
				$queryPermission = $this->db->get('teacher_performance_view_permission');
				$output.='<tr><td>'.$no.'</td>';
				$output.='<td>'.$activity_week.'</td>';
				$output.='<td>'.$user_division.'</td>';
				$output.='<td>'.$max_year.'</td><td>';
				if($queryPermission->num_rows()>0){
					$output.='<div class="pretty p-switch p-fill">
		                <input type="checkbox" name="onoff_their_result" class="onoff_their_result" checked="checked" id="'.$activity_week.'" title="'.$user_division.'" value="0" >
		                <div class="state p-success">
		                    <label></label>
		                </div>
				    </div>';
				}else{
					$output.='<div class="pretty p-switch p-fill">
		              	<input type="checkbox" name="onoff_their_result" class="onoff_their_result" id="'.$activity_week.'" title="'.$user_division.'" value="1" >
		              	<div class="state p-success">
		                	<label></label>
		              	</div>
				    </div>';
				}
				$output.='</td></tr>';
	            $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close" data-dismiss="alert">
                  <span>&times;</span>
                </button><i class="fas fa-exclamation-triangle "></i> No week record yet.
            </div>
         	</div>';
		}
		return $output;
	}
	function fetchStaffToPerformActivityDirector($max_year,$branches,$quarter,$user){
		$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u cross join directorplacement as dp cross join staffplacement as st where st.academicyear='$max_year' and st.grade=dp.grade and dp.academicyear='$max_year' and dp.staff='$user' and u.usertype='Teacher' and u.status='Active' and u.isapproved='1' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		$output='';
		if($queryfetchBS->num_rows()>0){
			$queryBS=$this->db->query("select acname,aid from teacherperactivity where academicyear='$max_year' and quarter='$quarter' group by acname order by acname ASC ");
			$output.='<div class="card">
	        <div class="card-header">
	            <h4>Teacher Performance Activity</h4>
	        </div>
			<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Teacher Name</th> ';
	                    foreach ($queryBS->result() as $bsName) {
	                    	$output.='<th>'.$bsName->acname.'</th>';
	                    }
	                $output.='</tr>
	            </thead>';
	        $no=1;
	        $output.='<input type="hidden" id="activityQuarter" value="'.$quarter.'" >';
			foreach ($queryfetchBS->result() as $stuList) {
				$teid=$stuList->id;
				$grade=$stuList->grade;
				$output.='<input type="hidden" id="activityStuId" value="'.$teid.'" >';
				$output.='<tr> <td>'.$no.'</td>';
				$output.='<td>'.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.'</td>';
				foreach ($queryBS->result() as $bsName) {
					$aid=$bsName->aid;
					$queryCheck=$this->db->query("select acid,pervalue from teacherperfvalue where academicyear='$max_year' and quarter='$quarter' and acid='$aid' and teid='$teid' ");
					$output.='<td><select class="form-control insertTeacherPerformance">';
					if($queryCheck->num_rows()>0){
						$rowValue=$queryCheck->row_array();
						$teaValue=$rowValue['pervalue'];
						$output.='<option value="'.$teaValue.'" id="'.$teid.'" class="'.$aid.'">'.$teaValue.'</option>';
						for($i=0;$i<=4;$i++){
							$output.='<option value="'.$i.'" id="'.$teid.'" class="'.$aid.'">'.$i.'</option>';
						}
					}else{
						for($i=0;$i<=4;$i++){
							$output.='<option value="'.$i.'" id="'.$teid.'" class="'.$aid.'">'.$i.'</option>';
						}
					}
					$output.='</select></td>';
	        	}
	        	$output.='</tr>';
	        	$no++;
			}
			$output.='</table></div></div>';
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetchStaffPerformResult($max_year,$branches,$activityViewWeek,$activityViewStaffs){
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$output='';
		$queryfetchTeacher=$this->db->query("select u.id,u.fname,u.mname,u.mysign, u.lname, u.username, u.gradesec, u.grade,u.status2 from users as u where u.id='$activityViewStaffs' and u.status='Active' and u.isapproved='1' and u.branch='$branches' group by u.id ");
		if($queryfetchTeacher->num_rows()>0){
			$grandTotal=0;
			foreach($queryfetchTeacher->result() as $teachResult){
				$signSigns=$teachResult->mysign;
				$output.='<div class="row" style="width:100%;height:auto;page-break-inside:avoid;">';
				$staff=$teachResult->username;
				$teid=$teachResult->id;
				$user_divison=$teachResult->status2;
				$output.='<div class="col-lg-12 col-12"><h2 class="header-title text-center">'.$school_name.'</h2>
				<div class="dropdown-divider"></div> ';
				$output.='<h3 class="header-title text-center">
				<u>Teacher’s Performance Evaluation (Summative) in '.$max_year.' Academic Year</u>
				</h3></div>';
				$output.='<div class="col-lg-6 col-6">Teacher’s Name: '.$teachResult->fname.' '.$teachResult->mname.' '.$teachResult->lname.'</div>';
				$output.='<div class="col-lg-3 col-3">Date: '.date('M-d-Y').'</div>';
				$output.='<div class="col-lg-3 col-3">Week: '.$activityViewWeek.'</div>';
				$queryTeaches=$this->db->query("select staff,subject,grade from staffplacement where academicyear='$max_year' and staff='$staff' ");
				$output.='<div class="col-lg-12 col-12 table-responsive">
	        	<table class="tabler table-borderedr" style="width:100%;">
                <tr>
                    <th>No.</th>
                    <th class="text-center">Areas of Evaluation	</th> 
                    <th class="text-center">Achievable Point</th> 
                    <th class="text-center">Given Point</th>
                </tr>';
                $queryGroup=$this->db->query("select ct.quarter,ct.perweight,ct.tid,ct.datecreated, ct.pername from teacherperfogroup as ct where ct.academicyear='$max_year' and per_division ='$user_divison' order by ct.tid ASC ");
                if($queryGroup->num_rows()>0){
                	$noG=1;
                	$grandWeight=0;$totalWeight_gs=0;$final_grand_total=0;$final_gross_total=0;
                	foreach($queryGroup->result() as $groupName){
                		$aid=$groupName->tid;
                		$totalWeight=0;
                		$queryPerValue=$this->db->query("select sum(aweight) as total_g_weight, aid,acname ,aweight from teacherperactivity where academicyear='$max_year' and pergroup='$aid' and activity_division='$user_divison' ");
                		$query_activity=$this->db->query("select aid,acname,aweight from teacherperactivity where academicyear='$max_year' and pergroup='$aid' and activity_division='$user_divison' ");
                		$totalActivity=$query_activity->num_rows() + 2;
                		$sumWeight=0;
						foreach($queryPerValue->result() as $total_sum){
							$totalWeight=$sumWeight + $total_sum->total_g_weight;	
						}
						$queryNA=$this->db->query("select * from teacherperfvalue where academicyear='$max_year' and per_week='$activityViewWeek' and teid='$teid' and pervalue='NA' and actiGroup='$aid' group by acid ");
						if($queryNA->num_rows()>0){
							foreach($queryNA->result() as $row_na){
								$activity_id=$row_na->acid;
								$query_activityy=$this->db->query("select aweight from teacherperactivity where academicyear='$max_year' and aid='$activity_id' and activity_division='$user_divison' ");
								if($query_activityy->num_rows()>0){
									foreach($query_activityy->result() as $naRow){
										$value_na=$naRow->aweight;
										$totalWeight=$totalWeight - $value_na;
									}									
								}
							}
						}else{
							$totalWeight=$totalWeight;
						}
						$output.='<tr><td rowspan="'.$totalActivity.'">'.$noG.'.</td><td style="background-color:#e3e3e3"><b>'.$groupName->pername.'</b></td><td class="text-center" style="background-color:#e3e3e3">'.$groupName->perweight.'</td> ';
						if($totalWeight>0){
							$output.='<td class="text-center" style="background-color:#e3e3e3">'.$totalWeight.'</td>';
						}else{
							$output.='<td class="text-center" style="background-color:#e3e3e3">NA</td>';
						}
                		$sumTotal=0;              		
                		if($query_activity->num_rows()>0){
                			$noV=1;
                			foreach($query_activity->result() as $activityName){
                				$aid=$activityName->aid;
                				$output.='<tr><td>'.$noG.'.'.$noV.'. '.$activityName->acname.'</td>
                				<td class="text-center">'.$activityName->aweight.'</td>';
                				$queryTeaValue=$this->db->query("select acid,pervalue from teacherperfvalue where academicyear='$max_year' and per_week='$activityViewWeek' and acid='$aid' and teid='$teid' ");
                				if($queryTeaValue->num_rows()>0){
                					foreach($queryTeaValue->result() as $teacValue){
                						if($teacValue->pervalue!=='NA'){
                							$sumTotal=$sumTotal + $teacValue->pervalue;
                						}else{
                							$sumTotal=$sumTotal ;
                						}
                						$output.='<td class="text-center">'.$teacValue->pervalue.'</td>';
                					}
                				}else{
                					$output.='<td class="text-center">-</td>';
                				}
                				$output.='</tr>';
                				$noV++;
                			}
                		}
                		$grandTotal=$grandTotal + $sumTotal;           		
                		$output.='</tr>';
                		$output.='<td class="pull-right">Total</td>'; 
                		if($totalWeight > 0 && $sumTotal>0){
                			$final_result=($sumTotal * $groupName->perweight)/$totalWeight;
                			$final_result_print=number_format((float)$final_result,2,'.','');
                			$output.='<td class="text-center"><b>'.$final_result_print.'/'.$groupName->perweight.' </b></td>';
                			$output.='<td class="text-center"><b>'.$sumTotal.'/'.$totalWeight.' </b></td>';
                			
                		}else{
                			$output.='<td class="text-center"><span class="text-danger">-</span></td>';
                			$output.='<td class="text-center"><span class="text-danger">-</span></td>';
                		}
                		$final_grand_total=$final_grand_total + $final_result_print;
                		$final_gross_total=$final_gross_total + $sumTotal;
                		$totalWeight_gs=$totalWeight_gs + $totalWeight;
                		
                		$grandWeight= $grandWeight + $groupName->perweight;
                		$noG++;
                	}
                	$output.='<tr style="background-color:#e3e3e3"><td colspan="2">Grand Total</td>'; 
                	$output.='<td class="text-center">'.number_format((float)$final_grand_total,2,'.','') .'/'.$grandWeight.'</td> <td class="text-center">'.$final_gross_total.'/'.$totalWeight_gs.'</td></tr>';
                }
	        	$output.='</table></div>';
	        	/*if($grandTotal>0){
	        		$output.='<div class="col-lg-6 col-6">TOTAL OUT OF <u>'.$grandTotal.'/'.$grandWeight.'</u></div>';
	        	}else{
	        		$output.='<div class="col-lg-6 col-6">TOTAL OUT OF ____</div>';
	        	}
	        	if($grandTotal>0){
	        		$convertedPercent=(100*$grandTotal)/$grandWeight;
	        		$output.='<div class="col-lg-6 col-6">CONVERTED TOTAL OUT OF 100% <u>'.number_format((float)$convertedPercent,2,'.','').'</u></div>';
	        	}else{
	        		$output.='<div class="col-lg-6 col-6">CONVERTED TOTAL OUT OF 100% ___</div>';
	        	}*/
	        	
	        	$output.='<div class="col-lg-12 col-12">Administrator’s Comment: ____________________________________________________ ___________________________________</div>';
	        	$output.='<div class="col-lg-12 col-12">Teacher’s Comment: ___________________________________ ________________________________</div>';
	        	$output.='<div class="col-lg-6 col-6">Name of Teacher: <u><b>'.$teachResult->fname.' '.$teachResult->mname.' '.$teachResult->lname.'</b></u></div>';
	        	$output.='<div class="col-lg-3 col-3">Sig: <img alt="___"" src="'.base_url()."/".$signSigns.'" style="height:40px;width:120px"></div>';
	        	$output.='<div class="col-lg-3 col-3 pull-right">Date: <u>'.date('M-d-Y').'</u></div>';

	        	$output.='<div class="col-lg-6 col-6">Name of Unit Leader: _________________________________________________ </div>';
	        	$output.='<div class="col-lg-3 col-3">Sig: ___ </div>';
	        	$output.='<div class="col-lg-3 col-3 pull-right">Date: <u>'.date('M-d-Y').'</u></div>';

	        	$output.='<div class="col-lg-6 col-6">Name of Dep’t Head /Vice Director/Director: _________________________________________________ </div>';
	        	$output.='<div class="col-lg-3 col-3">Sig: ___ </div>';
	        	$output.='<div class="col-lg-3 col-3 pull-right">Date: <u>'.date('M-d-Y').'</u></div>';

	        	/*$output.='<div class="col-lg-2 col-6 text-center">SCHOOL SEAL</div>';
	        	$output.='<div class="col-lg-12 col-12 text-center StudentViewTextInfo"><u>Key</u> &nbsp;&nbsp; 0.Failure &nbsp; &nbsp;&nbsp; 1.Needs Improvement &nbsp;&nbsp;&nbsp; 2.Good &nbsp;&nbsp;&nbsp; 3.V .good &nbsp;&nbsp;&nbsp; 4.Excellent</div>';
	        	$output.='<div class="col-lg-12 col-12"><p>Note: This evaluation and observation check list can be amended by School management any time in any condition for mutual benefit.</p></div>';*/
	        	/*$output.='<div class="col-lg-4 col-6"><p>Distribution .1.Orginal Copy for the principal</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>2. First Copy for the teacher</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>3. Second Copy for School Dean</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>4. Third copy for General Manager</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>5. Fourth copy for teacher’s file</p></div>';*/
	        	$output.='</div>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_Perform_Result($max_year,$branches,$staff_activity_Week,$staff_activity_Division){
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$output='';
		$queryfetchTeacher=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec, u.grade from users as u where u.usertype!='Student' and u.status='Active' and u.isapproved='1' and u.branch='$branches' and status2='$staff_activity_Division' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		if($queryfetchTeacher->num_rows()>0){
			$grandTotal=0;
			$output.='<div class="row" style="width:100%;height:auto;page-break-inside:avoid;">';

			$output.='<div class="col-lg-12 col-12"><h5 class="header-title text-center">'.$school_name.'</h5>
			<div class="dropdown-divider"></div> ';
			$output.='<h6 class="header-title text-center">
			<u>'.$staff_activity_Week.' Teacher’s Performance Evaluation (Summative) in '.$max_year.' Academic Year</u>
			</h6></div>';

			$output.='<div class="col-lg-12 col-12 table-responsive">
        	<table class="tabler table-bordered" style="width:100%;">
            <tr>
            <th class="rotateJossRoster"><div>No.</div></th>
            <th class="text-center rotateJossRoster"><div>Evaluation Activities </div></th> 
            <th class="text-center rotateJossRoster"><div>Points </div></th> ';
            $userNo=0;
            foreach($queryfetchTeacher->result() as $teachResult){
            	$userNo=$userNo + 1;
            	$output.='<th class="text-center rotateJossRoster"><div>'.$teachResult->fname.' '.$teachResult->mname.' '.$teachResult->lname.'</div></th> ';
            }
            $output.='<th class="text-center rotateJossRoster"><div>Average </div></th></tr>';
            $queryGroup=$this->db->query("select ct.perweight,ct.tid,ct.datecreated, ct.pername from teacherperfogroup as ct where ct.academicyear='$max_year' and per_division='$staff_activity_Division' order by ct.tid ASC ");
            if($queryGroup->num_rows()>0){
            	$noG=1;$total_weight=0;
            	foreach($queryGroup->result() as $groupName){
            		$grandWeight=0;$totalWeight=0;
            		$aid=$groupName->tid;
            		$total_weight=$total_weight + $groupName->perweight;
            		$output.='<tr><td>'.$noG.'.</td><td><b>'.$groupName->pername.'</b></td>
            		<td class="text-center">'.$groupName->perweight.'%</td>';
					$queryBSC=$this->db->query("select sum(aweight) as t_Weight from teacherperactivity where academicyear='$max_year' and pergroup='$aid' and activity_division='$staff_activity_Division' ");
					
            		foreach($queryfetchTeacher->result() as $teachResult){
            			$staff=$teachResult->username;
						$teid=$teachResult->id;
						$queryBSC=$this->db->query("select sum(aweight) as t_Weight from teacherperactivity where academicyear='$max_year' and pergroup='$aid' and activity_division='$staff_activity_Division' ");
						$sumWeight=0;
						foreach($queryBSC->result() as $total_sum){
							$totalWeight=$total_sum->t_Weight + $sumWeight;
						}
						$queryNA=$this->db->query("select * from teacherperfvalue where academicyear='$max_year' and per_week='$staff_activity_Week' and teid='$teid' and pervalue='NA' and actiGroup='$aid' group by acid ");
						if($queryNA->num_rows()>0){
							foreach($queryNA->result() as $row_na){
								$activity_id=$row_na->acid;
								$query_activityy=$this->db->query("select aweight from teacherperactivity where academicyear='$max_year' and aid='$activity_id' and activity_division='$staff_activity_Division' ");
								if($query_activityy->num_rows()>0){
									foreach($query_activityy->result() as $naRow){
										$value_na=$naRow->aweight;
										$totalWeight=$totalWeight - $value_na;
									}
								}
								
							}
						}else{
							$totalWeight=$totalWeight;
						}
        				$querySume=$this->db->query("select sum(pervalue) as totalSumVale from teacherperfvalue where academicyear='$max_year' and teid='$teid' and actiGroup='$aid' and per_week='$staff_activity_Week' ");
        				if($querySume->num_rows()>0 ){
        					foreach($querySume->result() as $rowValue){
							   	$TotalValue=$rowValue->totalSumVale;
							   	if($TotalValue>0 && $totalWeight>0){
							   		$gs_grand_value=($TotalValue * $groupName->perweight)/$totalWeight;
							   	}else{
							   		$gs_grand_value=0;
							   	}
        					}
						   	$grandWeight=$grandWeight + $gs_grand_value;
						   	$output.='<td class="text-center">'.number_format((float)$gs_grand_value,2,'.','').'</td>';
        				}else{
        					$output.='<td class="text-center">-</td>';
        				}
        			}
        			if($userNo>0){
        				$output.='<td class="text-center">'.number_format((float)$grandWeight/$userNo,2,'.','').'</td>';
        			}else{
        				$output.='<td class="text-center">-</td>';
        			}
    				$output.='</tr>';
            		$noG++;
            	}
            	$output.='<tr><td class="text-center" colspan="2">Total</td> <td class="text-center">'.$total_weight.'%</td>';
            	$grandWeight_Average=0;
            	foreach($queryfetchTeacher->result() as $teachResult){
            		$grandWeight=0;
            		$staff=$teachResult->username;
					$teid=$teachResult->id;
					foreach($queryGroup->result() as $groupName){
            			$aid=$groupName->tid;
            			$total_weight=$total_weight + $groupName->perweight;
						$queryBSC=$this->db->query("select sum(aweight) as t_Weight from teacherperactivity where academicyear='$max_year' and pergroup='$aid' and activity_division='$staff_activity_Division' ");
						foreach($queryBSC->result() as $total_sum){
							$totalWeight=$total_sum->t_Weight;
						}
						$queryNA=$this->db->query("select * from teacherperfvalue where academicyear='$max_year' and per_week='$staff_activity_Week' and teid='$teid' and pervalue='NA' and actiGroup='$aid' group by acid ");
						if($queryNA->num_rows()>0){
							foreach($queryNA->result() as $row_na){
								$activity_id=$row_na->acid;
								$query_activityy=$this->db->query("select aweight from teacherperactivity where academicyear='$max_year' and aid='$activity_id' and activity_division='$staff_activity_Division' ");
								if($query_activityy->num_rows()>0){
									foreach($query_activityy->result() as $naRow){
										$value_na=$naRow->aweight;
										$totalWeight=$totalWeight - $value_na;
									}
									
								}
								
							}
						}else{
							$totalWeight=$totalWeight;
						}
	        			$querySume=$this->db->query("select sum(pervalue) as totalSumVale from teacherperfvalue where academicyear='$max_year' and teid='$teid' and actiGroup='$aid' and per_week='$staff_activity_Week' ");
        				if($querySume->num_rows()>0 ){
						   	$row=$querySume->row();
						   	$TotalValue=$row->totalSumVale;
						   	if($TotalValue>0 && $totalWeight>0){
						   		$gs_grand_value=($TotalValue * $groupName->perweight)/$totalWeight;
						   	}else{
						   		$gs_grand_value=0;
						   	}
						   	$grandWeight=$grandWeight + $gs_grand_value;

        				}
	        		}

        			$output.='<td class="text-center">'.number_format((float)$grandWeight,2,'.','').'</td>';
        			$grandWeight_Average=$grandWeight_Average + $grandWeight;
        		}
        		if($userNo>0){
    				$output.='<td class="text-center">'.number_format((float)$grandWeight_Average/$userNo,2,'.','').'</td>';
    			}else{
    				$output.='<td class="text-center">-</td>';
    			}
            	$output.='</tr>';
            }
        	$output.='</table></div>';
			
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetchStaffPerformResultDirector($max_year,$branches,$max_quarter,$user){
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$output='';
		$queryfetchTeacher=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u cross join directorplacement as dp cross join staffplacement as st where st.academicyear='$max_year' and st.grade=dp.grade and dp.academicyear='$max_year' and dp.staff='$user' and u.usertype='Teacher' and u.status='Active' and u.isapproved='1' and u.branch='$branches' group by u.id  order by u.fname,u.mname,u.lname ASC ");
		if($queryfetchTeacher->num_rows()>0){
			
			foreach($queryfetchTeacher->result() as $teachResult){
				$output.='<div class="row" style="width:100%;height:auto;page-break-inside:avoid;">';
				$staff=$teachResult->username;
				$teid=$teachResult->id;
				$output.='<div class="col-lg-12 col-12"><h5 class="header-title text-center">'.$school_name.'</h5>
				<div class="dropdown-divider"></div> ';
				$output.='<h6 class="header-title text-center">'.$school_slogan.'<br>
				<u>Teacher’s performance Evaluation (Summative)</u>
				</h6></div>';
				$output.='<div class="col-lg-8 col-6">Teacher’s name: '.$teachResult->fname.' '.$teachResult->mname.' '.$teachResult->lname.'</div>';
				$output.='<div class="col-lg-4 col-6">Date: '.date('M-d-Y').'</div>';
				$queryTeaches=$this->db->query("select staff,subject,grade from staffplacement where academicyear='$max_year' and staff='$staff' ");
				if($queryTeaches->num_rows()>0){
					$output.='<div class="col-lg-6 col-6">Grade he/she teaches: ';
					foreach($queryTeaches->result() as $heTeaches){
						$output.=''.$heTeaches->grade.' , ';
					}
					$output.='</div>';
					$output.='<div class="col-lg-6 col-6">Subject he/she teaches:';
					foreach($queryTeaches->result() as $heTeaches){
						$output.=''.$heTeaches->subject.' , ';
					}
					$output.='</div>';
				}
				$output.='<div class="col-lg-8 col-6">Quarter: '.$max_quarter.' </div>';
				$output.='<div class="col-lg-4 col-6">Semester: _________</div>';
				$output.='<div class="col-lg-12 col-12 table-responsive">
	        	<table class="tabler table-borderedr table-hover" style="width:100%;">
                <tr>
                    <th>No.</th>
                    <th class="text-center">Activities</th> 
                    <th class="text-center">Points</th> 
                </tr>';
                $queryGroup=$this->db->query("select ct.quarter,ct.perweight,ct.tid,ct.datecreated, ct.pername from teacherperfogroup as ct where ct.academicyear='$max_year' and ct.quarter='$max_quarter' order by ct.tid ASC ");
                if($queryGroup->num_rows()>0){
                	$noG=1;
                	$grandTotal=0;$grandWeight=0;
                	foreach($queryGroup->result() as $groupName){
                		$aid=$groupName->tid;
                		$queryPerValue=$this->db->query("select aid,acname from teacherperactivity where academicyear='$max_year' and quarter='$max_quarter' and pergroup='$aid' ");
                		$totalActivity=$queryPerValue->num_rows() + 2;
                		$output.='<tr><td rowspan="'.$totalActivity.'">'.$noG.'.</td><td><b>'.$groupName->pername.'</b></td><td class="text-center">'.$groupName->perweight.'</td>';
                		
                		$sumTotal=0;              		
                		if($queryPerValue->num_rows()>0){
                			$noV=1;
                			foreach($queryPerValue->result() as $activityName){
                				$aid=$activityName->aid;
                				$output.='<tr><td>'.$noV.'. '.$activityName->acname.'</td>';
                				$queryTeaValue=$this->db->query("select acid,pervalue from teacherperfvalue where academicyear='$max_year' and quarter='$max_quarter' and acid='$aid' and teid='$teid' ");
                				if($queryTeaValue->num_rows()>0){
                					foreach($queryTeaValue->result() as $teacValue){
                						$sumTotal=$sumTotal + $teacValue->pervalue;
                						$output.='<td class="text-center">'.$teacValue->pervalue.'</td>';
                					}
                				}else{
                					$output.='<td class="text-center">-</td>';
                				}
                				$output.='</tr>';
                				$noV++;
                			}
                		}
                		$grandTotal=$grandTotal + $sumTotal;           		
                		$output.='</tr>';
                		$output.='<td class="pull-right">Total</td>'; 
                		if($sumTotal > $groupName->perweight){
                			$output.='<td class="text-center"><span class="text-danger">OW</span></td>';
                		}else{
                			$output.='<td class="text-center"><b>'.$sumTotal.'/'.$groupName->perweight.' </b></td>';
                		}
                		$grandWeight= $grandWeight + $groupName->perweight;
                		$noG++;
                	}
                }
	        	$output.='</table></div>';
	        	$output.='<div class="col-lg-6 col-6">TOTAL OUT OF <u>'.$grandTotal.'/'.$grandWeight.'</u></div>';
	        	$convertedPercent=(100*$grandTotal)/$grandWeight;
	        	$output.='<div class="col-lg-6 col-6">CONVERTED TOTAL OUT OF 100% <u>'.number_format((float)$convertedPercent,2,'.','').'</u></div>';
	        	$output.='<div class="col-lg-6 col-12">Strength observed: _________________________________________________</div>';
	        	$output.='<div class="col-lg-6 col-12">Points to ponder: _________________________________________________</div>';
	        	$output.='<div class="col-lg-6 col-12">Teacher’s comment: _________________________________________________</div>';
	        	$output.='<div class="col-lg-6 col-12">Name and signature of the Principal: ____________________________________</div>';
	        	$output.='<div class="col-lg-6 col-12">Name and signature of the Teacher: ____________________________________</div>';
	        	$output.='<div class="col-lg-8 col-12">Name and signature of the dep’t Head /vice Director/Unit Leader: _______________</div>';
	        	$output.='<div class="col-lg-2 col-6">Date: <u>'.date('M-d-Y').'</u></div>';
	        	$output.='<div class="col-lg-2 col-6 text-center">SCHOOL SEAL</div>';
	        	$output.='<div class="col-lg-12 col-12 text-center StudentViewTextInfo"><u>Key</u> &nbsp;&nbsp; 0.Failure &nbsp; &nbsp;&nbsp; 1.Needs Improvement &nbsp;&nbsp;&nbsp; 2.Good &nbsp;&nbsp;&nbsp; 3.V .good &nbsp;&nbsp;&nbsp; 4.Excellent</div>';
	        	$output.='<div class="col-lg-12 col-12"><p>Note: This evaluation and observation check list can be amended by School management any time in any condition for mutual benefit.</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>Distribution .1.Orginal Copy for the principal</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>2. First Copy for the teacher</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>3. Second Copy for School Dean</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>4. Third copy for General Manager</p></div>';
	        	$output.='<div class="col-lg-4 col-6"><p>5. Fourth copy for teacher’s file</p></div>';
	        	$output.='</div>';
			}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetchStaffPerformResultTeacher($activityYear,$activity_week,$max_year,$teid,$user_division){
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		$output='';
		$grandTotal=0;$grandWeight=0;
		$queryPermission=$this->db->query("select * from teacher_performance_view_permission where academicyear='$max_year' and permission_week='$activity_week' and user_divison='$user_division' ");
		if($queryPermission->num_rows()>0){
			$queryfetchBS=$this->db->query("select u.id,u.fname,u.mname, u.lname, u.username, u.gradesec,u.grade from users as u where u.id='$teid' and u.status='Active' and u.isapproved='1' ");
			if($queryfetchBS->num_rows()>0){
				$queryGroup=$this->db->query("select tg.pername,tg.tid,tg.perweight from teacherperfogroup as tg where tg.academicyear='$max_year' and per_division='$user_division' group by tg.pername order by tg.pername ASC ");
				if($queryGroup->num_rows()>0){
					$output.='<div class="row">';
			        foreach ($queryfetchBS->result() as $stuList) {
						$teid=$stuList->id;
						$userName=$stuList->username;
						$fname=$stuList->fname;
						$mname=$stuList->mname;
						$lname=$stuList->lname;
						$noID=1;
						$output.='<div class="col-12 col-sm-12 col-lg-12 col-md-12">
			        	<div class="card"> <div class="card-body StudentViewTextInfo"> ';
						$output.='<h4>'.$stuList->fname.' '.$stuList->mname.' '.$stuList->lname.' 
						<span class="pull-right">'.$activity_week.'</span></h4><hr>';
						foreach($queryGroup->result() as $rowGroup){
							$groupsId=$rowGroup->tid;
							$acName=$rowGroup->pername;
							$queryBS=$this->db->query("select acname,aid,aweight from teacherperactivity where academicyear='$max_year' and pergroup='$groupsId' and activity_division='$user_division' group by acname order by acname ASC ");
			                if($queryBS->num_rows()>0){
			                	$querySume=$this->db->query("select sum(pervalue) as totalSumVale from teacherperfvalue where academicyear='$max_year' and teid='$teid' and actiGroup='$groupsId' and per_week='$activity_week' ");
						      	$row=$querySume->row();
						      	$TotalValue=$row->totalSumVale;
			                	$output.='<h6>'.$noID.' .'.$rowGroup->pername.' <span class="badge badge-default">(Weight '.$rowGroup->perweight.')</span>
			                	Total Given Point <span class="badge badge-info" id="TotalGivenResults'.$groupsId.''.$teid.'"> '.$TotalValue.' </span> </h6>';
			                	$subNo=1;
			                    foreach($queryBS->result() as $rowActivity){
			                        $aid=$rowActivity->aid;
			                        $weightT=$rowActivity->aweight;
			                      	$output.='&nbsp;&nbsp; '.$noID.'.'.$subNo.' '.$rowActivity->acname.'  
					                <span class="badge badge-default"> (Weight '.$rowActivity->aweight.')</span>';
					                $queryCheck=$this->db->query("select acid,pervalue from teacherperfvalue where academicyear='$max_year' and acid='$aid' and teid='$teid' and per_week='$activity_week' ");
									$output.='<span>';
									if($queryCheck->num_rows()>0){
										$rowValue=$queryCheck->row_array();
										$teaValue=$rowValue['pervalue'];
										$output.='<span class="badge badge-light">Given Point  '.$teaValue.'</span>';
									}
									$output.='</span><div class="dropdown-divider"></div>';
									$subNo++;
			                    }
			                    $noID++;
			                }
			            }
			            $queryMyBoss=$this->db->query("select u.fname,u.mname,u.profile from users as u cross join staff_group as sg where sg.staff_head=u.username and sg.academicyear='$max_year' and staff_list='$userName' group by staff_list ");
			            if($queryMyBoss->num_rows()>0){
			            	$queryRow=$queryMyBoss->row();
			            	$myFname=$queryRow->fname;
			            	$myMname=$queryRow->mname;
			            	$output.='<div class="support-ticket media">';
		                    if($queryRow->profile == ''){
								$output.='<img alt="Pic" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
							}else{
								$output.='<img alt="Pic" src="'.base_url().'/profile/'.$queryRow->profile.'" class="user-img mr-2">';
							}
		                    $output.='<div class="media-body">
		                      <span class="font-weight-bold">'.$myFname.' '.$myMname.'</span>
		                      <p class="my-1">To the best of my knowledge, this is an accurate report. I would like you to keep up your performance where it is satisfactory and make immediate improvements in the areas you performed above expectation.</p>
		                      <small class="text-muted"></small>
		                    </div>
		                  	</div>';
			            }else{
			            	$output.='<div class="support-ticket media">
		                    <img alt="Pic" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">
		                    <div class="media-body">
		                      <span class="font-weight-bold">Unknown Boss</span>
		                      <p class="my-1">To the best of my knowledge, this is an accurate report. I would like you to keep up your performance where it is satisfactory and make immediate improvements in the areas you performed above expectation.</p>
		                    	</div>
		                  	</div>';
			            }
			            $queryCheckAgree=$this->db->query("select * from teacher_performance_agremment where teaid='$teid' and week_agreed='$activity_week' and academicyear='$max_year' ");
			            if($queryCheckAgree->num_rows()>0){
			            	$output.='<div class="form-group mb-0 col-12">
                                <div class="custom-control custom-checkbox">
                                  <input type="checkbox" class="custom-control-input" title="'.$teid.'" value="'.$activity_week.'" checked="checked" disabled="disabled">
                                  <label class="custom-control-label" for="agreed_ToResult">I Agreed. </label>
                                </div>
                            </div>';
			            }else{
			            	$output.='
                            <div class="form-group mb-0 col-12">                                
                              <input type="checkbox" name="agreedToResult" class="agreedToResult'.$activity_week.'" id="agreedToResult" title="'.$teid.'" value="'.$activity_week.'">
                              <label>I agree and sign to keep up on my strengths and work hard to make improvements in the areas that require improvements.</label>
                              <div class="text-muted form-text">
                                By checking this box, you are signing on the given evaluation. If you disagree, you need to contact the administration immediately.
                              </div>
                            </div>';
			            }
			            $output.='</div> </div> </div> ';			            
			        }
			        $output.=' </div> ';
			    }
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-check-circle"> </i> No record found.
	        	</div></div>';
			}
			return $output;
		}else{
			$output .='<div class="alert alert-light alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-check-circle"> </i> No permission to see performance result.
	        	</div></div>';
		}
		return $output;
	}
	function fetchLineupschedule($max_year){
		$query=$this->db->query("select li.tid,li.daysname,li.linedate,li.divname,li.datecreated, us.fname,us.mname,us.lname from lineupschedule as li cross join users as us where us.id=li.tid and li.academicyear='$max_year' group by li.id order by linedate ASC ");
		$output='';
		if($query->num_rows()>0){
			$output='<div class="table-responsive"> 
	            <table class="table table-stripped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Teacher Name</th>
	                <th>Day Assigned</th>
	                <th>Date Assigned</th>
	                <th>Division Name</th>
	                <th>Date Created</th> </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $fetch_evaluations) {
				$output.='
				<tr>
	                <td>'.$no.'.</td>
	                <td>'.$fetch_evaluations->fname.' '.$fetch_evaluations->mname.' '.$fetch_evaluations->lname.'</td>
	                <td>'.$fetch_evaluations->daysname.'</td>
	                <td>'.$fetch_evaluations->linedate.'</td>
	                <td>'.$fetch_evaluations->divname.'</td>
	                <td>'.$fetch_evaluations->datecreated.'</td>
	            </tr>';
			    $no++;
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No record found.
                </div>
              </div>';
		}
		return $output;
	}
	function printTeacherLineupSchedule($max_year,$branchit){
		$query=$this->db->query("select us.fname,mname,lname, ls.tid, ls.daysname, ls.linedate,ls.divname from users as us cross join lineupschedule as ls where ls.tid=us.id and ls.academicyear='$max_year' and us.status='Active' and us.branch='$branchit' group by us.id order by fname,mname,lname");
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		if($query->num_rows()>0){
			foreach($query->result() as $fetchTeacher){
				$output.='<h3 class="text-center"><u>'.$school_name.' LineUp Schedule Program in '.$max_year.' Academic Year</u></h3>';
				$id=$fetchTeacher->tid;
				$fname=$fetchTeacher->fname;
				$mname=$fetchTeacher->mname;
				$queryFetchTeacher=$this->db->query("select * from lineupschedule as ls where ls.tid='$id'");
				$output.='<h3 class="text-center"> Teacher '.$fname.' '.$mname.'</h3>';
				$output.='<div class="table-responsive"> 
	            <table class="tabler table-bordered table-hover" style="width:100%;">
	            <tr> 
	                <th class="text-center">Day/Date Assigned</th>
	                <th class="text-center">Division Name</th></tr>';
				foreach($queryFetchTeacher->result() as $teacherFile){
					$output.='<tr><td class="text-center"><h4>'.$teacherFile->daysname.'</h4>('.$teacherFile->linedate.')</td>
					<td class="text-center"><h4>'.$teacherFile->divname.'</h4></td></tr>';

				}
				$output.='</table></div>';
				$output.='<div class="row"><div class="col-lg-6 col-12">Schedule Generated: '.$teacherFile->datecreated.'</div><div class="col-lg-6 col-12 pull-right">MySchool SMS(Grandstande Technologies.)</div> </div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No record found.
                </div>
              </div>';
		}
		return $output;
	}
	function printDateLineupSchedule($max_year,$branchit){
		$query=$this->db->query("select us.fname,mname,lname, ls.tid,ls.datecreated, ls.daysname, ls.linedate,ls.divname from users as us cross join lineupschedule as ls where ls.tid=us.id and ls.academicyear='$max_year' and us.status='Active' and us.branch='$branchit' group by ls.linedate order by linedate ASC");
		$output='';
		$query_name = $this->db->query("select * from school");
		$row_name = $query_name->row_array();
		$school_name=$row_name['name'];
		$school_slogan=$row_name['slogan'];
		if($query->num_rows()>0){
			$output.='<h3 class="text-center"><u>'.$school_name.' LineUp Schedule Program in '.$max_year.' Academic Year</u></h3>';
			$output.='<div class="table-responsive"> 
	            <table class="tabler table-bordered table-hover" style="width:100%;">
	            <tr> <th>No.</th>
                <th class="text-center">Day/Date Assigned</th>
                <th class="text-center">Teacher Name</th>
                <th class="text-center">Division Name</th></tr>';
	        $no=1;
			foreach($query->result() as $fetchTeacher){
				
				$id=$fetchTeacher->tid;
				$fname=$fetchTeacher->fname;
				$mname=$fetchTeacher->mname;
				$output.='<tr><td>'.$no.'.</td><td class="text-center"><h4>'.$fetchTeacher->daysname.'</h4>('.$fetchTeacher->linedate.')</td>
				<td class="text-center"><h4>'.$fname.' '.$mname.'</h4></td>
				<td class="text-center"><h4>'.$fetchTeacher->divname.'</h4></td></tr>';
				$no++;
			}
			$output.='</table></div>';
			$output.='<div class="row"><div class="col-lg-6 col-12">Schedule Generated: '.$fetchTeacher->datecreated.'</div><div class="col-lg-6 col-12 pull-right">MySchool SMS(Grandstande Technologies.)</div> </div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close" data-dismiss="alert">
                      <span>&times;</span>
                    </button><i class="fas fa-exclamation-triangle "></i> No record found.
                </div>
              </div>';
		}
		return $output;
	}
	function save_token()
    {
    	$token = $this->input->post('token');
    	$queryCheck=$this->db->query("select * from notification_tokens_tbl where token='$token' ");
    	if($queryCheck->num_rows()<1){
    		 if(isset($token) && !empty($token))
    		 {
    		 //Insert mode
    			$data = array(
    						'token'       => $token,
    						'delete_status'=>'N',
    						'created_at' => date('y-m-d H:i:s'),
    						);
    			$this->db->insert('notification_tokens_tbl', $data);
    			$insert_id= $this->db->insert_id();
    			
    			if ($insert_id != '') {
    				$data = array(
                    'status' => true,
                    'msg' => 'Record # '.$insert_id.' saved successfully. Thank you!'
                    );
    			} else {
    				$data = array(
                    'status' => false,
                    'msg' => 'Record not save.'
                	);
    			}
    		} else {
    				$data = array(
                    'status' => false,
                    'msg' => 'Token not set.'
                	);
    		}
    		echo json_encode($data);
    	}
			
    }
    function fetchGradeManualMarkFormate($gs_branches,$gs_gradesec,$gs_quarter,$max_year)
	{
		$output='';
		$subjectName=$this->db->query("select * from subject where Grade='$gs_gradesec' and Academic_Year='$max_year' group by Subj_Id order by Subj_name ASC");
		
		if($subjectName->num_rows()>0){
			
            $queryGrade=$this->db->query("select gradesec from users as u where u.academicyear='$max_year' and u.grade='$gs_gradesec' and u.branch='$gs_branches' group by u.gradesec order by gradesec ASC ");
            foreach($queryGrade->result() as $grades){
            	$gradesec=$grades->gradesec;
            	$query_name = $this->db->query("select * from school");
				$row_name = $query_name->row_array();
				$school_name=$row_name['name'];
				$school_slogan=$row_name['slogan'];
			
    			foreach ($subjectName->result_array() as $subName) {
	    			$subject=$subName['Subj_name'];
					$output.='<div style="page-break-inside:avoid;width:100%;"><h3 class="text-center"><u>'.$school_name.'<small class="time">(Branch: '.$gs_branches.')</small></u></h3>
					<h4 class="text-center"> Academic Year: <B><u>' .$max_year.'</u></B><br>
					Grade :<B><u>'.$gradesec.'</u></B>
					Season :<B><u>'. $gs_quarter.'</u></B>
					Subject :<B><u>'.$subject.'</u></B>
					</h4>';

					$queryEvaluation=$this->db->query("select * from evaluation where academicyear='$max_year' and quarter='$gs_quarter' and grade='$gs_gradesec' group by evname order by eid ASC");
					$output.='<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;">
	        		<tr>
	        		<th rowspan="2">No.</th>
	            	<th rowspan="2">Student Name</th>
	            	<th rowspan="2" class="text-center">Student ID</th>';
	    			foreach ($queryEvaluation->result_array() as $evalua_name) 
	    			{
	            		$mname_gs=$evalua_name['evname'];
		            	$queryMvalue = $this->db->query("select * from schoolassesment where saseval='$mname_gs' and sasgrade='$gs_gradesec' and academicyear='$max_year' group by sasname order by sasid ASC");
		            	$colSpan=$queryMvalue->num_rows();
		            	$output.='<th class="text-center" colspan="'.$colSpan.'"><b>'.$evalua_name['evname'].'</b></th>';
	            	}
	            	$output.='<th class="text-center" rowspan="2"><B>Total</B></th><th rowspan="2" class="text-center">Sig.</th><tr>';
	            	foreach ($queryEvaluation->result_array() as $evalua_name) 
	            	{
	            		$mname_gs=$evalua_name['evname'];
	            		$queryMvalue = $this->db->query("select * from schoolassesment where saseval='$mname_gs' and sasgrade='$gs_gradesec' and academicyear='$max_year' group by sasname order by sasid ASC");
		            	foreach ($queryMvalue->result() as $mark_name)
		            	{
		            		$output.='<td class="text-center">'.$mark_name->sasname.'</td>';
		            	}
		            }
            		$output.='</tr>';
            		$stuNO=1;
	            	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$gs_branches' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname,u.lname ASC ");
					foreach ($queryStudent->result_array() as $row) { 
		        		$id=$row['id'];
		        		$output.='<tr><td>'.$stuNO.'.</td> <td>'.$row['fname'].' '.$row['mname'].' '.$row['lname']. '</td>';
		        		$output.='<td class="text-center">'.$row['username'].' </td>';
		        		$average=0;
		        		foreach ($queryEvaluation->result_array() as $mark_name)
		        		{
		        			$mname_gs=$mark_name['evname'];
		        			$queryMvalue = $this->db->query("select * from schoolassesment where saseval='$mname_gs' and sasgrade='$gs_gradesec' and academicyear='$max_year' group by sasname order by sasid ASC");
			            	foreach ($queryMvalue->result() as $mark_name1)
			            	{
			            		$output.='<td class="text-center"></td>';
			            	}
		            	}
		            	$output.='<td style="text-align:center;"></td>';
		            	$output.='<td style="text-align:center;"><B>-</B></td>';
						$stuNO++;
					}
					$output.='</table></div>';
					$output.='<p class="text-center">'.$school_slogan.'!</p></div>';
	    		}
	    	}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
            	<i class="fas fa-check-circle"> </i> No recorded subject found.
        	</div></div>';
		}
		return $output;
	}
	function approveMark($gs_branches,$gs_gradesec,$gs_subject,$gs_quarter,$max_year){
		$output='';
		$query=$this->db->query("select id,username,fname,mname,lname from users where branch='$gs_branches' and academicyear='$max_year' and gradesec='$gs_gradesec' and status='Active' and usertype='Student' and isapproved='1' and branch='$gs_branches' order by fname,mname ASC ");
		$markname_query=$this->db->query("select ma.evaid, ma.markname, ma.mid,ma.value,ma.approved, ma.outof,sum(outof) as total_outof from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." as ma where ma.academicyear='$max_year' and ma.subname='$gs_subject' and ma.quarter='$gs_quarter' and ma.mgrade='$gs_gradesec' and ma.mbranch='$gs_branches' and approved='0' group by ma.markname order by ma.mid ASC ");
		if($markname_query->num_rows()>0)
		{   
			$output.='<h6><small>Grade :</small>'.
			$gs_gradesec.' <small>Quarter :</small>'.
			$gs_quarter.'<small> Subject :</small> '.
			$gs_subject.'</h6>';			
			$output.='<div class="table-responsive">
    		<table class="table table-borderedr table-hover" style="width:100%;">
    		<tr><th rowspan="2" class="text-center">No.</th>  <th rowspan="2" class="text-center">Student Name</th> 
        	<th rowspan="2" class="text-center">Student ID</th>';
        	foreach ($markname_query->result_array() as $mark_name) {
        		if($mark_name['approved']=='0'){
        		$output.='<th class="text-center">' .$mark_name['markname'].'
					<a href="#" value="'.$mark_name['markname'].'" class="gs_Approve_markname"> 
					<button class=" btn btn-info"> <i class="fas fa-check-circle"></i> Approve </button>
					</a> </th>';
				}else{
					$output.='<th class="text-center">' .$mark_name['markname'].'</th>';
				}
        	}
        	$output.=' </tr><tr>';
			foreach ($markname_query->result_array() as $mark_name) 
			{
        		$output.='<td class="text-center"><small>'.$mark_name['outof'].'</small></td>';
        	}
        	$output.='</tr>';
        	$output.='<input type="hidden" class="jo_gradesec" value="'.$gs_gradesec.'">
			<input type="hidden" class="jo_subject" value="'.$gs_subject.'">
			<input type="hidden" class="jo_quarter" value="'.$gs_quarter.'">
			<input type="hidden" class="jo_branch" value="'.$gs_branches.'">
			<input type="hidden" class="jo_year" value="'.$max_year.'">';
			$no=1;
			foreach ($query->result_array() as $row) 
			{ 
        		$id=$row['id'];

        		$output.='<tr><td>'.$no.'</td> <td> '.$row['fname'].' '.$row['mname'].' '.$row['lname'].'</td>
        		<td>'.$row['username'].'</td>';
        		foreach ($markname_query->result_array() as $mark_name)
        		{
        			$Evaid=$mark_name['evaid'];
        			$outOFF=$mark_name['outof'];
        			$markname=$mark_name['markname'];
        			$query_value = $this->db->query("select lockmark,value,outof,mid, markname from mark".$gs_branches.$gs_gradesec.$gs_quarter.$max_year." where markname='$markname' and stuid='$id' and subname='$gs_subject' and quarter='$gs_quarter' ");
        			if($query_value->num_rows()>0)
        			{
        				$mark_value=$query_value->row_array();
    					$outof=$mark_value['outof'];
    					$value=$mark_value['value'];
    					$lockmark=$mark_value['lockmark'];
						if($outof >= $value){
							$output.='<td class="text-center jossMark'.$mark_value['mid'].'">'.$mark_value['value'].'';
							$output.='</td>';
						}else{
							$output.='<td><span class="text-danger"> NG
								<div class="table-links"> 
								<a href="#" value="'.$mark_value['mid'].'" class="edit_mark_gs" data-toggle="modal" 
								data-target="#editmark"><span class="text-info"> Edit 
								</span></a>
							</div>
							</span></td>';
						}
        				
        			}else{
						$output.='<td class="JoMark'.$id.'">
						<input type="hidden" value="" class="my_ID">
						<span class="text-danger"> NG</span>
						<div class="table-links"> 
							<a href="#" title="'.$id.'" id="'.$outOFF.'" name="'.$markname.'" value="'.$Evaid.'" class="edit_NGmark_gs" data-toggle="modal" 
							data-target="#editngmark"><span class="text-info"> 
							<i class="fas fa-plus"></i> 
							</span></a>
						</div>
						</td>';
					}
        		}$no++;
			}
			$output.='</tr></table></div>';
		}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No new result found.
            </div></div>';
		}
		return $output;
	}
	function fetch_allnewMark($myBranch,$max_quarterr,$max_year){
		$queryGrade=$this->db->query("select gradesec,grade from users as u where u.academicyear='$max_year' and u.branch='$myBranch' group by u.gradesec order by gradesec ASC ");
    	$output='';
    	if ($queryGrade->num_rows()>0) {
    		foreach ($queryGrade->result() as $keyvalue) {
    			$gradesecs=$keyvalue->gradesec;
    			$grade=$keyvalue->grade;
    			$query_quarter = $this->db->query("select max(term) as mQuarter from quarter where Academic_year ='$max_year' and termgrade='$grade' ");
			    $row_quarter = $query_quarter->row();
			    $max_quarter=$row_quarter->mQuarter;
    			$this->db->where('approved','0');
    			$this->db->group_by('markname');
    			$this->db->group_by('mgrade');
				$this->db->from('mark'.$myBranch.$gradesecs.$max_quarter.$max_year);
				$query=$this->db->get();
				foreach ($query->result() as $row) {
					$output .='<a href="#" class="dropdown-item"> 
                  <span class="dropdown-item-desc"> 
                    <span class="message-user">
                      '.$row->markname.'('.$row->subname.') 
                    </span>
                    <span class="time messege-text">
                     '.$row->mgrade.'('.$row->mbranch.')  
                   </span>
                  </span>
                	</a> ';
				}
    		}
    	}
    	return $output;	
	}
	function fetch_unseen_newMark($myBranch,$max_quarterr,$max_year){
		$queryGrade=$this->db->query("select gradesec,grade from users as u where u.academicyear='$max_year' and u.branch='$myBranch' group by u.gradesec order by gradesec ASC ");
    	$output='';
    	if ($queryGrade->num_rows()>0) {
    		$count=0;
    		foreach ($queryGrade->result() as $keyvalue) {
    			$gradesecs=$keyvalue->gradesec;
    			$grade=$keyvalue->grade;
    			$query_quarter = $this->db->query("select max(term) as mQuarter from quarter where Academic_year ='$max_year' and termgrade='$grade' ");
			    $row_quarter = $query_quarter->row();
			    $max_quarter=$row_quarter->mQuarter;
    			$this->db->where('approved','0');
    			$this->db->group_by('markname');
    			$this->db->group_by('mgrade');
				$this->db->from('mark'.$myBranch.$gradesecs.$max_quarter.$max_year);
				$total=$this->db->count_all_results();
				$count=$count + $total;
    		}
    		$output.=$count;
    	}
    	return $output;	
	}
	function fetch_allnewAttendance($myBranch,$max_year){
		$queryGrade=$this->db->query("select u.fname,u.mname,att.absentdate,att.absentype from users as u cross join attendance as att where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$myBranch' and att.approved='0' order by gradesec ASC ");
    	$output='';
    	if ($queryGrade->num_rows()>0) {
    		foreach ($queryGrade->result() as $row) {
				$output .='<a href="'.base_url().'approveattendance/" class="dropdown-item"> 
                  <span class="dropdown-item-desc"> 
                    <span class="message-user">
                      '.$row->fname.' '.$row->mname.') 
                    </span>
                    <span class="time messege-text">
                     '.$row->absentdate.'('.$row->absentype.')  
                   </span>
                  </span>
                	</a> ';
    		}
    	}
    	return $output;	
	}
	function fetch_allnewEvaluationStaffAttendance($myBranch,$max_year){
		$queryGrade=$this->db->query("select u.fname,u.mname,att.absentdate,att.absentype from users as u cross join attendance_evaluation as att where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$myBranch' and att.approved='0' order by gradesec ASC ");
    	$output='';
    	if ($queryGrade->num_rows()>0) {
    		foreach ($queryGrade->result() as $row) {
				$output .='<a href="'.base_url().'approveattendance/" class="dropdown-item"> 
                  <span class="dropdown-item-desc"> 
                    <span class="message-user">
                      '.$row->fname.' '.$row->mname.') 
                    </span>
                    <span class="time messege-text">
                     '.$row->absentdate.'('.$row->absentype.')  
                   </span>
                  </span>
                	</a> ';
    		}
    	}
    	return $output;	
	}
	function fetch_unseen_newAttendance($myBranch,$max_year){
		$queryGrade=$this->db->query("select count(stuid) as TotStuid from users as u cross join attendance as att where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$myBranch' and att.approved='0' order by gradesec ASC ");
		$total=$this->db->count_all_results();
    	$output='';
    	if ($queryGrade->num_rows()>0) {
    		$count=0;
    		foreach ($queryGrade->result() as $keyvalue) {
    			$gradesecs=$keyvalue->TotStuid;
				$count=$count + $gradesecs;
	    		$output.=$count;
	    	}
    	}
    	return $output;	
	}
	function fetch_unseen_newStaffEvaluationAttendance($myBranch,$max_year){
		$queryGrade=$this->db->query("select count(stuid) as TotStuid from users as u cross join attendance_evaluation as att where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$myBranch' and att.approved='0' order by gradesec ASC ");
		$total=$this->db->count_all_results();
    	$output='';
    	if ($queryGrade->num_rows()>0) {
    		$count=0;
    		foreach ($queryGrade->result() as $keyvalue) {
    			$gradesecs=$keyvalue->TotStuid;
				$count=$count + $gradesecs;
	    		$output.=$count;
	    	}
    	}
    	return $output;	
	}
	function fetch_allnewAttendanceDirector($myBranch,$max_year,$user){

		$queryGrade=$this->db->query("select u.fname,u.mname,att.absentdate,att.absentype from users as u cross join attendance as att cross join directorplacement as drr where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$myBranch' and att.approved='0' and u.gradesec=drr.grade and drr.staff='$user' and drr.academicyear='$max_year' order by gradesec ASC ");
    	$output='';
    	if ($queryGrade->num_rows()>0) {
    		foreach ($queryGrade->result() as $row) {
				$output .='<a href="'.base_url().'approvemyattendance/" class="dropdown-item"> 
                  <span class="dropdown-item-desc"> 
                    <span class="message-user">
                      '.$row->fname.' '.$row->mname.') 
                    </span>
                    <span class="time messege-text">
                     '.$row->absentdate.'('.$row->absentype.')  
                   </span>
                  </span>
                	</a> ';
    		}
    	}
    	return $output;	
	}
	function fetch_unseen_newAttendanceDirector($myBranch,$max_year,$user){
		
		$output='';
		$count=0;
		$queryGrade=$this->db->query("select count(stuid) as TotStuid from users as u cross join attendance as att cross join directorplacement as drr where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$myBranch' and att.approved='0' and u.gradesec=drr.grade and drr.staff='$user' and drr.academicyear='$max_year' order by gradesec ASC ");
    	if ($queryGrade->num_rows()>0) {
    		foreach ($queryGrade->result() as $keyvalue) {
    			$gradesecs=$keyvalue->TotStuid;
				$count=$count + $gradesecs;
	    		$output.=$count;
	    	}
    	}
    	return $output;	
	}
	function fetchAttendanceForApproval($branch,$max_year){
		$queryGrade=$this->db->query("select att.stuid ,u.fname,u.mname,att.absentdate, att.absentype, att.attend_by from users as u cross join attendance as att where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$branch' and att.approved='0' order by gradesec ASC ");
		$output='';
    	if ($queryGrade->num_rows()>0) {
    		$no=1;
    		$output.='<div class="table-responsive"> 
	            <table class="table table-stripped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Action</th>
	                <th>Student Name</th>
	                <th>Date Absent</th>
	                <th>Absent Type</th>
	                <th>Recored By</th></tr>
	            </thead>';
    		foreach ($queryGrade->result() as $keyvalue) {
    			$output.='<tr id="approvedThisAttendance'.$keyvalue->stuid.'"><td>'.$no.'.</td><td> 
    			<button type="submit" class="btn btn-primary approveAttendance" value="'.$keyvalue->stuid.'" id="'.$keyvalue->absentdate.'">Approve </button> </td><td>'.$keyvalue->fname.' '.$keyvalue->mname.'</td>';
    			$output.='<td>'.$keyvalue->absentdate.'</td><td> '.$keyvalue->absentype.'</td>';
    			$output.='<td>'.$keyvalue->attend_by.'</td></tr>';
    			$no++;
	    	}
	    	$output.='</table></div>';
    	}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No data found.
            </div></div>';
    	}
    	return $output;	
	}
	function fetchAttendanceForApprovalDirector($branch,$max_year,$user){
		$queryGrade=$this->db->query("select att.stuid ,u.fname,u.mname,att.absentdate, att.absentype, att.attend_by from users as u cross join attendance as att cross join directorplacement as drr where att.academicyear='$max_year' and u.username=att.stuid and u.academicyear='$max_year' and  u.branch='$branch' and att.approved='0' and u.gradesec=drr.grade and drr.staff='$user' and drr.academicyear='$max_year' order by gradesec ASC ");
		$output='';
    	if ($queryGrade->num_rows()>0) {
    		$no=1;
    		$output.='<div class="table-responsive"> 
	            <table class="table table-stripped table-hover" style="width:100%;">
	            <thead><tr> 
	                <th>No.</th>
	                <th>Action</th>
	                <th>Student Name</th>
	                <th>Date Absent</th>
	                <th>Absent Type</th>
	                <th>Recored By</th></tr>
	            </thead>';
    		foreach ($queryGrade->result() as $keyvalue) {
    			$output.='<tr id="approvedThisAttendance'.$keyvalue->stuid.'"><td>'.$no.'.</td><td> 
    			<button type="submit" class="btn btn-primary approveAttendanceDirector" value="'.$keyvalue->stuid.'" id="'.$keyvalue->absentdate.'" >Approve </button> </td><td>'.$keyvalue->fname.' '.$keyvalue->mname.'</td>';
    			$output.='<td>'.$keyvalue->absentdate.'</td><td> '.$keyvalue->absentype.'</td>';
    			$output.='<td>'.$keyvalue->attend_by.'</td></tr>';
    			$no++;
	    	}
	    	$output.='</table></div>';
    	}else{
    		$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No data found.
            </div></div>';
    	}
    	return $output;	
	}
	function fetch_summer_academicyear($max_year){
		$output='';
		$this->db->group_by('year_name');
		$this->db->order_by('year_name','DESC');
		$this->db->where('year_name',$max_year);
		$query=$this->db->get('summer_academicyear');
		if($query->num_rows()>0) { 
            $output.='<div class="dropdown-divider"></div><div class="table-responsive">
          	<table class="table table-striped">
            <tr>
              <th>Year Name</th>
              <th>Date Created</th>
              <th>Action</th>
            </tr>';
            foreach($query->result() as $rwo){ 
                $output.='<tr class="deleteSummerAcademicYear'.$rwo->year_name.'">
                <td>'.$rwo->year_name.'E.C ('.$rwo->gyear.' G.C)</td>
                <td class="align-middle"> '.$rwo->date_created.' </td>
                <td>
                  <button class="btn btn-danger btn-action deleteSummerAcademicYearNow" value="'.$rwo->year_name.'" type="submit">
                    <i class="fas fa-trash-alt"></i> Delete Year
                  </button>
                </td>
                </tr>';
            } 
            $output.='</table>
            </div>';
        }else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No data found.
            </div></div>';
		}
		return $output;
	}
	function deleteSummerAcademicYear($id){
		$this->db->where(array('year_name'=>$id));
		$this->db->delete('summer_academicyear');
	}
	function load_grade_level($max_year){
		$output='';
		$this->db->where('academicyear',$max_year);
		$this->db->where('usertype','Student');
		$this->db->where('grade!=','');
		$this->db->where('status','Active');
		$this->db->where('isapproved','1');
		$this->db->group_by('grade');
		$this->db->order_by('grade','ASC');
		$query=$this->db->get('users');
		if($query->num_rows()>0){
			$output.='<div class="row"> <div class="col-md-6 col-6"> 
			<label>Pre Grade</label>
			<select class="custom-select" required="required" name="pre_grade" id="pre_grade">
                    <option> --- Select grade --- </option>';
            foreach($query->result() as $row){
				$output .='<option value="'.$row->grade.'">'.$row->grade.'</option>';
			}
            $output.='</select></div>
            <div class="col-md-6 col-6"><label>Next Grade</label><br>';
			foreach($query->result() as $row){
				$output .='<div class="pretty p-icon p-smooth">
          			<input class="next_grade" id="'.$row->grade.'" name="next_grade" type="checkbox" value="'.$row->grade.'">
          	  		<div class="state p-success">
                		<i class="icon fa fa-check"></i>
                		<label></label>'.$row->grade.'
              		</div>
      			</div>';
			}
			$output.='</div><div class="col-md-12 col-12"> 
			<button class="btn btn-info pull-right saveGradeLevel" id="saveGradeLevel" type="submit">Save Level</button>
			</div></div> ';
			$queryFetch=$this->db->query("select * from grade_level group by pre_grade ");
			if($queryFetch->num_rows()>0){
				$output.='<div class="row">';
				foreach($queryFetch->result() as $rowData){
					$preGrade=$rowData->pre_grade;
					$output.='<div class="col-md-6 col-6 StudentViewTextInfo"><h4>'.$rowData->pre_grade.' <i class="fas fa-angle-right"></i> ';
					$queryNext=$this->db->query("select next_grade from grade_level where pre_grade='$preGrade' group by next_grade order by next_grade ASC ");
					if($queryNext->num_rows()>0){
						foreach($queryNext->result() as $rowNext){
							$output.='<button class="btn btn-light btn-sm removeGradeLevel'.$rowData->pre_grade.''.$rowNext->next_grade.'" id="removeGradeLevel" value="'.$rowNext->next_grade.'" name="'.$rowData->pre_grade.'">'.$rowNext->next_grade.'<i class="fas fa-times-circle"></i></button>';
						}
					}
					$output.='</h4></div>';
				}
				$output.='</div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-circle"> </i> No student data found.
            </div></div>';
		}
		return $output;
	}
	function fetch_dropout_staffs(){ 
		$this->db->order_by('users.fname,users.mname,users.lname','ASC');
		$this->db->group_by('users.username');
		$this->db->where('users.status','Inactive');
		$this->db->select('users.fname,users.mname,users.lname,users.profile ,users_dropped.dated_dropped, users_dropped.dropped_by,users.id');
		$this->db->from('users_dropped');
		$this->db->join('users',
		'users.username=users_dropped.username');
		$query = $this->db->get();
    	$output='';
    	if($query->num_rows()>0){
    		$output.='<div class="row">
    		<div class="col-md-12 col-12">
    			<div class="badge badge-pill badge-light mb-1 float-right">
    			Select All <input type="checkbox" id="selectAllStaffsToActive" onClick="selectAllStaffsToActive()">Action
                  	<div class="btn-group dropleft">
                        <a href="#" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> 
                          <i class="fas fa-ellipsis-h fa-sm fa-fw text-gray-400"></i>
                        </a>
                        <div class="dropdown-menu">
                          <a class="dropdown-item has-icon">
                           <button class="btn btn-default ActiveCustomStaffs"> <i class="fas fa-user-check"></i> Make Active</button>
                          </a>
                        </div>
          			</div>
          		</div>
          	</div>
    		';
    		foreach($query->result() as $rowPost){
    			$id=$rowPost->id; 
				$fName=$rowPost->fname;
				$fMame=$rowPost->mname;
	    		$output.='
	    		<div class="col-md-6 col-12">
	    			<div class="card">
	    				<div class="card-header StudentViewTextInfo active_thisStaff'.$id.'">';
			                $output.=' <div class="support-ticket media pb-1 mb-3">';
								if($rowPost->profile==''){
					                $output.='<img alt="Profile" src="'.base_url().'/profile/defaultProfile.png" style="width:50px;height:50px" class=" pull-right">';
								}else{
									$output.='<img alt="Profile" src="'.base_url().'/profile/'.$rowPost->profile.'" style="width:50px;height:50px" class="pull-right">';
								}
		                    	$output.='<div class="media-body ml-3">
		                      		<div class="badge badge-pill badge-light mb-1 float-right"><input type="checkbox" class="activeThisStaffsList" id="activeThisStaffsList" name="activeThisStaffsList[ ]" value="'.$rowPost->id.'">
				                      	
		                      		</div>
		                      		<span class="font-weight-bold">'.$fName.' '.$fMame.' <span class=" badge badge-info">Inactive</span></span>
				                      <br>
				                      <small class="text-muted">Dropped by <span class="font-weight-bold font-13">'.$rowPost->dropped_by.'</span> '.$rowPost->dated_dropped.'</small>
		                    	</div>
		                  	</div>
			            </div>
		            </div>
	            </div> ';
    		}
    		$output.='</div>';
    	}else{
    		$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                   
                <i class="fas fa-exclamation-triangle"> </i> No dropped staffs found.
            </div></div>';
    	}
    	return $output;
	}
	function fetch_dropout_students(){ 
		$this->db->order_by('users.fname,users.mname,users.lname','ASC');
		$this->db->group_by('users.username');
		$this->db->where('users.status','Inactive');
		$this->db->where('users.isapproved','1');
		$this->db->where('users.usertype','Student');
		$query = $this->db->get('users');
    	$output='';
    	if($query->num_rows()>0){
    		$output.='<div class="row">';
    		foreach($query->result() as $rowPost){
    			$id=$rowPost->id; 
				$fName=$rowPost->fname;
				$fMame=$rowPost->mname;
				$lMame=$rowPost->lname;
	    		$output.='
	    		<div class="col-md-4 col-12">
	    			<div class="card">
	    				<div class="card-header StudentViewTextInfo">';
			                $output.=' <div class="support-ticket media pb-1 mb-3">';
			                    if($rowPost->profile == ''){
									$output.='<img alt="Pic" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2">';
								}else{
									$output.='<img alt="Pic" src="'.base_url().'/profile/'.$rowPost->profile.'" class="user-img mr-2">';
								}
		                    	$output.='<div class="media-body">
		                      		<span class="font-weight-bold">'.$fName.' '.$fMame.' '.$lMame.'</span>
				                      <p class="my-1">
				                      <small class="text-muted"><span class="font-weight-bold font-13"></span> </small>
				                      </p>
		                    	</div>
		                  	</div>
			            </div>
		            </div>
	            </div> ';
    		}
    		$output.='</div>';
    	}else{
    		$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                   
                <i class="fas fa-exclamation-triangle"> </i> No dropped student found.
            </div></div>';
    	}
    	return $output;
	}
	function check_this_period_Names($academicyear,$subject,$quarter,$assesname,$markGradeSec,$markGradeSecBranch){
		$this->db->where(array('mgrade'=>$markGradeSec));
		$this->db->where(array('subname'=>$subject));
		$this->db->where(array('quarter'=>$quarter));
		$this->db->where(array('markname'=>$assesname));
		$this->db->where(array('academicyear'=>$academicyear));
		$this->db->where(array('mbranch'=>$markGradeSecBranch));
		$querystu=$this->db->get('mark'.$markGradeSecBranch.$markGradeSec.$quarter.$academicyear);
		$output='';
		if($querystu->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function loadTimeTable(){
		$output='';
		$queryPeriod=$this->db->query("select * from period_names group by period_name order by period_name ASC ");
		if($queryPeriod->num_rows()>0){
			$output.='<div class="row">';
			foreach($queryPeriod->result() as $row){
				$output.='<input type="hidden" id="period_gs_ID" 
				name="period_gs_ID" value="'.$row->period_name.'"> ';
	           $output.='
	           <div class="col-12 col-md-12 form-group">
	           <div class="StudentViewTextInfo">
	           <div class="row" id="delete_this_period_name'.$row->period_name.'">' ;
	           $output.='<div class="col-12 col-md-2"><h4 class="card-header">
	            Period '.$row->period_name.'</h4></div>';
	           $output.='<div class="col-5 col-md-4 form-group">
	           <label>Start Time</label>
	           <input type="time" class="form-control" name="start_gs_Time" id="start_gs_Time" value="'.$row->start_time.'"placeholder="Period '.$row->period_name.' start time..." required></div>';
	           $output.='<div class="col-5 col-md-4 form-group">
	           <label>End Time</label>
	           <input type="time" class="form-control" name="end_gs_Time" id="end_gs_Time" value="'.$row->end_time.'" placeholder="Period '.$row->period_name.' end time..." required></div>';
	           $output.='<div class="col-2 col-md-2">
	           <button type="submit" class="btn btn-danger btn-sm" name="deletePeriodNames" id="deletePeriodNames" value="'.$row->period_name.'" > <i class="fas fa-trash-alt"></i></button></div>';
	           $output.='</div></div></div>';
			}
			 $output.='<div class="col-12 col-md-12 form-group">
	       	<button class="btn btn-success pull-right" id="updatePeriodNames" type="submit">Update Period Names
	        </button></div>';
	        $output.='</div>';
		}else{
			$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">                   
                <i class="fas fa-exclamation-triangle"> </i> No record found.
            </div></div>';
	    }
	    
		return $output;
	}
	function create_periods($periods){
		$output='';
		$periodNames=0;
		$output.='<form method="POST" id="save_gs_periods">
		<div class="row">';
		for ($i=1; $i<=$periods;$i++) {
			$queryPeriod=$this->db->query("select * from period_names group by period_name order by period_name ASC ");
			if($queryPeriod->num_rows()>0){
				$queryPeriodNames = $this->db->query("select max(period_name) as periodNames from period_names");
	        	$rowPeriod = $queryPeriodNames->row();
	        	$periodNames=($rowPeriod->periodNames) + 1;
			}else{
				$periodNames=$periodNames + 1;
			}
			$output.='<input type="hidden" id="periodID" 
			name="period_ID" value="'.$periodNames.'"> ';
           	$output.='<div class="col-12 col-md-12 form-group">
           	<div class="StudentViewTextInfo">
           	<div class="row">' ;
           	$output.='<div class="col-4 col-md-4"><h4 class="card-header">
            Period '.$periodNames.'</h4> </div>';
           	$output.='<div class="col-4 col-md-4 form-group">
           	<label>Start Time</label>
           	<input type="time" class="form-control" name="start_Time" id="start_Time" placeholder="Period '.$periodNames.' start time..." required></div>';
           	$output.='<div class="col-4 col-md-4 form-group">
           	<label>End Time</label>
           	<input type="time" class="form-control" name="end_Time" id="end_Time" placeholder="Period '.$periodNames.' end time..." required></div>';
           	$output.='</div></div></div>';
        }
        $output.='<div class="col-12 col-md-12 form-group">
       	<button class="btn btn-primary pull-right" id="savePeriodNames" type="submit">Save Period Names
        </button></div>';
	    
	    $output.='</div></form>';
		return $output;
	}
	function insert_period_data($periodID,$startTime,$endTime)
	{
		$data=array();
		for ($i=0; $i < count($periodID);) {  
            if(!empty($startTime[$i]) && !empty($endTime[$i])){
                $queryPeriodNames = $this->db->query("select max(period_name) as period_Names from period_names");
                if($queryPeriodNames->num_rows()>0){
                    $rowPeriod = $queryPeriodNames->row();
                    $periodNames=($rowPeriod->period_Names)+1;
                }else{
                    $periodNames= 1;
                }
                $id=$periodID[$i];
                $start_Time=$startTime[$i];
                $end_Time=$endTime[$i];
                $data=array(
                    'period_name'=>$periodNames,
                    'start_time'=>$start_Time,
                    'end_time'=>$end_Time
                ); 
                $query=$this->db->insert('period_names',$data);
            }
            $i++;
        }
        if(!empty($data)){
            if($query){
                echo '1';
            }else{
                echo '0';
            }
            $data=array();
        }
	}
	function delete_period_names($periods){
		$this->db->where('period_name',$periods);
		$query=$this->db->delete('period_names');
	}
	function timeTable($max_year,$dayValue,$branch){
		$output ='';
		$items = array();
		$items_days=array();
		foreach($dayValue as $days_selecteds){
			$items[] = $days_selecteds;
		}
		shuffle($items);
		$queryPeriod=$this->db->query("select * from period_names ORDER BY RAND() ");
		if($queryPeriod->num_rows()>0){
			$queryPlacement=$this->db->query("SELECT st.staff,st.date_created,st.lessons_week, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname,st.status from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and branch='$branch' and us.status='Active' and us.isapproved='1' GROUP by st.staff ORDER BY RAND()");
			if($queryPlacement->num_rows()>0){
				foreach($queryPeriod->result_array() as $query_Period){
					$items_days[] =$query_Period['period_name'];
				}
				shuffle($items_days);
				foreach ($items_days as $periodNames) {
					foreach($items as $days_selected){
						foreach ($queryPlacement->result() as $placeValue) {
							$staff=$placeValue->staff;
							$queryPlacementGroup=$this->db->query("select * from staffplacement where academicyear='$max_year' and staff='$staff' group by grade ORDER BY RAND() ");
							foreach ($queryPlacementGroup->result() as $placeValueGrade) {
								$grade=$placeValueGrade->grade;
								$countCredits=$this->db->query("SELECT sum(lessons_week) as totalCredit from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and us.branch='$branch' and st.grade='$grade' and us.status='Active' and us.isapproved='1' ");
								$countCredit=0;
								foreach($countCredits->result() as $rowcredit){
									$countCredit=$rowcredit->totalCredit;
								}
								$queryPlacementSubject=$this->db->query("select * from staffplacement where academicyear='$max_year' and staff='$staff' and grade='$grade' and status='1' group by subject ORDER BY RAND() ");
								foreach ($queryPlacementSubject->result() as $placeValueSubject) {
									$subject=$placeValueSubject->subject;
									$queryCheckLesson=$this->db->query("SELECT lessons_week from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and us.branch='$branch' and st.grade='$grade' and subject='$subject' and us.status='Active' and us.isapproved='1' ");
									$totalLessons=$queryCheckLesson->row_array();
									$weekLesson=$totalLessons['lessons_week'];

									$queryCheckSubject=$this->db->query("select subject from timetable where grade='$grade' and subject='$subject' and t_branch='$branch' ");
									$week_Lesson=$queryCheckSubject->num_rows();	
									for($i=1;$i<=$countCredit;$i++){
										for($j=1;$j<=$weekLesson;$j++){
											if($week_Lesson < $weekLesson){
												$checkTimeTable=$this->db->query("select * from timetable where lessonday='$days_selected' and grade='$grade' and period='$periodNames' and t_branch='$branch' ");
												if($checkTimeTable->num_rows()<1){
													$queryStaff=$this->db->query("select * from timetable where lessonday='$days_selected' and teacher='$staff' and period='$periodNames' and t_branch='$branch' ");
													if($queryStaff->num_rows()<1){
														$data=array(
															'grade'=>$grade,
															'teacher'=>$staff,
															'subject'=>$subject,
															'lessonday'=>$days_selected,
															'period'=>$periodNames,
															't_branch'=>$branch
														);
														$queryInsert=$this->db->insert('timetable',$data);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				if($queryInsert){
					$output .='<div class="alert alert-light alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-check-circle"> </i> Timetabe generated successfully.
	            </div></div>';
				}
			}else{
				$output .='<div class="alert alert-warning alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-check-circle"> </i> No Teacher placement found.
	            </div></div>';
			}
		}
		return $output;
	}
	function fetch_lessons_per_week($max_year){
		$query=$this->db->query("SELECT st.staff,st.date_created,st.lessons_week, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and us.status='Active' and us.isapproved='1' GROUP by st.staff ORDER BY us.fname,us.mname,us.lname ASC");
		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
			foreach ($query->result() as $staffplacements) {
				$staffs=$staffplacements->staff;
				$queryCount=$this->db->query("SELECT * from staffplacement where staff='$staffs' and academicyear ='$max_year' ");
				$countRow=$queryCount->num_rows() + 1;

				$countLessons=$this->db->query("SELECT SUM(lessons_week) AS lessons_weeks FROM staffplacement where staff='$staffs' and academicyear ='$max_year' ");
				$count_Row=$countLessons->row();
				$total_Lessons=$count_Row->lessons_weeks;
				$output.='<div class="col-lg-12 col-12">
					<div class="activities">
						<div class="activity delete_directorplacementRow'.$staffplacements->staff.'">
		                    <div class="activity-icone text-white support-ticket">';
		                    if($staffplacements->profile!=''){
		                        $output.='<img class="user-img" src="'.base_url().'profile/'.$staffplacements->profile.'" width="40">';
		                    }else{
		                        $output.='<img class="user-img" src="'.base_url().'profile/defaultProfile.png" width="40">';
		                    }
                    		$output.='</div>
                    		<div class="activity-detail">
		                    	<div class="mb-2">
		                      		<a class="text-job" href="#">'.$staffplacements->fname.' '.$staffplacements->mname.'</a>
		                        	<span class="pull-right text-muted">Credit Hour <span class="badge badge-primary" id="count_total_lessons'.$staffs.'" title="Staff credit hour">'.$total_Lessons.'</span></span>
                      			</div>';
		                      	$queryGrade=$this->db->query("select * from staffplacement where academicyear='$max_year' and staff='$staffs' ");
								if($queryGrade->num_rows()>0){
									foreach($queryGrade->result() as $grades){
										$gradess=$grades->grade;
										$subject=$grades->subject;
										$countLessons_Grade=$this->db->query("SELECT SUM(lessons_week) AS lessons_week_grade FROM staffplacement where grade='$gradess' and academicyear ='$max_year' and status='1' ");
										$count_Row_grade=$countLessons_Grade->row();
										$total_Lessons_grade=$count_Row_grade->lessons_week_grade;
										$output.='<span class="badge badge-default StudentViewTextInfo">';
										if($grades->status == '1'){
						          			$output.='<div class="pretty p-switch" title="Subject status Active">
							                    <input type="checkbox" checked="checked" id="'.$grades->subject.'" name="subject_timetable_status" value="'.$grades->grade.'" class="'.$grades->academicyear.'" />
							                    <div class="state p-info">
							                        <label></label>
							                      </div>
							                </div>';
						          		}else{
						          			$output.='<div class="pretty p-switch" title="Subject status Inactive">
							                    <input type="checkbox" id="'.$grades->subject.'" name="subject_timetable_status" value="'.$grades->grade.'" class="'.$grades->academicyear.'"/>
							                   <div class="state p-info">
						                        <label></label>
						                      </div>
							                </div>';
						          		}
										$output.=' '.$gradess.' '.$grades->subject.'
										<select class="selectLessonWeek" id="selectLessonWeek" name="selectLessonWeek" title="Subject credit hour per week">';
										for($i=1; $i<=10;$i++){
											if($grades->lessons_week==$i){
												$output.='<option selected="selected" id="'.$grades->academicyear.'" class="'.$grades->grade.'" name="'.$grades->subject.'" value="'.$i.'" title="'.$staffs.'">'.$i.'</option>'; 
											}else{
												$output.='<option id="'.$grades->academicyear.'" class="'.$grades->grade.'" name="'.$grades->subject.'" value="'.$i.'" title="'.$staffs.'">'.$i.'</option>';  
											}
										}
										$output.='</select><br><small class="text-muted">Grade Credit Hours <span class="badge badge-light count_total_grade_credit" id="count_total_grade_credit'.$gradess.'" name="count_total_grade_credit'.$gradess.'" value="'.$gradess.'" title="Grade credit hour per week">'.$total_Lessons_grade.' </span></small></span>';
									}
								}
                    		$output.='</div>
                  		</div>
              		</div>
              	</div>';	
	        }
	        $output.='</div>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
            	<div class="alert-body">
                	<button class="close"  data-dismiss="alert">
                    	<span>&times;</span>
                	</button>
            		<i class="fas fa-exclamation-circle"> </i> No record found.
            	</div>
            </div>';
		}
		return $output;
	}
	function update_lessons_per_week($value,$academicyear,$subject,$grade,$data){
		$this->db->where('academicyear',$academicyear);
		$this->db->where('grade',$grade);
		$this->db->where('subject',$subject);
		$query=$this->db->get('staffplacement');
		$output='';
		if($query->num_rows() > 0){
			$queryCountPeriod=$this->db->query("select period_name from period_names group by period_name ");
			if($queryCountPeriod->num_rows()>0){
				$totalPeriod=$queryCountPeriod->num_rows();
				$queryDays=$this->db->query("select timetable_days from timetable_days group by timetable_days ");
				if($queryDays->num_rows()>0){
					$totalDays=$queryDays->num_rows();
					$queryCheckCredit=$this->db->query("select sum(lessons_week) as insertedCredit from staffplacement where academicyear='$academicyear' and grade='$grade' and status='1' ");
					$queryRow=$queryCheckCredit->row();
					$availableCredit=$queryRow->insertedCredit;
					$totalCredit=$totalDays * $totalPeriod;
					/*if($availableCredit <= $totalCredit ){*/
						$querySubjectCredit=$this->db->query("select lessons_week from staffplacement where academicyear='$academicyear' and grade='$grade' and subject='$subject' ");
						$queryRowSub=$querySubjectCredit->row();
						$subjectCredit=$queryRowSub->lessons_week;
						$newAvailableCredit1=$availableCredit - $subjectCredit;
						$newAvailableCredit=$newAvailableCredit1 + $value;
						if($newAvailableCredit <= $totalCredit){
							$this->db->where('academicyear',$academicyear);
							$this->db->where('grade',$grade);
							$this->db->where('subject',$subject);
							$this->db->set('lessons_week',$value);
							$queryy=$this->db->update('staffplacement');
							if($queryy){
								$output.='1';
							}else{
								$output.='0';
							} 
						}else{
							$output.='0';
						}
					/*}else{
						$output.='0';
					}*/
				}else{
					$output.='0';
				}
			}else{
				$output.='0';
			}
		}else{
			$output.='0';
		}
		return $output;
	}
	function printType_eachClass($branch){
		$output='';
		$queryFetch=$this->db->query("select * from timetable where t_branch='$branch' group by grade order by grade ASC ");
		if($queryFetch->num_rows()>0){
			foreach($queryFetch->result()  as $row){
				$grade=$row->grade;
				$output.='<h2 class="text-center">'.$row->grade.'</h2>';
				$queryPeriod=$this->db->query("select * from period_names ORDER BY period_name ASC ");
				if($queryPeriod->num_rows()>0){
					$output.='<div style="page-break-inside:avoid;page-break-after: always;">
					<div class="table-responsive">
          			<table class="tabler table-bordered" style="width:100%;height:90%">
            		<tr><th></th>';
					foreach($queryPeriod->result() as $periodinfo){
						 $output.='<th class="text-center"><b>'.$periodinfo->period_name.'</b><br>'.$periodinfo->start_time.'-'.$periodinfo->end_time.'</th>';
					}
					$output.='</tr>';
					$queryDetails=$this->db->query("select * from timetable_days group by timetable_days order by id ASC ");
					foreach($queryDetails->result() as $dataRow){
						$output.='<tr><td><h3>'.$dataRow->timetable_days.'</h3></td>';
						$dayName=$dataRow->timetable_days;
						foreach($queryPeriod->result() as $periodinfo){
							$periodName=$periodinfo->period_name;
							$queryInfo=$this->db->query("select * from timetable where grade='$grade' and lessonday='$dayName' and period='$periodName' and  t_branch='$branch' ");
							if($queryInfo->num_rows()>0){
								foreach($queryInfo->result() as $rowData){
									$output.='<td class="text-center" style="white-space: wrap;word-wrap: break-word;color:#fff;background-color:#'.rand(100000, 999999).'">'.$rowData->subject.'<br>'.$rowData->teacher.' </td>';
								}
							}else{
								$output.='<td></td>';
							}
						}
						$output.='</tr>';
					}
				}
				$output.='</table></div><small class="pull-right">GRANDSTANDE TECHNOLOGIES</small>
				<small class="pull-left">Generated on '.date('M/d/Y').'</small></div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No timeTable found.
        	</div></div>';
		}
		return $output;
	}
	function editType_eachClass($branch){
		$output='';
		$queryFetch=$this->db->query("select * from timetable where t_branch='$branch' group by grade order by grade ASC ");
		if($queryFetch->num_rows()>0){
			foreach($queryFetch->result()  as $row){
				$grade=$row->grade;
				$output.='<h2 class="text-center">'.$row->grade.'</h2>';
				$queryPeriod=$this->db->query("select * from period_names ORDER BY period_name ASC ");
				if($queryPeriod->num_rows()>0){
					$output.='<div style="page-break-inside:avoid;page-break-after: always;">
					<div class="table-responsive">
          			<table class="tabler table-bordered" style="width:100%;height:90%">
            		<tr><th></th>';
					foreach($queryPeriod->result() as $periodinfo){
						 $output.='<th class="text-center"><b>'.$periodinfo->period_name.'</b><br>'.$periodinfo->start_time.'-'.$periodinfo->end_time.'</th>';
					}
					$output.='</tr>';
					$queryDetails=$this->db->query("select * from timetable_days group by timetable_days order by id ASC ");
					foreach($queryDetails->result() as $dataRow){
						$output.='<tr><td><h3>'.$dataRow->timetable_days.'</h3></td>';
						$dayName=$dataRow->timetable_days;
						foreach($queryPeriod->result() as $periodinfo){
							$periodName=$periodinfo->period_name;
							$queryInfo=$this->db->query("select * from timetable where grade='$grade' and lessonday='$dayName' and period='$periodName' and  t_branch='$branch' ");
							if($queryInfo->num_rows()>0){
								foreach($queryInfo->result() as $rowData){
									$output.='<td class="text-center hideSlowTab'.$rowData->subject.''.$rowData->grade.''.$periodName.''.$dayName.''.$branch.'" style="white-space: wrap;word-wrap: break-word;color:#fff;background-color:#'.rand(100000, 999999).'">'.$rowData->subject.' <button class="btn btn-danger btn-sm delete_thisPeriod" id="'.$rowData->subject.'" name="'.$rowData->grade.'" value="'.$periodName.'" data-day="'.$dayName.'" data-branch="'.$branch.'"><i class="fas fa-times-circle"></i></button> <br>'.$rowData->teacher.' </td>';
								}
							}else{
								$output.='<td class="text-center"><button class="btn btn-success btn-sm editDelete_timetable_period" data-toggle="modal" data-target="#editDelete_timetable_period" id="'.$branch.'" name="'.$dayName.'" value="'.$periodName.'" day-grade="'.$grade.'"><i class="fas fa-plus-circle"></i></button> </td>';
							}
						}
						$output.='</tr>';
					}
				}
				$output.='</table></div></div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No timeTable found.
        	</div></div>';
		}
		return $output;
	}
	public function fetch_timetale_toedit($grade,$branch,$period,$dayName,$max_year)
	{
		$output='';
		$queryFetch=$this->db->query("select * from timetable where t_branch='$branch' and grade='$grade' and lessonday='$dayName' and period='$period' ");
		if($queryFetch->num_rows()<1){
			$queryStaffs=$this->db->query("SELECT st.staff,st.date_created,st.lessons_week, st.subject,st.grade,us.profile,us.fname,us.mname,us.lname,us.username from staffplacement as st cross join users as us where st.staff=us.username and st.academicyear ='$max_year' and us.branch='$branch' and us.status='Active' and us.isapproved='1' GROUP by st.staff ORDER BY us.fname,us.mname,us.lname ASC");
			$output.='<form method="POST" id="submitEdittedTimetablePeriod"> 
			<input type="hidden" name="timetableGrade" id="timetableGrade" value="'.$grade.'">
			<input type="hidden" name="editedtimetableBranch" id="editedtimetableBranch" value="'.$branch.'">
			<input type="hidden" name="timetablePeriod" id="timetablePeriod" value="'.$period.'">
			<input type="hidden" name="timetableDayName" id="timetableDayName" value="'.$dayName.'">
			<input type="hidden" name="timetableyear" id="timetableyear" value="'.$max_year.'">
			<div class="row">
				<div class="form-group col-lg-4 col-12">
	            	<label>Select Staff</label>
	            	<select class="form-control" id="selectEditetdPeriodStaff" name="selectEditetdPeriodStaff" required>
	            	<option></option>';
	                if($queryStaffs->num_rows()>0){
	                	foreach($queryStaffs->result() as $staff) {
	                		$output.='<option value="'.$staff->username.'">'.$staff->fname.' '.$staff->mname.' ('.$staff->username.')</option>';
	                	}
	                }
	                $output.='</select>
	            </div>
              	<div class="form-group col-lg-4 col-12">
            		<label>Select Subject</label>
		            <select class="form-control" id="selectEditetdPeriodSubject" name="selectEditetdPeriodSubject" required>
		            	
		            </select>
            	</div>
	        </div>
	        <button class="btn btn-success pull-right" type="submit" id="saveEditedTimeTable"> Save Changes </button>
	        </form>';
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, Timetable found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_subject_for_staffs($staff,$grade,$max_year){
		$output='';
		$querySubject=$this->db->query("select subject from staffplacement where staff='$staff' and academicyear='$max_year' and grade='$grade' ");			
        if($querySubject->num_rows()>0){
        	$output.='<option> </option>';
        	foreach($querySubject->result() as $subvalue) {
        		$output.='<option value="'.$subvalue->subject.'">'.$subvalue->subject.'</option>';
        	}
        }         
		else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, subject found.
        	</div></div>';
		}
		return $output;
	}
	function printType_eachTeacher($branch){
		$output='';
		$queryFetch=$this->db->query("select * from timetable where t_branch='$branch' group by teacher order by teacher ASC ");
		if($queryFetch->num_rows()>0){
			foreach($queryFetch->result()  as $row){
				$teacher=$row->teacher;
				$output.='<h2 class="text-center">'.$row->teacher.'</h2>';
				$queryPeriod=$this->db->query("select * from period_names ORDER BY period_name ASC ");
				if($queryPeriod->num_rows()>0){
					$output.='<div style="page-break-inside:avoid;page-break-after: always;">
					<div class="table-responsive">
          			<table class="tabler table-bordered" style="width:100%;height:90%">
            		<tr><th></th>';
					foreach($queryPeriod->result() as $periodinfo){
						 $output.='<th class="text-center"><b>'.$periodinfo->period_name.'</b><br>'.$periodinfo->start_time.'-'.$periodinfo->end_time.'</th>';
					}
					$output.='</tr>';
					$queryDetails=$this->db->query("select * from timetable_days group by timetable_days order by id ASC ");
					foreach($queryDetails->result() as $dataRow){
						$output.='<tr><td><h3>'.$dataRow->timetable_days.'</h3></td>';
						$dayName=$dataRow->timetable_days;
						foreach($queryPeriod->result() as $periodinfo){
							$periodName=$periodinfo->period_name;
							$queryInfo=$this->db->query("select * from timetable where teacher='$teacher' and lessonday='$dayName' and period='$periodName' and t_branch='$branch'");
							if($queryInfo->num_rows()>0){
								foreach($queryInfo->result() as $rowData){
									$output.='<td class="text-center" style="white-space: wrap;word-wrap: break-word;color:#fff;background-color:#'.rand(100000, 999999).'">'.$rowData->subject.'<br>'.$rowData->grade.' </td>';
								}
							}else{
								$output.='<td></td>';
							}
						}
						$output.='</tr>';
					}
				}
				$output.='</table></div><small class="pull-right">GRANDSTANDE TECHNOLOGIES</small>
				<small class="pull-left">Generated on '.date('M/d/Y').'</small></div>';
			}
		}else{
			$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No timeTable found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_timetable_days(){
		$output='';
		$arrayDays=array('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday');
		$output.='<label>Class Days <i class="fas fa-chevron-right"></i>&nbsp; &nbsp;</label>';
		foreach($arrayDays as $daysName){
			$queryFetch=$this->db->query("select * from timetable_days where timetable_days='$daysName' ");
			if($queryFetch->num_rows()>0){
					$output.='
		            <span class="font-weight-bold">
		              <div class="pretty p-icon p-smooth">
		                <input type="checkbox" checked="checked" name="days" value="'.$daysName.'" class="timetableDaySelection" id="customCheck1">
		                <div class="state p-success">
		                  <i class="icon fa fa-check"></i>
		                  <label></label>'.$daysName.'
		                </div>
		              </div>
		            </span> ';

			}else{
				$output.='
	            <span class="font-weight-bold">
	              <div class="pretty p-icon p-smooth">
	                <input type="checkbox" name="days" value="'.$daysName.'" class="timetableDaySelection" id="customCheck1">
	                <div class="state p-success">
	                 <i class="icon fa fa-check"></i>
	                  <label></label>'.$daysName.'
	                </div>
	              </div>
	            </span> ';
			}
		}
        return $output;
	}
	function check_payment($username,$max_year){
		$query=$this->db->query("select customer_name from transactions where academicyear='$max_year' and customer_name='$username' and payment_name='gs-sms-feature' ");
		return $query;
	}
	function check_category($categoryName,$categoryID){
		$query=$this->db->query("select category_name from stock_category where category_name='$categoryName' ");
		return $query;
	}
	function view_saved_category($postData=null){
     $response = array();
     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (category_name like '%".$searchValue."%' or category_id like '%".$searchValue."%' or category_owner like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('stock_category')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('stock_category')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $records = $this->db->get('stock_category')->result();
     $data = array();
     foreach($records as $record ){
     	$id=$record->id;
    	$data[] = array( 
           "category_id"=>$record->category_id,
           "category_name"=>$record->category_name,
           "owner_category"=>$record->category_owner,
           "date_created"=>$record->date_created,
           "Action"=>'<a class="btn btn-primary btn-action mr-1" id="editThisCategoryName" value="'.$record->category_name.'" type="submit" data-toggle="modal" data-target="#category_editingplace__here"> <i class="fas fa-pencil-alt"></i> </a>
                <a class="btn btn-danger btn-action" id="deleteThisCategoryName" value="'.$record->category_name.'" type="submit"><i class="fas fa-trash"></i></a>',

        ); 
     }
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
	}
	function edit_this_category_name($category_name){
		$output='';
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$queryUsers=$this->db->get('users');

		$this->db->where(array('category_name'=>$category_name));
		$query=$this->db->get('stock_category');
		foreach($query->result() as $taskName){
			$output.='<hr><form method="POST" id="submiteditedCategoryName">
			<input type ="hidden" name="hiddenUpdatedCategoryName" value="'.$category_name.'"> 
            <div class="row">
              <div class="form-group col-lg-4 col-6">
                <label>Category ID</label>
                <input type="text" class="form-control" name="editedCategoryID" value="'.$taskName->category_id.'" required>
              </div>
              <div class="form-group col-lg-4 col-6">
                <label>Category Name</label>
                 <input type="text" class="form-control" name="editedCategoryName" value="'.$taskName->category_name.'" required>';
                $output.='
              </div>
              <div class="form-group col-lg-4 col-12">
                <label>Category Head</label>
                <select class="form-control" id="editedcategory_owner" name="editedcategory_owner" required>';
                if($queryUsers->num_rows()>0){
                	foreach($queryUsers->result() as $staff) {
                		if($staff->username==$taskName->category_owner){
                			$output.='<option value="'.$staff->username.'" selected="selected">'.$staff->fname.' '.$staff->mname.' '.$staff->username.'</option>';
                		}else{
                			$output.='<option value="'.$staff->username.'">'.$staff->fname.' '.$staff->mname.' '.$staff->username.'</option>';
                		}
                		
                	}
                }
                $output.='</select>
              </div>
            </div>
            <button class="btn btn-success pull-right" type="submit" id="saveEditedCategory"> Save Changes </button>
          </form>';
		}
		return $output;
	}
	function fetch_form_toadd_new_item(){
		$output='';
		$query=$this->db->get('stock_category');
		if($query->num_rows()>0){
			$queryBranch=$this->db->query("select * from branch group by name order by name ASC ");
			$output.='<form method="POST" id="saveNew_categoryItem" class="saveNew_categoryItem" name="saveNew_categoryItem">
            <div class="form-group">
              <div class="search-element">
                <div class="row">
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Category</label>
                    <select class="form-control" id="item_category" name="item_category" required>
                    <option></option>';
                    foreach($query->result() as $taskName){
                    	$output.='<option value="'.$taskName->category_name.'">'.$taskName->category_name.'</option>';
                    }
                    $output.='</select>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item ID(Serial no)</label>
                    <input id="item_id" type="text" class="form-control" required="required" name="item_id" placeholder="Item ID...">
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Name</label>
                    <input id="item_name" type="text" class="form-control" required="required" placeholder="Item name..." name="item_name"autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Type/Color</label>
                    <input id="item_type_color" type="text" class="form-control" required="required" placeholder="Item type,color..." name="item_type_color"autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Service</label>
                    <select class="form-control" id="item_service" name="item_service" required>
                    <option></option>
                    <option>Permanent</option>
                    <option>Temporary</option>
                    </select>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Price(per item)</label>
                    <input id="item_price" type="number" class="form-control" required="required" placeholder="Price per Item(Br)..." name="item_price"autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Quantity (Stock)</label>
                    <input id="item_quantity" type="number" class="form-control" required="required" placeholder="Item quantity..." name="item_quantity"autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Expiry date</label>
                    <input id="item_expiry" type="date" class="form-control" required="required" placeholder="Item expiry date..." name="item_expiry"autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Branch</label>
                    <select class="form-control" id="item_branch" name="item_branch" required>
                    <option></option>';
                    if($queryBranch->num_rows()>0){
                    	foreach($queryBranch->result() as $branchName){
                    		$output.='<option>'.$branchName->name.'</option>';
                    	}
                    }
                    $output.='</select>
                  </div>
                  <div class="form-group col-lg-12 col-12">
                    <button class="btn btn-primary pull-right" name="savenewitem" id="savenewitem">Save Item
                    </button>
                  </div>
                  </div>
                </div>
              </div>
            </form>';
        }else{
        	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No category record found.
        	</div></div>';
        }
        return $output;
	}
	function check_item($categoryName,$categoryID,$item_branch){
		$categoryName=htmlspecialchars($categoryName);
		$categoryID=htmlspecialchars($categoryID);
		$query=$this->db->query("select item_name from stock_item where item_name='$categoryName' and item_id='$categoryID' and item_branch='$item_branch' ");
		return $query;
	}
	function edit_this_item_name($stock_id){
		$output='';
		$queryBranch=$this->db->query("select * from branch group by name order by name ASC ");
		$queryCategory=$this->db->get('stock_category');

		$this->db->where(array('id'=>$stock_id));
		$query=$this->db->get('stock_item');
		$arrayService=array('Permanent','Temporary');
		foreach($query->result() as $taskName){
			$output.='<hr>
			<form method="POST" id="submiteditedItemName">
            <div class="form-group">
              <div class="search-element">
                <div class="row">
                <input type ="hidden" name="hiddenUpdatedItemName" value="'.$stock_id.'"> 
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Category</label>
                    <select class="form-control" id="editeditem_category" name="editeditem_category" required>
                    <option></option>';
                    foreach($queryCategory->result() as $taskCategroy){
                    	if($taskCategroy->category_name==$taskName->item_category){
                    		$output.='<option value="'.$taskCategroy->category_name.'" selected="selected">'.$taskCategroy->category_name.'</option>';
                    	}else{
                    		$output.='<option value="'.$taskCategroy->category_name.'">'.$taskCategroy->category_name.'</option>';
                    	}
                    }
                    $output.='</select>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item ID(Serial no)</label>
                    <input id="editeditem_id" type="text" class="form-control" required="required" name="editeditem_id" placeholder="Item ID..." value="'.$taskName->item_id.'">
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Name</label>
                    <input id="editeditem_name" type="text" class="form-control" required="required" placeholder="Item name..." name="editeditem_name" value="'.$taskName->item_name.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Type/Color</label>
                    <input id="editeditem_type_color" type="text" class="form-control" required="required" placeholder="Item type,color..." name="editeditem_type_color" value="'.$taskName->item_type_color.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Service</label>
                    <select class="form-control" id="editeditem_service" name="editeditem_service" required>
                    <option></option>';
                    foreach($arrayService as $arrayServices){
                    	if($arrayServices==$taskName->item_service){
                    		$output.='<option selected="selected">'.$arrayServices.'</option>';
                    	}else{
                    		$output.='<option>'.$arrayServices.'</option>';
                    	}
                    }
                    $output.='
                    </select>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Quantity (Stock)</label>
                    <input id="editeditem_quantity" type="number" class="form-control" required="required" placeholder="Item quantity..." name="editeditem_quantity" value="'.$taskName->item_quantity.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Price(per item)</label>
                    <input id="editeditem_price" type="number" class="form-control" required="required" placeholder="Price per Item..." name="editeditem_price" value="'.$taskName->item_price.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Expiry date</label>
                    <input id="editeditem_expiry" type="date" class="form-control" required="required" placeholder="Item expiry date..." name="editeditem_expiry" value="'.$taskName->item_expiry.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Item Branch</label>
                    <select class="form-control" id="editeditem_branch" name="editeditem_branch" required>
                    <option></option>';
                    if($queryBranch->num_rows()>0){
                    	foreach($queryBranch->result() as $branchName){
                    		if($branchName->name==$taskName->item_branch){
                    			$output.='<option selected="selected">'.$branchName->name.'</option>';
                    		}else{
                    			$output.='<option>'.$branchName->name.'</option>';
                    		}
                    	}
                    }
                    $output.='</select>
                  </div>
                  <div class="form-group col-lg-12 col-12">
                    <button class="btn btn-primary pull-right" name="saveEditedItem" id="saveEditedItem">Save Changes
                    </button>
                  </div>
                  </div>
                </div>
              </div>
            </form>';
		}
		return $output;
	}
	function fetch_item_history($postData=null){
     	
     $response = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (item_name like '%".$searchValue."%' or item_type_color like '%".$searchValue."%' or item_id like '%".$searchValue."%' or item_category like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('stock_item')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('stock_item')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $records = $this->db->get('stock_item')->result();
     $data = array();
     $dateToday=date('Y-m-d');
     foreach($records as $record ){
     	$total_price=0;
     	$id=$record->id;
     	$itemQuantity=$record->item_quantity;
     	$itemPrice=$record->item_price;
     	if($itemPrice!=''){
     		$total_price = $itemQuantity * $itemPrice;
     	}else{
     		$total_price = 0;
     	}
	    /*$total_price = $itemQuantity * $itemPrice;*/
	    $date1 =$record->item_expiry;
	    $date2 =$dateToday;
	    $diff = strtotime($date1) - strtotime($date2);
	    $no_of_days=abs(round($diff / 86400)) + 1;
	    if($no_of_days <=30){
	    	$dateExpired='<span class="text-danger">'.$record->item_expiry.'</span>';
	    }else{
	    	$dateExpired=$record->item_expiry;
	    }
	    if($itemQuantity<=50){
	    	$itemQuantity='<span class="text-danger"><i class="fas fa-arrow-down col-danger"></i>'.$itemQuantity.'</span>';
	    }else{
	    	$itemQuantity=$itemQuantity;
	    }
    	$data[] = array( 
           "item_id"=>$record->item_id,
           "item_name"=>$record->item_name.'<a class="" id="editThisItemName" value="'.$record->id.'" type="submit" data-toggle="modal" data-target="#item_editingplace__here"> <span class="text-success"><i class="fas fa-pen-alt"></i></span> </a>
           		<div class="bullet"></div>
                <a class="" id="deleteThisItemName" value="'.$record->id.'" type="submit"><span class="text-danger"><i class="fas fa-trash"></i><span></a>',
           "item_category"=>$record->item_category,
           "item_type_color"=>$record->item_type_color,
           "item_service"=>$record->item_service,
           "item_quantity"=>$itemQuantity,
           "item_price"=>$record->item_price,
           "total_price"=>$total_price,
           "item_expiry"=>$dateExpired,
           'item_branch'=>$record->item_branch,
        ); 
     }
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
   	function fetch_item_list(){
		$this->db->group_by('id');
		$this->db->order_by('item_expiry','ASC');
		$query=$this->db->get('stock_item');
		return $query->result();
	}
	function validate_item_quantity($item_option,$itemQuantity){
		$this->db->group_by('id');
		$this->db->where('item_id',$item_option);
		$this->db->select('item_quantity');
		$this->db->from('stock_item');
		$query=$this->db->get();
		$totalStock=0;
		if($query->num_rows()>0){
			$queryResult=$query->row();
			$totalStock=$queryResult->item_quantity;
		}else{
			$totalStock=$totalStock;
		}
		return $totalStock;
	}
	function check_requested_item($item_option,$itemQuantity,$user){
		$this->db->where('requested_item_id',$item_option);
		$this->db->where('requested_by',$user);
		$this->db->where('status','0');
		$query=$this->db->get('stock_requested');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function fetch_myrequested_item($user){
		$this->db->group_by('id');
		$this->db->order_by('id','DESC');
		$this->db->where('requested_by',$user);
		$query=$this->db->get('stock_requested');
		$output='';
		if($query->num_rows()>0){
			$output.='<ul class="list-unstyled list-unstyled-border">';
            foreach($query->result() as $row){
            	$output.='<li class="media StudentViewTextInfo" id="deletingStock'.$row->id.'">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" checked="checked" class="custom-control-input" id="cbx-1" disabled>
                  <label class="custom-control-label" for="cbx-1"></label>
                </div>
                <div class="media-body">                  	
                  	<h4 class="media-title"><a href="#">'.$row->requested_item_id.'<span class="badge badge-light">'.$row->requested_quantity.'</span> ';
                  	if($row->request_response=='Rejected'){
                  		$output.='<div class="badge badge-pill badge-danger float-right">'.$row->request_response.' </div>';
                  	}elseif($row->request_response=='Approved'){
                  		$output.='<div class="badge badge-pill badge-success float-right">'.$row->request_response.' </div>';
                  	}else{
                  		$output.='<div class="badge badge-pill badge-info float-right">'.$row->request_response.' </div>';
                  	}
                  	$output.='</a>
                  	</h4>
                  	<div class="text-small text-muted">Requested on:- '.$row->requested_date.' 
                  		<div class="bullet"></div>';
                  		if($row->status=='0'){
                  			$output.='<a href="#" id="delete_this_myrequest" class="text-danger" value="'.$row->id.'">Delete</a>';
                  		}else{
                  			$output.='<a href="#" class="text-warning"></a>';
                  		}
                  		
	                $output.='</div>
                </div>
              </li> ';
            }
            $output.='</ul>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_requested_item_toapprove($user){
		$query = $this->db->query(" select stock_requested.id, stock_requested.requested_item_id, stock_requested.requested_quantity, stock_requested.requested_date, stock_requested.request_response,stock_requested.requested_by, stock_requested.status, stock_category.category_owner,stock_category.category_name,stock_item.item_name,stock_item.item_id from stock_requested cross join stock_item cross join stock_category where stock_item.item_id=stock_requested.requested_item_id and stock_item.item_category=stock_category.category_name and stock_category.category_owner='$user' and stock_requested.status='0' group by stock_requested.id order by stock_requested.id DESC ");
		$output='';
		if($query->num_rows()>0){
			$output.='';
            foreach($query->result() as $row){
            	$requestdby=$row->requested_by;
            	$output.='<ul class="list-unstyled list-unstyled-border"><li class="media" id="approvingStockStatus'.$row->id.'">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" checked="checked" class="custom-control-input" id="cbx-1" disabled>
                  <label class="custom-control-label" for="cbx-1"></label>
                </div>
                <div class="media-body">                  	
                  	<h4 class="media-title"><a href="#">'.$row->requested_item_id.'<span class="badge badge-light">'.$row->requested_quantity.'</span> 
        				<div class="bullet"></div>
                  		<a href="#" id="approve_this_myrequest" class="text-success" value="'.$row->id.'" name="'.$row->requested_quantity.'" title="'.$row->requested_item_id.'">Approve</a>
                  		<div class="bullet"></div>
                  		<a href="#" id="decline_this_myrequest" class="text-danger" value="'.$row->id.'">Reject</a>
                  	</a>
                  	</h4>';
                  	$queryUser=$this->db->query("select fname,mname,lname from users where username ='$requestdby' ");
                  	$rowuser=$queryUser->row();
                  	$requestdf=$rowuser->fname;
                  	$requestdm=$rowuser->mname;
                  	$requestdl=$rowuser->lname;
                  	$output.='Requested by: '.$requestdf.' '.$requestdm.' '.$requestdl.'
                  	<div class="text-small text-muted">Requested on:- '.$row->requested_date.' 
                  		<div class="badge badge-pill badge-info">'.$row->request_response.' </div>
                  	</div>
                </div>
              </li></ul> <hr>';
            }
            $output.='';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_requested_item_toapprove_all($user){
		$query = $this->db->query(" select stock_requested.id, stock_requested.requested_item_id, stock_requested.requested_quantity, stock_requested.requested_date, stock_requested.request_response,stock_requested.requested_by, stock_requested.status, stock_category.category_owner,stock_category.category_name,stock_item.item_name,stock_item.item_id from stock_requested cross join stock_item cross join stock_category where stock_item.item_id=stock_requested.requested_item_id and stock_item.item_category=stock_category.category_name and stock_requested.status='0' group by stock_requested.id order by stock_requested.id DESC ");
		$output='';
		if($query->num_rows()>0){
			$output.='';
            foreach($query->result() as $row){
            	$requestdby=$row->requested_by;
            	$output.='<ul class="list-unstyled list-unstyled-border"><li class="media" id="approvingStockStatus'.$row->id.'">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" checked="checked" class="custom-control-input" id="cbx-1" disabled>
                  <label class="custom-control-label" for="cbx-1"></label>
                </div>
                <div class="media-body">                  	
                  	<h4 class="media-title"><a href="#">'.$row->requested_item_id.'<span class="badge badge-light">'.$row->requested_quantity.'</span> 

        				<div class="pull-right">
                  		<a href="#" id="approve_this_myrequest" class="text-success" value="'.$row->id.'" name="'.$row->requested_quantity.'" title="'.$row->requested_item_id.'">Approve</a>
                  		<div class="bullet"></div>
                  		<a href="#" id="decline_this_myrequest" class="text-danger" value="'.$row->id.'">Reject</a>
                  		</div>
                  	</a>
                  	</h4>';
                  	$queryUser=$this->db->query("select fname,mname,lname from users where username ='$requestdby' ");
                  	$rowuser=$queryUser->row();
                  	$requestdf=$rowuser->fname;
                  	$requestdm=$rowuser->mname;
                  	$requestdl=$rowuser->lname;
                  	$output.='Requested by: '.$requestdf.' '.$requestdm.' '.$requestdl.'
                  	<div class="text-small text-muted">Requested on:- '.$row->requested_date.' 
                  		<div class="badge badge-pill badge-info">'.$row->request_response.' </div>
                  	</div>
                </div>
              </li></ul> <hr>';
            }
            $output.='';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function update_itemrequest($requestItem,$requestquantity){
		$this->db->group_by('id');
		$this->db->where('item_id',$requestItem);
		$this->db->select('item_quantity');
		$this->db->from('stock_item');
		$query=$this->db->get();
		$remainingStock=0;
		if($query->num_rows()>0){
			$queryResult=$query->row();
			$remainingStock=($queryResult->item_quantity)-$requestquantity;
			$this->db->where('item_id',$requestItem);
			$this->db->set('item_quantity',$remainingStock);
            $queryUpdate=$this->db->update('stock_item');
            if($queryUpdate){
            	return true;
            }else{
            	return false;
            }
		}
	}
	function fetch_item_for_report($postData=null){
     	
     $responseData = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (requested_item_id like '%".$searchValue."%' or requested_by like '%".$searchValue."%' or requested_date like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('stock_requested')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('stock_requested')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $records = $this->db->get('stock_requested')->result();
     $data = array();
     foreach($records as $record ){
     	$responseStatus=$record->request_response;
     	if($responseStatus=='Pending'){
     		$responseStatusM='<span class="badge badge-info">'.$responseStatus.'</span>';
     	}else if($responseStatus=='Approved'){
     		$responseStatusM='<span class="badge badge-success">'.$responseStatus.'</span>';
     	}else{
     		$responseStatusM='<span class="badge badge-danger">'.$responseStatus.'</span>';
     	}
    	$data[] = array( 
           "requested_item_id"=>$record->requested_item_id,
           "requested_quantity"=>$record->requested_quantity,
           "requested_date"=>$record->requested_date,
           "requested_by"=>$record->requested_by,
           "request_response"=>$responseStatusM,
        ); 
     }
     ## Response
     $responseData = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $responseData; 
   	}
   	function fetch_form_toadd_new_book($max_year){
		$output='';
		$queryBranch=$this->db->query("select * from branch group by name order by name ASC ");
		/*$query=$this->db->get('stock_category');
		if($query->num_rows()>0){*/
			$this->db->where('usertype','Student');
			$this->db->where('grade !=','0');
			$this->db->where('grade !=','');
			$this->db->where('isapproved =','1');
			$this->db->where('status =','Active');
			$this->db->where('academicyear',$max_year);
			$this->db->order_by('grade','ASC');
			$this->db->group_by('grade');
			$queryGrade=$this->db->get('users');
			$output.='<form method="POST" id="saveNew_book" class="saveNew_book" name="saveNew_book">
            <div class="form-group">
              <div class="search-element">
                <div class="row">
                  <div class="form-group col-lg-4 col-6">
                    <label>Book ID(Serial no)</label>
                    <input id="book_id" type="text" class="form-control" required="required" name="book_id" placeholder="Book ID...">
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Name</label>
                    <input id="book_name" type="text" class="form-control" required="required" placeholder="Book name..." name="book_name" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Grade</label>
                    <select class="form-control" id="book_grade" name="book_grade" required>
                    <option></option>';
                    if($queryGrade->num_rows()>0){
                    	foreach($queryGrade->result() as $row){
                    		$output.='<option>'.$row->grade.'</option>';
                    	}
                    }
                    $CustomGrade=$this->db->query("select name from grade ");
                    if($CustomGrade->num_rows()>0){
                    	foreach($CustomGrade->result() as $rows){
                    		$output.='<option>'.$rows->name.'</option>';
                    	}
                    }
                    $output.='</select>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Price(per book)</label>
                    <input id="book_price" type="text" class="form-control" required="required" placeholder="Price per book(Br)..." name="book_price" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Quantity (Stock)</label>
                    <input id="book_quantity" type="text" class="form-control" required="required" placeholder="Book quantity..." name="book_quantity"autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Branch</label>
                    <select class="form-control" id="book_branch" name="book_branch">
                    <option></option>';
                    if($queryBranch->num_rows()>0){
                    	foreach($queryBranch->result() as $branchName){
                    		$output.='<option>'.$branchName->name.'</option>';
                    	}
                    }
                    $output.='</select>
                  </div>
                  <div class="form-group col-lg-12 col-12">
                    <button class="btn btn-primary pull-right" name="savenewbook" id="savenewbook">Save Book
                    </button>
                  </div>
                  </div>
                </div>
              </div>
            </form>';
        /*}else{
        	$output.='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No record found.
        	</div></div>';
        }*/
        return $output;
	}
	function check_book_stock($book_name,$book_id,$book_grade){
		$query=$this->db->query("select book_name from book_stock where book_name='$book_name' and book_id='$book_id' and book_grade='$book_grade' ");
		return $query;
	}
	function fetch_book_history($postData=null){
     	
     $response = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (book_name like '%".$searchValue."%' or book_id like '%".$searchValue."%' or book_grade like '%".$searchValue."%' or book_price like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('book_stock')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('book_stock')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $records = $this->db->get('book_stock')->result();
     $data = array();
     $dateToday=date('Y-m-d');
     foreach($records as $record ){
    	$data[] = array( 
           "book_id"=>$record->book_id .'<a class="" id="editThisBookName" value="'.$record->id.'" type="submit" data-toggle="modal" data-target="#book_editingplace__here"> <span class="text-success"><i class="fas fa-pen-alt"></i></span> </a>
           		<div class="bullet"></div>
                <a class="" id="deleteThisBookName" value="'.$record->id.'" type="submit"><span class="text-danger"><i class="fas fa-trash"></i><span></a>',
           "book_name"=>$record->book_name,
           "book_grade"=>$record->book_grade,
           "book_price"=>$record->book_price,
           "book_quantity"=>$record->book_quantity,
           "book_branch"=>$record->book_branch,
        ); 
     }
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
   	function edit_book_name($stock_id,$max_year){
		$output='';
		$this->db->where('usertype','Student');
		$this->db->where('grade !=','0');
		$this->db->where('grade !=','');
		$this->db->where('isapproved =','1');
		$this->db->where('status =','Active');
		$this->db->where('academicyear',$max_year);
		$this->db->order_by('grade','ASC');
		$this->db->group_by('grade');
		$queryGrade=$this->db->get('users');

		$this->db->where(array('id'=>$stock_id));
		$query=$this->db->get('book_stock');

		$queryBranch=$this->db->query("select * from branch group by name order by name ASC ");
		foreach($query->result() as $taskName){
			$output.='<hr>
			<form method="POST" id="submiteditedBookName">
            <div class="form-group">
              <div class="search-element">
                <div class="row">
                <input type ="hidden" name="hiddenUpdatedBookName" value="'.$stock_id.'"> 
                  <div class="form-group col-lg-4 col-6">
                    <label>Book ID(Serial no)</label>
                    <input id="editedbook_id" type="text" class="form-control" required="required" name="editedbook_id" placeholder="Book ID..." value="'.$taskName->book_id.'">
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Name</label>
                    <input id="editedbook_name" type="text" class="form-control" required="required" placeholder="Book name..." name="editedbook_name" value="'.$taskName->book_name.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Grade</label>
                    <select class="form-control" id="editedbook_grade" name="editedbook_grade" required>
                    <option></option>';
                     if($queryGrade->num_rows()>0){
                    	foreach($queryGrade->result() as $row){
                    		if($row->grade==$taskName->book_grade){
	                    		$output.='<option selected="selected">'.$row->grade.'</option>';
	                    	}else{
	                    		$output.='<option>'.$row->grade.'</option>';
	                    	}
                    	}
                    }
                    $CustomGrade=$this->db->query("select name from grade ");
                    if($CustomGrade->num_rows()>0){
                    	foreach($CustomGrade->result() as $rows){
                    		if($rows->name==$taskName->book_grade){
	                    		$output.='<option selected="selected">'.$rows->name.'</option>';
	                    	}else{
	                    		$output.='<option>'.$rows->name.'</option>';
	                    	}
                    	}
                    }
                    $output.='
                    </select>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Price(per book)</label>
                    <input id="editedbook_price" type="text" class="form-control" required="required" placeholder="Price per book..." name="editedbook_price" value="'.$taskName->book_price.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Quantity (Stock)</label>
                    <input id="editedbook_quantity" type="text" class="form-control" required="required" placeholder="Book quantity..." name="editedbook_quantity" value="'.$taskName->book_quantity.'" autofocus>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Branch</label>
                    <select class="form-control" id="edited_book_branch" name="edited_book_branch">
                    <option></option>';
                    if($queryBranch->num_rows()>0){
                    	foreach($queryBranch->result() as $branchName){
                    		$bookBranch=$taskName->book_branch;
                    		if($bookBranch==$branchName->name){
                    			$output.='<option selected="selected">'.$branchName->name.'</option>';
                    		}else{
                    			$output.='<option>'.$branchName->name.'</option>';
                    		}
                    	}
                    }
                    $output.='</select>
                  </div>
                  <div class="form-group col-lg-12 col-12">
                    <button class="btn btn-primary pull-right" name="saveEditedBook" id="saveEditedBook">Save Changes
                    </button>
                  </div>
                  </div>
                </div>
              </div>
            </form>';
		}
		return $output;
	}
	function fetch_form_toadd_library_head(){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$queryHeade=$this->db->get('users');
		$output='';
		$output.='<form method="POST" id="submiteditedbook_stock_head">
        <div class="form-group">
          <div class="search-element">
            <div class="row">                  
              <div class="form-group col-lg-6 col-6">
                <label>Head Name</label>
                <select class="" id="book_stock_head" name="book_stock_head" required>
                <option></option>';
                 if($queryHeade->num_rows()>0){
                	foreach($queryHeade->result() as $row){
                    	$output.='<option value="'.$row->username.'">'.$row->fname.' '.$row->mname.' '.$row->lname.'</option>';
                	}
                }
                $output.='
                </select><button class="btn btn-default text-success" id="saveBook_Stock_Head">Add Head</button>
              </div>
              </div>
            </div>
          </div>
        </form>';
        $queryFetch=$this->db->query("select bh.head_name, us.fname,us.mname,us.lname from users as us cross join book_stock_head as bh where bh.head_name=us.username and us.status='Active' and us.isapproved='1' ");
        if($queryFetch->num_rows()>0){
        	$output.='<div class="fetch_book_stock_head">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<h6 class="removeBook_Stock_Head'.$rowUser->head_name.'"><i class="fas fa-check-circle"></i> '.$rowUser->fname.' '.$rowUser->mname.' '.$rowUser->lname.'<button class="btn btn-default text-danger" id="removeBook_Stock_Head" value="'.$rowUser->head_name.'">Remove</button></h6>';
        	}
        	$output.='</div>';
        }
		return $output;
	}
	function check_custom_grade_found($custom_grade_name){
		$query=$this->db->query("select name from grade where name='$custom_grade_name' ");
		return $query;
	}
	function add_custom_grade(){
		$output='';
		$output.='<form method="POST" id="submiteditedCustomGrade">
        <div class="form-group">
          <div class="search-element">
            <div class="row">                  
              <div class="form-group col-lg-8 col-12">
                <input type="text" name="custom_grade_name" class="form-control" id="custom_grade_name" placeholder="Enter grade name...">
              </div>
              <div class="form-group col-lg-4 col-12">
                <button class="btn btn-primary btn-block" id="saveCustom_Grade">Add Grade</button>
              </div>
              </div>
            </div>
          </div>
        </form>';
        $output.='<div class="fetch_gs_custom_grade">';
        $queryFetch=$this->db->query("select * from grade ");

        	foreach($queryFetch->result() as $rowUser){
        		$output.='<h6 class="remove_gs_custom_grade'.$rowUser->name.'"><i class="fas fa-check-circle"></i> '.$rowUser->name.'<button class="btn btn-default text-danger" id="remove_gs_custom_grade" value="'.$rowUser->name.'">Remove</button></h6>';
        	}
        
        $output.='</div>';
		return $output;
	}
	function fetch_custom_grade_gs(){
		$output='';
		$queryFetch=$this->db->query("select * from grade ");
        if($queryFetch->num_rows()>0){
        	$output.='<div class="fetch_gs_custom_grade">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<h6 class="remove_gs_custom_grade'.$rowUser->name.'"><i class="fas fa-check-circle"></i> '.$rowUser->name.'<button class="btn btn-default text-danger" id="remove_gs_custom_grade" value="'.$rowUser->name.'">Remove</button></h6>';
        	}
        	$output.='</div>';
        }
        return $output;
	}
	function fetch_book_head(){
		$output='';
		$queryFetch=$this->db->query("select bh.head_name, us.fname,us.mname,us.lname from users as us cross join book_stock_head as bh where bh.head_name=us.username and us.status='Active' and us.isapproved='1' ");
        if($queryFetch->num_rows()>0){
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<h6 class="removeBook_Stock_Head'.$rowUser->head_name.'"><i class="fas fa-check-circle"></i> '.$rowUser->fname.' '.$rowUser->mname.' '.$rowUser->lname.'<button class="btn btn-default text-danger" id="removeBook_Stock_Head" value="'.$rowUser->head_name.'">Remove</button></h6>';
        	}
        }
        return $output;
	}
	function check_book_stock_head($book_stock_head){
		$query=$this->db->query("select head_name from book_stock_head where head_name='$book_stock_head' ");
		return $query;
	}
	function fetch_book_borrow($user,$postData=null){
     	
     $response = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (book_name like '%".$searchValue."%' or book_id like '%".$searchValue."%' or book_grade like '%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('book_stock')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('book_stock')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $records = $this->db->get('book_stock')->result();
     $data = array();
     $dateToday=date('Y-m-d');
     foreach($records as $record ){
     	$bookID=$record->id;
     	$this->db->select('book_id,request_response,status,date_returned');
     	$this->db->where('book_id',$bookID);
     	$this->db->where('submitted_by',$user);
     	$this->db->where('return_status','0');
     	$this->db->group_by('id');
     	$this->db->order_by('id','DESC');
     	$queryCheck=$this->db->get('book_borrow');
     	if($queryCheck->num_rows() < 1){
     		$action='<a class="" id="borrowThisBookName" value="'.$record->id.'" type="submit" data-toggle="modal" data-target="#borrowbook_editingplace__here"><span class="text-info"> <i class="fas fa-book-reader"></i> Borrow </span></a>';
     	}else{
     		$rowStatus=$queryCheck->row();
     		$request_response=$rowStatus->request_response;
     		$status=$rowStatus->status;
     		$dateReturned=$rowStatus->date_returned;
     		if($status=='0'){
     			$action='<a value="'.$record->id.'" type="submit"><span class="text-info"> <i class="fas fa-check-circle"></i> '.$request_response.' </span></a>
     			<div class="bullet"></div>
     			<a class="removeBorrowRequest" value="'.$record->id.'" type="submit"><span class="text-danger"> Cancel </span></a>';
     		}else{
     			if($request_response=='Approved'){
     				$date1 =$dateReturned;
				    $date2 =$dateToday;
				    $diff = strtotime($date1) - strtotime($date2);
				    $no_of_days=abs(round($diff / 86400)) + 1;
				    if($no_of_days <=5){
				    	$returnedDate='<span class="text-danger"><i class="fas fa-clock col-danger"></i> '.$no_of_days.'</span>';
				    }else{
				    	$returnedDate='';
				    }
     				$action='<a value="'.$record->id.'" type="submit"><span class="text-success"> <i class="fas fa-check-circle"></i> '.$request_response.' '.$returnedDate.' </span></a>';
     			}else if($request_response=='Rejected'){
     				$action='<a class="" id="borrowThisBookName" value="'.$record->id.'" type="submit" data-toggle="modal" data-target="#borrowbook_editingplace__here"><span class="text-info"> <i class="fas fa-book-reader"></i> Borrow </span></a>';
     			}else{
     				$action='<a value="'.$record->id.'" type="submit"><span class="text-danger"> <i class="fas fa-check-circle"></i> '.$request_response.' </span></a> ';
     			}
     		}
     	}
    	$data[] = array( 
           "book_name"=>$record->book_name,
           "book_grade"=>$record->book_grade,
           "Action"=>$action,
        ); 
     }
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
   	function borrow_book_name($stock_id,$max_year){
		$output='';
		$this->db->where(array('id'=>$stock_id));
		$query=$this->db->get('book_stock');
		foreach($query->result() as $taskName){
			$bookID=$taskName->id;
			$output.='<form method="POST" id="submiteBorrowBookName">
            <div class="form-group">
              <div class="search-element">
                <div class="row">
                <input type ="hidden" name="hiddenBorrowedBookName" value="'.$bookID.'"> 
                  <div class="form-group col-lg-4 col-6">
                    <label>Book ID(Serial no)</label>
                    <input id="editedbook_id" type="text" class="form-control" required="required" name="editedbook_id" placeholder="Book ID..." value="'.$taskName->book_id.'" disabled>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Name</label>
                    <input id="editedbook_name" type="text" class="form-control" required="required" placeholder="Book name..." name="editedbook_name" value="'.$taskName->book_name.'" disabled>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Grade</label>
                    <input id="editedbook_price" type="text" class="form-control" required="required" placeholder="Price per book..." name="editedbook_price" value="'.$taskName->book_grade.'" disabled>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Book Price(per book)</label>
                    <input id="editedbook_price" type="text" class="form-control" required="required" placeholder="Price per book..." name="editedbook_price" value="'.$taskName->book_price.'" disabled>
                  </div>
                  <div class="form-group col-lg-4 col-6">
                    <label>Date return</label>
                    <input id="dateReturnBook" type="date" class="form-control" required="required" placeholder="Book quantity..." name="dateReturnBook" >
                  </div>
                  <div class="form-group col-lg-12 col-12">
			        <div class="form-group mb-0 col-12">                                
			          <input type="checkbox" required>
			          <label>I agree and sign that i want to borrow the above stated book.</label>
			          <div class="text-muted form-text">
			            By checking this box, you will be pay the price stated above, if you will lost the book.
			          </div>
			        </div>
                    <button class="btn btn-primary pull-right" name="submitBorrowBookRequest" id="submitBorrowBookRequest">Submit Request
                    </button>
                  </div>
                  </div>
                </div>
              </div>
            </form>';
		}
		return $output;
	}
	function fetch_requested_book_toapprove_all($user){
		$query = $this->db->query("select book_borrow.id, book_borrow.book_id, book_borrow.submitted_by,book_borrow.date_returned, book_borrow.date_submitted, book_borrow.status, book_borrow.request_response, book_stock.book_name, book_stock.book_id, book_stock.book_grade,book_stock.date_created from book_borrow cross join book_stock where book_borrow.book_id=book_stock.id and book_borrow.status='0' group by book_borrow.id order by book_borrow.id DESC ");
		$output='';
		if($query->num_rows()>0){
			$output.='';
            foreach($query->result() as $row){
            	$requestdby=$row->submitted_by;
            	$output.='<ul class="list-unstyled list-unstyled-border"><li class="media" id="approvingBookBorrowStatus'.$row->id.'">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" checked="checked" class="custom-control-input" id="cbx-1" disabled>
                  <label class="custom-control-label" for="cbx-1"></label>
                </div>
                <div class="media-body">                  	
                  	<h4 class="media-title"><a href="#">Requestd Book :'.$row->book_name.'<span class="badge badge-light">Grade :'.$row->book_grade.'  </span> Returning Date :'.$row->date_returned.' 
        				<div class="pull-right">
                  		<a href="#" id="approve_this_mybookRequest" class="text-success" value="'.$row->id.'" name="'.$row->book_grade.'" title="'.$row->book_name.'">Approve</a>
                  		<div class="bullet"></div>
                  		<a href="#" id="decline_this_mybookRequest" class="text-danger" value="'.$row->id.'">Reject</a>
                  		</div>
                  	</a>
                  	</h4>';
                  	$queryUser=$this->db->query("select fname,mname,lname from users where username ='$requestdby' ");
                  	$rowuser=$queryUser->row();
                  	$requestdf=$rowuser->fname;
                  	$requestdm=$rowuser->mname;
                  	$requestdl=$rowuser->lname;
                  	$output.='Requested by: '.$requestdf.' '.$requestdm.' '.$requestdl.'
                  	<div class="text-small text-muted">Requested on:- '.$row->date_submitted.' 
                  		<div class="badge badge-pill badge-info">'.$row->request_response.' </div>
                  	</div>
                </div>
              </li></ul> <hr>';
            }
            $output.='';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No request found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_book_borrowed_for_report($postData=null){
     	
     $responseData = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (response_by like '%".$searchValue."%' or request_response like '%".$searchValue."%' or date_submitted like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('book_borrow')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('book_borrow')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
		$this->db->select('book_borrow.id,book_borrow.submitted_by,book_borrow.date_returned, book_borrow.user_received,book_borrow.date_submitted, book_borrow.status, book_borrow.request_response, book_stock.book_name, book_stock.book_id, book_stock.book_grade,book_stock.date_created');
		$this->db->from('book_borrow');
		$this->db->join('book_stock',
		'book_borrow.book_id=book_stock.id');
		$records = $this->db->get()->result();
     $data = array();
     foreach($records as $record ){
     	if($record->return_status=='0' && $record->request_response=='Approved'){
     		$returnStatus='<span class="text-danger">Not returned</span>
     		<div class="bullet"></div>
     		<a href="#" id="returnBack_this_mybookRequest" class="text-info" value="'.$record->id.'">Received</a>';
     	}elseif($record->request_response=='Rejected'){
     		$returnStatus='<span class="text-danger">Rejected</span>';
     	}
     	elseif($record->request_response=='Pending'){
     		$returnStatus='<span class="text-info">-</span>';
     	}else{
     		$returnStatus='<span class="text-success">Returned</span>';
     	}
    	$data[] = array( 
    		"book_name"=>$record->book_name."(".$record->book_id.")",
           "book_grade"=>$record->book_grade,
           "date_submitted"=>$record->date_submitted,
           "submitted_by"=>$record->submitted_by,
           "request_response"=>$record->request_response,
           "response_by"=>$record->response_by,
           "return_status"=>$returnStatus,
           "date_returned"=>$record->returned_date,
           "Received_by"=>$record->user_received,
        ); 
     }
     ## Response
     $responseData = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $responseData; 
   	}
   	function fetch_attendance_report_smart($max_year,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	$this->db->where('academicyear',$max_year);
     	if($searchValue != ''){
        	$searchQuery = " (stuid like '%".$searchValue."%' or absentdate like '%".$searchValue."%' or absentype like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('attendance')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$records = $this->db->get('attendance')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	/*$records = $this->db->get('book_stock')->result();*/
     	$this->db->where('usertype','Student');
		$this->db->like('attendance.academicyear',$max_year);
		$this->db->like('users.academicyear',$max_year);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->group_by('attendance.absentdate,attendance.stuid');
		$this->db->select('fname,mname,lname,stuid,absentype,absentdate,approved');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.username = attendance.stuid');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $record ){
            if($record->approved=='1'){
            	$attendanceType=$record->absentype;
            }else{
            	$attendanceType=$record->absentype.'<a href="#" class="deleteThisAttendane text-danger" id="'.$record->aid.'"><i class="fas fa-trash-alt"></i></a>';
            } 
	    	$data[] = array( 
	           "fname"=>$record->fname.' '.$record->mname.' '.$record->lname.'',
	           "username"=>$record->username,
	           "gradesec"=>$record->gradesec,
	           "absentype"=>$attendanceType,
	           "absentdate"=>$record->absentdate,
	        ); 
     	}
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
   	function fetch_attendance_report_smart_nonadmin($max_year,$branch,$postData){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	$this->db->where('academicyear',$max_year);
     	if($searchValue != ''){
        	$searchQuery = " (stuid like '%".$searchValue."%' or absentdate like '%".$searchValue."%' or absentype like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('attendance')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$records = $this->db->get('attendance')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
     	/*$records = $this->db->get('book_stock')->result();*/
     	$this->db->where('usertype','Student');
		$this->db->like('attendance.academicyear',$max_year);
		$this->db->like('users.academicyear',$max_year);
		$this->db->where('users.branch',$branch);
		$this->db->order_by('attendance.absentdate','DESC');
		$this->db->group_by('attendance.absentdate,attendance.stuid');
		$this->db->select('fname,mname,lname,stuid,absentype,absentdate,approved');
        $this->db->from('attendance');
        $this->db->join('users', 
            'users.username = attendance.stuid');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $record ){
            if($record->approved=='1'){
            	$attendanceType=$record->absentype;
            }else{
            	$attendanceType=$record->absentype.'<a href="#" class="deleteThisAttendane text-danger" id="'.$record->aid.'"><i class="fas fa-trash-alt"></i></a>';
            } 
	    	$data[] = array( 
	           "fname"=>$record->fname.' '.$record->mname.' '.$record->lname.'',
	           "username"=>$record->username,
	           "gradesec"=>$record->gradesec,
	           "absentype"=>$attendanceType,
	           "absentdate"=>$record->absentdate,
	        ); 
     	}
     ## Response
     $response = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $response; 
   	}
   	function fetchsubscriptionData($max_year){
   		$output='';
   		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $schoolID=$row_name->id;
   		$queryCheck=$this->db->query("select * from subscription_detail where user_id ='$schoolID'");
   		if($queryCheck->num_rows()>0){
   			date_default_timezone_set("Africa/Addis_Ababa");
	        $dtz = new DateTimeZone('UTC');
	        $dt = new DateTime(date("Y-m-d h:i A"), $dtz); 
	        $date = gmdate("Y-m-d h:i A", $dt->format('U'));
	    	$rowData=$queryCheck->row();
	    	$endDate=$rowData->sub_until;
	    	$date = strtotime($endDate);
            $remaining = $date - strtotime(date('Y-m-d h:i A'));
            $days_remaining = floor($remaining / 86400);
            $hours_remaining = floor(($remaining % 86400) / 3600);
            $output.='<div class="row">
            	<div class="col-md-4 col-12">
            	<a href="'.base_url().'subscriptionpaymenthistory/?subscription-payment-history/" class="">
                <button class="btn btn-info btn-lg btn-block" type="submit" name="process_subscriptionsubmit">View Payment History <i class="fas fa-clock"></i></button> </a>
              </div>
            <div class="col-md-8 pull-right">';
            if($days_remaining >='30'){
		    	$output.='<div class="card text-success">
		          <div class="card-body card-type-3">
		            <div class="row">
		            <div class="col-auto">
		                <div class="card-circle l-bg-purple text-white">
		                  <i class="fas fa-clock"></i>
		                </div>
		              </div>
		              <div class="col">
		                <h6 class="text-muted mb-0 text-success">Days Remaining</h6>
		                <span class="font-weight-bold mb-0">'.$days_remaining.' </span>
		              </div>
		              <div class="col">
		                <h6 class="text-muted mb-0 text-success">Hours remaining</h6>
		                <span class="font-weight-bold mb-0"> '.$hours_remaining.' </span>
		              </div>
		              
		            </div>
		          </div>
		        </div>';
		    }else{
		    	$output.='<div class="card text-danger">
		          <div class="card-body card-type-3">
		            <div class="row">
		            <div class="col-auto">
		                <div class="card-circle l-bg-purple text-white">
		                  <i class="fas fa-clock"></i>
		                </div>
		              </div>
		              <div class="col">
		                <h6 class="text-muted mb-0 text-danger">Days Remaining</h6>
		                <span class="font-weight-bold mb-0" text-danger>'.$days_remaining.' </span>
		              </div>
		              <div class="col">
		                <h6 class="text-muted mb-0 text-danger">Hours remaining</h6>
		                <span class="font-weight-bold mb-0"> '.$hours_remaining.' </span>
		              </div>
		              
		            </div>
		          </div>
		        </div>';
		    }
		    $output.='</div></div>';
		}
   		$queryStu=$this->db->query("select id from users where academicyear='$max_year' and usertype='Student' and status='Active' and isapproved='1' group by id ");
		$totalAmountSix=0;$totalAmountYearly=0;$totalAmountYearlyDiscount=0;$fPayment=0;
		if($queryStu->num_rows()>0){
			$totalStudent=$queryStu->num_rows();
		}else{
			$totalStudent=0;
		}
		if($totalStudent >=6000) {
	        $amount="6";
	    }else if($totalStudent >=5000){
	    	$amount="5.5";
	    }else if($totalStudent >=4000){
	    	$amount="4.5";
	    }else if($totalStudent >=3000){
	    	$amount="4";
	    }else if($totalStudent >=2000){
	    	$amount="3.5";
	    }else if($totalStudent >=1000){
	    	$amount="5";
	    }else if($totalStudent >=500){
	    	$amount="10";
	    }else if($totalStudent >=400){
	    	$amount="15";
	    }else {
	    	$amount="50";
	    }
	    $totalAmountSix=number_format((float)($amount * 6 * $totalStudent),2,'.',',');
	    $totalAmountSixf=$amount * 6 * $totalStudent;
	    $totalAmountYearly=$amount * 12 * $totalStudent;
	    $totalAmountYearlyDiscount=$totalAmountYearly * 0.1;
	    $fPayment=number_format((float)($totalAmountYearly-$totalAmountYearlyDiscount),2,'.',',');
	    $fPayments=$totalAmountYearly - $totalAmountYearlyDiscount;
   		$output.='<div class="row">
          <div class="col-12 col-md-6 col-lg-6">
          <form method="POST" action="'.base_url().'processubscriptionpayment/">
          	<input type="hidden" name="paid_price_subscription_gs" value="'.$totalAmountSixf.'">
			<input type="hidden" name="date_duration" value="6">
            <div class="pricing">
              <div class="pricing-title">
                SIX Month Subscription
              </div>
                <div class="pricing-price">
                  <div>Br '.$totalAmountSix.'</div>
                  <div>per six month</div>
                </div>
                <div class="pricing-details">
                  <div class="pricing-item">
                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
                    <div class="pricing-item-label"><b>'.$totalStudent.'</b> total number of student</div>
                  </div>
                  <div class="pricing-item">
                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
                    <div class="pricing-item-label">'.$amount.' Br per student monthly</div>
                  </div>
                </div>
              <div class="pricing-cta">
              <button class="btn btn-light btn-lg btn-block" type="submit" name="process_subscriptionsubmit">Process Payment <i class="fas fa-arrow-right"></i></button>
              </div>
            </div>
             </form>
          </div>
       
          <div class="col-12 col-md-6 col-lg-6">
          <form method="POST" action="'.base_url().'processubscriptionpayment/">
          	<input type="hidden" name="paid_price_subscription_gs" value="'.$fPayments.'">
			<input type="hidden" name="date_duration" value="12">
            <div class="pricing pricing-highlight">
              <div class="pricing-title">
                Yearly Subscription
              </div>
                <div class="pricing-price">
                	<div><strike>Br '.$totalAmountYearly.'</strike></div>
                  <div>Br '.$fPayment.'</div>
                  <div>per year</div>
                </div>
                <div class="pricing-details">
                  <div class="pricing-item">
                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
                    <div class="pricing-item-label"><b>'.$totalStudent.'</b> total number of student</div>
                  </div>
                  <div class="pricing-item">
                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
                    <div class="pricing-item-label">'.$amount.' Br per student monthly</div>
                  </div>
                  <div class="pricing-item">
                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
                    <div class="pricing-item-label">10% Discount</div>
                  </div>
                </div>
              <div class="pricing-cta">
                <button class="btn btn-primary btn-lg btn-block" type="submit" name="process_subscriptionsubmit">Process Payment <i class="fas fa-arrow-right"></i></button>
              </div>
            </div>
            </form>
          </div>
        </div>';
        return $output;
   	}
   	function subscriptionDataHistory($max_year){
   		$output='';
   		$query_name = $this->db->query("select * from school");
        $row_name = $query_name->row();
        $school_name=$row_name->name;
        $schoolID=$row_name->id;
   		$queryCheck=$this->db->query("select * from subscription_transaction_detail where subscriber_id ='$schoolID' group by id order by id DESC");
   		if($queryCheck->num_rows()>0){
   			$output.='<div class="row">';
   			foreach($queryCheck->result() as $row){
   				$schoolName=$row->subscriber_name;
   				$dateSubscribed=$row->transaction_date;
   				$amount=$row->amount;
		   		$output.='<div class="col-12 col-md-6 col-lg-6">
		            <div class="pricing pricing-highlight">
		                <div class="pricing-details">
		                  <div class="pricing-item">
		                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
		                    <div class="pricing-item-label"><small class="text-muted">Subscriber Name</small> <u>'.$schoolName.'</u></div>
		                  </div>
		                  <div class="pricing-item">
		                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
		                    <div class="pricing-item-label"><small class="text-muted">Paid amount(Br)</small> <u>'.$amount.'</u></div>
		                  </div>
		                  <div class="pricing-item">
		                    <div class="pricing-item-icon"><i class="fas fa-check"></i></div>
		                    <div class="pricing-item-label"><small class="text-muted">Date Paid</small><u> '.$dateSubscribed.'</u></div>
		                  </div>
		                </div>
		            </div>
		        </div>';
		    }
		    $output.='</div>';
    	}
        return $output;
   	}
	function insert_online_exam($examName,$examGrade,$examSubject,$minuteAllowed,$numberQuestion,$terminate_exam_status,$exam_started_time,$see_resut_automatically,$max_year){
		$output='';
        $no=1; 
        $output.='<form class="save_submit_exam" method="POST"> ';
        $output.='<input type="hidden" name="terminate_status" id="terminate_status" value="'.$terminate_exam_status.'">
        <input type="hidden" name="startedTime_status" id="startedTime_status" value="'.$exam_started_time.'">
        <input type="hidden" name="can_see_resut_automatically" id="can_see_resut_automatically" value="'.$see_resut_automatically.'">
        <input type="hidden" name="exam_subject_name" id="exam_subject_name" value="'.$examSubject.'">
        <input type="hidden" name="exam_grade_name" id="exam_grade_name" value="'.$examGrade.'">
        <input type="hidden" name="exam_name" id="exam_name" value="'.$examName.'">
        <input type="hidden" name="minute_Allowed" id="minute_Allowed" value="'.$minuteAllowed.'">
        <input type="hidden" name="noof_Question" id="noof_Question" value="'.$numberQuestion.'">';
        $output.='<div class="row"><div class="col-lg-12 col-12 form-group">
                <div class="row">
                	<div class="col-lg-6 col-6 form-group"><label>Question Type</label>
	                	<select class="form-control" required="required" name="question_type" id="question_type">
	                	<option></option>
	                	<option>Multiple Choice</option>
	                	<option>True/False</option>
	                	<option>Short Answer</option>
	                	</select>
                	</div>
                	<div class="col-lg-6 col-6 form-group"><label>Question Weight</label>
                		<input type="number" name="question_weight" id="question_weight" class="form-control" required="required" value="1">
                	</div>
                </div>
                <textarea class="name_Question" name="name_Question" id="name_Question" required="required" placeholder="Type question here..."> 
                </textarea>
            </div>
            <div class="col-lg-12 col-12" id="dynamic_field_question">
            	<small class="text-muted"><i class="fas fa-exclamation-triangle"></i> After providing possible answers, select the correct one.</small>
	            <div class="row">  
	                <div class="col-md-10 col-10 form-group">
	                <ul class="list-unstyled list-unstyled-border">
                      <li class="media">
                        <div class="custom-control">
                          <input type="radio" class="select_correct_answer" id="select_correct_answer" name="select_correct_answer" value="0">
                        </div>             
                        <input type="text" id="name_question_choice" name="name_question_choice[]" placeholder="Enter answer..." class="form-control name_question_choice" required/>
                        </li>
                      </ul>   
                    </div>
                    <div class="col-md-2 col-2">
                        <button type="button" name="add_q_option" id="add_q_option" class="btn btn-outline-primary">Add Answer</button>
                    </div>
	            </div> 
            </div>
            <div class="col-lg-12 col-12">
                <div class="form-group">
                    <button type="submit" name="savexam" id="save_exam" class="btn btn-success pull-right">Save Exam & Add next</button>
                </div>
            </div> ';
    	$no++; 
    	$output.='</div></form>';
        return $output;
	}
	function insert_exam($user,$subject,$gradesec,$examname,$answern,$numbern,$question_type,$question_weight,$minute,$terminate_status,$startedTime_status,$can_see_resut_automatically,$optionName,$group_name,$max_year){
		$output='';
		$data=array();
		date_default_timezone_set("Africa/Addis_Ababa");
	    $dtz = new DateTimeZone('UTC');
	    $dt = new DateTime(date("Y-m-d h:i A"), $dtz); 
	    $datetried = gmdate("Y-m-d h:i A", $dt->format('U'));
	    foreach($optionName as $option_Name){
			$data[]=array(
				'examGroup'=>$group_name,
				'teacher'=>$user,
				'subject'=>$subject,
				'grade'=>$gradesec,
				'examname'=>$examname,
				'answer'=>$answern,
				'question'=>$numbern,
				'question_type'=>$question_type,
				'question_weight'=>$question_weight,
				'a'=>$option_Name,
				'exam_terminate_status'=>$terminate_status,
				'exam_started_time'=>$startedTime_status,
				'see_result_status'=>$can_see_resut_automatically,
				'datecreated'=>$datetried,
				'examinute'=>$minute,
				'academicyear'=>$max_year
			);
		}
		$query=$this->db->insert_batch('exam',$data);
		if($query){
			$output.='1';
		}else{
			$output.='0';
		}
		return $output;
	}
	function fetch_exams($max_year,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		$this->db->where('academicyear',$max_year);
     		$this->db->group_by('exam.examname,exam.grade,exam.subject');
        	$searchQuery = " (exam.examname like '%".$searchValue."%' or exam.datecreated like '%".$searchValue."%' or exam.subject like '%".$searchValue."%' or exam.grade like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->group_by('exam.examname,exam.grade,exam.subject');
     	$this->db->where('academicyear',$max_year);
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('exam')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->group_by('exam.examname,exam.grade,exam.subject');
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where('exam.academicyear',$max_year);
     	$records = $this->db->get('exam')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->group_by('exam.examname,exam.grade,exam.subject');
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->where('exam.academicyear',$max_year);
		$this->db->select('exam.teacher,exam.academicyear,exam.subject,exam.grade, exam.eid, exam.examname, exam.exam_started_time,exam.exam_terminate_status, exam.datecreated, users.fname,users.mname, users.lname ');
        $this->db->from('exam');
        $this->db->join('users', 
            'users.username = exam.teacher');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
     		$subject=$staff->subject;
       		$examName=$staff->examname;
       		$grade=$staff->grade;
            if($_SESSION['usertype']===trim('superAdmin') || $_SESSION['username'] == $staff->teacher)
          	{
                $action='<form method="POST" action="'.base_url().'examform/" target="_blanck">
                <input type="hidden" name="edited_exam_subject" value="'.$staff->subject.'"/>
                <input type="hidden" name="edited_exam_grade" value="'.$grade.'"/>
                <input type="hidden" name="edited_exam_year" value="'.$staff->academicyear.'"/>
                <input type="hidden" name="edited_exam_name" value="'.$examName.'"/>
                <a class="btn btn-info btn-sm btn-action copyThisExamName" id="'.$staff->academicyear.'" value="'.$staff->subject.'"  title="'.$examName.'" name="'.$grade.'" type="submit" data-toggle="modal" data-target="#copyExamPage"><i class="fas fa-copy"></i></a>
                <button class="btn btn-primary btn-sm btn-action mr-1 editThisExamName" target="_blanck" id="'.$staff->academicyear.'" value="'.$staff->subject.'"  title="'.$examName.'" name="start_editing_examName" type="submit"> <i class="fas fa-eye"></i> </button>
                <a class="btn btn-danger btn-sm btn-action deleteThisExamName" id="'.$staff->academicyear.'" value="'.$staff->subject.'"  title="'.$examName.'" name="'.$grade.'" type="submit"><i class="fas fa-trash"></i></a></form>';
            }else{
            	$action='<button class="btn btn-primary btn-action mr-1" disabled="disabled" type="submit"> 
            	<i class="fas fa-pencil-alt"></i> </button>
                <button class="btn btn-danger btn-action" disabled="disabled" type="submit">
                <i class="fas fa-trash"></i></button>';
            }
            if($staff->exam_started_time=='0000-00-00'){
          		$startedDate='Not set';
          	}else{
          		$startedDate = date('M-d-Y h:i:s a', strtotime($staff->exam_started_time));
          	} 
          	if($staff->exam_terminate_status=='0'){
          		$exam_terminate_status='OFF';
          	}else{
          		$exam_terminate_status='ON';
          	}
	    	$data[] = array( 
	           "examname"=>$staff->examname,
	           "subject"=>$staff->subject. ' , '.$staff->grade,
	           "exam_started_time"=>$startedDate,
	           "Action"=>$action,
	        ); 
     	}
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
   	}
   	function edit_this_exam_name($subject,$examGroup,$grade,$examName){
	    $output='';
	    $this->db->group_by('examGroup,examname');
	    $this->db->where(array('subject'=>$subject));
	    $this->db->where(array('examGroup'=>$examGroup));
	    $this->db->where(array('grade'=>$grade));
	    $this->db->where(array('examname'=>$examName));
	    $query=$this->db->get('exam');
	    $no=1;
	    $total_questions=$query->num_rows();
	    $queryRow=$query->row();
	    $timeAllowed=$queryRow->examinute;
	    $startedTime=$queryRow->exam_started_time;
	    $terminateStatus=$queryRow->exam_terminate_status;
	    $see_result_status=$queryRow->see_result_status;
	    $dataOption=array('Multiple Choice','True/False','Short Answer');
	    $output.='<form class="save_exam_changes" method="POST">
	    <div class="row">
	      <div class="col-lg-2 col-6 form-group">
	          <label>Exam Name</label>
	          <input type="text" name="editedExamName" id="editedExamName" class="form-control" required="required" value="'.$examName.'">
	        </div>
	        <div class="col-lg-2 col-6 form-group">
	          <label>Allowed Time</label>
	          <input type="text" name="editedAllowedTime" id="editedAllowedTime" class="form-control" required="required" value="'.$timeAllowed.'">
	        </div>
	        <div class="col-lg-3 col-6 form-group">
	          <label>Started Time</label>
	          <input type="datetime-local" name="editedStartedTime" id="editedStartedTime" class="form-control" required="required" value="'.$startedTime.'">
	        </div>
	        <div class="col-lg-5 col-12"><br>';
	              if($terminateStatus=='1'){
	                $output.='<div class="pretty p-switch">
	                  <input type="checkbox" name="editedterminate_exam_status" checked="checked" class="editedterminate_exam_status" id="editedterminate_exam_status" value="0">Terminate exam when time run out.
	                  <div class="state p-success pull-right">
	                      <label></label>
	                  </div>
	              </div>';
	              }else{
	                $output.='<div class="pretty p-switch">
	                  <input type="checkbox" name="editedterminate_exam_status" class="editedterminate_exam_status" id="editedterminate_exam_status" value="1">Terminate exam when time run out.
	                  <div class="state p-success pull-right">
	                      <label></label>
	                  </div>
	              </div>';
	              }              
	            if($see_result_status=='1'){
	              $output.='<div class="pretty p-switch">
	                      <input type="checkbox" name="editedsee_resut_automatically" class="editedsee_resut_automatically" checked="checked" id="editedsee_resut_automatically" value="0">Student can see their result automatically
	                      <div class="state p-success pull-right">
	                          <label></label>
	                      </div>
	                  </div>';
	            }else{
	              $output.='<div class="pretty p-switch">
	                      <input type="checkbox" name="editedsee_resut_automatically" 
	                      class="editedsee_resut_automatically" id="editedsee_resut_automatically" value="1">Student can see their result automatically
	                      <div class="state p-success pull-right">
	                          <label></label>
	                      </div>
	                  </div>';
	            }
	        $output.='</div>
	    </div>';
      	$output.='<input type="hidden" id="hiddenexam_subject_name" value="'.$subject.'">
      	<input type="hidden" id="hiddenexam_grade_name" value="'.$grade.'">
      	<input type="hidden" id="hiddenexam_name" value="'.$examName.'">
      	<input type="hidden" id="hiddenExamexamGroup" value="'.$examGroup.'">';
	    $no=1;
	    foreach($query->result() as $exam_name){
	      	$questionName=$exam_name->question;
	      	$a_gs=$exam_name->a;$b=$exam_name->b;$c=$exam_name->c;
			$d=$exam_name->d; $answer=$exam_name->answer;
	      	$question_type=$exam_name->question_type;
	      	$eid=$exam_name->eid;
	      	$output.='<div class="row">';
	      		$output.='<div class="col-lg-6 col-6 form-group">
	                <label> Question Type</label>
	                <select class="form-control" required="required" name="editedquestion_type" id="editedquestion_type">
	                <option></option>';
	                foreach($dataOption as $dataOptions){
	                  if($dataOptions ==$question_type ){ 
	                    $output.='<option selected="selected">'.$dataOptions.'</option>';
	                   }else{ 
	                    $output.='<option>'.$dataOptions.'</option>';
	                 }
	                } 
	                $output.='</select>
	           	</div>
	            <div class="col-lg-6 col-6 form-group">
	              	<label>Question Weight</label>
	              	<input type="number" name="editedquestion_weight" id="editedquestion_weight" class="form-control" required="required" value="'.$exam_name->question_weight.'">
	            </div>
	            <div class="col-lg-12 col-12 form-group">
	              <textarea class="editedname_Question" name="editedname_Question" id="editedname_Question" required>'.$questionName.'
	              </textarea>
	            </div>
	            <div class="col-lg-12 col-12 form-group">';
                $this->db->where(array('subject'=>$subject));
                $this->db->where(array('grade'=>$grade));
                $this->db->where(array('examname'=>$examName));
                $this->db->where(array('examGroup'=>$examGroup));
                $this->db->group_by('eid,examGroup');
                $queryFetch=$this->db->get('exam');
                foreach($queryFetch->result() as $row_choice) { 
                    $examGroupNow=$row_choice->examGroup;
                    $eidNow=$row_choice->eid;
                    $optionChoice=$row_choice->a;
                    $output.='<input type="hidden" id="hidden_examGroup" value="'.$examGroupNow.'">
                    <input type="hidden" id="hidden_questionID" name="hidden_questionID" value="'.$eidNow.'">';
                    if($answer == '' && $optionChoice == ''){
                    	$output.='<ul class="list-unstyled list-unstyled-border">
                      <li class="media">
                        <div class="custom-control">
                          <input type="radio" class="best_correct_answer" id="best_correct_answer" name="best_correct_answer" value="'.$optionChoice.'">
                        </div>             
                        	<input type ="text" class="form-control text-danger" name="editedca" id="editedca" value="No answer for this question">
                        </li>
                      </ul>';
                    }elseif($answer == '' && $optionChoice != ''){
                    	$output.='<ul class="list-unstyled list-unstyled-border">
                      <li class="media">
                        <div class="custom-control">
                          <input type="radio" class="best_correct_answer" id="best_correct_answer" name="best_correct_answer" value="'.$optionChoice.'">
                        </div>             
                        	<input type ="text" class="form-control text-danger" name="editedca" id="editedca" value="'.$optionChoice.'">
                        </li>
                      </ul>';
                    }elseif($answer != '' && $optionChoice == ''){
                    	$output.='<ul class="list-unstyled list-unstyled-border">
                      <li class="media">
                        <div class="custom-control">
                          <input type="radio" class="best_correct_answer" id="best_correct_answer" name="best_correct_answer" value="'.$optionChoice.'" checked="checked">
                        </div>             
                        	<input type ="text" class="form-control" name="editedca" id="editedca" value="'.$answer.'">
                        </li>
                      </ul>';
                    }else if(strcasecmp($answer, $optionChoice) === 0 && trim($answer) === trim($optionChoice) && strcmp($answer, $optionChoice) === 0){
                    	$output.='<ul class="list-unstyled list-unstyled-border" style="background-color: #e1ffe1;">
	                      	<li class="media">
	                        <div class="custom-control">
	                          <input type="radio" class="best_correct_answer" id="best_correct_answer" name="best_correct_answer" value="'.$optionChoice.'" checked="checked">
	                        </div>             
	                        	<input type ="text" class="form-control" name="editedca" id="editedca" value="'.$optionChoice.'">
	                        </li>
                      	</ul>';
                    }else{
                    	$output.='<ul class="list-unstyled list-unstyled-border">
	                      	<li class="media">
	                        <div class="custom-control">
	                          <input type="radio" class="best_correct_answer" id="best_correct_answer" name="best_correct_answer" value="'.$optionChoice.'">
	                        </div>             
	                        	<input type ="text" class="form-control" name="editedca" id="editedca" value="'.$optionChoice.'">
	                        </li>
                      	</ul>';
                   	}
                }
                $output.='</div>';
	      	$output.='</div>';
	        $output.='<hr> ';
	        $no++;
	    }
	    $output.='<button type="submit" name="saveeditedexam" id="saveeditedexam" class="btn btn-success pull-right">Save Changes</button></form>';
	    return $output;
	}
  	function copy_this_exam_name($subject,$academicyear,$grade,$examName){
	    $output='';
	    $this->db->where(array('subject'=>$subject));
	    $this->db->where(array('academicyear'=>$academicyear));
	    $this->db->where(array('grade'=>$grade));
	    $this->db->where(array('examname'=>$examName));
	    $query=$this->db->get('exam');
	    $output.='<form class="save_exam_changes_copy" method="POST">';
	    $output.='<input type="hidden" id="hiddencopiedexam_subject_name" value="'.$subject.'">
	    <input type="hidden" id="hiddencopied_grade_name" value="'.$grade.'">
	    <input type="hidden" id="hiddencopiedexam_name" value="'.$examName.'">
	    <input type="hidden" id="hiddencopiedacademicYear" value="'.$academicyear.'">';
	    $noo=1;
	    $this->db->where('users.academicyear',$academicyear);
		$this->db->where('users.grade !=','0');
		$this->db->where('users.grade !=','');
		$this->db->group_by('users.grade');
		$this->db->order_by('users.grade','ASC');
		$queryGrade = $this->db->get('users');
		if($queryGrade->num_rows()>0){
			$output.='<div class="row">
			<div class="col-md-6 col-6 form-group">
			<label for="Mobile">Select grade for which the exam copy to.</label>';
			$output.='<select class="form-control" required="required" name="new_copied_grade" id="new_copied_grade">
			<option></option>';
			foreach($queryGrade->result() as $row){
				$output.='<option>'.$row->grade.'</option>';
			}
			$output.='</select></div>';
			$output.='<div class="col-lg-6 col-6">
                <div class="form-group">
                    <label for="Mobile">Select subject for which the exam copy to</label>
                    <select class="form-control" required="required" name="new_copied_subject" id="new_copied_subject">
                    </select>
                  </div>
                </div>
			</div>';
		}
	    $output.='<button type="submit" name="savecopiedexam" id="savecopiedexam" class="btn btn-success pull-right">Copy Exam</button></form>';
	    return $output;
  	} 
	function fetch_my_exam($sid,$grade,$max_year){
		$query1="Select ex.academicyear,us.profile,us.fname,us.mname, us.lname,ex.examname,ex.subject,ex.grade,ex.examname,ex.question,ex.exam_started_time,ex.a,ex.b,ex.c,ex.d,ex.answer,ex.examinute,ex.datecreated,ex.teacher,ex.exam_terminate_status from users as us cross join exam as ex where ex.grade=? and ex.academicyear=? and us.username=ex.teacher group by ex.examname ,ex.subject order by ex.exam_started_time DESC ";
		$query=$this->db->query($query1,array($grade,$max_year));
		$output='';
		if($query->num_rows()>0){
			$output.='<input type="hidden" name="liveExamYear" id="liveExamYear" value="'.$max_year.'"> ';
			foreach($query->result() as $exams){
				$id=$exams->examname;
				$subject= $exams->subject;
				$examname=$exams->examname; 
				$liveTime=$exams->exam_started_time; 
				$examinute=$exams->examinute;
				$exam_terminate_status=$exams->exam_terminate_status;
				date_default_timezone_set("Africa/Addis_Ababa");
              	$dtz = new DateTimeZone('UTC');
              	$dt = new DateTime(date("Y-m-d h:i A"), $dtz); 
              	$date_now = gmdate("Y-m-d h:i A", $dt->format('U'));				
				if($liveTime=='0000-00-00'){
	          		$startedDate='Not set';
	          	}else{
	          		$startedDate = date('M-d-Y h:i:s a', strtotime($liveTime));
	          	}
				$previousTimeStamp = strtotime($date_now);
				$lastTimeStamp = strtotime($liveTime);
				$menos=$lastTimeStamp-$previousTimeStamp;
				$mins=$menos/60;
				$minsfinal=floor($mins);
				$secondsfinal=$menos-($minsfinal*60);
				$hours=$minsfinal/60;
				$hoursfinal=floor($hours);
				$minssuperfinal=$minsfinal-($hoursfinal*60);
				$days=$hoursfinal/24;
				$daysfinal=floor($days);
				$hourssuperfinal=$hoursfinal-($daysfinal*24);
				$text='';

				$time_length = date('M-d-Y h:i:s a', strtotime($liveTime.' +'.$examinute.'minutes'));
				/*$time_length = gmdate('Y-m-d H:i:s',strtotime(' +'.$examinute.'minutes',$dt->format('U')));*/
	          	$time_finished = strtotime($time_length);
	          	$times_started = strtotime($date_now);
	          	$menos1=$time_finished-$times_started;
	          	$mins1=$menos1/60;
	          	$minsfinal1=floor($mins1);
	          	$secondsfinal1=$menos1-($minsfinal1*60);
	          	$hours1=$minsfinal1/60;
	          	$hoursfinal1=floor($hours1);
	          	$minssuperfinal1=$minsfinal1-($hoursfinal1*60);
	          	$days1=$hoursfinal1/24;
	          	$daysfinal1=floor($days1);
	          	$hourssuperfinal1=$hoursfinal1-($daysfinal1*24);
				if($mins<1){
		          	if($mins1<1){
		          		$showing='Exam was live on '.$time_length.'';
					}else{
						$showing='Live Exam';
					}
				}
				else{
					$text='Exam will be live on '.$startedDate.'';
					if($hours<1){
						$showing= $minsfinal . " minutes left";
					}else{
						if($days<1){
						$showing= $daysfinal. " days, " . $hoursfinal . " hours, " . $minssuperfinal . " minutes left";
						}else{
							$showing= $daysfinal. " days, " .$hourssuperfinal . " hours, " . $minssuperfinal . " minutes ago";
						}
					}	
				}
				$output.='<div class="support-ticket media pb-1 mb-3 StudentViewTextInfo">
                    <div class="media-body">';
                    $query1=" select * from examtried where stuid=? and academicyear=? and triedsubject=? and triedexam=? ";
                    $query=$this->db->query($query1,array($sid,$max_year,$subject,$examname));
                    if($query->num_rows() < 1 && $minsfinal < 1 && $mins1 >0 ){
                    	$output.='<input type="hidden" name="liveExamDuration" id="liveExamDuration" value="'.$minssuperfinal1.'">
                    	<input type="hidden" name="terminateLiveExamTime" id="terminateLiveExamTime" value="'.$exam_terminate_status.'">
                    	<div class="badge badge-pill badge-success mb-1 float-right"><button name="'.$exams->grade.'" id="'.$sid.'" value="'.$exams->subject.'" title="'.$exams->examname.'" class="btn btn-default startmyexam" type="submit"> Start Exam </button></div>';
                    }else{
	                    if($query->num_rows() >0 || $minsfinal < 1 || $mins1 < 1 ){
	                    	$output.='<div class="badge badge-pill badge-warning mb-1 float-right"><button name="startmyexam" id="startmyexam" value="'.$exams->examname.'" class="btn btn-default startmyexam" type="submit" disabled="disabled"> Missed Exam </button></div>';
	                    }else{
	                    	$output.='<div class="badge badge-pill badge-primary mb-1 float-right"><button name="'.$subject.'" value="'.$exams->examname.'" class="btn btn-default startmyexam" type="submit" disabled="disabled"> Upcoming Exam </button></div>';
	                    }
	                }
                    $output.='<h2 class="font-weight-bold">'.$subject.'
                      <a href="javascript:void(0)">'.$examname.'</a> <span class="badge badge-light" style="text-wrap:wrap"> '.$showing.' </span> </h2>
                      <p class="my-1 text-muted">'.$text.' </p>
                      <small class="text-muted">Created by <span class="font-weight-bold font-13">'.$exams->fname .' '. $exams->mname .' '. $exams->lname .'</span> at '. $exams->datecreated.'</small>
                    </div>
                </div>';
			}
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No new exam found.
        	</div></div>';
		}
        return $output;
	}
	function read_exam($id,$subject,$grade,$max_year){
		$this->db->group_by('examGroup,examname');
		$this->db->where(array('exam.examname'=>$id));
		$this->db->where(array('exam.subject'=>$subject));
		$this->db->where(array('exam.grade'=>$grade));
		$this->db->where(array('exam.academicyear'=>$max_year));
		$this->db->select('*');
        $this->db->from('exam');
        $this->db->join('users', 
            'users.username = exam.teacher');
        $query = $this->db->get();
        $output='';
        if($query->num_rows()>0){
        	$no=1;
        	$output.='<div class="text-danger"> <i class="fas fa-exclamation-triangle"> </i> 
        	Please don`t close or refresh tab until you finish the exam.</div>';
        	$output.='<form method="POST" action="">';
        	foreach($query->result() as $read_mores){
        		$eid=$read_mores->eid;
        		$question_type=$read_mores->question_type;
        		$examGroup=$read_mores->examGroup;
        		$this->db->where(array('subject'=>$subject));
                $this->db->where(array('academicyear'=>$max_year));
                $this->db->where(array('grade'=>$grade));
                $this->db->where(array('examname'=>$id));
                $this->db->where(array('examGroup'=>$examGroup));
                $this->db->group_by('eid,examGroup');
                $queryFetch=$this->db->get('exam');
        		$output.='<input type="hidden" id="answer_eid" name="eid[ ]" value="'.$examGroup.'">
                <input type="hidden" id="subject_answer" name="subject" value="'. $read_mores->subject.'">
                <input type="hidden" id="examName_answer" name="examname" value="'.$read_mores->examname.'">';
                $output.='<div class="support-ticket media">
                	<div class="media-body ml-3">
                      	<div class="badge badge-pill badge-light float-right">'.$read_mores->question_weight.'pts
                      	</div>
                      	<span class="font-weight-bold">Question '.$no.'.</small> '.nl2br(html_entity_decode($read_mores->question)).'</span> ';
                    	foreach($queryFetch->result() as $row_choice) {
                    		$examGroupCurrent=$row_choice->examGroup;
                			$optionChoice=$row_choice->a;
			                if($question_type=='Short Answer'){
			                	$output.='<textarea class="my_short_anser" name="my_short_anser[ ]" id="my_short_anser" required> Short answer here...
			                	</textarea>
			                	<button type="submit" name="save_short_answer" id="'.$examGroup.'" class="btn btn-success pull-right save_short_answer">Save Short Answer</button><hr>';
			                }else{
			                	$output.='<div class="custom-control">
	                                <input type="radio" name="'.$examGroup.'" class="custom-control-input select_exam_choice" id="'.$row_choice->eid.'" value="'.$optionChoice.'" >
	                                <label class="custom-control-label" for="'.$row_choice->eid.'">'.htmlentities($optionChoice).'</label>
	                            </div>';
			                }
                		}
                	$output.='</div>
                </div>';
                $no++;
        	}
        	$output.=' </form>';
        }else{
        	$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> Ooops, No new exam found.
        	</div></div>';
        }
        return $output;
	}
	function my_answer($sid,$subject,$examname,$question,$mianswer,$datetime,$max_year){
		$data=array();
		$queryCheck1="select * from examanswer where sid=? and subject=? and examname=? and ques=? and academicyear=? ";
		$queryCheck=$this->db->query($queryCheck1,array($sid,$subject,$examname,$question,$max_year));
		if($queryCheck->num_rows()>0){
			$this->db->where('sid',$sid);
			$this->db->where('subject',$subject);
			$this->db->where('examname',$examname);
			$this->db->where('ques',$question);
			$this->db->where('academicyear',$max_year);
			$this->db->set('ans',$mianswer);
			$query=$this->db->update('examanswer');
		}else{
			$data=array(
				'sid'=>$sid,
				'subject'=>$subject,
				'examname'=>$examname,
				'ques'=>$question,
				'ans'=>$mianswer,
				'datesubmitted'=>$datetime,
				'academicyear'=>$max_year
			);
			$query=$this->db->insert('examanswer',$data);
		}
		if($query){
			return true;
		}
		else{
			return false;
		}
	}
	function fetch_my_examresult($sid,$max_year){
		$this->db->where(array('examanswer.sid'=>$sid));
		$this->db->where(array('examanswer.academicyear'=>$max_year));
		$this->db->where(array('exam.academicyear'=>$max_year));
		$this->db->where(array('exam.see_result_status'=>'1'));
		$this->db->group_by('exam.examname,exam.subject');
		$this->db->order_by('examanswer.id','DESC');
		$this->db->select('exam.examname,exam.subject');
        $this->db->from('examanswer');
        $this->db->join('exam', 
            'exam.examname = examanswer.examname');
        $query = $this->db->get();
        return $query->result();
	}
	function this_exam_name($examname,$max_year,$grade,$subject){
		$this->db->group_by('examGroup,examname');
		$this->db->where(array('examname'=>$examname));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('subject'=>$subject));
		$query = $this->db->get('exam');
        if($query->num_rows() > 0){
        	return $query->result();
        }
        else{
        	return false;
        }
	}
	function this_exam_name_header_detail($examname,$max_year,$grade,$subject){
		$this->db->group_by('examname');
		$this->db->where(array('examname'=>$examname));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('subject'=>$subject));
		$query = $this->db->get('exam');
        if($query->num_rows() > 0){
        	return $query->result();
        }
        else{
        	return false;
        }
	}
	function insert_save_copied_exam($examname,$max_year,$subject,$grade,$newCopiedGrade,$newCopiedSubject){
		$this->db->where(array('examname'=>$examname));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('subject'=>$subject));
		$query = $this->db->get('exam');
        if($query->num_rows() > 0){
        	$dataArray=array();
        	foreach($query->result() as $row){
        		$dataArray[]=array(
        			'teacher'=>$row->teacher,
        			'examGroup'=>$row->examGroup,
        			'subject'=>$newCopiedSubject,
        			'grade'=>$newCopiedGrade,
        			'examname'=>$row->examname,
        			'question_type'=>$row->question_type,
        			'question_weight'=>$row->question_weight,
        			'question'=>$row->question,
        			'a'=>$row->a,
        			'b'=>$row->b,
        			'c'=>$row->c,
        			'd'=>$row->d,
        			'answer'=>$row->answer,
        			'examinute'=>$row->examinute,
        			'exam_terminate_status'=>$row->exam_terminate_status,
        			'see_result_status'=>$row->see_result_status,
        			'exam_started_time'=>$row->exam_started_time,
        			'academicyear'=>$row->academicyear,
        			'datecreated'=>$row->datecreated
        		);
        	}
        	$queryInsert=$this->db->insert_batch('exam',$dataArray);
        	if($queryInsert){
        		return '1';
        	}else{
        		return '0';
        	}
        }
        else{
        	return '0';
        }
	}
   	function fetch_student_detail_result($subject,$examName,$academicyear,$stuid){
   		$output='';
   		$this->db->group_by('exam.examGroup,exam.examname');
		$this->db->where(array('examanswer.sid'=>$stuid));
		$this->db->where(array('examanswer.subject'=>$subject));
		$this->db->where(array('examanswer.examname'=>$examName));
		$this->db->where(array('examanswer.academicyear'=>$academicyear));
		$this->db->select('*');
        $this->db->from('examanswer');
        $this->db->join('exam', 
            'exam.examGroup = examanswer.ques');
        $query = $this->db->get();
        if($query->num_rows() > 0){
        	$total_weight=0;$correctAnswer=0;$no =1;
        	foreach($query->result() as $read_mores){
        		$examName=$read_mores->examname; 
                $examGroup=$read_mores->examGroup;
                $subject=$read_mores->subject;
                $grade=$read_mores->grade;
                $academicyear=$read_mores->academicyear;
                $ans2=$read_mores->ans;
                $weight=$read_mores->question_weight;
                $total_weight=$total_weight + $weight;
	            $output.='<div class="support-ticket">
                <div class="media-body ml-1">
                <div class="badge badge-pill badge-light mb-1 float-right">'.$weight.' pts.</div>
                <span class="font-weight-bold">Q'.$no.'. '.html_entity_decode($read_mores->question).'</span>';
                $this->db->where(array('subject'=>$subject));
                $this->db->where(array('academicyear'=>$academicyear));
                $this->db->where(array('grade'=>$grade));
                $this->db->where(array('examname'=>$examName));
                $this->db->where(array('examGroup'=>$examGroup));
                $this->db->group_by('eid,examGroup');
                $queryFetch=$this->db->get('exam');
                foreach($queryFetch->result() as $row_choice) { 
                    $examGroupNow=$row_choice->examGroup;
                    $eidNow=$row_choice->eid;
                    $answer=$row_choice->answer;
                    $optionChoice=$row_choice->a;
                    if($answer=='' && $optionChoice == ''){ 
                      $output.='<ul>
                        <li class="text-info">'.htmlentities($optionChoice).'</li>
                      </ul>';
                    } elseif($answer == '' && $optionChoice != ''){
                      $output.='<ul>
                        <li>'.htmlentities($optionChoice).'</li>
                      </ul>';
                    } elseif($answer != '' && $optionChoice == ''){
                      $output.='<ul style="background-color: #DFF5E5;">
                        <li>'.htmlentities($answer).'</li>
                      </ul>';
                    } else if(strcasecmp($answer, $optionChoice) === 0 && trim($answer) === trim($optionChoice) && strcmp($answer, $optionChoice) === 0){
                      $output.='<ul style="background-color: #DFF5E5;">
                        <li>'.htmlentities($optionChoice).'</li>
                      </ul>';
                    } else{ 
                        $output.='<ul>
                          <li>'.htmlentities($optionChoice).'</li>
                        </ul>';
                    } 
                } $no++;
                if(strcasecmp($ans2, $answer) === 0 && trim($ans2) === trim($answer) && strcmp($ans2, $answer) === 0){ 
                      $correctAnswer=$correctAnswer + $weight; 
                } else{
                    $output.='<span class="text-danger">
                      Your answer was <i class="fas fa-chevron-right"></i>'.$read_mores->ans.'<i data-feather="x"></i>
                      </span>';
                }
                $output.='<hr>
                  </div>
                </div>';
        	}
        	if($correctAnswer==$total_weight){
        	$output.='<span class="badge badge-success pull-right"><h4 class="pull-right">Total Results: '.$correctAnswer.'/ '.$total_weight.'</h4></span>';
          	} else{
        	$output.='<span class="badge badge-primary pull-right"><h4 class="pull-right">Total Results: '.$correctAnswer.'/ '.$total_weight.'</h4></span>';
          	}
        }else{
        	$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No data found yet.May be he/she did`t take the exam
            </div></div>';
        }
        return $output;
   	}
   	function examnot_completedReport($max_year,$postData=null){

     $responseData = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
     	$this->db->where('academicyear',$max_year);
        $searchQuery = " (triedsubject like '%".$searchValue."%' or triedexam like '%".$searchValue."%' or datetried like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $this->db->where('academicyear',$max_year);
     $records = $this->db->get('examtried')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
    $this->db->where('academicyear',$max_year);
     $records = $this->db->get('examtried')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $this->db->order_by($columnName, $columnSortOrder);
     $this->db->limit($rowperpage, $start);
     $this->db->where('examtried.academicyear',$max_year);
		$this->db->select('examtried.id,examtried.stuid,examtried.triedsubject, examtried.triedexam, examtried.datetried,users.fname, users.mname, users.lname, users.gradesec');
		$this->db->from('examtried');
		$this->db->join('users',
		'users.id=examtried.stuid');
		$records = $this->db->get()->result();
     $data = array();
     foreach($records as $record ){
     	$subject=$record->triedsubject;
     	$examname=$record->triedexam;
     	$stuid=$record->stuid;
     	$this->db->where('academicyear',$max_year);
     	$this->db->where('subject',$subject);
     	$this->db->where('examname',$examname);
     	$this->db->where('sid',$stuid);
     	$queryCheck=$this->db->get('examanswer');
     	if($queryCheck->num_rows()<1){
	 		$action='<span class="text-danger">Not Completed</span> . <a href="#" id="allowtotrayagain" class="text-info" value="'.$record->id.'">Re-Tray</a>';
	 	}else{
	 		$action='<span class="text-success">Completed</span> . <a href="#" id="allowtotrayagain" class="text-info" value="'.$record->id.'">Re-Tray</a>';
	 	}
    	$data[] = array( 
    		"fname"=>$record->fname." ".$record->mname." ".$record->lname." ",
           	"triedsubject"=>$record->triedsubject,
           	"triedexam"=>$record->triedexam,
           	"datetried"=>$record->datetried,
           	"Action"=>$action
        ); 
     }
     ## Response
     $responseData = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $responseData; 
	}
	function myschool_fetch_exam($branch,$max_year){
		$query = $this->db->query("select us.profile, us.fname,us.mname ,ex.eid,ex.examname, ex.datecreated,ex.teacher,ex.subject,ex.grade from users as us cross join exam as ex where us.branch='$branch' and ex.academicyear='$max_year' and us.academicyear=$max_year' and  us.username=ex.teacher group by ex.examname,ex.subject,ex.grade order by ex.eid DESC ");
        return $query->result();
	}
	function fetch_online_exams_result($max_year,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		$this->db->where('academicyear',$max_year);
     		$this->db->group_by('exam.examname,exam.grade,exam.subject');
        	$searchQuery = " (exam.examname like '%".$searchValue."%' or exam.datecreated like '%".$searchValue."%' or exam.subject like '%".$searchValue."%' or exam.grade like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->group_by('exam.examname,exam.grade,exam.subject');
     	$this->db->where('academicyear',$max_year);
     	$this->db->group_by('exam.examname,exam.grade,exam.subject');
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('exam')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->group_by('exam.examname,exam.grade,exam.subject');
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where('exam.academicyear',$max_year);
     	$records = $this->db->get('exam')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->group_by('exam.examname,exam.grade,exam.subject');
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->where('exam.academicyear',$max_year);
		$this->db->select('exam.teacher,exam.academicyear,exam.subject,exam.grade, exam.eid, exam.examname, exam.exam_started_time,exam.exam_terminate_status, exam.datecreated, users.fname,users.mname, users.lname ');
        $this->db->from('exam');
        $this->db->join('users', 
            'users.username = exam.teacher');
        $records = $this->db->get('')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
     		$subject=$staff->subject;
       		$examName=$staff->examname;
       		$grade=$staff->grade;
            if($_SESSION['usertype']===trim('superAdmin') || $_SESSION['username'] == $staff->teacher)
          	{
                $action='<form method="POST" action="'.base_url().'examresult/" target="_blanck">
                <input type="hidden" name="view_exam_subject" value="'.$staff->subject.'"/>
                <input type="hidden" name="view_exam_grade" value="'.$grade.'"/>
                <input type="hidden" name="view_exam_year" value="'.$staff->academicyear.'"/>
                <input type="hidden" name="view_exam_name" value="'.$examName.'"/>
                <button class="btn btn-primary btn-sm btn-action mr-1 viewThisExamName" target="_blanck" id="'.$grade.'" value="'.$examName.'"  title="'.$staff->subject.'" name="viewresult" type="submit"> View Result </button>
                <a class="btn btn-success btn-sm btn-action addToRegularMark" id="'.$staff->academicyear.'" value="'.$staff->subject.'"  title="'.$examName.'" name="'.$grade.'" type="submit" data-toggle="modal" data-target="#addExamResultPage">Add to Mark Sheet</a>
                </form>';
            }else{
            	$action='<button class="btn btn-primary btn-action mr-1" disabled="disabled" type="submit"> 
            	<i class="fas fa-pencil-alt"></i> </button>
                <button class="btn btn-danger btn-action" disabled="disabled" type="submit">
                <i class="fas fa-trash"></i></button>';
            }
            if($staff->exam_started_time=='0000-00-00'){
          		$startedDate='Not set';
          	}else{
          		$startedDate = date('M-d-Y h:i:s a', strtotime($staff->exam_started_time));
          	} 
          	if($staff->exam_terminate_status=='0'){
          		$exam_terminate_status='OFF';
          	}else{
          		$exam_terminate_status='ON';
          	}
	    	$data[] = array( 
	           "examname"=>$staff->examname,
	           "subject"=>$staff->subject. ' , '.$staff->grade,
	           "datecreated"=>$staff->fname.' '.$staff->mname.' <small class="text-muted">('.$staff->datecreated.')</small>',
	           "Action"=>$action,
	        ); 
     	}
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
   	}
	function add_this_exam_result_to_regular($subject,$academicyear,$grade,$examName){
	    $output='';
	    $this->db->where(array('subject'=>$subject));
	    $this->db->where(array('academicyear'=>$academicyear));
	    $this->db->where(array('grade'=>$grade));
	    $this->db->where(array('examname'=>$examName));
	    $query=$this->db->get('exam');
	    $output.='<form class="save_exam_changes_add" id="save_exam_changes_add" method="POST">';
	    $output.='<input type="hidden" name="hiddenaddedexam_subject_name" id="hiddenaddedexam_subject_name" value="'.$subject.'">
	    <input type="hidden" name="hiddenadded_grade_name"  id="hiddenadded_grade_name" value="'.$grade.'">
	    <input type="hidden" name="hiddenaddedexam_name"  id="hiddenaddedexam_name" value="'.$examName.'">
	    <input type="hidden" name="hiddenaddedacademicYear"  id="hiddenaddedacademicYear" value="'.$academicyear.'">';
	    $noo=1;
	    $this->db->where('Academic_year',$academicyear);
		$this->db->group_by('term');
		$this->db->order_by('term','DESC');
		$queryTerm=$this->db->get('quarter');
		$output.='<div class="row">
		<div class="col-md-4 col-6 form-group">
		<label for="Mobile">Grade</label>';
		$output.='<select class="form-control" required="required" name="new_added_grade" id="new_added_grade"> ';
		$output.='<option>'.$grade.'</option>';
		$output.='</select></div>';
		$output.='<div class="col-lg-4 col-6">
            <div class="form-group">
                <label for="Mobile">Subject</label>
                <select class="form-control" required="required" name="new_added_subject" id="new_added_subject"> ';
				$output.='<option>'.$subject.'</option>';
                $output.='</select>
              </div>
            </div>
            <div class="col-lg-4 col-6">
            <div class="form-group">
                <label for="Mobile">Exam Name</label>
                <select class="form-control" required="required" name="new_added_examname" id="new_added_examname"> ';
				$output.='<option>'.$examName.'</option>';
                $output.='</select>
              </div>
            </div>
            <div class="col-md-4 col-6 form-group">
			<label for="Mobile">Select season for which the exam copy to.</label>';
			$output.='<select class="form-control" required="required" name="new_season_grade" id="new_season_grade">
			<option> </option>';
			foreach($queryTerm->result() as $rowTerm){
				$output.='<option>'.$rowTerm->term.'</option>';
			}
			$output.='</select></div>
			<div class="col-md-4 col-6 form-group">
			<label for="Mobile">Select evaluation</label>';
			$output.='<select class="form-control" required="required" name="new_evaluation_grade" id="new_evaluation_grade"> ';

			$output.='</select></div>
		</div>';
	    $output.='<button type="submit" name="saveadddedexam" id="saveadddedexam" class="btn btn-success pull-right">Add Exam Result</button></form>';
	    return $output;
  	}
	function save_thisadded_exam_name($examname,$max_year,$subject,$grade,$quarter,$evaluation){
		$this->db->where(array('examname'=>$examname));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('grade'=>$grade));
		$this->db->where(array('subject'=>$subject));
		$query = $this->db->get('exam');
		$output='';
        if($query->num_rows() > 0){
        	$dataArray=array();
        	$dataExamFound=array();
        	$dataTableFound=array();
        	$dataInsertMark=array();
        	$dataExamSuccess=array();
        	$queryBranch=$this->db->query("select name from branch where academicyear='$max_year'  group by name");
			if($queryBranch->num_rows()>0){
				foreach($queryBranch->result() as $branchName){
					$branch=$branchName->name;
					$queryGradesec=$this->db->query("select gradesec from users where academicyear='$max_year' and grade='$grade' and usertype='Student' and branch='$branch' and gradesec!='' and gradesec!='0' group by gradesec order by gradesec ASC ");
					if($queryGradesec->num_rows()>0){
						foreach($queryGradesec->result() as $GradesecName){
							$gradesec=$GradesecName->gradesec;
							$queryCheck = $this->db->query("SHOW TABLES LIKE 'mark".$branch.$gradesec.$quarter.$max_year."' ");
							if($queryCheck->num_rows()>0){	
								$this->db->where(array('mgrade'=>$gradesec));
								$this->db->where(array('subname'=>$subject));
								$this->db->where(array('quarter'=>$quarter));
								$this->db->where(array('markname'=>$examname));
								$this->db->where(array('academicyear'=>$max_year));
								$this->db->where(array('mbranch'=>$branch));
								$querystu=$this->db->get('mark'.$branch.$gradesec.$quarter.$max_year);
								if($querystu->num_rows()>0){
									$dataExamFound[]=array(
										'markname'=>$examname,
										'gradesec'=>$gradesec,
										'subject'=>$subject
									);
								}else{
									$queryR=$this->db->query("select us.gradesec,us.id,us.fname, us.mname,us.lname,us.branch, ex.academicyear, ex.answer, ex.eid, ex.question, ex.examGroup, ex.question_weight, ex.subject, ex.examname,ex.grade from exam as ex cross join users as us where ex.examname='$examname' and ex.grade='$grade' and us.grade='$grade' and ex.subject='$subject' and ex.academicyear='$max_year' and us.academicyear='$max_year' and us.status='Active' and us.isapproved='1' and ex.grade=us.grade group by us.id order by fname,mname,lname ");
									foreach($queryR->result() as $result){
										$correctAnswer=0;$total_weight=0;
			                            $ac=$result->academicyear;
			                            $subject=$result->subject;
			                            $examname=$result->examname;
			                            $grade=$result->grade;
			                            $ques=$result->eid;
			                            $id=$result->id;
			                            $queryGroup = $this->db->query("select * from exam where subject='$subject' and examname='$examname' and academicyear='$ac' and grade='$grade' group by examGroup ");
                                		if($queryGroup->num_rows()>0){
                                  			foreach ($queryGroup->result() as $kvalueW) {
                                  				$weight=$kvalueW->question_weight;
			                                    $total_weight=$total_weight + $weight;
			                                    $orginalAnswer=$kvalueW->answer;
			                                    $examGroup=$kvalueW->examGroup;
			                                    $query = $this->db->query("select * from examanswer where subject='$subject' and examname='$examname' and ques=$examGroup and academicyear='$ac' and sid='$id' ");
			                                    foreach ($query->result() as $kvalue) {
			                                      	$answ2=$kvalue->ans;
			                                      	if(strcasecmp($orginalAnswer, $answ2) === 0 && trim($orginalAnswer) === trim($answ2) && strcmp($orginalAnswer, $answ2) === 0){
			                                        	$correctAnswer=$correctAnswer + $weight;
			                                      	}
			                                    }
			                                }
		                                    $dataInsertMark[]=array(
					                            'stuid'=>$id,
					                            'academicyear'=>$max_year,
					                            'markname'=>$examname,
					                            'subname'=>$subject,
					                            'evaid'=>$evaluation,
					                            'quarter'=>$quarter,
					                            'outof'=>$total_weight,
					                            'value'=>$correctAnswer,
					                            'mgrade'=>$gradesec,
					                            'mbranch'=>$branch,
					                            'approved'=>'0'
					                       	);
                                  		}
									}
									$dataExamSuccess[]=array(
										'gradesec'=>$gradesec,
										'term'=>$quarter,
										'branch'=>$branch
									);
								}
								if(!empty($dataInsertMark)){
									$queryInsert=$this->db->insert_batch('mark'.$branch.$gradesec.$quarter.$max_year,$dataInsertMark);
								}
							}else{
								$dataTableFound[]=array(
									'gradesec'=>$gradesec,
									'term'=>$quarter,
									'branch'=>$branch
								);
							}
						}
					}
				}
			}
			if(!empty($dataInsertMark)){
				if($queryInsert){
					$output.='<span class="text-success">Result saved successfully for '.json_encode($dataExamSuccess).'</span><br>';
				}else{
					$output.='<span class="text-danger">Unable to add data to mark sheet..</span>';
				}
			}
			if(!empty($dataTableFound)){
				$output.='<span class="text-danger">Table not found for '.json_encode($dataTableFound).'</span>';
			}
			if(!empty($dataExamFound)){
				$output.='<span class="text-danger">Exam found for '.json_encode($dataExamFound).'</span>';
			}
        }else{
        	$output.='0';
        }
        return $output;
	}
	function fetch_evaluation_onlineExam($quarter,$gradesec,$max_year){
		$output='';
		$this->db->where(array('evaluation.quarter'=>$quarter));
		$this->db->where('evaluation.grade',$gradesec);
		$this->db->where(array('evaluation.academicyear'=>$max_year));
		$this->db->order_by('evaluation.evname','ASC');
		$this->db->group_by('evaluation.evname');
		$query=$this->db->get('evaluation');
		$output.='<option> </option>';
		foreach ($query->result() as $row) { 
			$output.='<option value="'.$row->eid.'">'.$row->evname.'</option>';
		}
		return $output;
	}
	function fetch_rejected_registration($max_year,$postData=null){
     	
     	$response = array();

     	## Read value
     	$draw = $postData['draw'];
     	$start = $postData['start'];
     	$rowperpage = $postData['length']; // Rows display per page
     	$columnIndex = $postData['order'][0]['column']; // Column index
     	$columnName = $postData['columns'][$columnIndex]['data']; // Column name
     	$columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     	$searchValue = $postData['search']['value']; // Search value

     	## Search 
     	$searchQuery = "";
     	if($searchValue != ''){
     		$this->db->where('status2','2');
     		$this->db->where('academicyear',$max_year);
     		$this->db->group_by('id');
        	$searchQuery = " (fname like '%".$searchValue."%' or mname like '%".$searchValue."%' or lname like '%".$searchValue."%' or grade like '%".$searchValue."%' or username like '%".$searchValue."%' ) ";
     	}

     	## Total number of records without filtering
     	$this->db->where('academicyear',$max_year);
     	$this->db->where('status2','2');
     	$this->db->select('count(*) as allcount');
     	$records = $this->db->get('users_registration_request')->result();
     	$totalRecords = $records[0]->allcount;

     	## Total number of record with filtering
     	$this->db->select('count(*) as allcount');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
    	$this->db->where('academicyear',$max_year);
    	$this->db->where('status2','2');
     	$records = $this->db->get('users_registration_request')->result();
     	$totalRecordwithFilter = $records[0]->allcount;

     	## Fetch records
     	$this->db->group_by('id');
     	$this->db->select('*');
     	if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->where('academicyear',$max_year);
		$this->db->where('status2','2');
		$records = $this->db->get('users_registration_request')->result();
        $data = array();
        $no=1;
     	foreach($records as $staff){
       		$grade=$staff->grade;
        	$action='<button class="btn btn-success btn-sm reaccept_this_registration" id="'.$staff->id .'" type="submit"> 
        	Accept </button>
            <button class="btn btn-danger btn-sm redelete_this_registration" id="'.$staff->id .'" type="submit">
            Delete</button>';
	    	$data[] = array( 
	           "fname"=>$staff->fname.' '.$staff->mname. ' ' .$staff->lname,
	           "gender"=>$staff->gender,
	           "grade"=>$staff->grade,
	           "branch"=>$staff->branch,
	           "mobile"=>$staff->mobile.'/ '.$staff->father_mobile,
	           "status2_by"=>$staff->status2_by,
	           "Action"=>$action,
	        ); 
     	}
	    ## Response
	    $response = array(
	        "draw" => intval($draw),
	        "iTotalRecords" => $totalRecords,
	        "iTotalDisplayRecords" => $totalRecordwithFilter,
	        "aaData" => $data
	    );
	    return $response; 
   	}
   	function two_factor_authentication($user){
		$this->db->where('status','1');
		$this->db->where('user_id',$user);
		$query = $this->db->get('two_factor_authentication');
		$queryEmail=$this->db->query("select email from users where username='$user' and email!='' ");
		$output='';
        if($queryEmail->num_rows()>0){
        	$output .='Two-Factor authentication status';
			if($query->num_rows()>0){
				$output.='<div class="pretty p-switch p-fill">
	                <input type="checkbox" name="twoFactorAuthenticatio" class="twoFactorAuthenticatio" checked="checked" id="0" value="0" >
	                <div class="state p-success">
	                    <label></label>
	                </div>
			    </div>';
			}else{
				$output.='<div class="pretty p-switch p-fill">
	              	<input type="checkbox" name="twoFactorAuthenticatio" class="twoFactorAuthenticatio" id="1" value="1" >
	              	<div class="state p-success">
	                	<label></label>
	              	</div>
			    </div>';
			}
		}else{
			$output.='<p class="text-danger">Please set recovery email.</p>';
		}
		return $output;
	}
	function fetch_assesmentrank($branch,$gradesec,$quarter,$evaluation,$max_year)
	{
		$output='';
		$this->db->select('u.username,u.fname, u.mname,s.Grade ,s.Subj_name,u.grade,u.id');
		$this->db->from('subject s');
		$this->db->join('users u',
		'u.grade=s.Grade');
		$this->db->order_by('s.suborder','ASC');
		$this->db->group_by('s.Subj_name');
		$this->db->where('s.onreportcard','1');
		$this->db->where('s.Academic_Year',$max_year);
		$this->db->where('u.gradesec',$gradesec);
		$this->db->where('u.branch',$branch);
		$this->db->where('u.usertype','Student');
		$this->db->where('u.academicyear',$max_year);
		$this->db->where('u.status','Active');
		$this->db->where('u.isapproved','1');
		$querySubject=$this->db->get();
		if($querySubject->num_rows()>0){
			$this->db->select('max(year_name) as ay');
        	$queryac=$this->db->get('academicyear');
    		$rowac = $queryac->row();
    		$yearname=$rowac->ay;

    		$this->db->select('evname');
    		$this->db->where('eid',$evaluation);
    		$this->db->where('academicyear',$max_year);
        	$queryev=$this->db->get('evaluation');
        	if($queryev->num_rows()>0){
        		$rowev = $queryev->row();
    			$evname=$rowev->evname;
        	}else{
        		$evname='';
        	}
    		
			$output.='<div class="text-center"><h4><u><b>'.$yearname.'E.C</b> Academic year <b>'.$quarter.' '.$evname.'</b> evaluation rank for grade <b>'.$gradesec.'</b></u></h4></div>';
			$output .=' <div class="table-responsive">
        	<table class="table table-bordered table-hover" id="tableExport" style="width:100%;">
	        <thead>
	        <tr>
          	<th>No.</th>
          	<th>Student Name</th>';
          	$no=1;
			foreach ($querySubject->result() as $subvalue) {
				$output.='<th>'.$subvalue->Subj_name.'</th>';
			}
			$output.='<th>Total</th></tr></thead>';
			$this->db->select('grade,id,fname,mname ');
    		$this->db->where('status','Active');
    		$this->db->where('isapproved','1');
    		$this->db->where('usertype','Student');
    		$this->db->where('branch',$branch);
    		$this->db->where('gradesec',$gradesec);
    		$this->db->where('academicyear',$max_year);
    		$this->db->group_by('id');
    		$this->db->order_by('fname,mname,lname','ASC');
        	$queryStudent=$this->db->get('users');
			$finalresult=0;

			$rowGrade = $querySubject->row();
    		$grade=$rowGrade->grade;
			$this->db->select('*');
    		$this->db->where('quarter',$quarter);
    		$this->db->where('eid',$evaluation);
    		$this->db->where('academicyear',$max_year);
    		$this->db->where('grade',$grade);
        	$queryEvaluation=$this->db->get('evaluation');
        	if($queryEvaluation->num_rows()>0){
				foreach ($queryEvaluation->result() as $evavalue) {
					$percents=$evavalue->percent;
				}
			}
			foreach ($queryStudent->result() as $studentvalue) {
				$grade=$studentvalue->grade;
				$stuid=$studentvalue->id;
				$this->db->select('*');
	    		$this->db->where('Grade',$grade);
	    		$this->db->where('onreportcard','1');
	    		$this->db->where('Academic_Year',$max_year);
	    		$this->db->order_by('suborder','ASC');
	        	$querySubject=$this->db->get('subject');
				$output.='<tr><td>'.$no.'</td>';
				$allSubTotal=0;
				$output.='<td>'.$studentvalue->fname.' '.$studentvalue->mname. '</td>';
				foreach ($querySubject->result() as $subvalue) {
					$subject=$subvalue->Subj_name;
					$finalresult=0;
					$this->db->select('outof,sum(outof) as sum_outof');
		    		$this->db->where('subname',$subject);
		    		$this->db->where('quarter',$quarter);
		    		$this->db->where('evaid',$evaluation);
		    		$this->db->group_by('markname');
		    		$this->db->order_by('mid','ASC');
		    		$sumOutOf=0;
		        	$queryMarkOutof=$this->db->get('mark'.$branch.$gradesec.$quarter.$max_year);
		        	if($queryMarkOutof->num_rows()>0){
						foreach ($queryMarkOutof->result() as $keyvalue) {
	    					$sumOutOf=$keyvalue->outof +$sumOutOf;
						}	
						$this->db->select('*');
			    		$this->db->where('customsubject',$subject);
			    		$this->db->where('customquarter',$quarter);
			    		$this->db->where('customgrade',$grade);
			    		$this->db->where('customasses',$evaluation);
			    		$this->db->where('academicyear',$max_year);
			        	$queryCheckPercentage=$this->db->get('evaluationcustom');

		            	if($queryCheckPercentage->num_rows()>0){
		            		$rowPercent=$queryCheckPercentage->row();
		            		$percent=$rowPercent->custompercent;
		            	}else{
		            		$percent=$percents;
		            	}
		            	$this->db->select('markname,sum(value) as total');
			    		$this->db->where('subname',$subject);
			    		$this->db->where('quarter',$quarter);
			    		$this->db->where('evaid',$evaluation);
			    		$this->db->where('mbranch',$branch);
			    		$this->db->order_by('mid','ASC');
			    		$this->db->group_by('markname');
					    $query_value=$this->db->get('mark'.$branch.$gradesec.$quarter.$max_year);		
		            	if($query_value->num_rows()>0){
		            		$totalmark=0;
		            		foreach ($query_value->result_array() as $value) {
								$markNameStu=$value['markname'];
								$this->db->select('value,sum(outof) as outof');
					    		$this->db->where('subname',$subject);
					    		$this->db->where('quarter',$quarter);
					    		$this->db->where('evaid',$evaluation);
					    		$this->db->where('stuid',$stuid);
					    		$this->db->where('markname',$markNameStu);
					    		$this->db->order_by('mid','ASC');
					    		$this->db->group_by('markname');
					        	$queryMark=$this->db->get('mark'.$branch.$gradesec.$quarter.$max_year);
								foreach ($queryMark->result() as $mvalue) {
									$totalmark=$mvalue->value + $totalmark;
								}
							}
							if($totalmark>0){
								$finalresult=($percent*$totalmark)/$sumOutOf;
								$output.='<td>'.number_format((float)$finalresult,2,'.','').'</td>';
							}else{
							    $finalresult=0;
								$output.='<td>-</td>';
							}
						}else{
							$output.='<td> <span class="text-danger">- </span></td>';
						}
					}else{
						$output.='<td> <span class="text-danger">- </span></td>';
					}
					$allSubTotal= $allSubTotal + $finalresult;	
				}
				$output.='<td>'.number_format((float)$allSubTotal,2,'.','').'</td>';
				$output.='</tr>';
				$no++;
			}
			$output.='</table></div>';
			$this->db->select('u.fname,u.mname,u.mysign');
			$this->db->from('hoomroomplacement hm');
			$this->db->join('users u',
			'u.username=hm.teacher');
			$this->db->where('hm.academicyear',$max_year);
			$this->db->where('hm.roomgrade',$gradesec);
			$this->db->where('hm.branch',$branch);
			$this->db->where('u.branch',$branch);
			$this->db->where('u.usertype!=','Student');
			$this->db->where('u.status','Active');
			$this->db->where('u.isapproved','1');
			$queryHoomRoom=$this->db->get();
            if($queryHoomRoom->num_rows()>0){
                $rowHommeRoom=$queryHoomRoom->row_array();
                $tfName=$rowHommeRoom['fname'];
                $tmName=$rowHommeRoom['mname'];
                $signSigns=$rowHommeRoom['mysign'];
            }else{
                $tfName='_____________';
                $tmName='_____________';
                $signSigns='_____';
            }
			$output.="<p>HRT's Name:- <b>".$tfName." ".$tmName."</b> &nbsp;&nbsp;&nbsp; Signature <img alt='' src='".base_url()."/".$signSigns."' style='height:40px;width:120px'></p>
              ";
            $output.='<small class="text-muted pull-right">Powered BY :- GS Technologies www.grandstande.com | +251984085240</small>';
		}else{
			$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No subject found.
            </div></div>';
		}
		return $output;
	}
	function fetch_assesment_analysis_rank($branch, $gradesec, $quarter, $evaluation, $max_year){
	    $output = '';
	    $this->db->select('u.username, u.fname, u.mname, s.Grade, s.Subj_name, u.grade, u.id');
	    $this->db->from('subject s');
	    $this->db->join('users u', 'u.grade = s.Grade');
	    $this->db->order_by('s.suborder', 'ASC');
	    $this->db->group_by('s.Subj_name');
	    $this->db->where('s.onreportcard', '1');
	    $this->db->where('s.Academic_Year', $max_year);
	    $this->db->where('u.gradesec', $gradesec);
	    $this->db->where('u.branch', $branch);
	    $this->db->where('u.usertype', 'Student');
	    $this->db->where('u.academicyear', $max_year);
	    $this->db->where('u.status', 'Active');
	    $this->db->where('u.isapproved', '1');
	    $querySubject = $this->db->get();

	    if ($querySubject->num_rows() > 0) {
	        $this->db->select('max(year_name) as ay');
	        $queryac = $this->db->get('academicyear');
	        $rowac = $queryac->row();
	        $yearname = $rowac->ay;

	        $output .= '<div class="text-center"><h4><u><b>' . $yearname . 'E.C</b> Academic year <b>' . $quarter . ' ' . $evaluation . '</b> assessment rank for grade <b>' . $gradesec . '</b></u></h4></div>';
	        $output .= '<div class="table-responsive">
	            <table class="table table-bordered table-hover" id="tableExport" style="width:100%;">
	            <thead>
	            <tr>
	                <th>No.</th>
	                <th>Student Name</th>';

	        foreach ($querySubject->result() as $subvalue) {
	            $output .= '<th>' . $subvalue->Subj_name . '</th>';
	        }

	        $output .= '<th>Total</th><th>Rank</th></tr></thead>';
	        $this->db->select('grade, id, fname, mname');
	        $this->db->where('status', 'Active');
	        $this->db->where('isapproved', '1');
	        $this->db->where('usertype', 'Student');
	        $this->db->where('branch', $branch);
	        $this->db->where('gradesec', $gradesec);
	        $this->db->where('academicyear', $max_year);
	        $this->db->group_by('id');
	        $this->db->order_by('fname, mname, lname', 'ASC');
	        $queryStudent = $this->db->get('users');

	        $studentData = [];
	        foreach ($queryStudent->result() as $studentvalue) {
	            $stuid = $studentvalue->id;
	            $grade = $studentvalue->grade;

	            $this->db->select('*');
	            $this->db->where('Grade', $grade);
	            $this->db->where('onreportcard', '1');
	            $this->db->where('Academic_Year', $max_year);
	            $this->db->order_by('suborder', 'ASC');
	            $querySubject = $this->db->get('subject');

	            $allSubTotal = 0;
	            foreach ($querySubject->result() as $subvalue) {
	                $subject = $subvalue->Subj_name;
	                $this->db->select('value as total');
	                $this->db->where('subname', $subject);
	                $this->db->where('quarter', $quarter);
	                $this->db->where('markname', $evaluation);
	                $this->db->where('stuid', $stuid);
	                $this->db->group_by('stuid');
	                $queryMark = $this->db->get('mark' . $branch . $gradesec . $quarter . $max_year);

	                $totalmark = ($queryMark->num_rows() > 0) ? $queryMark->row()->total : 0;
	                $allSubTotal += $totalmark;
	            }

	            $studentData[] = ['id' => $stuid, 'total' => $allSubTotal];
	        }

	        // Sort student data by total score
	        usort($studentData, function ($a, $b) {
	            return $b['total'] - $a['total'];
	        });
	        // Assign ranks with handling ties
	        $rank = 1;
	        $prevScore = null;
	        $rankCount = 1;
	        foreach ($studentData as $key => $student) {
	            if ($student['total'] === $prevScore) {
	                $studentData[$key]['rank'] = $rank;
	            } else {
	                $rank = $rankCount;
	                $studentData[$key]['rank'] = $rank;
	            }
	            $prevScore = $student['total'];
	            $rankCount++;
	        }
	        // Generate rows with rank
	        $no = 1;
	        foreach ($queryStudent->result() as $studentvalue) {
	            $stuid = $studentvalue->id;
	            $studentRow = array_filter($studentData, function ($s) use ($stuid) {
	                return $s['id'] === $stuid;
	            });
	            $studentRow = reset($studentRow);
	            $rank = $studentRow['rank'];
	            $output .= '<tr>';
	            $output .= '<td>' . $no . '</td>';
	            $output .= '<td>' . $studentvalue->fname . ' ' . $studentvalue->mname . '</td>';
	            foreach ($querySubject->result() as $subvalue) {
	                $subject = $subvalue->Subj_name;
	                $this->db->select('value as total');
	                $this->db->where('subname', $subject);
	                $this->db->where('quarter', $quarter);
	                $this->db->where('markname', $evaluation);
	                $this->db->where('stuid', $stuid);
	                $this->db->group_by('markname');
	                $queryMark = $this->db->get('mark' . $branch . $gradesec . $quarter . $max_year);
	                $totalmark = ($queryMark->num_rows() > 0) ? $queryMark->row()->total : 0;
	                $output .= '<td>' . number_format((float)$totalmark, 2, '.', '') . '</td>';
	            }
	            $output .= '<td>' . number_format((float)$studentRow['total'], 2, '.', '') . '</td>';
	            $output .= '<td>' . $rank . '</td>';
	            $output .= '</tr>';
	            $no++;
	        }
	        $output .= '</table></div>';
	        $this->db->select('u.fname,u.mname,u.mysign');
			$this->db->from('hoomroomplacement hm');
			$this->db->join('users u',
			'u.username=hm.teacher');
			$this->db->where('hm.academicyear',$max_year);
			$this->db->where('hm.roomgrade',$gradesec);
			$this->db->where('hm.branch',$branch);
			$this->db->where('u.branch',$branch);
			$this->db->where('u.usertype!=','Student');
			$this->db->where('u.status','Active');
			$this->db->where('u.isapproved','1');
			$queryHoomRoom=$this->db->get();
            if($queryHoomRoom->num_rows()>0){
                $rowHommeRoom=$queryHoomRoom->row_array();
                $tfName=$rowHommeRoom['fname'];
                $tmName=$rowHommeRoom['mname'];
                $signSigns=$rowHommeRoom['mysign'];
            }else{
                $tfName='_____________';
                $tmName='_____________';
                $signSigns='_____';
            }
			$output.="<p>HRT's Name:- <b>".$tfName." ".$tmName."</b> &nbsp;&nbsp;&nbsp; Signature <img alt='' src='".base_url()."/".$signSigns."' style='height:40px;width:120px'></p>
              ";
	        $output.='<small class="text-muted pull-right">Powered BY :- GS Technologies www.grandstande.com | +251984085240</small>';
	    } else {
	        $output .= '<div class="alert alert-light alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close" data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                    <i class="fas fa-check-circle"> </i> No subject found.
	                </div>
	            </div>';
	    }

	    return $output;
	}
	function update_reportcardResult_alert($max_year,$gradesec,$branch,$max_quarter){
    	$queryCheck = $this->db->query("SHOW TABLES LIKE 'reportcard".$gradesec.$max_year."' ");
    	if ($queryCheck->num_rows()>0 ){
      	$queyDelete=$this->db->query("delete from reportcard".$gradesec.$max_year." where rpbranch ='$branch' and grade='$gradesec' and quarter='$max_quarter' ");
      	$evalname_query=$this->db->query("select us.id,ev.grade, ev.evname,ev.eid, ev.percent, sum(ev.percent) as summ_percent from evaluation as ev inner join users as us where us.grade=ev.grade and ev.academicyear='$max_year' and ev.quarter='$max_quarter' and us.gradesec='$gradesec' and us.branch='$branch' and us.academicyear='$max_year' group by ev.evname order by ev.eid ASC");
      	$queryStudent=$this->db->query("select u.id,u.fname,u.lname,u.username, u.mname, u.grade, u.gradesec from users as u where u.academicyear='$max_year' and u.gradesec='$gradesec' and u.branch='$branch' and isapproved='1' and status='Active' group by u.id order by u.fname,u.mname ASC ");
      	foreach ($queryStudent->result_array() as $row) { 
        $id=$row['id'];
        $grade=$row['grade'];
        $average=0;
        $querySubject=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$grade' group by Subj_name order by suborder ASC ");
          if($querySubject->num_rows()>0){
            foreach($querySubject->result() as $subject_row){
              $average1=0;
              $gs_subject=$subject_row->Subj_name;
              $letter=$subject_row->letter;
              $queryCheck=$this->db->query("select * from subject_custom_percentage where academicyear='$max_year' and grade='$grade' and quarter='$max_quarter' and subject='$gs_subject' ");
              if($queryCheck->num_rows()>0){
                $rowPercent=$queryCheck->row();
                $mergedPercent=$rowPercent->percentage;
              }else{
                $mergedPercent=$subject_row->Merged_percent;
              }
              /*$mergedPercent=$subject_row->Merged_percent;*/
              $onReportCard=$subject_row->onreportcard;
              $subjorder=$subject_row->suborder;
              if($subject_row->Merged_name==''){
                $mergedSubject='';
              }else{
                $mergedSubject=$subject_row->Merged_name;
              }
              foreach ($evalname_query->result_array() as $mark_name)
              {
                $evName=$mark_name['evname'];
                $grade=$mark_name['grade'];
                $mname_gs=$mark_name['eid'];
                $queryCheckPercentage=$this->db->query("select * from evaluationcustom where academicyear ='$max_year' and customgrade='$grade' and customsubject='$gs_subject' and customasses='$evName' and customquarter='$max_quarter' ");
                if($queryCheckPercentage->num_rows()>0){
                  $rowPercent=$queryCheckPercentage->row();
                  $percent=$rowPercent->custompercent;
                }else{
                  $percent= $mark_name['percent'];
                }
                $query_value = $this->db->query("select markname,sum(value) as total from mark".$branch.$gradesec.$max_quarter.$max_year." where  subname='$gs_subject' and quarter='$max_quarter' and evaid='$mname_gs' and mbranch='$branch' group by markname order by mid ASC");
                if($query_value->num_rows()>0){
                  $totalMark=0;$outofTot=0;
                  foreach ($query_value->result_array() as $value) {
                    $markNameStu=$value['markname'];
                    $queryStuValue = $this->db->query("select value,sum(value) as total,sum(outof) as outof from mark".$branch.$gradesec.$max_quarter.$max_year." where stuid='$id' and subname='$gs_subject' and quarter='$max_quarter' and evaid='$mname_gs' and mbranch='$branch' and markname='$markNameStu' group by markname order by mid ASC");
                    if($queryStuValue->num_rows()>0){
                      foreach ($queryStuValue->result_array() as $kevalue) {
                        $outofTot=$outofTot+$kevalue['outof'];
                        $totalMark=$totalMark+$kevalue['value'];
                      }
                    }
                    $queryMvalue = $this->db->query("select outof,sum(outof) as sum_outof from mark".$branch.$gradesec.$max_quarter.$max_year." where subname='$gs_subject' and quarter='$max_quarter' and evaid='$mname_gs' and mgrade='$gradesec' and mbranch='$branch' group by markname order by mid ASC");
                      $sumOutOf=0;
                    foreach ($queryMvalue->result_array() as $mark_name) {
                      $sumOutOf=$mark_name['outof'] + $sumOutOf;  
                    }
                  }
                  if($sumOutOf != 0 && $sumOutOf > 0 && $sumOutOf !='')
                  {
                    $conver= ($totalMark *$percent )/$sumOutOf;
                    $average =$conver + $average;
                    $average1 =($average * $mergedPercent)/100;
                  }
                }
              }
              $average1=number_format((float)$average1,2,'.','');
              $data[]=array(
                'stuid'=>$id,
                'subject'=>$gs_subject,
                'mergedname'=>$mergedSubject,
                'quarter'=>$max_quarter,
                'total'=>number_format((float)$average1,2,'.',''),
                'letter'=>$letter,
                'grade'=>$gradesec,
                'onreportcard'=>$onReportCard,
                'rpbranch'=>$branch,
                'subjorder'=>$subjorder,
                'academicyear'=>$max_year
              );
              $average=0;
            }
          }
        }
      if($querySubject->num_rows()>0){
        $query_insert1=$this->db->insert_batch('reportcard'.$gradesec.$max_year,$data);
      }
      $queryMergedSubject=$this->db->query("select us.grade, us.id, us.gradesec, su.Subj_name, su.Merged_percent, su.Merged_name, su.suborder, su.letter, su.onreportcard from subject as su cross join users as us where us.grade=su.Grade and us.gradesec='$gradesec' and us.status='Active' and us.isapproved='1' and us.academicyear='$max_year' and su.Academic_Year='$max_year' and us.branch='$branch' and Merged_name!='' ");
      if($queryMergedSubject->num_rows()>0){
        $sqlDelete=$this->db->query("select *, sum(total) as mergedTot from reportcard".$gradesec.$max_year." where mergedname!='' and rpbranch='$branch' and grade='$gradesec' and quarter='$max_quarter' group by mergedname,stuid ");
        if($sqlDelete->num_rows()>0){
          foreach ($sqlDelete->result() as $mergedValue) {
            $mergedTotal=$mergedValue->mergedTot;
            $stuid=$mergedValue->stuid;
            $subject=$mergedValue->subject;
            $mergedSubject=$mergedValue->mergedname;
            $letter=$mergedValue->letter;
            $subjorder=$mergedValue->subjorder;
            $data1[]=array(
              'stuid'=>$stuid,
              'subject'=>$mergedSubject,
              'quarter'=>$max_quarter,
              'total'=>number_format((float)$mergedTotal,2,'.',''),
              'letter'=>$letter,
              'grade'=>$gradesec,
              'onreportcard'=>'1',
              'rpbranch'=>$branch,
              'subjorder'=>$subjorder,
              'academicyear'=>$max_year
            );
          }
          $query_insert1=$this->db->insert_batch('reportcard'.$gradesec.$max_year,$data1);
        }
      }
      if($query_insert1){
        return true;
      }else{
      	return false;
      }
    }
  }
  	public function fetch_subject_of_thisGrade($branch,$gradesec,$max_year)
	{
		$this->db->where(array('gradesec'=>$gradesec));
		$this->db->where(array('academicyear'=>$max_year));
		$this->db->where(array('branch'=>$branch));
		$this->db->where(array('Academic_Year'=>$max_year));
		$this->db->where('usertype','Student');
		$this->db->where('users.status','Active');
		$this->db->where('isapproved','1');
		$this->db->group_by('Subj_name,users.gradesec');
		$this->db->order_by('Subj_name','ASC');
		$this->db->select('Subj_name,users.grade,users.gradesec');
        $this->db->from('subject');
        $this->db->join('users', 
            'users.grade = subject.Grade');
        $queryPlacement = $this->db->get();

		$output='';
		if($queryPlacement->num_rows()>0 ){
			$output.='<div class="row"> ';
			foreach($queryPlacement->result() as $rowPlacement){
				$subject=$rowPlacement->Subj_name;
				$grade=$rowPlacement->gradesec;
				$output.='<div class="col-md-6 col-12" id="view_ThisSubjectResult_gs">
					<a href="javascript:void(0)" class="startfetchingCommBook_student view_ThisSubjectResult_gs" id="'.$subject.'" value="'.$grade.'" name="'.$branch.'" data-year="'.$max_year.'">
						<div class="card-body StudentViewTextInfo">
			            <div class="support-ticket media">
			              <div class="media-body">
			                <div class="badge badge-pill badge-default float-right" ><i class="fas fa-chevron-right"></i>
			                </div>
			                <span class="font-weight-bold font-24">'.$rowPlacement->Subj_name.'</span>
			                <br>
			                <small class="text-muted">Click here to see '.$rowPlacement->Subj_name.' conversation</small>
			              </div>
			            </div>
			          </div>
			        </a>
		        </div>';
			}
			$output.='</div>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
            	<i class="fas fa-check-circle"> </i> No subject found.
        	</div></div>';
		}
		return $output;
	}
	function fetchCommunicationBookTeacher($subject,$gradesec,$branch_teacher,$max_year,$max_quarter){
		$this->db->select('users.profile,users.fname,users.mname,users.lname,users.username,communicationbook.id,communicationbook.quarter,communicationbook.comsubject,communicationbook.comnote,communicationbook.status,communicationbook.stuid,communicationbook.comgrade,communicationbook.comcommented, communicationbook.datecreated,communicationbook.byteacher');
		$this->db->from('communicationbook');
		$this->db->join('users',
		'users.username=communicationbook.byteacher');
		$this->db->order_by('communicationbook.id','DESC');
		$this->db->group_by('communicationbook.id');
		$this->db->where('users.branch',$branch_teacher);
		$this->db->where('communicationbook.academicyear',$max_year);
		$this->db->where('communicationbook.combranch',$branch_teacher);
		/*$this->db->where('communicationbook.quarter',$max_quarter);*/
		$this->db->where('communicationbook.comsubject',$subject);
		$this->db->where('communicationbook.comgrade',$gradesec);
		$query=$this->db->get();
		$output='';
		$output.='<div class="row"> ';
		if($query->num_rows()>0){
			foreach($query->result() as $bookSent){
				$stuid=$bookSent->stuid;
				$byteacher=$bookSent->byteacher;
				$id=$bookSent->id;
				$statusCheck=$bookSent->status;
				$output .='<div class="message-gs-full receiver-message-gs"> 
					<div class="support-ticket media">';
						if($bookSent->profile==''){
				          	$output.='<a href="#"> <img src="'.base_url().'/profile/defaultProfile.png" alt="GS" class="user-img"> </a>';
				        }else{
				          	$output.='<a href="#"> <img src="'.base_url().'/profile/'.$bookSent->profile.'" alt="GS" class="user-img"> </a>';
				        }
                    	$output.='<div class="media-body">
                      		<span class="font-weight-bold">'.$bookSent->fname.' '.$bookSent->mname.'
                      		</span>
                      		<p class="my-1">'.$bookSent->comnote.' ';
	                      		if($statusCheck=='1'){
	                      			$output.='<span class="text-success"> <i class="fa fa-check-double"></i> seen</span>';
	                      		}
                      			$output.='<small class="text-muted"> '.$bookSent->datecreated.'</small>
                      		</p>
                    	</div>
                  	</div>
                </div>';
                $this->db->select('cr.id,cr.replyby, cr.seenstatus, cr.replytext, cr.datereplay, us.profile,us.fname,us.mname');
				$this->db->from('combookreplaystudent cr');
				$this->db->join('users us',
				'us.username=cr.replyby');
				$this->db->where('cr.replyid',$id);
				$this->db->group_by('cr.id');
				$this->db->order_by('cr.id','DESC');
				$queryReply = $this->db->get();
				if($queryReply->num_rows()>0){
			      	foreach($queryReply->result() as $replyAnswer){
			      		$output.='<div class="message-gs-full receiver-message-gs">  <div class="support-ticket media">';
			      			if($replyAnswer->profile==''){
					          	$output.='<img src="'.base_url().'/profile/defaultProfile.png" alt="GS" class="user-img">';
					        }else{
					          	$output.='<img src="'.base_url().'/profile/'.$replyAnswer->profile.'" alt="GS" class="user-img"> ';
					        }
		                    $output.='<div class="media-body">
		                      	<span class="font-weight-bold">'.$replyAnswer->fname.' '.$replyAnswer->mname.'</span>
		                      	<p class="my-1">'.$replyAnswer->replytext.'';
		                      		if($replyAnswer->seenstatus=='1')
		                      		{
		                      			$output.='<small class="text-muted">&nbsp;&nbsp; '.$replyAnswer->datereplay.'<span class="text-success"> <i class="fa fa-check-double"></i> seen</span></small>';
		                      		}else{
		                      			$output.='<small class="text-muted">&nbsp;&nbsp; '.$replyAnswer->datereplay.' </small>';
		                      		}
		                      	$output.='</p>
		                    </div></div>
		                </div>';
				    }
			    }	
			}
		}else{
			$output.='<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12"><div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div></div>';
		}
		$output.='</div>';
		return $output;
	}
	function fetchCommunicationBookTeacherApprove($subject,$gradesec,$branch_teacher,$max_year,$max_quarter){
		$this->db->select('users.profile,users.fname,users.mname,users.lname,users.username,communicationbook.id,communicationbook.quarter,communicationbook.comsubject,communicationbook.comnote,communicationbook.status,communicationbook.stuid,communicationbook.comgrade,communicationbook.comcommented, communicationbook.datecreated, communicationbook.byteacher, communicationbook.approvecom');
		$this->db->from('communicationbook');
		$this->db->join('users',
		'users.username=communicationbook.byteacher');
		$this->db->order_by('communicationbook.id','DESC');
		$this->db->group_by('communicationbook.id');
		$this->db->where('users.branch',$branch_teacher);
		$this->db->where('communicationbook.academicyear',$max_year);
		/*$this->db->where('communicationbook.quarter',$max_quarter);*/
		$this->db->where('communicationbook.comsubject',$subject);
		$this->db->where('communicationbook.comgrade',$gradesec);
		$this->db->where('communicationbook.combranch',$branch_teacher);
		$this->db->where('communicationbook.approvecom','1');
		$query=$this->db->get();
		$output='';
		$output.='<div class="row"> ';
		if($query->num_rows()>0){
			foreach($query->result() as $bookSent){
				$stuid=$bookSent->stuid;
				$byteacher=$bookSent->byteacher;
				$id=$bookSent->id;
				$statusCheck=$bookSent->status;
				$output .='<div class="message-gs-full receiver-message-gs"> 
					<div class="support-ticket media">';
						if($bookSent->profile==''){
				          	$output.='<a href="#"> <img src="'.base_url().'/profile/defaultProfile.png" alt="GS" class="user-img"> </a>';
				        }else{
				          	$output.='<a href="#"> <img src="'.base_url().'/profile/'.$bookSent->profile.'" alt="GS" class="user-img"> </a>';
				        }
                    	$output.='<div class="media-body">
                      		<span class="font-weight-bold">'.$bookSent->fname.' '.$bookSent->mname.'
                      		</span>
                      		<p class="my-1">'.$bookSent->comnote.' ';
	                      		if($statusCheck=='1'){
	                      			$output.='<span class="text-success"> <i class="fa fa-check-double"></i> seen</span>';
	                      		}
                      			$output.='<small class="text-muted"> '.$bookSent->datecreated.'</small>
                      		</p>
                    	</div>
                  	</div>
                </div>';
                $this->db->select('cr.id,cr.replyby, cr.seenstatus, cr.replytext, cr.datereplay, us.profile,us.fname,us.mname');
				$this->db->from('combookreplaystudent cr');
				$this->db->join('users us',
				'us.username=cr.replyby');
				$this->db->where('cr.replyid',$id);
				$this->db->group_by('cr.id');
				$this->db->order_by('cr.id','DESC');
				$queryReply = $this->db->get();
				if($queryReply->num_rows()>0){
			      	foreach($queryReply->result() as $replyAnswer){
			      		$output.='<div class="message-gs-full receiver-message-gs">  <div class="support-ticket media">';
			      			if($replyAnswer->profile==''){
					          	$output.='<img src="'.base_url().'/profile/defaultProfile.png" alt="GS" class="user-img">';
					        }else{
					          	$output.='<img src="'.base_url().'/profile/'.$replyAnswer->profile.'" alt="GS" class="user-img"> ';
					        }
		                    $output.='<div class="media-body">
		                      	<span class="font-weight-bold">'.$replyAnswer->fname.' '.$replyAnswer->mname.'</span>
		                      	<p class="my-1">'.$replyAnswer->replytext.'';
		                      		if($replyAnswer->seenstatus=='1')
		                      		{
		                      			$output.='<small class="text-muted">&nbsp;&nbsp; '.$replyAnswer->datereplay.'<span class="text-success"> <i class="fa fa-check-double"></i> seen</span></small>';
		                      		}else{
		                      			$output.='<small class="text-muted">&nbsp;&nbsp; '.$replyAnswer->datereplay.' </small>';
		                      		}
		                      	$output.='</p>
		                    </div></div>
		                </div>';
				    }
			    }	
			}
		}else{
			$output.='<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12"><div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
            </div></div></div>';
		}
		$output.='</div>';
		return $output;
	}
	function add_staffs_to_supervision(){
		$this->db->where(array('status'=>'Active'));
		$this->db->where(array('isapproved'=>'1'));
		$this->db->not_like('usertype','Student');
		$this->db->order_by('fname,mname,lname','ASC');
		$queryHeade=$this->db->get('users');
		$output='';
		$output.='<form method="POST" id="submitedited_staff_tosupervision">
        <div class="form-group">
          <div class="search-element">
            <div class="row">                  
              <div class="form-group col-lg-6 col-6">
                <label>Staff Name</label>
                <select class="" id="supervision_attendance_staff" name="supervision_attendance_staff" required>
                <option></option>';
                 if($queryHeade->num_rows()>0){
                	foreach($queryHeade->result() as $row){
                    	$output.='<option value="'.$row->username.'">'.$row->fname.' '.$row->mname.' '.$row->lname.'</option>';
                	}
                }
                $output.='
                </select><button class="btn btn-default text-success" id="savesupervision_attendance_staff">Add Staff</button>
              </div>
              </div>
            </div>
          </div>
        </form>';
        $output.='<div class="fetch_supervision_staff_list" id="fetch_supervision_staff_list">';
        $queryFetch=$this->db->query("select fname,mname,lname,username from users where status='Active' and isapproved='1' and supervision_attendance='1' order by fname,mname,lname ASC ");
        if($queryFetch->num_rows()>0){
        	$output.=' <div class="row">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<div class="col-lg-6 col-md-6 col-12"><h6 class="removestaff_from_supervision_attendance'.$rowUser->username.'"><i class="fas fa-check-circle"></i> '.$rowUser->fname.' '.$rowUser->mname.' '.$rowUser->lname.'<button class="btn btn-default text-danger" id="removestaff_from_supervision_attendance" value="'.$rowUser->username.'">Remove</button></h6></div>';
        	}
        	$output.='</div>';
        }
        $output.='</div>';
		return $output;
	}
	function fetch_supervision_staff_list(){
		$output='';
		$queryFetch=$this->db->query("select fname,mname,lname,username from users where status='Active' and isapproved='1' and supervision_attendance='1' order by fname,mname,lname ASC ");
        if($queryFetch->num_rows()>0){
        	$output.='<div class="row">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<div class="col-lg-6 col-md-6 col-12"><h6 class="removestaff_from_supervision_attendance'.$rowUser->username.'"><i class="fas fa-check-circle"></i> '.$rowUser->fname.' '.$rowUser->mname.' '.$rowUser->lname.'<button class="btn btn-default text-danger" id="removestaff_from_supervision_attendance" value="'.$rowUser->username.'">Remove</button></h6></div>';
        	}
        	$output.='</div>';
        }
        return $output;
	}
	function check_staff_supervision_attendance($supervision_attendance_staff){
		$query=$this->db->query("select supervision_attendance from users where username='$supervision_attendance_staff' ");
		$rowStatus=$query->row();
		$super_status=$rowStatus->supervision_attendance;
		if($super_status=='1'){
			return false;
		}else{
			return true;
		}
	}
	function filterassesmentby_branch_subject($max_year){
		$output='';
		$queryEvaluation= $this->db->query("select * from evaluation where academicyear='$max_year' group by evgroup order by evgroup DESC ");
		if($queryEvaluation->num_rows()>0){
				$this->db->where('academicyear',$max_year);
				$this->db->where('assesment_status','1');
				$query = $this->db->get('filter_assesment_by_branch_subject');
				$output.='<small class="text-muted">Note: This toggle will be ON when school`s branch and subject assesment are different each other.</small><br>Filter assesment based on branch and subject.';
				if($query->num_rows()>0){
					$output.='<div class="pretty p-switch p-fill">
		                <input type="checkbox" name="filter_assesment_by_branch_subject" class="filter_assesment_by_branch_subject" checked="checked" id="'.$max_year.'" value="0" >
		                <div class="state p-success">
		                    <label></label>
		                </div>
				    </div>';
				}else{
					$output.='<div class="pretty p-switch p-fill">
		              	<input type="checkbox" name="filter_assesment_by_branch_subject" class="filter_assesment_by_branch_subject" id="'.$max_year.'" value="1" >
		              	<div class="state p-success">
		                	<label></label>
		              	</div>
				    </div>';
				}
				$output.='<br>';
		}else{
			$output.='<span class="text-danger"><i class="fas fa-exclamation-triangle "></i> No evaluation found. Please set evaluation <a href="'.base_url().'evaluation/">here</a>
          </span>';
		}
		return $output;
	}
	public function fetch_filter_assesment_status($max_year)
	{
		$this->db->where('academicyear',$max_year);
		$this->db->where('assesment_status','1');
        $query = $this->db->get('filter_assesment_by_branch_subject');
        return $query;
	}
	function filter_Subject_4_assesment($gradesecs,$max_year)
	{
		$output='';
		$this->db->where('academicyear',$max_year);
		$this->db->where('assesment_status','1');
        $query = $this->db->get('filter_assesment_by_branch_subject');
        if($query->num_rows()>0){
			foreach($gradesecs as $gradesec){
				$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$gradesec' group by Subj_name order by suborder ASC ");
				$output='<div class="row"> ';
				foreach ($query->result() as $evavalue) {
					$output.='<div class="col-lg-6 col-md-6 col-6">
		                <div class="pretty p-bigger">
		                  <input type="checkbox" name="subjectfilter_4_assesment" value="'.$evavalue->Subj_name.'" class="subjectfilter_4_assesment" id="customCheck1">
		                  <div class="state p-success">
		                    <i class="icon material-icons"></i>
		                    <label></label>'.$evavalue->Subj_name.'
		                  </div>
		                </div> 
		            </div>';
				}
				$output.='</div>';
			}
		}else{
			$output.='<span class="text-danger">No need of selecting subject.Assesment filtering by branch and subject is Disabled</span>';
			
		}
		return $output;
	}
	function enable_teachers_change_evaluation($max_year){
		$output='';
		$queryEvaluation= $this->db->query("select * from evaluation where academicyear='$max_year' group by evgroup order by evgroup DESC ");
		if($queryEvaluation->num_rows()>0){
				$this->db->where('academicyear',$max_year);
				$this->db->where('enable_status','1');
				$query = $this->db->get('enable_teachers_change_evaluation');
				$output.='Enable teachers to change their subjects evaluation setting.';
				if($query->num_rows()>0){
					$output.='<div class="pretty p-switch p-fill">
		                <input type="checkbox" name="enable_teachers_change_evaluation" class="enable_teachers_change_evaluation" checked="checked" id="'.$max_year.'" value="0" >
		                <div class="state p-success">
		                    <label></label>
		                </div>
				    </div>';
				}else{
					$output.='<div class="pretty p-switch p-fill">
		              	<input type="checkbox" name="enable_teachers_change_evaluation" class="enable_teachers_change_evaluation" id="'.$max_year.'" value="1" >
		              	<div class="state p-success">
		                	<label></label>
		              	</div>
				    </div>';
				}
				$output.='<br>';
		}else{
			$output.='<span class="text-danger"><i class="fas fa-exclamation-triangle "></i> No evaluation found. Please set evaluation <a href="'.base_url().'evaluation/">here</a>
          </span>';
		}
		return $output;
	}
	function new_submit_report_page($max_year,$userType,$user){
		$this->db->order_by('id','DESC');
		$this->db->group_by('taskName');
		$this->db->where('staff_name',$userType);
        $query = $this->db->get('stafftasks_report');
		$output='';
		$output.='<form method="POST" id="submit_this_newReport">
            <div class="row">
              <div class="form-group col-lg-6 col-12">
                <label>Report Name(Title)</label>
                <input type="text" class="form-control" name="my_Report_Name" placeholder="Type report name..." required>
              </div>
              <div class="form-group col-lg-6 col-12">
                <label>Report Schedule Type</label>
                <select class="form-control selectric" name="my_Report_schedule" id="my_Report_schedule" required="required">
                  <option> </option>                  
                  <option>Daily</option>
                  <option>Weekly</option>
                  <option>Monthly</option>
                </select>
              </div>
              <div class="form-group col-lg-12 col-12">
                <label>Import report file(docx|pdf|xlsx|xls|csv)</label>
                <input type="file" name="importReportFile" class="form-control" id="importReportFile_gs">
              </div>
              <div class="form-group col-lg-12 col-12">
                <label>Report Detail</label>
                <textarea class="my_Report_detail" rows="4" cols="50" wrap="physical" name="my_Report_detail" id="my_Report_detail" style="width:100%; height:100px;"> </textarea>
              </div>
            </div>
            <button class="btn btn-primary pull-right" type="submit" id="savemy_Report_detail"> Submit Report </button>
          </form>';
		return $output;
	}
	function fetch_my_tasks_report($max_year,$user_hierarchys,$user,$department){        
        $this->db->order_by('id','DESC');
        $this->db->group_by('taskName');
        $this->db->where('stafftasks_report.staff_name',$user);
        $this->db->or_where('stafftasks_report.to_department',$department);
        $this->db->or_where('stafftasks_report.report_to > ',$user_hierarchys);
		$this->db->select('stafftasks_report.staff_name, stafftasks_report.seen_status, stafftasks_report.taskName,stafftasks_report.id, stafftasks_report.report_schedule, stafftasks_report.task_response, stafftasks_report.file_report, stafftasks_report.edited_status, stafftasks_report.date_submitted, users.fname,users.mname, users.lname,users.profile ');
        $this->db->from('stafftasks_report');
        $this->db->join('users', 
            'users.username = stafftasks_report.staff_name');
        $query = $this->db->get('');

		$output='';
		if($query->num_rows()>0){
       		foreach ($query->result() as $staff) {
       			$output.='<div class="chat-container-gss">
			        <div class="message-container-gs">';
			        	if($staff->staff_name==$user){
				            $output.='<div class="message-gs sender-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span>';
					            	$output.='<a href="javascript:void(0)" id="edit_this_my_report_sent" value="'.$staff->id.'" data-toggle="modal" data-target="#modal_edit_this_my_report_sent"> <i class="fas fa-pencil-alt"></i></a> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }else{
				        	$output.='<div class="message-gs receiver-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }
			        $output.='</div>
			    </div>';
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No report found.
            </div></div>';
		}
		return $output;
	}
	function fetch_my_userstasks_report($max_year,$user_hierarchys,$user){		
		$this->db->order_by('id','DESC');
        $this->db->group_by('taskName');
        $this->db->where('stafftasks_report.report_to > ',$user_hierarchys);
		$this->db->select('stafftasks_report.staff_name, stafftasks_report.seen_status, stafftasks_report.taskName,stafftasks_report.id, stafftasks_report.report_schedule, stafftasks_report.task_response, stafftasks_report.file_report, stafftasks_report.edited_status, stafftasks_report.date_submitted, users.fname,users.mname, users.lname,users.profile ');
        $this->db->from('stafftasks_report');
        $this->db->join('users', 
            'users.username = stafftasks_report.staff_name');
        $query = $this->db->get('');

		$output='';
		if($query->num_rows()>0){
       		foreach ($query->result() as $staff) {
       			$output.='<div class="chat-container-gss">
			        <div class="message-container-gs">';
			        	if($staff->staff_name==$user){
				            $output.='<div class="message-gs-full sender-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span>';
					            	$output.='<a href="javascript:void(0)" id="edit_this_my_report_sent" value="'.$staff->id.'" data-toggle="modal" data-target="#modal_edit_this_my_report_sent"> <i class="fas fa-pencil-alt"></i></a> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }else{
				        	$output.='<div class="message-gs-full receiver-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }
			        $output.='</div>
			    </div>';
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No report found.
            </div></div>';
		}
		return $output;
	}
	function fetch_all_userstasks_report($max_year,$userType,$user){		
		$this->db->order_by('id','DESC');
        $this->db->group_by('taskName');
        /*$this->db->where('stafftasks_report.report_to',$userType);*/
		$this->db->select('stafftasks_report.staff_name, stafftasks_report.seen_status, stafftasks_report.taskName,stafftasks_report.id, stafftasks_report.report_schedule, stafftasks_report.task_response, stafftasks_report.file_report, stafftasks_report.edited_status, stafftasks_report.date_submitted, users.fname,users.mname, users.lname,users.profile ');
        $this->db->from('stafftasks_report');
        $this->db->join('users', 
            'users.username = stafftasks_report.staff_name');
        $query = $this->db->get('');

		$output='';
		if($query->num_rows()>0){
       		foreach ($query->result() as $staff) {
       			$output.='<div class="chat-container-gss">
			        <div class="message-container-gs">';
			        	if($staff->staff_name==$user){
				            $output.='<div class="message-gs-full sender-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span>';
					            	$output.='<a href="javascript:void(0)" class="text-danger" id="delete_this_my_report_sent" value="'.$staff->id.'" > <i class="fas fa-trash-alt"></i></a> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }else{
				        	$output.='<div class="message-gs-full receiver-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span>';
					                $output.=' <a href="javascript:void(0)" class="text-danger" id="delete_this_my_report_sent" value="'.$staff->id.'" > <i class="fas fa-trash-alt"></i></a> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }
			        $output.='</div>
			    </div>';
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No report found.
            </div></div>';
		}
		return $output;
	}
	function fetch_mybranch_userstasks_report($max_year,$user_hierarchys,$user,$branch){
		$this->db->order_by('id','DESC');
        $this->db->group_by('taskName');
        $this->db->where('users.branch',$branch);
        $this->db->where('stafftasks_report.report_to > ',$user_hierarchys);
		$this->db->select('stafftasks_report.staff_name, stafftasks_report.seen_status, stafftasks_report.taskName,stafftasks_report.id, stafftasks_report.report_schedule, stafftasks_report.task_response, stafftasks_report.file_report, stafftasks_report.edited_status, stafftasks_report.date_submitted, users.fname,users.mname, users.lname,users.profile ');
        $this->db->from('stafftasks_report');
        $this->db->join('users', 
            'users.username = stafftasks_report.staff_name');
        $query = $this->db->get('');

		$output='';
		if($query->num_rows()>0){
       		foreach ($query->result() as $staff) {
       			$output.='<div class="chat-container-gss">
			        <div class="message-container-gs">';
			        	if($staff->staff_name==$user){
				            $output.='<div class="message-gs-full sender-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span>';
					            	$output.='<a href="javascript:void(0)" id="edit_this_my_report_sent" value="'.$staff->id.'" data-toggle="modal" data-target="#modal_edit_this_my_report_sent"> <i class="fas fa-pencil-alt"></i></a> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }else{
				        	$output.='<div class="message-gs-full receiver-message-gs">
				                <div class="support-ticket media">';
				                	if($staff->profile == ''){
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/defaultProfile.png" class="user-img mr-2"></a>';
					                }else{
					                  	$output.='<a href="#"><img alt="Photo" src="'.base_url().'/profile/'.$staff->profile.'" class="user-img mr-2"></a>';
					                }
					                $output.='<div class="media-body"><span class="font-weight-bold font-16">'.$staff->fname.' '.$staff->mname.' '.$staff->lname.'</span><br> ';
					                if($staff->seen_status=='0'){
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check"></i></div>';
					                }else{
					                	$output.='<div class="badge badge-pill badge-default mb-1 float-right"><i class="fas fa-check-double"></i></div>';
					                }
					                $output.='<span class="font-weight-bold font-13">'.$staff->taskName.' <div class="bullet"></div> '.$staff->report_schedule.'</span> &nbsp;&nbsp;';
					              	if($staff->task_response == ' ' || $staff->task_response=='NULL'){
					                  	$output.='<a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download file</a> &nbsp;';
					                }else if(trim($staff->task_response) != ' ' and trim($staff->file_report) != ' ' || trim($staff->task_response) != 'NULL' and  trim($staff->file_report)!= 'NULL' || trim($staff->task_response) != '' && trim($staff->file_report)!= '' || !empty(trim($staff->task_response)) and !empty(trim($staff->file_report))){
					                  	$output.=$staff->task_response.' <a href="'.base_url().'report_file/'.$staff->file_report.'" class="dwn" download> Download ('.$staff->file_report.')</a> &nbsp;';
					                }else{
					                	$output.=$staff->task_response.'&nbsp;';
					                }
					                if($staff->edited_status=='1'){
					                  	$output.='<small class="text-muted"><span class="text-info">edited </span> '.$staff->date_submitted.'</small>';
					                }else{
					                  	$output.='<small class="text-muted"> '.$staff->date_submitted.'</small>';
					                }  
				                $output.='</div></div>
				            </div>';
				        }
			        $output.='</div>
			    </div>';
       		}
		}else{
			$output .='<div class="alert alert-warning alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> No report found.
            </div></div>';
		}
		return $output;

        
	}
	function fetch_this_report_toedt($rid,$max_year,$userType,$user){
		$this->db->order_by('id','DESC');
		$this->db->group_by('taskName');
		$this->db->where('id',$rid);
        $query = $this->db->get('stafftasks_report');
		$output='';
		$arraySchedult=array('Daily','Weekly','Monthly');
		foreach($query->result() as $rowR){
		$output.='<form method="POST" id="submit_this_updateReport">
			<input type="hidden" name="id_my_updated_report" value="'.$rid.'">
			<input type="hidden" name="id_my_updated_reportTitle" value="'.$rowR->taskName.'">
			<input type="hidden" name="id_my_updated_reportSchedule" value="'.$rowR->report_schedule.'">
			<input type="hidden" name="id_my_updated_reportDetail" value="'.$rowR->task_response.'">
			<input type="hidden" name="id_my_updated_reportedFile" value="'.$rowR->file_report.'">
            <div class="row">
              <div class="form-group col-lg-6 col-12">
                <label>Report Name(Title)</label>
                <input type="text" class="form-control" name="my_Report_Name_update" id="my_Report_Name_update" value="'.$rowR->taskName.'" placeholder="Type report name..." required>
              </div>
              <div class="form-group col-lg-6 col-12">
                <label>Report Schedule Type</label>
                <select class="form-control selectric" name="my_Report_schedule_update" id="my_Report_schedule_update" value="'.$rowR->taskName.'" required="required">
                  <option> </option>';
                  foreach($arraySchedult as $arraySchedults){
                  	if($arraySchedults==$rowR->report_schedule){
                  		$output.='<option selected="selected">'.$arraySchedults.'</option>';
                  	}else{
                  		$output.='<option>'.$arraySchedults.'</option>';
                  	}
                  }  
                $output.='</select>
              </div>
              <div class="form-group col-lg-12 col-12">
                <label>Report file</label>
                <input type="file" name="importReportFile_update" class="form-control" id="importReportFile_gs_update" >';
                if($rowR->file_report=='' || $rowR->file_report== ' ' || empty($rowR->file_report) || $rowR->file_report== 'NULL'){
                } else{
                	$output.='<div id="gs_remove_file_info'.$rowR->id.'">'.$rowR->file_report.' <button class="btn btn-default text-danger" id="remove_this_report_file" name="remove_this_report_file" value="'.$rowR->id.'">Remove file</button></div>';
                }
              $output.='</div>
              <div class="form-group col-lg-12 col-12">
                <label>Report Detail</label>
                <textarea class="my_Report_detail" rows="4" cols="50" wrap="physical" name="my_Report_detail_update" id="my_Report_detail_update" style="width:100%; height:100px;">'.$rowR->task_response.'</textarea>
              </div>
            </div>
            <button class="btn btn-primary pull-right" type="submit" id="updatemy_Report_detail"> Update Report </button>
          </form>';
      	}
		return $output;
	}
	function fetch_leaving_reason(){
		$output='';

		$queryFetch=$this->db->query("select * from staff_leaving_reason group by reason_name order by id ASC");
		if($queryFetch->num_rows()>0){
			$output.='<div class="row">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<div class="col-md-6 col-lg-6 col-12">
        		<h6 class="remove_leaving_reason'.$rowUser->id.'"><i class="fas fa-check-circle"></i> '.$rowUser->reason_name.'<button class="btn btn-default text-danger" id="remove_leaving_reason" value="'.$rowUser->id.'">Remove</button></h6></div>';
        	}
	        $output.='</div>';
	    }else{
	    	$output .='<div class="alert alert-light alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-triangle"> </i>Ooops, no record found.
            </div></div>';
	    }
	    return $output;
	}
	function register_new_leaving_reason($data,$leavingReasonName){
		$this->db->where('reason_name =',$leavingReasonName);
		$query=$this->db->get('staff_leaving_reason');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('staff_leaving_reason',$data);
			return true;
		}
	}
	function fetch_leaving_reasons(){
		$query=$this->db->get('staff_leaving_reason');
		return $query->result();
	}
	public function fetch_bs_categoreis($gradeNames,$max_quarter,$max_year)
	{
		$query=$this->db->query("select * from bscategory where academicyear='$max_year' and season='$max_quarter' and bcgrade='$gradeNames' group by bscategory order by bscategory ASC ");
		$output='';
		if($query->num_rows()>0){ 
			$output.='<option></option>';
			foreach ($query->result() as $evavalue) {
				$output.='<option>'.$evavalue->bscategory.'</option>';	
			}
		}else{
			$output.='<option>No category</option>';
		}
		return $output;
		
	}
	public function check_bs_sub_categoreis($gradeNames,$quarter,$max_year,$subcategory,$category)
	{
		$query=$this->db->query("select * from bs_sub_category where academicyear='$max_year' and season='$quarter' and bcgrade='$gradeNames' and bscategory='$category' and bssubcategory ='$subcategory' ");
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function load_sub_category_data($max_year,$max_quarter){
		$output='';
		$queryFetch=$this->db->query("select * from bs_sub_category where academicyear ='$max_year' and season='$max_quarter' group by bsid order by bsid DESC ");
		if($queryFetch->num_rows()>0){
			 $output.='<div class="table-responsive" >
          	<table class="tabler table-borderedr" width="100%">
            <tr>
              <th>Category</th>
              <th>Sub-Categroy</th>
              <th>Grade</th>
            </tr>';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<tr class="remove_bs_sub_category_type'.$rowUser->bsid.'"> <td>'.$rowUser->bscategory.' </td> <td>'.$rowUser->bssubcategory.'<button class="btn btn-default text-danger" id="remove_bs_sub_category_type" value="'.$rowUser->bsid.'">Remove</button> </td> <td> Grade '.$rowUser->bcgrade.' </td>
        		</tr>';
        	}
	        $output.='</table></div>';
	    }else{
	    	$output .='<div class="alert alert-light alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-triangle"> </i>Ooops, no record found.
            </div></div>';
	    }
	    return $output;
	}
	function enable_bs_sub_categories($max_year){
		$output='';
		$queryQuarter= $this->db->query("select * from quarter where Academic_Year='$max_year' ");
		if($queryQuarter->num_rows()>0){
			$this->db->where('academicyear',$max_year);
			$this->db->where('enable_status','1');
			$query = $this->db->get('bs_sub_category_enable');
			$output.='<small class="text-muted">Note: This toggle will be ON when school`s want to create basic skill sub-category.</small><br>Enable sub-category.';
			if($query->num_rows()>0){
				$output.='<div class="pretty p-switch p-fill">
	                <input type="checkbox" name="bs_sub_category_enable" class="bs_sub_category_enable" checked="checked" id="'.$max_year.'" value="0" >
	                <div class="state p-success">
	                    <label></label>
	                </div>
			    </div>';
			}else{
				$output.='<div class="pretty p-switch p-fill">
	              	<input type="checkbox" name="bs_sub_category_enable" class="bs_sub_category_enable" id="'.$max_year.'" value="1" >
	              	<div class="state p-success">
	                	<label></label>
	              	</div>
			    </div>';
			}
			$output.='<br>';
		}else{
			$output.='<span class="text-danger"><i class="fas fa-exclamation-triangle "></i> No school season found. Please set season <a href="'.base_url().'setting/">here</a>
          </span>';
		}
		return $output;
	}
	function enable_bs_sub_categories_status($max_year){
		$this->db->where('academicyear',$max_year);
		$this->db->where('enable_status','1');
		$query = $this->db->get('bs_sub_category_enable');
		if($query->num_rows()>0){
			return true;
		}else{
			return false;
		}
	}
	public function fetch_bs_categoreis_forGrade($category,$quarter,$max_year)
	{
		$query=$this->db->query("select bcgrade from bscategory where academicyear='$max_year' and season='$quarter' and bscategory='$category' group by bcgrade order by bcgrade ASC ");
		$output='';
		if($query->num_rows()>0){ 
			$output.='<div class="row"> ';
			foreach ($query->result() as $evavalue) {
				$output.=' <div class="col-lg-2 col-6">
                        <div class="pretty p-bigger">
                         <input id="eva_grade" type="checkbox" name="grade" value="'.$evavalue->bcgrade.'">
                         <div class="state p-info">
                            <i class="icon material-icons"></i>
                            <label></label>'.$evavalue->bcgrade.'
                         </div>
                       </div>
                     </div>';	
			}
			$output.='</div>';
		}else{
			$output.='No Grade';
		}
		return $output;
		
	}
	public function fetch_bs_sub_categoreis_forGrade($category,$max_quarter,$max_year)
	{
		$query=$this->db->query("select bssubcategory from bs_sub_category where academicyear='$max_year' and season='$max_quarter' and bscategory='$category' group by bssubcategory order by bssubcategory ASC ");
		$output='';
		if($query->num_rows()>0){ 
			$output.='<option></option>';
			foreach ($query->result() as $evavalue) {
				$output.='<option>'.$evavalue->bssubcategory.'</option>';	
			}
		}else{
			$output.='<option>No category</option>';
		}
		return $output;
		
	}
	function load_attendance_typedata(){
		$output='';
		$queryFetch=$this->db->query("select * from attendance_type group by attendance_name order by id ASC");
		if($queryFetch->num_rows()>0){
			$output.='<div class="row">';
        	foreach($queryFetch->result() as $rowUser){
        		$output.='<div class="col-md-6 col-12 StudentViewTextInfo remove_this_attendanceType'.$rowUser->id.'"><i class="fas fa-check-circle"></i> '.$rowUser->attendance_name.'<button class="btn btn-default text-danger" id="remove_this_attendanceType" value="'.$rowUser->id.'">Remove</button></div>';
        	}
	        $output.='</div>';
	    }else{
	    	$output .='<div class="alert alert-light alert-dismissible show fade">
            <div class="alert-body">
                <button class="close"  data-dismiss="alert">
                    <span>&times;</span>
                </button>
               <i class="fas fa-exclamation-triangle"> </i>Ooops, no record found.
            </div></div>';
	    }
	    return $output;
	}
	function register_new_attendanceType($data,$attendance_Type){
		$this->db->where('attendance_name =',$attendance_Type);
		$query=$this->db->get('attendance_type');
		if($query->num_rows() > 0){
			return false;
		}else{
			$this->db->insert('attendance_type',$data);
			return true;
		}
	}
	function filterSubject4Evaluation($gradesecs,$max_year)
	{
		$output='';
		foreach($gradesecs as $gradesec){
			$this->db->group_by('users.grade,subject.Subj_name');
			$this->db->where(array('gradesec'=>$gradesec));
			$this->db->where(array('Academic_Year'=>$max_year));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->where('usertype','Student');
			$this->db->select('subject.Grade,subject.Subj_name');
	        $this->db->from('subject');
	        $this->db->join('users', 
	            'users.grade = subject.Grade');
	        $query = $this->db->get();
	        $output='';
	        if($query->num_rows()>0){
				/*$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$gradesec' group by Subj_name order by suborder ASC ");*/
				$output.='<div class="row"> ';
				foreach ($query->result() as $evavalue) {
					$output.='<div class="col-lg-12 col-md-12 col-12">
		                <div class="pretty p-bigger">
		                  <input type="checkbox" name="subject4Evaluation" value="'.$evavalue->Subj_name.'" class="subject4Evaluation" id="customCheck1">
		                  <div class="state p-success">
		                    <i class="icon material-icons"></i>
		                    <label></label>'.$evavalue->Subj_name.'
		                  </div>
		                </div> 
		            </div>';
				}
				$output.='</div>';
			}
			return $output;
		}
	}
	function fetch_myrequested_purchase($user){
		$this->db->group_by('id');
		$this->db->order_by('id','DESC');
		$this->db->where('requested_by',$user);
		$query=$this->db->get('stock_purchase_request');
		$output='';
		if($query->num_rows()>0){
			$output.='<ul class="list-unstyled list-unstyled-border">';
            foreach($query->result() as $row){
            	$output.='<li class="media StudentViewTextInfo" id="deletingPurchaseRequest'.$row->id.'">
                <div class="custom-control custom-checkbox">
                  <input type="checkbox" checked="checked" class="custom-control-input" id="cbx-1" disabled>
                  <label class="custom-control-label" for="cbx-1"></label>
                </div>
                <div class="media-body">                  	
                  	Description :-<span class="font-weight-bold">'.$row->requested_item_desc.'</span><br> Unit:- <span class="font-weight-bold">'.$row->requested_unit.'</span> <i class="fas fa-chevron-right"></i> Unit Price:-<span class="font-weight-bold">'.$row->requested_unit_price.'</span> <i class="fas fa-chevron-right"></i> Quantity:- <span class="font-weight-bold">'.$row->requested_quantity.'</span> <i class="fas fa-chevron-right"></i> Amount:-<span class="font-weight-bold">'.$row->requested_amount.'</span>  <i class="fas fa-chevron-right"></i>  <span class="font-weight-bold">'.$row->purchaseType.'</span> <i class="fas fa-chevron-right"></i> <span class="font-weight-bold">'.$row->freightType.'</span><br>
                  	Justification/Remark:-<span class="font-weight-bold">'.$row->remark.'</span>';
                  	if($row->request_response=='Rejected'){
                  		$output.='<div class="badge badge-pill badge-danger float-right">'.$row->request_response.' </div>';
                  	}elseif($row->request_response=='Approved'){
                  		$output.='<div class="badge badge-pill badge-success float-right">'.$row->request_response.' </div>';
                  	}else{
                  		$output.='<div class="badge badge-pill badge-info float-right">'.$row->request_response.' </div>';
                  	}
                  	$output.='
                  	
                  	<div class="text-small text-muted">Requested on:- '.$row->requested_date.' 
                  		<div class="bullet"></div>';
                  		if($row->status=='0'){
                  			$output.='<a href="#" id="delete_this_purchase_request" class="text-danger" value="'.$row->id.'">Delete</a>';
                  		}else{
                  			$output.='<a href="#" class="text-warning"></a>';
                  		}
                  		
	                $output.='</div>
                </div>
              </li> ';
            }
            $output.='</ul>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function check_requested_purchase_item($purchase_request_description,$purchaseQuantity,$user){
		$this->db->where('requested_item_desc',$purchase_request_description);
		$this->db->where('requested_quantity',$purchaseQuantity);
		$this->db->where('requested_by',$user);
		$this->db->where('status','0');
		$query=$this->db->get('stock_purchase_request');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function fetch_myrequested_purchase_toapprove($user){
		$this->db->group_by('stock_purchase_request.id');
		$this->db->order_by('stock_purchase_request.id','DESC');
		$this->db->where('stock_purchase_request.status','0');
		$this->db->select('stock_purchase_request.status, stock_purchase_request.requested_by, stock_purchase_request.requested_item_desc, stock_purchase_request.requested_unit, stock_purchase_request.requested_unit_price, stock_purchase_request.requested_quantity, stock_purchase_request.requested_amount, stock_purchase_request.purchaseType, stock_purchase_request.freightType, stock_purchase_request.remark, stock_purchase_request.request_response, stock_purchase_request.requested_date, stock_purchase_request.id, users.fname, users.mname');
        $this->db->from('stock_purchase_request');
        $this->db->join('users', 
            'users.username = stock_purchase_request.requested_by');
        $query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
            foreach($query->result() as $row){
            	$output.='<div class="col-md-12 col-12" id="view_ThisSubjectResult_gs">
					<a href="javascript:void(0)" data-toggle="modal" data-target="#new-purchase-request-approve" class="view_ThisSubjectResult_gs" id="view_this_purchase_request" value="'.$row->id.'">
						<div class="card-body StudentViewTextInfo">
				            <div class="support-ticket media">
				              	<div class="media-body">
					                <div class="badge badge-pill badge-primary float-right" >
					                <i class="fas fa-chevron-right"></i>
					                </div>
				                	<span class="font-weight-bold font-24">'.$row->requested_item_desc.'</span>
				                	<br>
					                <span class="font-weight-bold font-20 text-dark">'.$row->remark.' 
					                	<div class="badge badge-pill badge-light">'.$row->request_response.' </div> 
					                	<span class="text-small text-muted">Requestd by '.$row->fname.' '.$row->mname.'  on '.$row->requested_date.' 
					                	</span>
					                </span>
					            </div>
				            </div>
			          	</div>
			        </a>
		        </div> ';
            }
            $output.='</div>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_requested_purchase_list($requestid){
		$this->db->group_by('stock_purchase_request.id');
		$this->db->order_by('stock_purchase_request.id','DESC');
		$this->db->where('stock_purchase_request.id',$requestid);
		$this->db->select('stock_purchase_request.status, stock_purchase_request.requested_by, stock_purchase_request.requested_item_desc, stock_purchase_request.requested_unit, stock_purchase_request.requested_unit_price, stock_purchase_request.requested_quantity, stock_purchase_request.requested_amount, stock_purchase_request.purchaseType, stock_purchase_request.freightType, stock_purchase_request.remark, stock_purchase_request.request_response, stock_purchase_request.requested_date, stock_purchase_request.id, users.fname, users.mname');
        $this->db->from('stock_purchase_request');
        $this->db->join('users', 
            'users.username = stock_purchase_request.requested_by');
        $query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="table-responsive">
          	<table class="table table-striped">
            <tr>
              <th>S/N</th>
              <th>Description</th>
              <th>Units</th>
              <th>QTY</th>
              <th>Unit Price</th>
              <th>Amount</th>
            </tr>';
            $no=1;
            foreach($query->result() as $row){
            	$output.='<tr><td>'.$no.'</td>
            	<td>'.$row->requested_item_desc.'</td>
            	<td>'.$row->requested_unit.'</td>
            	<td>'.$row->requested_quantity.'</td>
            	<td>'.$row->requested_unit_price.'</td>
            	<td>'.$row->requested_amount.'</td>
            	</tr>';
            }
            $output.='</table></div>

            <p class="font-20 text-dark StudentViewTextInfo"> <i class="fas fa-check"></i> 
            '.$row->purchaseType.' &nbsp; &nbsp;&nbsp;<i class="fas fa-check"></i> '.$row->freightType.' <br> '.$row->remark.' 
	        	<span class="text-small text-muted">Requestd by '.$row->fname.' '.$row->mname.'  on '.$row->requested_date.' 
	        	</span>
	        </p>
            <button id="approve_this_purchase_request" class="btn btn-primary pull-right" value="'.$requestid.'">Approve Request</button>';

		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_purchase_report($postData=null){
     	
     $responseData = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (requested_item_desc like '%".$searchValue."%' or requested_unit like '%".$searchValue."%' or requested_date like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('stock_purchase_request')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('stock_purchase_request')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->where(array('status'=>'1'));
     	$records = $this->db->get('stock_purchase_request')->result();
     	$data = array();
     foreach($records as $record ){
     	$returnStatus=$record->requested_item_desc. ' <a href="#" data-toggle="modal" data-target="#view-detail-purchase-request-approve"  id="view_detail_purchase_approved_request" class="text-info" value="'.$record->id.'"> View Detail</a>';
    	$data[] = array( 
    		"requested_item_desc"=>$returnStatus,
           	"requested_unit"=>$record->requested_unit,
           	"requested_quantity"=>$record->requested_quantity,
           	"requested_unit_price"=>$record->requested_unit_price,
           	"requested_amount"=>$record->requested_amount,
        ); 
     }
     ## Response
     $responseData = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $responseData; 
   	}
   	function viewdetail_this_approved_purchase_request($requestid){
   		$query_name = $this->db->get('school');
	    $row_name = $query_name->row();
	    $school_name=$row_name->name;
	    $address=$row_name->address;
	    $phone=$row_name->phone;
	    $website=$row_name->website;
	    $email=$row_name->email;
	    $logo=$row_name->logo;

		$this->db->group_by('stock_purchase_request.id');
		$this->db->order_by('stock_purchase_request.id','DESC');
		$this->db->where('stock_purchase_request.id',$requestid);
		$this->db->select('stock_purchase_request.status, stock_purchase_request.requested_by, stock_purchase_request.requested_item_desc, stock_purchase_request.requested_unit, stock_purchase_request.requested_unit_price, stock_purchase_request.requested_quantity, stock_purchase_request.requested_amount, stock_purchase_request.purchaseType, stock_purchase_request.freightType, stock_purchase_request.remark, stock_purchase_request.request_response, stock_purchase_request.requested_date, stock_purchase_request.id, users.fname, users.mname');
        $this->db->from('stock_purchase_request');
        $this->db->join('users', 
            'users.username = stock_purchase_request.requested_by');
        $query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$output.= '<div style="width:100%;height:auto;page-break-inside:avoid;display: block; "> 
	          <div class="support-ticket media pb-1 mb-3 card-header">
	          <img src="'.base_url().'/logo/'.$logo.'" style="width:auto;height: 60px;" class="user-img mr-2" alt="">
	          <div class="media-body ml-3">
	            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">'.$school_name.' </B></h2></span>
	            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u>PURCHASE REQUEST </u></B></h4></p>
	          </div>
	        </div> 
	        <div class="row">';
	        $no=1;
            foreach($query->result() as $row){
            	$output.='<div class="col-lg-12 col-md-12 col-12">
            	<p class="pull-right">Date:- <u>'.$row->requested_date.'</u> <br>
            	PR No:- _____________</p>
            	</div>
            	<div class="col-lg-12 col-md-12 col-12">
            	<p>From:- ________________<br>
            	Department:- ________________ &nbsp;&nbsp;&nbsp;  Budget Code:- _____ </p>
            	<p>
            	<div class="table-responsive">
		          	<table class="table table-striped">
		            <tr>
		              <th>S/N</th>
		              <th>Description</th>
		              <th>Units</th>
		              <th>QTY</th>
		              <th>Unit Price</th>
		              <th>Amount</th>
		            </tr>
		        <tr><td>'.$no.'</td>
            	<td>'.$row->requested_item_desc.'</td>
            	<td>'.$row->requested_unit.'</td>
            	<td>'.$row->requested_quantity.'</td>
            	<td>'.$row->requested_unit_price.'</td>
            	<td>'.$row->requested_amount.'</td>
            	</tr>
            	</table>
            	</div>
            	</p>
            	</div>';
            }
            $output.='<div class="col-lg-12 col-md-12 col-12">
            <p class="font-20 text-dark StudentViewTextInfo"> <i class="fas fa-check"></i> 
            '.$row->purchaseType.' &nbsp; &nbsp;&nbsp;<i class="fas fa-check"></i> '.$row->freightType.' 
	        </p>
	         <p class="font-20 text-dark StudentViewTextInfo">'.$row->remark.'  </p>
	        </div>
	        <div class="col-lg-6 col-md-6 col-12">
	        <u>Requested by</u> <br>
	        Name: <u>'.$row->fname.' '.$row->mname.'</u><br>
	        Signature:- _________________
	        </div>
	        <div class="col-lg-6 col-md-6 col-12">
	        <u>Approved by</u> <br>
	        Name: _________________<br>
	        Signature:- _________________
	        </div>
            </div>
            </div>';

		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_user_group_list(){
		$this->db->group_by('uname');
		$this->db->order_by('uname','ASC');
		$query=$this->db->get('usegroup');
		return $query->result();
	}
	function check_evaluation_question($evaluation_question_name,$self_evaluation_question_for){
		$this->db->where('question_name',$evaluation_question_name);
		$this->db->where('question_to',$self_evaluation_question_for);
		$query=$this->db->get('self_evaluation_questions');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function fetch_self_evaluation_questions_title($user){
		$this->db->group_by('question_title');
		$this->db->order_by('id','ASC');
		$query=$this->db->get('self_evaluation_questions');
		$output='';
		if($query->num_rows()>0){
			$no=1;
			$output.='<div class="row">';
            foreach($query->result() as $row){
            	$output.='<div class="col-md-12 col-12" id="view_ThisSubjectResult_gs">
					<a href="javascript:void(0)" class="view_ThisSubjectResult_gs" id="view_this_self_evaluation_titlt_question" value="'.$row->question_title.'">
						<div class="card-body StudentViewTextInfo">
				            <div class="support-ticket media">
				              	<div class="media-body">
					                <div class="badge badge-pill badge-primary float-right" >
					                <i class="fas fa-chevron-right"></i>
					                </div>
				                	<span class="font-weight-bold font-24">'.$row->question_title.'</span>
				                	<div class="bullet"></div>
					                	<span class="text-small text-muted"> Date posted:- '.$row->date_posted.' 
					                </span>
					               
					            </div>
				            </div>
			          	</div>
			        </a>
		        </div> ';
              $no++;
            }
            $output.='</div>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_self_evaluation_questions($user,$question_title){
		$this->db->group_by('id');
		$this->db->order_by('id','ASC');
		$this->db->where('question_title',$question_title);
		$query=$this->db->get('self_evaluation_questions');
		$output='';
		if($query->num_rows()>0){
			$no=1;
			$output.='<button class="btn btn-default StudentViewTextInfo backToquestionTitlePage font-weight-bold font-22" id="backToquestionTitlePage" ><i class="fas fa-chevron-left" style="font-size:30px"></i> Go Back</button>';
            foreach($query->result() as $row){
            	$output.='<div class="media StudentViewTextInfo" id="deletingSelfEvaluationQuestion'.$row->id.'">
                <div class="media-body">                  	
                  	'.$no.'. <span class="font-weight-bold">'.$row->question_name.'</span> <button id="delete_this_self_evaluation_question" class="btn btn-danger pull-right" value="'.$row->id.'">Delete Question</button> <div class="bullet"></div> '.$row->question_to.' 
                </div>
              </div> ';
              $no++;
            }
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_my_newself_evaluation_questions($userType){
		$this->db->group_by('question_title');
		$this->db->order_by('id','ASC');
		$this->db->where('question_to',$userType);
		$query=$this->db->get('self_evaluation_questions');

		$output='';
		if($query->num_rows()>0){
			$output.='<div class="row">';
            foreach($query->result() as $row){
            	$output.='<div class="col-md-12 col-12" id="view_ThisSubjectResult_gs">
					<a href="javascript:void(0)" class="view_ThisSubjectResult_gs" id="answer_this_self_evaluation_question" value="'.$row->question_title.'">
						<div class="card-body StudentViewTextInfo">
				            <div class="support-ticket media">
				              	<div class="media-body">
					                <div class="badge badge-pill badge-primary float-right" >
					                <i class="fas fa-chevron-right"></i>
					                </div>
				                	<span class="font-weight-bold font-24">'.$row->question_title.'</span>
				                	<div class="bullet"></div>
					                <span class="font-weight-bold font-20 text-dark">'.$row->question_to.' &nbsp;
					                	<span class="text-small text-muted"> Date posted:- '.$row->date_posted.' 
					                	</span>
					                </span>
					            </div>
				            </div>
			          	</div>
			        </a>
		        </div> ';
            }
            $output.='</div>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function fetch_myself_evaluation_questions($user,$userType,$titleQuestion){
		$this->db->group_by('id');
		$this->db->order_by('id','ASC');
		$this->db->where('question_to',$userType);
		$this->db->where('question_title',$titleQuestion);
		$query=$this->db->get('self_evaluation_questions');
		$output='';
		if($query->num_rows()>0){
			$no=1;
			$output.='<button class="btn btn-default StudentViewTextInfo backToTitlePage font-weight-bold font-22" id="backToTitlePage" ><i class="fas fa-chevron-left" style="font-size:30px"></i> Go Back</button>
			<form class="submit_my_self_evaluation_question" method="POST">';
            foreach($query->result() as $row){
            	$id=$row->id;
            	$this->db->where('question_id',$id);
            	$this->db->where('staff_username',$user);
            	$queryGet=$this->db->get('self_evaluation_questions_answer');
            	$output.='<div class="media StudentViewTextInfo">
                <div class="media-body">   
                  	'.$no.'. <span class="font-weight-bold">'.$row->question_name.'</span>';
                  	if($queryGet->num_rows()>0){
                  		$rowAnswer=$queryGet->row();
                  		$myanswer=$rowAnswer->answer_name;
                  		$output.='<p class="font-weight-normal StudentViewTextInfo">'.$myanswer.'</p>';
                  	}else{
                  		$output.='<input type="hidden" name="myevaluation_question_id" value="'.$row->id.'" > 
                  		<textarea rows="4" cols="50" wrap="physical" name="myevaluation_question_name" id="myevaluation_question_name" class="myevaluation_question_name" placeholder="Write question answer here..." style="width:100%; height:100px;" onkeyup="submit_my_self_evaluation_question_ansewer()"></textarea> ';
                  	}
                  	
                $output.='</div>
              </div> ';
              $no++;
            }
            $output.='<button class="btn btn-primary pull-right" type="submit" id="submit_myself_evaluation_question" disabled="disabled">Submit Answer</button>
            </form>';
		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function check_evaluation_question_answer($questionIDs,$user){
		$this->db->where('question_id',$questionIDs);
		$this->db->where('staff_username',$user);
		$query=$this->db->get('self_evaluation_questions_answer');
		if($query->num_rows()>0){
			return false;
		}else{
			return true;
		}
	}
	function fetch_self_evaluation_report($postData=null){
     	
     $responseData = array();

     ## Read value
     $draw = $postData['draw'];
     $start = $postData['start'];
     $rowperpage = $postData['length']; // Rows display per page
     $columnIndex = $postData['order'][0]['column']; // Column index
     $columnName = $postData['columns'][$columnIndex]['data']; // Column name
     $columnSortOrder = $postData['order'][0]['dir']; // asc or desc
     $searchValue = $postData['search']['value']; // Search value

     ## Search 
     $searchQuery = "";
     if($searchValue != ''){
        $searchQuery = " (question_title like '%".$searchValue."%' or question_to like '%".$searchValue."%' or date_posted like'%".$searchValue."%' ) ";
     }

     ## Total number of records without filtering
     $this->db->select('count(*) as allcount');
     $records = $this->db->get('self_evaluation_questions')->result();
     $totalRecords = $records[0]->allcount;

     ## Total number of record with filtering
     $this->db->select('count(*) as allcount');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     $records = $this->db->get('self_evaluation_questions')->result();
     $totalRecordwithFilter = $records[0]->allcount;

     ## Fetch records
     $this->db->select('*');
     if($searchQuery != '')
        $this->db->where($searchQuery);
     	$this->db->order_by($columnName, $columnSortOrder);
     	$this->db->limit($rowperpage, $start);
		$this->db->select('users.fname, users.mname, self_evaluation_questions.question_title, self_evaluation_questions_answer.date_answer, self_evaluation_questions_answer.id,self_evaluation_questions_answer.staff_username');
        $this->db->from('self_evaluation_questions_answer');
        $this->db->join('self_evaluation_questions', 
            'self_evaluation_questions.id = self_evaluation_questions_answer.question_id');
        $this->db->join('users', 
            'users.username = self_evaluation_questions_answer.staff_username');
        $this->db->order_by('self_evaluation_questions_answer.id', 'ASC');
        $this->db->group_by('self_evaluation_questions.question_title');
        $records = $this->db->get('')->result();
     	$data = array();
     foreach($records as $record ){
     	$returnStatus=$record->question_title. ' <a href="#" data-toggle="modal" data-target="#view-detail-this-staffe-question-answer"  id="view_detail_this_staff_self_evaluation_answer" value="'.$record->question_title.'" class="'.$record->staff_username.'"> View Detail</a>';
    	$data[] = array( 
    		"fname"=>$record->fname.' '.$record->mname ,
           	"question_title"=>$returnStatus,
           	"date_posted"=>$record->date_answer,
        ); 
     }
     ## Response
     $responseData = array(
        "draw" => intval($draw),
        "iTotalRecords" => $totalRecords,
        "iTotalDisplayRecords" => $totalRecordwithFilter,
        "aaData" => $data
     );
     return $responseData; 
   	}
   	function view_detail_this_staff_self_evaluation_answer($requestid,$staffName){
   		$query_name = $this->db->get('school');
	    $row_name = $query_name->row();
	    $school_name=$row_name->name;
	    $address=$row_name->address;
	    $phone=$row_name->phone;
	    $website=$row_name->website;
	    $email=$row_name->email;
	    $logo=$row_name->logo;

		$this->db->group_by('self_evaluation_questions.id');
		$this->db->order_by('self_evaluation_questions.id','ASC');
		$this->db->where('self_evaluation_questions.question_title',$requestid);
		$this->db->where('self_evaluation_questions_answer.staff_username',$staffName);
		$this->db->select('self_evaluation_questions_answer.answer_name, self_evaluation_questions.question_name,self_evaluation_questions_answer.staff_username, self_evaluation_questions_answer.date_answer, users.fname, users.mname');
        $this->db->from('self_evaluation_questions_answer');
        $this->db->join('self_evaluation_questions', 
            'self_evaluation_questions.id = self_evaluation_questions_answer.question_id');
        $this->db->join('users', 
            'users.username = self_evaluation_questions_answer.staff_username');
        $query = $this->db->get();

		$output='';
		if($query->num_rows()>0){
			$row_name = $query->row();
		    $fName=$row_name->fname;
		    $mName=$row_name->mname;
			$output.= '<div style="width:100%;height:auto;page-break-inside:avoid;display: block; "> 
	          <div class="support-ticket media pb-1 mb-3 card-header">
	          <img src="'.base_url().'/logo/'.$logo.'" style="width:auto;height: 60px;" class="user-img mr-2" alt="">
	          <div class="media-body ml-3">
	            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">'.$school_name.' </B></h2></span>
	            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u>Self-Evaluation Form </u></B></h4></p>
	          </div>
	        </div>';

	        $output.='<div class="row">
	        <div class="col-lg-6 col-md-6 col-12">
	        Name of Staff:- <u>'.$fName.' '.$mName.'</u>
	        </div>
	        <div class="col-lg-6 col-md-6 col-12">
	        Signature:- _________________
	        </div>
	        <div class="col-lg-6 col-md-6 col-12">
	        Position __________.
	        </div>
	        <div class="col-lg-6 col-md-6 col-12">
	        Date _______________________________.
	        </div>';
	        $no=1;
            foreach($query->result() as $row){
            	$output.='<div class="col-lg-12 col-md-12 col-12">';
            	$output.='<div class="media">
                <div class="media-body">   
                  	'.$no.'. <span class="font-weight-bold font-13">'.$row->question_name.'</span>
            	<p class="font-12 text-dark StudentViewTextInfo"> 
	            '.$row->answer_name.' 
		        </p>
		        </div>
		        </div>
            	</div>';
            }
            $output.='
	        <div class="col-lg-12 col-md-12 col-12 StudentViewTextInfo">
	        <span class="font-weight-bold font-11">NB:- The school management and evaluation process does not accommodate preferential treatment and holds all nationalities; ethnicities; religions, genders and age impartially.
	        </span>
	        </div>
            </div>
            </div>';

		}else{
			$output.='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found.
        	</div></div>';
		}
		return $output;
	}
	function enable_week_categories($max_year){
		$output='';
		$this->db->where('academicyear',$max_year);
		$this->db->where('enable_status','1');
		$query = $this->db->get('kg_chibt_week_category');
		$output.='<small class="text-muted">Note: This toggle will be ON when schools want to enable week categorized Assesment.</small>Enable week-category.';
		if($query->num_rows()>0){
			$output.='<div class="pretty p-switch p-fill">
                <input type="checkbox" name="kg_chibt_week_category" class="kg_chibt_week_category" checked="checked" id="'.$max_year.'" value="0" >
                <div class="state p-success">
                    <label></label>
                </div>
		    </div>';
		}else{
			$output.='<div class="pretty p-switch p-fill">
              	<input type="checkbox" name="kg_chibt_week_category" class="kg_chibt_week_category" id="'.$max_year.'" value="1" >
              	<div class="state p-success">
                	<label></label>
              	</div>
		    </div>';
		}
		$output.='<br>';
		
		return $output;
	}
	public function fetch_kg_mark_sheet($gradesec,$chibt,$branch,$max_year)
	{
		$this->db->select('grade');
		$this->db->where('branch',$branch);
		$this->db->where('gradesec',$gradesec);
		$this->db->where('academicyear',$max_year);
		$this->db->group_by('grade');
		$queryGrade=$this->db->get('users');
		$output='';
		if($queryGrade->num_rows()>0){
			$gradeRow=$queryGrade->row();
			$grade=$gradeRow->grade;

			$this->db->select('sub_name');
			$this->db->where('sub_name',$chibt);
			$this->db->where('header_grade',$grade);
			$this->db->where('academicyear',$max_year);
			$this->db->group_by('sub_name');
			$queryChibt=$this->db->get('kg_subject_header');
			if($queryChibt->num_rows()>0){
				$query_name = $this->db->query("select * from school");
		        $row_name = $query_name->row();
		        $school_name=$row_name->name;
		        $school_name2=$row_name->name_2;
		        $address=$row_name->address;
		        $phone=$row_name->phone;
		        $website=$row_name->website;
		        $email=$row_name->email;
		        $schooLogo=$row_name->logo;
		        $output.= '<div style="width:100%; height:auto;page-break-inside:avoid; display:block;">
		          	<div class="support-ticket media pb-1 mb-3 card-header">
		          		<img src="'.base_url().'/logo/'.$schooLogo.'" style="width:auto;height: 110px;" class="user-img mr-2" alt="">
				        <div class="media-body ml-3">
				            <span class="font-weight-bold"><h2 id="ENScool"><B id="ENS">'.$school_name2.' <br>'.$school_name.' </B></h2></span>
				            <p class="my-1"> <h4 id="ENScool"><B id="ENS"><u> የተከታታይ ምዘና ቅጽ</u></B></h4></p>
				        </div>
		        	</div> ';

		        	$output.='<div class="row">
			        	<div class="col-lg-12 col-md-12 col-12">
			        	ጭብጥ :- '.$chibt.' &nbsp; &nbsp; ደረጃ :- '.$gradesec.' <br>
			        	የመምህር ስም :- __________________ </div>';
		        	
						$output.='<div class="col-lg-12 col-md-12 col-12">
						<div class="table-responsive">
		        		<table class="tabler table-borderedr table-hover" style="width:100%;height:auto;">
		        		<thead>
		        		<tr>
		        		<th class="text-center">Week</th>
		        		<th class="text-center">No.</th> 
		        		<th>Learning Objectives</th> ';
	            		$queryWeek=$this->db->query("select bs.sname,bs.nid,bs.week from kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$chibt' and bs.sgrade='$grade' and bs.sterm='$chibt' and kc.cate_grade='$grade' and bs.academicyear='$max_year' and kc.academicyear='$max_year' and bs.week!='' group by bs.week order by bs.week ASC ");
	            		$noOfWeeks=0;$totalName=0;
	            		if($queryWeek->num_rows()>0) {
	            			$no=1;
							foreach($queryWeek->result() as $sName){
								$weekName=$sName->week;
								switch ($weekName) {
							        case 'Week 1':
							          $headerWeekNames="1ኛ ሳምንት";
							          break;
							        case 'Week 2':
							          $headerWeekNames="2ኛ ሳምንት";
							          break;
							        case 'Week 3':
							          $headerWeekNames="3ኛ ሳምንት";
							          break;
							        case 'Week 4':
							          $headerWeekNames="4ኛ ሳምንት";
							          break;
							        case 'Week 5':
							          $headerWeekNames="5ኛ ሳምንት";
							          break;
							        case 'Week 6':
							          $headerWeekNames="6ኛ ሳምንት";
							          break;
							        case 'Week 7':
							          $headerWeekNames="7ኛ ሳምንት";
							          break;
							        case 'Week 8':
							          $headerWeekNames="8ኛ ሳምንት";
							          break;
							        case 'Week 9':
							          $headerWeekNames="9ኛ ሳምንት";
							          break;
							         case 'Week 10':
							          $headerWeekNames="10ኛ ሳምንት";
							          break;
							        default:
							          $headerWeekNames="";
							          break;
							    }
						    	$queryWeekNames=$this->db->query("select bs.sname,bs.nid from kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$chibt' and bs.sgrade='$grade' and bs.sterm='$chibt' and kc.cate_grade='$grade' and bs.academicyear='$max_year' and kc.academicyear='$max_year' and bs.week!='' and bs.week='$weekName' group by bs.nid order by bs.nid ASC ");
		            			
		            			$totalName=$queryWeekNames->num_rows() +1 ;
		            			$output.='<tr><th class="text-center" rowspan='.$totalName.'>'.$headerWeekNames.'<br><br> ቀን ---------------- </th>';
								/*$queryWeekNames=$this->db->query("select bs.sname,bs.nid from kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$chibt' and bs.sgrade='$grade' and bs.sterm='$chibt' and kc.cate_grade='$grade' and bs.academicyear='$max_year' and kc.academicyear='$max_year' and bs.week='$weekName' group by bs.nid order by bs.nid ASC ");*/
								foreach($queryWeekNames->result() as $sName){
									
									$output.='<tr><th class="text-center">'.$no.'</th><th><span class="font-12">'.$sName->sname.'</span></th>';
									$no++;
								}
								$noOfWeeks++;
							}
							$totalAssesment=$totalName * $noOfWeeks;
							$output.='</tr> </thead> </table></div> </div>
							<div class="col-lg-12 col-md-12 col-12">
							<hr>';
			        		$queryBsType=$this->db->query("select value_name , value_desc, value_percent from kg_subject_value where academicyear='$max_year' and value_grade='$grade' ");
							foreach ($queryBsType->result() as $bsType) {
								$output.='<span class="font-12">'.$bsType->value_desc.' = ' .$bsType->value_name.'('.$bsType->value_percent.')</span><br>';
							}
						$output.='</div></div></div>';

					$output.='<br><div class="row">
			        	<div class="col-lg-12 col-md-12 col-12">
			        	<div style="width:100%;height:auto;page-break-inside:avoid; page-break-after:always;display: block; ">
			        	ጭብጥ :- '.$chibt.' &nbsp; &nbsp; ደረጃ :- '.$gradesec.' <br>
			        	የመምህር ስም :- __________________ 
					<div class="table-responsive">
	        		<table class="tabler table-borderedr table-hover" style="width:100%;height:auto;" cellspacing="2" cellpadding="2">
	        		<tr>
	        		<th rowspan="2">No.</th>
	            	<th rowspan="2">Name</th>

	            	<th colspan="'.$totalAssesment.'" class="text-center">Learning Objectives</th></tr>';
	            	$boo=1;
	            	foreach($queryWeek->result() as $sName){
						$weekName=$sName->week;
						$queryWeekNames=$this->db->query("select bs.sname,bs.nid from kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$chibt' and bs.sgrade='$grade' and bs.sterm='$chibt' and kc.cate_grade='$grade' and bs.academicyear='$max_year' and kc.academicyear='$max_year' and bs.week='$weekName' group by bs.nid order by bs.nid ASC ");
						foreach($queryWeekNames->result() as $sName){
							$sna=$sName->sname;
							if($boo<=9){
								$output.='<th class="text-center"> 0'.$boo.' </th>';
							}else{
								$output.='<th class="text-center"> '.$boo.' </th>';
							}
							
							$boo++;
						}
					}
						$this->db->where('academicyear',$max_year);
						$this->db->where('status','Active');
						$this->db->where('isapproved','1');
						$this->db->where('usertype','Student');
						$this->db->where('branch',$branch);
						$this->db->where('gradesec',$gradesec);
						$this->db->group_by('username');
						$this->db->order_by('fname,mname,lname','ASC');
						$queryStudent=$this->db->get('users');
						if($queryStudent->num_rows()>0){
							$noStudent=1;
							$no=1;
							foreach($queryStudent->result() as $rowStudent){
								$output.='<tr><td>'.$noStudent.'</td> <td>'.$rowStudent->fname.' '.$rowStudent->mname.' '.$rowStudent->lname.'</td>';
								$noStudent ++;
							foreach($queryWeek->result() as $sName){
									$weekName=$sName->week;
									$queryWeekNames=$this->db->query("select bs.sname,bs.nid from kg_subject_list_name as bs cross join kg_subject_list_category as kc where kc.category_name=bs.scategory and kc.cate_term='$chibt' and bs.sgrade='$grade' and bs.sterm='$chibt' and kc.cate_grade='$grade' and bs.academicyear='$max_year' and kc.academicyear='$max_year' and bs.week='$weekName' group by bs.nid order by bs.nid ASC ");
									foreach($queryWeekNames->result() as $sName){
										$sna=$sName->sname;
										$output.='<td class="text-center"> </td>';
										$no++;
									}
								}
							}
							$output.='</tr>';
						}
					}
					$output.='</table></div>';

				$output.='</div></div></div>';
			}else{
				$output.='<div class="alert alert-light alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close"  data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                <i class="fas fa-exclamation-triangle"> </i> Ooops, No record found for grade '.$grade.'.
	        	</div></div>';
			}
		}
		return $output;
	}
	function fetch_assesment_analysis_rankbyGrade($branch, $grade, $quarter, $evaluation, $max_year){
	    $output = '';
	    $this->db->select('u.username, u.fname, u.mname, s.Grade, s.Subj_name, u.grade, u.id');
	    $this->db->from('subject s');
	    $this->db->join('users u', 'u.grade = s.Grade');
	    $this->db->order_by('s.suborder', 'ASC');
	    $this->db->group_by('s.Subj_name');
	    $this->db->where('s.onreportcard', '1');
	    $this->db->where('s.Academic_Year', $max_year);
	    $this->db->where('u.grade', $grade);
	    $this->db->where('u.branch', $branch);
	    $this->db->where('u.usertype', 'Student');
	    $this->db->where('u.academicyear', $max_year);
	    $this->db->where('u.status', 'Active');
	    $this->db->where('u.isapproved', '1');
	    $querySubject = $this->db->get();

	    if ($querySubject->num_rows() > 0) {
	        $this->db->select('max(year_name) as ay');
	        $queryac = $this->db->get('academicyear');
	        $rowac = $queryac->row();
	        $yearname = $rowac->ay;

	        $output .= '<div class="text-center"><h4><u><b>' . $yearname . 'E.C</b> Academic year <b>' . $quarter . ' ' . $evaluation . '</b> assessment rank for grade <b>' . $grade . '</b></u></h4></div>';
	        $output .= '<div class="table-responsive">
	            <table class="table table-bordered table-hover" id="tableExport" style="width:100%;">
	            <thead>
	            <tr>
	                <th>No.</th>
	                <th>Student Name</th>
	                <th>Grade</th>';

	        foreach ($querySubject->result() as $subvalue) {
	            $output .= '<th>' . $subvalue->Subj_name . '</th>';
	        }

	        $output .= '<th>Total</th><th>Rank</th></tr></thead>';
	        $this->db->select('gradesec, id, fname, mname');
	        $this->db->where('status', 'Active');
	        $this->db->where('isapproved', '1');
	        $this->db->where('usertype', 'Student');
	        $this->db->where('branch', $branch);
	        $this->db->where('grade', $grade);
	        $this->db->where('academicyear', $max_year);
	        $this->db->group_by('id');
	        $this->db->order_by('fname, mname, lname', 'ASC');
	        $queryStudent = $this->db->get('users');

	        $studentData = [];
	        foreach ($queryStudent->result() as $studentvalue) {
	            $stuid = $studentvalue->id;
	            $gradesec=$studentvalue->gradesec;
	            $this->db->select('*');
	            $this->db->where('Grade', $grade);
	            $this->db->where('onreportcard', '1');
	            $this->db->where('Academic_Year', $max_year);
	            $this->db->order_by('suborder', 'ASC');
	            $querySubject = $this->db->get('subject');

	            $allSubTotal = 0;
	            foreach ($querySubject->result() as $subvalue) {
	                $subject = $subvalue->Subj_name;
	                $this->db->select('value as total');
	                $this->db->where('subname', $subject);
	                $this->db->where('quarter', $quarter);
	                $this->db->where('markname', $evaluation);
	                $this->db->where('stuid', $stuid);
	                $this->db->group_by('stuid');
	                $queryMark = $this->db->get('mark' . $branch . $gradesec . $quarter . $max_year);

	                $totalmark = ($queryMark->num_rows() > 0) ? $queryMark->row()->total : 0;
	                $allSubTotal += $totalmark;
	            }

	            $studentData[] = ['id' => $stuid, 'total' => $allSubTotal];
	        }

	        // Sort student data by total score
	        // CORRECTED RANK CALCULATION
			usort($studentData, function ($a, $b) {
			    // Use spaceship operator for reliable float comparison
			    return $b['total'] <=> $a['total'];
			});

			// Initialize variables for ranking
			$rank = 1;
			$prevScore = null;
			$actualPosition = 1;
			$studentCount = count($studentData);

			foreach ($studentData as $key => &$student) {
			    // Handle first student
			    if ($key === 0) {
			        $student['rank'] = $rank;
			        $prevScore = $student['total'];
			        $actualPosition++;
			        continue;
			    }

			    // Compare with previous score using threshold for floating points
			    $epsilon = 0.00001;
			    if (abs($student['total'] - $prevScore) < $epsilon) {
			        // Same rank as previous
			        $student['rank'] = $rank;
			    } else {
			        // Update rank to actual position
			        $rank = $actualPosition;
			        $student['rank'] = $rank;
			    }

			    $prevScore = $student['total'];
			    $actualPosition++;
			}
	        // Generate rows with rank
	        $no = 1;
	        foreach ($queryStudent->result() as $studentvalue) {
	            $stuid = $studentvalue->id;
	            $gradesec=$studentvalue->gradesec;
	            $studentRow = array_filter($studentData, function ($s) use ($stuid) {
	                return $s['id'] === $stuid;
	            });
	            $studentRow = reset($studentRow);
	            $rank = $studentRow['rank'];
	            $output .= '<tr>';
	            $output .= '<td>' . $no . '</td>';
	            $output .= '<td>' . $studentvalue->fname . ' ' . $studentvalue->mname . '</td>';
	            $output .= '<td>' . $studentvalue->gradesec . ' </td>';
	            foreach ($querySubject->result() as $subvalue) {
	                $subject = $subvalue->Subj_name;
	                $this->db->select('value as total');
	                $this->db->where('subname', $subject);
	                $this->db->where('quarter', $quarter);
	                $this->db->where('markname', $evaluation);
	                $this->db->where('stuid', $stuid);
	                $this->db->group_by('markname');
	                $queryMark = $this->db->get('mark' . $branch . $gradesec . $quarter . $max_year);
	                $totalmark = ($queryMark->num_rows() > 0) ? $queryMark->row()->total : 0;
	                $output .= '<td>' . number_format((float)$totalmark, 2, '.', '') . '</td>';
	            }
	            $output .= '<td>' . number_format((float)$studentRow['total'], 2, '.', '') . '</td>';
	            $output .= '<td>' . $rank . '</td>';
	            $output .= '</tr>';
	            $no++;
	        }
	        $output .= '</table></div>';
	        $this->db->select('u.fname,u.mname,u.mysign');
			$this->db->from('hoomroomplacement hm');
			$this->db->join('users u',
			'u.username=hm.teacher');
			$this->db->where('hm.academicyear',$max_year);
			$this->db->where('hm.roomgrade',$gradesec);
			$this->db->where('hm.branch',$branch);
			$this->db->where('u.branch',$branch);
			$this->db->where('u.usertype!=','Student');
			$this->db->where('u.status','Active');
			$this->db->where('u.isapproved','1');
			$queryHoomRoom=$this->db->get();
            if($queryHoomRoom->num_rows()>0){
                $rowHommeRoom=$queryHoomRoom->row_array();
                $tfName=$rowHommeRoom['fname'];
                $tmName=$rowHommeRoom['mname'];
                $signSigns=$rowHommeRoom['mysign'];
            }else{
                $tfName='_____________';
                $tmName='_____________';
                $signSigns='_____';
            }
			$output.="<p>HRT's Name:- <b>".$tfName." ".$tmName."</b> &nbsp;&nbsp;&nbsp; Signature <img alt='' src='".base_url()."/".$signSigns."' style='height:40px;width:120px'></p>
              ";
	        $output.='<small class="text-muted pull-right">Powered BY :- GS Technologies www.grandstande.com | +251984085240</small>';
	    } else {
	        $output .= '<div class="alert alert-light alert-dismissible show fade">
	                <div class="alert-body">
	                    <button class="close" data-dismiss="alert">
	                        <span>&times;</span>
	                    </button>
	                    <i class="fas fa-check-circle"> </i> No subject found.
	                </div>
	            </div>';
	    }

	    return $output;
	}
	function filter_assesment4analysisByGrade($mybranch,$gradesec,$max_year,$quarter)
	{
		$this->db->select('ev.sasid,ev.sasname');
		$this->db->from('schoolassesment ev');
		$this->db->join('users u',
		'u.grade=ev.sasgrade');
		$this->db->where('ev.academicyear',$max_year);
		$this->db->where('u.grade',$gradesec);
		$this->db->where('u.branch',$mybranch);
		$this->db->where('u.academicyear',$max_year);
		$this->db->where('u.usertype','Student');
		$this->db->where('u.status','Active');
		$this->db->where('u.isapproved','1');
		$this->db->group_by('sasname');
		$this->db->order_by('sasid','ASC');
		$query=$this->db->get();
		$output='';
		$output.='<option></option>';
		foreach ($query->result() as $evavalue) {
			$output.='<option value="'.$evavalue->sasname.'">'.$evavalue->sasname.'</option>';	
		}
		return $output;
	}
	function filterSubjectSpecificSTudent($gradesec,$max_year)
	{
		$output='';
		//foreach($gradesecs as $gradesec){
			$this->db->group_by('subject.Subj_name');
			$this->db->where(array('Grade'=>$gradesec));
			$this->db->where(array('Academic_Year'=>$max_year));
			$this->db->where('student_specific','Yes');
			$this->db->select('subject.Grade,subject.Subj_name');
	        $query = $this->db->get('subject');
	        $output='';
	        if($query->num_rows()>0){
				/*$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$gradesec' group by Subj_name order by suborder ASC ");*/
				$output.='<label>Select Subject</label><div class="row"> ';
				foreach ($query->result() as $evavalue) {
					$output.='<div class="col-lg-12 col-md-12 col-12">
		                <div class="pretty p-bigger">
		                  <input type="checkbox" name="subject4SpecificStudents" value="'.$evavalue->Subj_name.'" class="subject4SpecificStudents" id="customCheck1">
		                  <div class="state p-success">
		                    <i class="icon material-icons"></i>
		                    <label></label>'.$evavalue->Subj_name.'
		                  </div>
		                </div> 
		            </div>';
				}
				$output.='</div>';
			}
			return $output;
		//}
	}
	function filterStudentSpecificSTudent($gradesec,$max_year)
	{
		$output='';
		//foreach($gradesecs as $gradesec){
			$this->db->order_by('fname,mname,lname','ASC');
			$this->db->group_by('users.username');
			$this->db->where(array('grade'=>$gradesec));
			$this->db->where(array('academicyear'=>$max_year));
			$this->db->where('usertype','Student');
			$this->db->where('isapproved','1');
			$this->db->where('status','Active');
			$this->db->select('fname,mname,lname,gradesec,username,id');
	        $query = $this->db->get('users');
	        $output='';
	        if($query->num_rows()>0){
				/*$query=$this->db->query("select * from subject where Academic_Year='$max_year' and Grade='$gradesec' group by Subj_name order by suborder ASC ");*/
				$output.='<label>Select Student</label><div class="row"> ';
				foreach ($query->result() as $evavalue) {
					$output.='<div class="col-lg-12 col-md-12 col-12">
		                <div class="pretty p-bigger">
		                  <input type="checkbox" name="student4SpecificStudents" value="'.$evavalue->username.'" class="student4SpecificStudents" id="customCheck1">
		                  <div class="state p-primary">
		                    <i class="icon material-icons"></i>
		                    <label></label>'.$evavalue->fname.' '.$evavalue->mname.' '.$evavalue->lname.'
		                  </div>
		                </div> 
		            </div>';
				}
				$output.='</div>';
			}
			return $output;
		//}
	}
	function addSubjectSpecificStudents($subjectName,$subjectGrade,$academicYear,$studentName,$data){
		$output='';
		$this->db->where(array('academicyear'=>$academicYear));
		$this->db->where(array('subject_name'=>$subjectName));
		$this->db->where(array('student_id'=>$studentName));
		$this->db->where(array('student_grade'=>$subjectGrade));
		$query=$this->db->get('subject_specific_students');
		if($query->num_rows() > 0){
			$output.='Record already found';
		}
		else{
			$query=$this->db->insert('subject_specific_students',$data);
			if($query){
	            $output.='Changes saved successfully.';
	        }else{
	            $output.='Unable to save.Please try again';
	        }
		}
		return $output;
	}
	function fetchSubjectSpecificStudents($max_year){
		$query=$this->db->query("select * from subject_specific_students where academicyear='$max_year' group by id order by id DESC ");
		$output='';
		if($query->num_rows()>0){
			$totalSubject=$query->num_rows();
			$output .='
			<div class="table-responsive">
	        <table class="tabler table-borderedr table-hover" style="width:100%;">
	            <thead>
	                <tr>
	                    <th>No.</th>
	                    <th>Student Name</th>
	                    <th>Grade</th>
	                    <th>Subject</th>
	                    <th>Academic Year</th>
	                </tr>
	            </thead>';
	        $no=1;
			foreach ($query->result() as $row) {
				$userName=$row->student_id;
				$useryUser=$this->db->query("select fname ,mname from users where academicyear='$max_year' and username='$userName' and isapproved='1' and status='Active' ");
				$userRow=$useryUser->row();
				$fName=$userRow->fname;
				$mName=$userRow->mname;
				$output.='<tr> <td>'.$no.'.</td>
				<td>'.$fName.' '.$mName.'<button class="btn btn-default" id="removeStudentSubject" data-id="'.$userName.'" data-subject="'.$row->subject_name.'" data-year="'.$max_year.'"><span class="text-danger">Remove</span></button> </td>
				<td>'.$row->student_grade.'</td>
				<td>'.$row->subject_name.'</td>
				<td>'.$max_year.'</td> ';

				
				$output.='</tr>';
	            $no++;
			}
			$output.='</table></div>';
		}else{
			$output .='<div class="alert alert-light alert-dismissible show fade">
                <div class="alert-body">
                    <button class="close"  data-dismiss="alert">
                        <span>&times;</span>
                    </button>
                <i class="fas fa-check-circle"> </i> No record found.
        	</div></div>';
		}
		return $output;
	}
	
}
?>